// Generated by purs bundle 0.14.9
var PS = {};
(function(exports) {
  const {BigNumber} = require("bignumber.js")

  const JSONbig = require("@mlabs-haskell/json-bigint")({})

  //---

  const identity = x => x       
  exports.fromString = identity
  exports.fromFiniteBigNumber = identity
  exports.fromArray = identity
  exports.fromObject = identity
  exports.aesonNull = null

  const _caseAeson =
      caseNull =>
      caseBoolean =>
      caseBigNumber =>
      caseString =>
      caseArray =>
      caseObject =>
      json => {
          if (json === null)
              return caseNull(json)

          if (typeof json === "boolean")
              return caseBoolean(json)

          if (typeof json === "string")
              return caseString(json)

          if (BigNumber.isBigNumber(json))
              return caseBigNumber(json);

          if (Array.isArray(json))
              return caseArray(json)

          if (typeof json === "object")
              return caseObject(json)

          throw "Imposible happened: JSON object is incorrect: "
              + json.toString() + " " + typeof json;
      }
  exports._caseAeson = _caseAeson

  // Hack zone.
  // BigNumberFixed is instanceof BigNumber but
  // redefines toJSON method to ensure no exponential notation
  // in toJSON result, for integer number x, where |x| <= 2^512

  const twoIn512 = BigNumber(2).pow(512)

  class BigNumberFixed extends BigNumber {
      constructor(bignum) {
          super(bignum)
      }
      toJSON() {
          if (this.isInteger() && this.abs().lte(twoIn512))
              return this.toFixed()

          return super.toJSON()
      }
  }

  //---

  const traverseFormattingBigNumber = json => {
      const stack = []

      const go = _caseAeson
          (identity)                                    // caseNull
          (identity)                                    // caseBoolean
          (bn => new BigNumberFixed(bn))                // caseBigNumber
          (identity)                                    // caseString
          (arr => {                                     // caseArray
              const tmp = []
              arr.forEach((json, idx) => {
                  // push on stack a "thunk", which
                  // when evaluated, will mutate tmp array later
                  stack.push(() => tmp[idx] = go(json))
              })
              return tmp
          })
          (object => {                                  // caseObject
              const tmp = {}
              // reverse here is to preserver order of field
              // thay are pushed on stack, so will be processed
              // in reverse order
              Object.keys(object).reverse().forEach(key => {
                  stack.push(() => tmp[key] = go(object[key]))
              })
              return tmp
          })

      const result = go(json)

      // evaluate all thunks on stack while
      // there are no more thunks to evaluate
      // initial thunks pushed on stack
      // dring evaluation of `go(json)` upper
      while (stack.length !== 0)
          stack.pop()()

      return result
  }

  exports.stringifyAeson = json => JSONbig.stringify(traverseFormattingBigNumber(json))

  exports.parseAeson = Nothing => Just => jsonStr => {
      try {
          return Just(JSONbig.parse(jsonStr))
      } catch (err) {
          return Nothing
      }
  }

  // ---

  const constant = x => _ => x

  // Compare two arrays
  const arrEq = (a, b) =>{
      // a is referentially equal to b
      // i.e they are the same array and
      // thus are equal
      if (a === b)
        return true

      // if arrays have different length
      // we don't want to compare them
      // they are not equal
      if (a.length !== b.length)
        return false

      // Loop here is better than something like:
      //
      // return Array.from(a)
      //   .reduce((acc, ai, i) => acc && aesonEq(ai, b[i]), true)
      //
      // ... because it allows us to fail fast
      // arrays are not equal
      // as soon as we encounter first inequality
      for (let i = 0; i < a.length; i++)
          if (!aesonEq(a[i], b[i]))
              return false

      // Are you still here?
      return true
  }

  const objectEq = (a, b) => {
      // referentially equal
      if (a === b)
        return true

      const aKeys = Object.keys(a)
      const bKeys = Object.keys(b)

      // if objects have different sets of keys
      // they are not equal, but to compare lists of keys,
      // we have to sort them first. This is pretty expensive,
      // If these lists have the same length, and
      // for every `key` from `a`, a[key] equals b[key],
      // then objects are equal
      if (aKeys.length !== bKeys.length)
          return false

      for (let i = 0; i < aKeys.length; i++) {
          let key = aKeys[i]
          if (!aesonEq(a[key], b[key]))
              return false
      }

      return true
  }

  // Comparable tags for each possible aeson "constructor"
  const tNull = "null"
  const tBool = "bool"
  const tBNum = "bnum"
  const tStr  = "str"
  const tArr  = "arr"
  const tObj  = "obj"

  const typeOf = _caseAeson
      (constant(tNull))
      (constant(tBool))
      (constant(tBNum))
      (constant(tStr))
      (constant(tArr))
      (constant(tObj))

  const aesonEq = (a, b) => {
      // If "constructors" are different
      // aesons are not equal
      const tOfA = typeOf(a)
      if (tOfA !== typeOf(b))
          return false

      switch (tOfA) {
          case tNull: return true
          case tBool: return a === b
          case tBNum: return a.eq(b)
          case tStr : return a === b
          case tArr : return arrEq(a, b)
          case tObj : return objectEq(a, b)
      }

      throw "Imposible happened: Unexpected type of JSON: " + a.toString
  }
})(PS["Aeson"] = PS["Aeson"] || {});
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Control.Alt"] = $PS["Control.Alt"] || {};
  var exports = $PS["Control.Alt"];
  var alt = function (dict) {
      return dict.alt;
  };
  exports["alt"] = alt;
})(PS);
(function(exports) {
  "use strict";

  exports.arrayApply = function (fs) {
    return function (xs) {
      var l = fs.length;
      var k = xs.length;
      var result = new Array(l*k);
      var n = 0;
      for (var i = 0; i < l; i++) {
        var f = fs[i];
        for (var j = 0; j < k; j++) {
          result[n++] = f(xs[j]);
        }
      }
      return result;
    };
  };
})(PS["Control.Apply"] = PS["Control.Apply"] || {});
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Control.Semigroupoid"] = $PS["Control.Semigroupoid"] || {};
  var exports = $PS["Control.Semigroupoid"];
  var semigroupoidFn = {
      compose: function (f) {
          return function (g) {
              return function (x) {
                  return f(g(x));
              };
          };
      }
  };
  var compose = function (dict) {
      return dict.compose;
  };
  var composeFlipped = function (dictSemigroupoid) {
      return function (f) {
          return function (g) {
              return compose(dictSemigroupoid)(g)(f);
          };
      };
  };
  exports["compose"] = compose;
  exports["composeFlipped"] = composeFlipped;
  exports["semigroupoidFn"] = semigroupoidFn;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Control.Category"] = $PS["Control.Category"] || {};
  var exports = $PS["Control.Category"];
  var Control_Semigroupoid = $PS["Control.Semigroupoid"];                
  var identity = function (dict) {
      return dict.identity;
  };
  var categoryFn = {
      identity: function (x) {
          return x;
      },
      Semigroupoid0: function () {
          return Control_Semigroupoid.semigroupoidFn;
      }
  };
  exports["identity"] = identity;
  exports["categoryFn"] = categoryFn;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Data.Boolean"] = $PS["Data.Boolean"] || {};
  var exports = $PS["Data.Boolean"];
  var otherwise = true;
  exports["otherwise"] = otherwise;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Data.Function"] = $PS["Data.Function"] || {};
  var exports = $PS["Data.Function"];
  var Data_Boolean = $PS["Data.Boolean"];                
  var on = function (f) {
      return function (g) {
          return function (x) {
              return function (y) {
                  return f(g(x))(g(y));
              };
          };
      };
  };
  var flip = function (f) {
      return function (b) {
          return function (a) {
              return f(a)(b);
          };
      };
  };
  var $$const = function (a) {
      return function (v) {
          return a;
      };
  };
  var applyN = function (f) {
      var go = function ($copy_n) {
          return function ($copy_acc) {
              var $tco_var_n = $copy_n;
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(n, acc) {
                  if (n <= 0) {
                      $tco_done = true;
                      return acc;
                  };
                  if (Data_Boolean.otherwise) {
                      $tco_var_n = n - 1 | 0;
                      $copy_acc = f(acc);
                      return;
                  };
                  throw new Error("Failed pattern match at Data.Function (line 100, column 3 - line 102, column 37): " + [ n.constructor.name, acc.constructor.name ]);
              };
              while (!$tco_done) {
                  $tco_result = $tco_loop($tco_var_n, $copy_acc);
              };
              return $tco_result;
          };
      };
      return go;
  };
  var applyFlipped = function (x) {
      return function (f) {
          return f(x);
      };
  };
  exports["flip"] = flip;
  exports["const"] = $$const;
  exports["applyFlipped"] = applyFlipped;
  exports["applyN"] = applyN;
  exports["on"] = on;
})(PS);
(function(exports) {
  "use strict";

  exports.arrayMap = function (f) {
    return function (arr) {
      var l = arr.length;
      var result = new Array(l);
      for (var i = 0; i < l; i++) {
        result[i] = f(arr[i]);
      }
      return result;
    };
  };
})(PS["Data.Functor"] = PS["Data.Functor"] || {});
(function(exports) {
  "use strict";

  exports.unit = {};
})(PS["Data.Unit"] = PS["Data.Unit"] || {});
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Data.Unit"] = $PS["Data.Unit"] || {};
  var exports = $PS["Data.Unit"];
  var $foreign = $PS["Data.Unit"];
  exports["unit"] = $foreign.unit;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Data.Functor"] = $PS["Data.Functor"] || {};
  var exports = $PS["Data.Functor"];
  var $foreign = $PS["Data.Functor"];
  var Control_Semigroupoid = $PS["Control.Semigroupoid"];
  var Data_Function = $PS["Data.Function"];
  var Data_Unit = $PS["Data.Unit"];                  
  var map = function (dict) {
      return dict.map;
  };
  var mapFlipped = function (dictFunctor) {
      return function (fa) {
          return function (f) {
              return map(dictFunctor)(f)(fa);
          };
      };
  };
  var $$void = function (dictFunctor) {
      return map(dictFunctor)(Data_Function["const"](Data_Unit.unit));
  };
  var voidLeft = function (dictFunctor) {
      return function (f) {
          return function (x) {
              return map(dictFunctor)(Data_Function["const"](x))(f);
          };
      };
  };
  var voidRight = function (dictFunctor) {
      return function (x) {
          return map(dictFunctor)(Data_Function["const"](x));
      };
  };
  var functorFn = {
      map: Control_Semigroupoid.compose(Control_Semigroupoid.semigroupoidFn)
  };
  var functorArray = {
      map: $foreign.arrayMap
  };
  exports["map"] = map;
  exports["mapFlipped"] = mapFlipped;
  exports["void"] = $$void;
  exports["voidRight"] = voidRight;
  exports["voidLeft"] = voidLeft;
  exports["functorFn"] = functorFn;
  exports["functorArray"] = functorArray;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Control.Apply"] = $PS["Control.Apply"] || {};
  var exports = $PS["Control.Apply"];
  var $foreign = $PS["Control.Apply"];
  var Control_Category = $PS["Control.Category"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var applyFn = {
      apply: function (f) {
          return function (g) {
              return function (x) {
                  return f(x)(g(x));
              };
          };
      },
      Functor0: function () {
          return Data_Functor.functorFn;
      }
  };
  var applyArray = {
      apply: $foreign.arrayApply,
      Functor0: function () {
          return Data_Functor.functorArray;
      }
  };
  var apply = function (dict) {
      return dict.apply;
  };
  var applyFirst = function (dictApply) {
      return function (a) {
          return function (b) {
              return apply(dictApply)(Data_Functor.map(dictApply.Functor0())(Data_Function["const"])(a))(b);
          };
      };
  };
  var applySecond = function (dictApply) {
      return function (a) {
          return function (b) {
              return apply(dictApply)(Data_Functor.map(dictApply.Functor0())(Data_Function["const"](Control_Category.identity(Control_Category.categoryFn)))(a))(b);
          };
      };
  };
  var lift2 = function (dictApply) {
      return function (f) {
          return function (a) {
              return function (b) {
                  return apply(dictApply)(Data_Functor.map(dictApply.Functor0())(f)(a))(b);
              };
          };
      };
  };
  var lift3 = function (dictApply) {
      return function (f) {
          return function (a) {
              return function (b) {
                  return function (c) {
                      return apply(dictApply)(apply(dictApply)(Data_Functor.map(dictApply.Functor0())(f)(a))(b))(c);
                  };
              };
          };
      };
  };
  exports["apply"] = apply;
  exports["applyFirst"] = applyFirst;
  exports["applySecond"] = applySecond;
  exports["lift2"] = lift2;
  exports["lift3"] = lift3;
  exports["applyFn"] = applyFn;
  exports["applyArray"] = applyArray;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Control.Applicative"] = $PS["Control.Applicative"] || {};
  var exports = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Data_Unit = $PS["Data.Unit"];                  
  var pure = function (dict) {
      return dict.pure;
  };
  var unless = function (dictApplicative) {
      return function (v) {
          return function (v1) {
              if (!v) {
                  return v1;
              };
              if (v) {
                  return pure(dictApplicative)(Data_Unit.unit);
              };
              throw new Error("Failed pattern match at Control.Applicative (line 66, column 1 - line 66, column 65): " + [ v.constructor.name, v1.constructor.name ]);
          };
      };
  };
  var when = function (dictApplicative) {
      return function (v) {
          return function (v1) {
              if (v) {
                  return v1;
              };
              if (!v) {
                  return pure(dictApplicative)(Data_Unit.unit);
              };
              throw new Error("Failed pattern match at Control.Applicative (line 61, column 1 - line 61, column 63): " + [ v.constructor.name, v1.constructor.name ]);
          };
      };
  };
  var liftA1 = function (dictApplicative) {
      return function (f) {
          return function (a) {
              return Control_Apply.apply(dictApplicative.Apply0())(pure(dictApplicative)(f))(a);
          };
      };
  };
  var applicativeFn = {
      pure: function (x) {
          return function (v) {
              return x;
          };
      },
      Apply0: function () {
          return Control_Apply.applyFn;
      }
  };
  var applicativeArray = {
      pure: function (x) {
          return [ x ];
      },
      Apply0: function () {
          return Control_Apply.applyArray;
      }
  };
  exports["pure"] = pure;
  exports["liftA1"] = liftA1;
  exports["unless"] = unless;
  exports["when"] = when;
  exports["applicativeFn"] = applicativeFn;
  exports["applicativeArray"] = applicativeArray;
})(PS);
(function(exports) {
  "use strict";

  exports.arrayBind = function (arr) {
    return function (f) {
      var result = [];
      for (var i = 0, l = arr.length; i < l; i++) {
        Array.prototype.push.apply(result, f(arr[i]));
      }
      return result;
    };
  };
})(PS["Control.Bind"] = PS["Control.Bind"] || {});
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Control.Bind"] = $PS["Control.Bind"] || {};
  var exports = $PS["Control.Bind"];
  var $foreign = $PS["Control.Bind"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Category = $PS["Control.Category"];
  var Data_Function = $PS["Data.Function"];          
  var discard = function (dict) {
      return dict.discard;
  };
  var bindArray = {
      bind: $foreign.arrayBind,
      Apply0: function () {
          return Control_Apply.applyArray;
      }
  };
  var bind = function (dict) {
      return dict.bind;
  };
  var bindFlipped = function (dictBind) {
      return Data_Function.flip(bind(dictBind));
  };
  var composeKleisliFlipped = function (dictBind) {
      return function (f) {
          return function (g) {
              return function (a) {
                  return bindFlipped(dictBind)(f)(g(a));
              };
          };
      };
  };
  var composeKleisli = function (dictBind) {
      return function (f) {
          return function (g) {
              return function (a) {
                  return bind(dictBind)(f(a))(g);
              };
          };
      };
  };
  var discardUnit = {
      discard: function (dictBind) {
          return bind(dictBind);
      }
  };
  var join = function (dictBind) {
      return function (m) {
          return bind(dictBind)(m)(Control_Category.identity(Control_Category.categoryFn));
      };
  };
  exports["bind"] = bind;
  exports["bindFlipped"] = bindFlipped;
  exports["discard"] = discard;
  exports["join"] = join;
  exports["composeKleisli"] = composeKleisli;
  exports["composeKleisliFlipped"] = composeKleisliFlipped;
  exports["bindArray"] = bindArray;
  exports["discardUnit"] = discardUnit;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Control.Lazy"] = $PS["Control.Lazy"] || {};
  var exports = $PS["Control.Lazy"];
  var Data_Unit = $PS["Data.Unit"];
  var lazyFn = {
      defer: function (f) {
          return function (x) {
              return f(Data_Unit.unit)(x);
          };
      }
  };
  var defer = function (dict) {
      return dict.defer;
  };
  exports["defer"] = defer;
  exports["lazyFn"] = lazyFn;
})(PS);
(function(exports) {
  /* eslint-disable no-eq-null, eqeqeq */
  "use strict";

  function id(x) {
    return x;
  }

  exports.fromBoolean = id;
  exports.fromString = id;
  exports.fromArray = id;
  exports.fromObject = id;

  exports.jsonNull = null;

  exports.stringify = function (j) {
    return JSON.stringify(j);
  };

  function isArray(a) {
    return Object.prototype.toString.call(a) === "[object Array]";
  } 

  exports._compare = function _compare(EQ, GT, LT, a, b) {
    if (a == null) {
      if (b == null) return EQ;
      else return LT;
    } else if (typeof a === "boolean") {
      if (typeof b === "boolean") {
        // boolean / boolean
        if (a === b) return EQ;
        else if (a === false) return LT;
        else return GT;
      } else if (b == null) return GT;
      else return LT;
    } else if (typeof a === "number") {
      if (typeof b === "number") {
        if (a === b) return EQ;
        else if (a < b) return LT;
        else return GT;
      } else if (b == null) return GT;
      else if (typeof b === "boolean") return GT;
      else return LT;
    } else if (typeof a === "string") {
      if (typeof b === "string") {
        if (a === b) return EQ;
        else if (a < b) return LT;
        else return GT;
      } else if (b == null) return GT;
      else if (typeof b === "boolean") return GT;
      else if (typeof b === "number") return GT;
      else return LT;
    } else if (isArray(a)) {
      if (isArray(b)) {
        for (var i = 0; i < Math.min(a.length, b.length); i++) {
          var ca = _compare(EQ, GT, LT, a[i], b[i]);
          if (ca !== EQ) return ca;
        }
        if (a.length === b.length) return EQ;
        else if (a.length < b.length) return LT;
        else return GT;
      } else if (b == null) return GT;
      else if (typeof b === "boolean") return GT;
      else if (typeof b === "number") return GT;
      else if (typeof b === "string") return GT;
      else return LT;
    } else {
      if (b == null) return GT;
      else if (typeof b === "boolean") return GT;
      else if (typeof b === "number") return GT;
      else if (typeof b === "string") return GT;
      else if (isArray(b)) return GT;
      else {
        var akeys = Object.keys(a);
        var bkeys = Object.keys(b);
        if (akeys.length < bkeys.length) return LT;
        else if (akeys.length > bkeys.length) return GT;
        var keys = akeys.concat(bkeys).sort();
        for (var j = 0; j < keys.length; j++) {
          var k = keys[j];
          if (a[k] === undefined) return LT;
          else if (b[k] === undefined) return GT;
          var ck = _compare(EQ, GT, LT, a[k], b[k]);
          if (ck !== EQ) return ck;
        }
        return EQ;
      }
    }
  };
})(PS["Data.Argonaut.Core"] = PS["Data.Argonaut.Core"] || {});
(function(exports) {
  "use strict";

  var refEq = function (r1) {
    return function (r2) {
      return r1 === r2;
    };
  };

  exports.eqBooleanImpl = refEq;
  exports.eqIntImpl = refEq;
  exports.eqNumberImpl = refEq;
  exports.eqCharImpl = refEq;
  exports.eqStringImpl = refEq;

  exports.eqArrayImpl = function (f) {
    return function (xs) {
      return function (ys) {
        if (xs.length !== ys.length) return false;
        for (var i = 0; i < xs.length; i++) {
          if (!f(xs[i])(ys[i])) return false;
        }
        return true;
      };
    };
  };
})(PS["Data.Eq"] = PS["Data.Eq"] || {});
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Data.Symbol"] = $PS["Data.Symbol"] || {};
  var exports = $PS["Data.Symbol"];                  
  var SProxy = (function () {
      function SProxy() {

      };
      SProxy.value = new SProxy();
      return SProxy;
  })();
  var reflectSymbol = function (dict) {
      return dict.reflectSymbol;
  };
  exports["reflectSymbol"] = reflectSymbol;
  exports["SProxy"] = SProxy;
})(PS);
(function(exports) {
  "use strict";

  exports.unsafeGet = function (label) {
    return function (rec) {
      return rec[label];
    };
  };

  exports.unsafeSet = function (label) {
    return function (value) {
      return function (rec) {
        var copy = {};
        for (var key in rec) {
          if ({}.hasOwnProperty.call(rec, key)) {
            copy[key] = rec[key];
          }
        }
        copy[label] = value;
        return copy;
      };
    };
  };
})(PS["Record.Unsafe"] = PS["Record.Unsafe"] || {});
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Record.Unsafe"] = $PS["Record.Unsafe"] || {};
  var exports = $PS["Record.Unsafe"];
  var $foreign = $PS["Record.Unsafe"];
  exports["unsafeGet"] = $foreign.unsafeGet;
  exports["unsafeSet"] = $foreign.unsafeSet;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Type.Proxy"] = $PS["Type.Proxy"] || {};
  var exports = $PS["Type.Proxy"];
  var $$Proxy = (function () {
      function $$Proxy() {

      };
      $$Proxy.value = new $$Proxy();
      return $$Proxy;
  })();
  exports["Proxy"] = $$Proxy;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Data.Eq"] = $PS["Data.Eq"] || {};
  var exports = $PS["Data.Eq"];
  var $foreign = $PS["Data.Eq"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Record_Unsafe = $PS["Record.Unsafe"];
  var Type_Proxy = $PS["Type.Proxy"];
  var eqUnit = {
      eq: function (v) {
          return function (v1) {
              return true;
          };
      }
  };
  var eqString = {
      eq: $foreign.eqStringImpl
  };
  var eqRowNil = {
      eqRecord: function (v) {
          return function (v1) {
              return function (v2) {
                  return true;
              };
          };
      }
  };
  var eqRecord = function (dict) {
      return dict.eqRecord;
  };
  var eqRec = function () {
      return function (dictEqRecord) {
          return {
              eq: eqRecord(dictEqRecord)(Type_Proxy["Proxy"].value)
          };
      };
  };
  var eqNumber = {
      eq: $foreign.eqNumberImpl
  };
  var eqInt = {
      eq: $foreign.eqIntImpl
  };
  var eqChar = {
      eq: $foreign.eqCharImpl
  };
  var eqBoolean = {
      eq: $foreign.eqBooleanImpl
  };
  var eq1 = function (dict) {
      return dict.eq1;
  };
  var eq = function (dict) {
      return dict.eq;
  };
  var eqArray = function (dictEq) {
      return {
          eq: $foreign.eqArrayImpl(eq(dictEq))
      };
  };
  var eqRowCons = function (dictEqRecord) {
      return function () {
          return function (dictIsSymbol) {
              return function (dictEq) {
                  return {
                      eqRecord: function (v) {
                          return function (ra) {
                              return function (rb) {
                                  var tail = eqRecord(dictEqRecord)(Type_Proxy["Proxy"].value)(ra)(rb);
                                  var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Type_Proxy["Proxy"].value);
                                  var get = Record_Unsafe.unsafeGet(key);
                                  return eq(dictEq)(get(ra))(get(rb)) && tail;
                              };
                          };
                      }
                  };
              };
          };
      };
  };
  var notEq = function (dictEq) {
      return function (x) {
          return function (y) {
              return eq(eqBoolean)(eq(dictEq)(x)(y))(false);
          };
      };
  };
  exports["eq"] = eq;
  exports["notEq"] = notEq;
  exports["eq1"] = eq1;
  exports["eqInt"] = eqInt;
  exports["eqNumber"] = eqNumber;
  exports["eqChar"] = eqChar;
  exports["eqString"] = eqString;
  exports["eqUnit"] = eqUnit;
  exports["eqArray"] = eqArray;
  exports["eqRec"] = eqRec;
  exports["eqRowNil"] = eqRowNil;
  exports["eqRowCons"] = eqRowCons;
})(PS);
(function(exports) {
  "use strict";

  var unsafeCompareImpl = function (lt) {
    return function (eq) {
      return function (gt) {
        return function (x) {
          return function (y) {
            return x < y ? lt : x === y ? eq : gt;
          };
        };
      };
    };
  };                                         
  exports.ordIntImpl = unsafeCompareImpl;
  exports.ordNumberImpl = unsafeCompareImpl;
  exports.ordStringImpl = unsafeCompareImpl;
  exports.ordCharImpl = unsafeCompareImpl;

  exports.ordArrayImpl = function (f) {
    return function (xs) {
      return function (ys) {
        var i = 0;
        var xlen = xs.length;
        var ylen = ys.length;
        while (i < xlen && i < ylen) {
          var x = xs[i];
          var y = ys[i];
          var o = f(x)(y);
          if (o !== 0) {
            return o;
          }
          i++;
        }
        if (xlen === ylen) {
          return 0;
        } else if (xlen > ylen) {
          return -1;
        } else {
          return 1;
        }
      };
    };
  };
})(PS["Data.Ord"] = PS["Data.Ord"] || {});
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Data.Ordering"] = $PS["Data.Ordering"] || {};
  var exports = $PS["Data.Ordering"];
  var LT = (function () {
      function LT() {

      };
      LT.value = new LT();
      return LT;
  })();
  var GT = (function () {
      function GT() {

      };
      GT.value = new GT();
      return GT;
  })();
  var EQ = (function () {
      function EQ() {

      };
      EQ.value = new EQ();
      return EQ;
  })();
  var invert = function (v) {
      if (v instanceof GT) {
          return LT.value;
      };
      if (v instanceof EQ) {
          return EQ.value;
      };
      if (v instanceof LT) {
          return GT.value;
      };
      throw new Error("Failed pattern match at Data.Ordering (line 33, column 1 - line 33, column 31): " + [ v.constructor.name ]);
  };
  var eqOrdering = {
      eq: function (v) {
          return function (v1) {
              if (v instanceof LT && v1 instanceof LT) {
                  return true;
              };
              if (v instanceof GT && v1 instanceof GT) {
                  return true;
              };
              if (v instanceof EQ && v1 instanceof EQ) {
                  return true;
              };
              return false;
          };
      }
  };
  exports["LT"] = LT;
  exports["GT"] = GT;
  exports["EQ"] = EQ;
  exports["invert"] = invert;
  exports["eqOrdering"] = eqOrdering;
})(PS);
(function(exports) {
  "use strict";

  exports.intSub = function (x) {
    return function (y) {
      /* jshint bitwise: false */
      return x - y | 0;
    };
  };
})(PS["Data.Ring"] = PS["Data.Ring"] || {});
(function(exports) {
  "use strict";

  exports.intAdd = function (x) {
    return function (y) {
      /* jshint bitwise: false */
      return x + y | 0;
    };
  };

  exports.intMul = function (x) {
    return function (y) {
      /* jshint bitwise: false */
      return x * y | 0;
    };
  };

  exports.numAdd = function (n1) {
    return function (n2) {
      return n1 + n2;
    };
  };

  exports.numMul = function (n1) {
    return function (n2) {
      return n1 * n2;
    };
  };
})(PS["Data.Semiring"] = PS["Data.Semiring"] || {});
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Data.Semiring"] = $PS["Data.Semiring"] || {};
  var exports = $PS["Data.Semiring"];
  var $foreign = $PS["Data.Semiring"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Record_Unsafe = $PS["Record.Unsafe"];
  var Type_Proxy = $PS["Type.Proxy"];                
  var zeroRecord = function (dict) {
      return dict.zeroRecord;
  };
  var zero = function (dict) {
      return dict.zero;
  };
  var semiringRecordNil = {
      addRecord: function (v) {
          return function (v1) {
              return function (v2) {
                  return {};
              };
          };
      },
      mulRecord: function (v) {
          return function (v1) {
              return function (v2) {
                  return {};
              };
          };
      },
      oneRecord: function (v) {
          return function (v1) {
              return {};
          };
      },
      zeroRecord: function (v) {
          return function (v1) {
              return {};
          };
      }
  };
  var semiringNumber = {
      add: $foreign.numAdd,
      zero: 0.0,
      mul: $foreign.numMul,
      one: 1.0
  };
  var semiringInt = {
      add: $foreign.intAdd,
      zero: 0,
      mul: $foreign.intMul,
      one: 1
  };
  var oneRecord = function (dict) {
      return dict.oneRecord;
  };
  var one = function (dict) {
      return dict.one;
  };
  var mulRecord = function (dict) {
      return dict.mulRecord;
  };
  var mul = function (dict) {
      return dict.mul;
  };
  var addRecord = function (dict) {
      return dict.addRecord;
  };
  var semiringRecord = function () {
      return function (dictSemiringRecord) {
          return {
              add: addRecord(dictSemiringRecord)(Type_Proxy["Proxy"].value),
              mul: mulRecord(dictSemiringRecord)(Type_Proxy["Proxy"].value),
              one: oneRecord(dictSemiringRecord)(Type_Proxy["Proxy"].value)(Type_Proxy["Proxy"].value),
              zero: zeroRecord(dictSemiringRecord)(Type_Proxy["Proxy"].value)(Type_Proxy["Proxy"].value)
          };
      };
  };
  var add = function (dict) {
      return dict.add;
  };
  var semiringRecordCons = function (dictIsSymbol) {
      return function () {
          return function (dictSemiringRecord) {
              return function (dictSemiring) {
                  return {
                      addRecord: function (v) {
                          return function (ra) {
                              return function (rb) {
                                  var tail = addRecord(dictSemiringRecord)(Type_Proxy["Proxy"].value)(ra)(rb);
                                  var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Type_Proxy["Proxy"].value);
                                  var insert = Record_Unsafe.unsafeSet(key);
                                  var get = Record_Unsafe.unsafeGet(key);
                                  return insert(add(dictSemiring)(get(ra))(get(rb)))(tail);
                              };
                          };
                      },
                      mulRecord: function (v) {
                          return function (ra) {
                              return function (rb) {
                                  var tail = mulRecord(dictSemiringRecord)(Type_Proxy["Proxy"].value)(ra)(rb);
                                  var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Type_Proxy["Proxy"].value);
                                  var insert = Record_Unsafe.unsafeSet(key);
                                  var get = Record_Unsafe.unsafeGet(key);
                                  return insert(mul(dictSemiring)(get(ra))(get(rb)))(tail);
                              };
                          };
                      },
                      oneRecord: function (v) {
                          return function (v1) {
                              var tail = oneRecord(dictSemiringRecord)(Type_Proxy["Proxy"].value)(Type_Proxy["Proxy"].value);
                              var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Type_Proxy["Proxy"].value);
                              var insert = Record_Unsafe.unsafeSet(key);
                              return insert(one(dictSemiring))(tail);
                          };
                      },
                      zeroRecord: function (v) {
                          return function (v1) {
                              var tail = zeroRecord(dictSemiringRecord)(Type_Proxy["Proxy"].value)(Type_Proxy["Proxy"].value);
                              var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Type_Proxy["Proxy"].value);
                              var insert = Record_Unsafe.unsafeSet(key);
                              return insert(zero(dictSemiring))(tail);
                          };
                      }
                  };
              };
          };
      };
  };
  exports["add"] = add;
  exports["zero"] = zero;
  exports["mul"] = mul;
  exports["one"] = one;
  exports["semiringInt"] = semiringInt;
  exports["semiringNumber"] = semiringNumber;
  exports["semiringRecord"] = semiringRecord;
  exports["semiringRecordNil"] = semiringRecordNil;
  exports["semiringRecordCons"] = semiringRecordCons;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Data.Ring"] = $PS["Data.Ring"] || {};
  var exports = $PS["Data.Ring"];
  var $foreign = $PS["Data.Ring"];
  var Data_Semiring = $PS["Data.Semiring"];
  var sub = function (dict) {
      return dict.sub;
  };
  var ringInt = {
      sub: $foreign.intSub,
      Semiring0: function () {
          return Data_Semiring.semiringInt;
      }
  };
  var negate = function (dictRing) {
      return function (a) {
          return sub(dictRing)(Data_Semiring.zero(dictRing.Semiring0()))(a);
      };
  };
  exports["sub"] = sub;
  exports["negate"] = negate;
  exports["ringInt"] = ringInt;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Data.Ord"] = $PS["Data.Ord"] || {};
  var exports = $PS["Data.Ord"];
  var $foreign = $PS["Data.Ord"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Ordering = $PS["Data.Ordering"];
  var Data_Ring = $PS["Data.Ring"];
  var Data_Semiring = $PS["Data.Semiring"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Record_Unsafe = $PS["Record.Unsafe"];
  var Type_Proxy = $PS["Type.Proxy"];
  var ordString = {
      compare: $foreign.ordStringImpl(Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value),
      Eq0: function () {
          return Data_Eq.eqString;
      }
  };
  var ordRecordNil = {
      compareRecord: function (v) {
          return function (v1) {
              return function (v2) {
                  return Data_Ordering.EQ.value;
              };
          };
      },
      EqRecord0: function () {
          return Data_Eq.eqRowNil;
      }
  };
  var ordNumber = {
      compare: $foreign.ordNumberImpl(Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value),
      Eq0: function () {
          return Data_Eq.eqNumber;
      }
  };
  var ordInt = {
      compare: $foreign.ordIntImpl(Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value),
      Eq0: function () {
          return Data_Eq.eqInt;
      }
  };
  var ordChar = {
      compare: $foreign.ordCharImpl(Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value),
      Eq0: function () {
          return Data_Eq.eqChar;
      }
  };
  var compareRecord = function (dict) {
      return dict.compareRecord;
  };
  var ordRecord = function () {
      return function (dictOrdRecord) {
          return {
              compare: compareRecord(dictOrdRecord)(Type_Proxy["Proxy"].value),
              Eq0: function () {
                  return Data_Eq.eqRec()(dictOrdRecord.EqRecord0());
              }
          };
      };
  };
  var compare1 = function (dict) {
      return dict.compare1;
  };
  var compare = function (dict) {
      return dict.compare;
  };
  var comparing = function (dictOrd) {
      return function (f) {
          return function (x) {
              return function (y) {
                  return compare(dictOrd)(f(x))(f(y));
              };
          };
      };
  };
  var greaterThan = function (dictOrd) {
      return function (a1) {
          return function (a2) {
              var v = compare(dictOrd)(a1)(a2);
              if (v instanceof Data_Ordering.GT) {
                  return true;
              };
              return false;
          };
      };
  };
  var greaterThanOrEq = function (dictOrd) {
      return function (a1) {
          return function (a2) {
              var v = compare(dictOrd)(a1)(a2);
              if (v instanceof Data_Ordering.LT) {
                  return false;
              };
              return true;
          };
      };
  };
  var signum = function (dictOrd) {
      return function (dictRing) {
          return function (x) {
              var $50 = greaterThanOrEq(dictOrd)(x)(Data_Semiring.zero(dictRing.Semiring0()));
              if ($50) {
                  return Data_Semiring.one(dictRing.Semiring0());
              };
              return Data_Ring.negate(dictRing)(Data_Semiring.one(dictRing.Semiring0()));
          };
      };
  };
  var lessThan = function (dictOrd) {
      return function (a1) {
          return function (a2) {
              var v = compare(dictOrd)(a1)(a2);
              if (v instanceof Data_Ordering.LT) {
                  return true;
              };
              return false;
          };
      };
  };
  var lessThanOrEq = function (dictOrd) {
      return function (a1) {
          return function (a2) {
              var v = compare(dictOrd)(a1)(a2);
              if (v instanceof Data_Ordering.GT) {
                  return false;
              };
              return true;
          };
      };
  };
  var max = function (dictOrd) {
      return function (x) {
          return function (y) {
              var v = compare(dictOrd)(x)(y);
              if (v instanceof Data_Ordering.LT) {
                  return y;
              };
              if (v instanceof Data_Ordering.EQ) {
                  return x;
              };
              if (v instanceof Data_Ordering.GT) {
                  return x;
              };
              throw new Error("Failed pattern match at Data.Ord (line 176, column 3 - line 179, column 12): " + [ v.constructor.name ]);
          };
      };
  };
  var min = function (dictOrd) {
      return function (x) {
          return function (y) {
              var v = compare(dictOrd)(x)(y);
              if (v instanceof Data_Ordering.LT) {
                  return x;
              };
              if (v instanceof Data_Ordering.EQ) {
                  return x;
              };
              if (v instanceof Data_Ordering.GT) {
                  return y;
              };
              throw new Error("Failed pattern match at Data.Ord (line 167, column 3 - line 170, column 12): " + [ v.constructor.name ]);
          };
      };
  };
  var ordArray = function (dictOrd) {
      return {
          compare: (function () {
              var toDelta = function (x) {
                  return function (y) {
                      var v = compare(dictOrd)(x)(y);
                      if (v instanceof Data_Ordering.EQ) {
                          return 0;
                      };
                      if (v instanceof Data_Ordering.LT) {
                          return 1;
                      };
                      if (v instanceof Data_Ordering.GT) {
                          return -1 | 0;
                      };
                      throw new Error("Failed pattern match at Data.Ord (line 74, column 7 - line 77, column 17): " + [ v.constructor.name ]);
                  };
              };
              return function (xs) {
                  return function (ys) {
                      return compare(ordInt)(0)($foreign.ordArrayImpl(toDelta)(xs)(ys));
                  };
              };
          })(),
          Eq0: function () {
              return Data_Eq.eqArray(dictOrd.Eq0());
          }
      };
  };
  var ordRecordCons = function (dictOrdRecord) {
      return function () {
          return function (dictIsSymbol) {
              return function (dictOrd) {
                  return {
                      compareRecord: function (v) {
                          return function (ra) {
                              return function (rb) {
                                  var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Type_Proxy["Proxy"].value);
                                  var left = compare(dictOrd)(Record_Unsafe.unsafeGet(key)(ra))(Record_Unsafe.unsafeGet(key)(rb));
                                  var $56 = Data_Eq.notEq(Data_Ordering.eqOrdering)(left)(Data_Ordering.EQ.value);
                                  if ($56) {
                                      return left;
                                  };
                                  return compareRecord(dictOrdRecord)(Type_Proxy["Proxy"].value)(ra)(rb);
                              };
                          };
                      },
                      EqRecord0: function () {
                          return Data_Eq.eqRowCons(dictOrdRecord.EqRecord0())()(dictIsSymbol)(dictOrd.Eq0());
                      }
                  };
              };
          };
      };
  };
  var abs = function (dictOrd) {
      return function (dictRing) {
          return function (x) {
              var $60 = greaterThanOrEq(dictOrd)(x)(Data_Semiring.zero(dictRing.Semiring0()));
              if ($60) {
                  return x;
              };
              return Data_Ring.negate(dictRing)(x);
          };
      };
  };
  exports["compare"] = compare;
  exports["compare1"] = compare1;
  exports["lessThan"] = lessThan;
  exports["lessThanOrEq"] = lessThanOrEq;
  exports["greaterThan"] = greaterThan;
  exports["greaterThanOrEq"] = greaterThanOrEq;
  exports["comparing"] = comparing;
  exports["min"] = min;
  exports["max"] = max;
  exports["abs"] = abs;
  exports["signum"] = signum;
  exports["ordInt"] = ordInt;
  exports["ordNumber"] = ordNumber;
  exports["ordString"] = ordString;
  exports["ordChar"] = ordChar;
  exports["ordArray"] = ordArray;
  exports["ordRecordNil"] = ordRecordNil;
  exports["ordRecordCons"] = ordRecordCons;
  exports["ordRecord"] = ordRecord;
})(PS);
(function(exports) {
  "use strict";

  exports._copyST = function (m) {
    return function () {
      var r = {};
      for (var k in m) {
        if (hasOwnProperty.call(m, k)) {
          r[k] = m[k];
        }
      }
      return r;
    };
  };

  exports.empty = {};

  exports.runST = function (f) {
    return f();
  };

  exports._fmapObject = function (m0, f) {
    var m = {};
    for (var k in m0) {
      if (hasOwnProperty.call(m0, k)) {
        m[k] = f(m0[k]);
      }
    }
    return m;
  };

  exports._mapWithKey = function (m0, f) {
    var m = {};
    for (var k in m0) {
      if (hasOwnProperty.call(m0, k)) {
        m[k] = f(k)(m0[k]);
      }
    }
    return m;
  };

  exports._foldM = function (bind) {
    return function (f) {
      return function (mz) {
        return function (m) {
          var acc = mz;
          function g(k) {
            return function (z) {
              return f(z)(k)(m[k]);
            };
          }
          for (var k in m) {
            if (hasOwnProperty.call(m, k)) {
              acc = bind(acc)(g(k));
            }
          }
          return acc;
        };
      };
    };
  };

  exports._lookup = function (no, yes, k, m) {
    return k in m ? yes(m[k]) : no;
  };

  function toArrayWithKey(f) {
    return function (m) {
      var r = [];
      for (var k in m) {
        if (hasOwnProperty.call(m, k)) {
          r.push(f(k)(m[k]));
        }
      }
      return r;
    };
  }

  exports.toArrayWithKey = toArrayWithKey;
})(PS["Foreign.Object"] = PS["Foreign.Object"] || {});
(function(exports) {
  "use strict";

  exports.map_ = function (f) {
    return function (a) {
      return function () {
        return f(a());
      };
    };
  };

  exports.pure_ = function (a) {
    return function () {
      return a;
    };
  };

  exports.bind_ = function (a) {
    return function (f) {
      return function () {
        return f(a())();
      };
    };
  };

  exports["while"] = function (f) {
    return function (a) {
      return function () {
        while (f()) {
          a();
        }
      };
    };
  };

  exports.foreach = function (as) {
    return function (f) {
      return function () {
        for (var i = 0, l = as.length; i < l; i++) {
          f(as[i])();
        }
      };
    };
  };

  exports.new = function (val) {
    return function () {
      return { value: val };
    };
  };

  exports.read = function (ref) {
    return function () {
      return ref.value;
    };
  };

  exports.write = function (a) {
    return function (ref) {
      return function () {
        return ref.value = a; // eslint-disable-line no-return-assign
      };
    };
  };
})(PS["Control.Monad.ST.Internal"] = PS["Control.Monad.ST.Internal"] || {});
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Control.Monad"] = $PS["Control.Monad"] || {};
  var exports = $PS["Control.Monad"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];                
  var whenM = function (dictMonad) {
      return function (mb) {
          return function (m) {
              return Control_Bind.bind(dictMonad.Bind1())(mb)(function (b) {
                  return Control_Applicative.when(dictMonad.Applicative0())(b)(m);
              });
          };
      };
  };
  var ap = function (dictMonad) {
      return function (f) {
          return function (a) {
              return Control_Bind.bind(dictMonad.Bind1())(f)(function (f$prime) {
                  return Control_Bind.bind(dictMonad.Bind1())(a)(function (a$prime) {
                      return Control_Applicative.pure(dictMonad.Applicative0())(f$prime(a$prime));
                  });
              });
          };
      };
  };
  exports["whenM"] = whenM;
  exports["ap"] = ap;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Control.Monad.Rec.Class"] = $PS["Control.Monad.Rec.Class"] || {};
  var exports = $PS["Control.Monad.Rec.Class"];      
  var Loop = (function () {
      function Loop(value0) {
          this.value0 = value0;
      };
      Loop.create = function (value0) {
          return new Loop(value0);
      };
      return Loop;
  })();
  var Done = (function () {
      function Done(value0) {
          this.value0 = value0;
      };
      Done.create = function (value0) {
          return new Done(value0);
      };
      return Done;
  })();
  var tailRecM = function (dict) {
      return dict.tailRecM;
  };
  var tailRecM2 = function (dictMonadRec) {
      return function (f) {
          return function (a) {
              return function (b) {
                  return tailRecM(dictMonadRec)(function (o) {
                      return f(o.a)(o.b);
                  })({
                      a: a,
                      b: b
                  });
              };
          };
      };
  };
  exports["Loop"] = Loop;
  exports["Done"] = Done;
  exports["tailRecM2"] = tailRecM2;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Control.Monad.ST.Internal"] = $PS["Control.Monad.ST.Internal"] || {};
  var exports = $PS["Control.Monad.ST.Internal"];
  var $foreign = $PS["Control.Monad.ST.Internal"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad = $PS["Control.Monad"];
  var Control_Monad_Rec_Class = $PS["Control.Monad.Rec.Class"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Unit = $PS["Data.Unit"];
  var functorST = {
      map: $foreign.map_
  };
  var monadST = {
      Applicative0: function () {
          return applicativeST;
      },
      Bind1: function () {
          return bindST;
      }
  };
  var bindST = {
      bind: $foreign.bind_,
      Apply0: function () {
          return applyST;
      }
  };
  var applyST = {
      apply: Control_Monad.ap(monadST),
      Functor0: function () {
          return functorST;
      }
  };
  var applicativeST = {
      pure: $foreign.pure_,
      Apply0: function () {
          return applyST;
      }
  };
  var monadRecST = {
      tailRecM: function (f) {
          return function (a) {
              var isLooping = function (v) {
                  if (v instanceof Control_Monad_Rec_Class.Loop) {
                      return true;
                  };
                  return false;
              };
              var fromDone = function (v) {
                  if (v instanceof Control_Monad_Rec_Class.Done) {
                      return v.value0;
                  };
                  throw new Error("Failed pattern match at Control.Monad.ST.Internal (line 69, column 32 - line 69, column 46): " + [ v.constructor.name ]);
              };
              return Control_Bind.bind(bindST)(Control_Bind.bindFlipped(bindST)($foreign["new"])(f(a)))(function (r) {
                  return Control_Bind.discard(Control_Bind.discardUnit)(bindST)($foreign["while"](Data_Functor.map(functorST)(isLooping)($foreign.read(r)))(Control_Bind.bind(bindST)($foreign.read(r))(function (v) {
                      if (v instanceof Control_Monad_Rec_Class.Loop) {
                          return Control_Bind.bind(bindST)(f(v.value0))(function (e) {
                              return Data_Functor["void"](functorST)($foreign.write(e)(r));
                          });
                      };
                      if (v instanceof Control_Monad_Rec_Class.Done) {
                          return Control_Applicative.pure(applicativeST)(Data_Unit.unit);
                      };
                      throw new Error("Failed pattern match at Control.Monad.ST.Internal (line 61, column 18 - line 65, column 28): " + [ v.constructor.name ]);
                  })))(function () {
                      return Data_Functor.map(functorST)(fromDone)($foreign.read(r));
                  });
              });
          };
      },
      Monad0: function () {
          return monadST;
      }
  };
  exports["functorST"] = functorST;
  exports["applicativeST"] = applicativeST;
  exports["bindST"] = bindST;
  exports["monadRecST"] = monadRecST;
  exports["foreach"] = $foreign.foreach;
})(PS);
(function(exports) {
  "use strict";

  //------------------------------------------------------------------------------
  // Array creation --------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.range = function (start) {
    return function (end) {
      var step = start > end ? -1 : 1;
      var result = new Array(step * (end - start) + 1);
      var i = start, n = 0;
      while (i !== end) {
        result[n++] = i;
        i += step;
      }
      result[n] = i;
      return result;
    };
  };

  var replicateFill = function (count) {
    return function (value) {
      if (count < 1) {
        return [];
      }
      var result = new Array(count);
      return result.fill(value);
    };
  };

  var replicatePolyfill = function (count) {
    return function (value) {
      var result = [];
      var n = 0;
      for (var i = 0; i < count; i++) {
        result[n++] = value;
      }
      return result;
    };
  };

  // In browsers that have Array.prototype.fill we use it, as it's faster.
  exports.replicate = typeof Array.prototype.fill === "function" ? replicateFill : replicatePolyfill;

  exports.fromFoldableImpl = (function () {
    function Cons(head, tail) {
      this.head = head;
      this.tail = tail;
    }
    var emptyList = {};

    function curryCons(head) {
      return function (tail) {
        return new Cons(head, tail);
      };
    }

    function listToArray(list) {
      var result = [];
      var count = 0;
      var xs = list;
      while (xs !== emptyList) {
        result[count++] = xs.head;
        xs = xs.tail;
      }
      return result;
    }

    return function (foldr) {
      return function (xs) {
        return listToArray(foldr(curryCons)(emptyList)(xs));
      };
    };
  })();

  //------------------------------------------------------------------------------
  // Array size ------------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.length = function (xs) {
    return xs.length;
  };

  //------------------------------------------------------------------------------
  // Non-indexed reads -----------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.unconsImpl = function (empty) {
    return function (next) {
      return function (xs) {
        return xs.length === 0 ? empty({}) : next(xs[0])(xs.slice(1));
      };
    };
  };

  //------------------------------------------------------------------------------
  // Indexed operations ----------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.indexImpl = function (just) {
    return function (nothing) {
      return function (xs) {
        return function (i) {
          return i < 0 || i >= xs.length ? nothing :  just(xs[i]);
        };
      };
    };
  };

  exports.findIndexImpl = function (just) {
    return function (nothing) {
      return function (f) {
        return function (xs) {
          for (var i = 0, l = xs.length; i < l; i++) {
            if (f(xs[i])) return just(i);
          }
          return nothing;
        };
      };
    };
  };

  exports._deleteAt = function (just) {
    return function (nothing) {
      return function (i) {
        return function (l) {
          if (i < 0 || i >= l.length) return nothing;
          var l1 = l.slice();
          l1.splice(i, 1);
          return just(l1);
        };
      };
    };
  };

  //------------------------------------------------------------------------------
  // Transformations -------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.reverse = function (l) {
    return l.slice().reverse();
  };

  exports.concat = function (xss) {
    if (xss.length <= 10000) {
      // This method is faster, but it crashes on big arrays.
      // So we use it when can and fallback to simple variant otherwise.
      return Array.prototype.concat.apply([], xss);
    }

    var result = [];
    for (var i = 0, l = xss.length; i < l; i++) {
      var xs = xss[i];
      for (var j = 0, m = xs.length; j < m; j++) {
        result.push(xs[j]);
      }
    }
    return result;
  };

  exports.filter = function (f) {
    return function (xs) {
      return xs.filter(f);
    };
  };

  exports.partition = function (f) {
    return function (xs) {
      var yes = [];
      var no  = [];
      for (var i = 0; i < xs.length; i++) {
        var x = xs[i];
        if (f(x))
          yes.push(x);
        else
          no.push(x);
      }
      return { yes: yes, no: no };
    };
  };

  //------------------------------------------------------------------------------
  // Sorting ---------------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.sortByImpl = (function () {
    function mergeFromTo(compare, fromOrdering, xs1, xs2, from, to) {
      var mid;
      var i;
      var j;
      var k;
      var x;
      var y;
      var c;

      mid = from + ((to - from) >> 1);
      if (mid - from > 1) mergeFromTo(compare, fromOrdering, xs2, xs1, from, mid);
      if (to - mid > 1) mergeFromTo(compare, fromOrdering, xs2, xs1, mid, to);

      i = from;
      j = mid;
      k = from;
      while (i < mid && j < to) {
        x = xs2[i];
        y = xs2[j];
        c = fromOrdering(compare(x)(y));
        if (c > 0) {
          xs1[k++] = y;
          ++j;
        }
        else {
          xs1[k++] = x;
          ++i;
        }
      }
      while (i < mid) {
        xs1[k++] = xs2[i++];
      }
      while (j < to) {
        xs1[k++] = xs2[j++];
      }
    }

    return function (compare) {
      return function (fromOrdering) {
        return function (xs) {
          var out;

          if (xs.length < 2) return xs;

          out = xs.slice(0);
          mergeFromTo(compare, fromOrdering, out, xs.slice(0), 0, xs.length);

          return out;
        };
      };
    };
  })();

  //------------------------------------------------------------------------------
  // Zipping ---------------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.zipWith = function (f) {
    return function (xs) {
      return function (ys) {
        var l = xs.length < ys.length ? xs.length : ys.length;
        var result = new Array(l);
        for (var i = 0; i < l; i++) {
          result[i] = f(xs[i])(ys[i]);
        }
        return result;
      };
    };
  };

  //------------------------------------------------------------------------------
  // Folding ---------------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.any = function (p) {
    return function (xs) {
      var len = xs.length;
      for (var i = 0; i < len; i++) {
        if (p(xs[i])) return true;
      }
      return false;
    };
  };

  //------------------------------------------------------------------------------
  // Partial ---------------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.unsafeIndexImpl = function (xs) {
    return function (n) {
      return xs[n];
    };
  };
})(PS["Data.Array"] = PS["Data.Array"] || {});
(function(exports) {
  "use strict";

  exports["new"] = function () {
    return [];
  };

  exports.pushAll = function (as) {
    return function (xs) {
      return function () {
        return xs.push.apply(xs, as);
      };
    };
  };

  exports.unsafeFreeze = function (xs) {
    return function () {
      return xs;
    };
  };

  exports.unsafeThaw = function (xs) {
    return function () {
      return xs;
    };
  };

  function copyImpl(xs) {
    return function () {
      return xs.slice();
    };
  }                         

  exports.thaw = copyImpl;
})(PS["Data.Array.ST"] = PS["Data.Array.ST"] || {});
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Data.Array.ST"] = $PS["Data.Array.ST"] || {};
  var exports = $PS["Data.Array.ST"];
  var $foreign = $PS["Data.Array.ST"];                     
  var withArray = function (f) {
      return function (xs) {
          return function __do() {
              var result = $foreign.thaw(xs)();
              f(result)();
              return $foreign.unsafeFreeze(result)();
          };
      };
  };
  var push = function (a) {
      return $foreign.pushAll([ a ]);
  };
  exports["withArray"] = withArray;
  exports["push"] = push;
  exports["new"] = $foreign["new"];
  exports["unsafeFreeze"] = $foreign.unsafeFreeze;
  exports["unsafeThaw"] = $foreign.unsafeThaw;
})(PS);
(function(exports) {
  "use strict";

  exports.foldrArray = function (f) {
    return function (init) {
      return function (xs) {
        var acc = init;
        var len = xs.length;
        for (var i = len - 1; i >= 0; i--) {
          acc = f(xs[i])(acc);
        }
        return acc;
      };
    };
  };

  exports.foldlArray = function (f) {
    return function (init) {
      return function (xs) {
        var acc = init;
        var len = xs.length;
        for (var i = 0; i < len; i++) {
          acc = f(acc)(xs[i]);
        }
        return acc;
      };
    };
  };
})(PS["Data.Foldable"] = PS["Data.Foldable"] || {});
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Control.Plus"] = $PS["Control.Plus"] || {};
  var exports = $PS["Control.Plus"];
  var empty = function (dict) {
      return dict.empty;
  };
  exports["empty"] = empty;
})(PS);
(function(exports) {
  "use strict";

  exports.concatString = function (s1) {
    return function (s2) {
      return s1 + s2;
    };
  };

  exports.concatArray = function (xs) {
    return function (ys) {
      if (xs.length === 0) return ys;
      if (ys.length === 0) return xs;
      return xs.concat(ys);
    };
  };
})(PS["Data.Semigroup"] = PS["Data.Semigroup"] || {});
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Data.Semigroup"] = $PS["Data.Semigroup"] || {};
  var exports = $PS["Data.Semigroup"];
  var $foreign = $PS["Data.Semigroup"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Data_Unit = $PS["Data.Unit"];
  var Record_Unsafe = $PS["Record.Unsafe"];
  var Type_Proxy = $PS["Type.Proxy"];
  var semigroupUnit = {
      append: function (v) {
          return function (v1) {
              return Data_Unit.unit;
          };
      }
  };
  var semigroupString = {
      append: $foreign.concatString
  };
  var semigroupRecordNil = {
      appendRecord: function (v) {
          return function (v1) {
              return function (v2) {
                  return {};
              };
          };
      }
  };
  var semigroupArray = {
      append: $foreign.concatArray
  };
  var appendRecord = function (dict) {
      return dict.appendRecord;
  };
  var semigroupRecord = function () {
      return function (dictSemigroupRecord) {
          return {
              append: appendRecord(dictSemigroupRecord)(Type_Proxy["Proxy"].value)
          };
      };
  };
  var append = function (dict) {
      return dict.append;
  };
  var semigroupRecordCons = function (dictIsSymbol) {
      return function () {
          return function (dictSemigroupRecord) {
              return function (dictSemigroup) {
                  return {
                      appendRecord: function (v) {
                          return function (ra) {
                              return function (rb) {
                                  var tail = appendRecord(dictSemigroupRecord)(Type_Proxy["Proxy"].value)(ra)(rb);
                                  var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Type_Proxy["Proxy"].value);
                                  var insert = Record_Unsafe.unsafeSet(key);
                                  var get = Record_Unsafe.unsafeGet(key);
                                  return insert(append(dictSemigroup)(get(ra))(get(rb)))(tail);
                              };
                          };
                      }
                  };
              };
          };
      };
  };
  exports["append"] = append;
  exports["semigroupString"] = semigroupString;
  exports["semigroupUnit"] = semigroupUnit;
  exports["semigroupArray"] = semigroupArray;
  exports["semigroupRecord"] = semigroupRecord;
  exports["semigroupRecordNil"] = semigroupRecordNil;
  exports["semigroupRecordCons"] = semigroupRecordCons;
})(PS);
(function(exports) {
  "use strict";

  exports.showIntImpl = function (n) {
    return n.toString();
  };

  exports.showNumberImpl = function (n) {
    var str = n.toString();
    return isNaN(str + ".0") ? str : str + ".0";
  };

  exports.showCharImpl = function (c) {
    var code = c.charCodeAt(0);
    if (code < 0x20 || code === 0x7F) {
      switch (c) {
        case "\x07": return "'\\a'";
        case "\b": return "'\\b'";
        case "\f": return "'\\f'";
        case "\n": return "'\\n'";
        case "\r": return "'\\r'";
        case "\t": return "'\\t'";
        case "\v": return "'\\v'";
      }
      return "'\\" + code.toString(10) + "'";
    }
    return c === "'" || c === "\\" ? "'\\" + c + "'" : "'" + c + "'";
  };

  exports.showStringImpl = function (s) {
    var l = s.length;
    return "\"" + s.replace(
      /[\0-\x1F\x7F"\\]/g, // eslint-disable-line no-control-regex
      function (c, i) {
        switch (c) {
          case "\"":
          case "\\":
            return "\\" + c;
          case "\x07": return "\\a";
          case "\b": return "\\b";
          case "\f": return "\\f";
          case "\n": return "\\n";
          case "\r": return "\\r";
          case "\t": return "\\t";
          case "\v": return "\\v";
        }
        var k = i + 1;
        var empty = k < l && s[k] >= "0" && s[k] <= "9" ? "\\&" : "";
        return "\\" + c.charCodeAt(0).toString(10) + empty;
      }
    ) + "\"";
  };

  exports.showArrayImpl = function (f) {
    return function (xs) {
      var ss = [];
      for (var i = 0, l = xs.length; i < l; i++) {
        ss[i] = f(xs[i]);
      }
      return "[" + ss.join(",") + "]";
    };
  };

  exports.cons = function (head) {
    return function (tail) {
      return [head].concat(tail);
    };
  };

  exports.join = function (separator) {
    return function (xs) {
      return xs.join(separator);
    };
  };
})(PS["Data.Show"] = PS["Data.Show"] || {});
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Data.Show"] = $PS["Data.Show"] || {};
  var exports = $PS["Data.Show"];
  var $foreign = $PS["Data.Show"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Record_Unsafe = $PS["Record.Unsafe"];
  var Type_Proxy = $PS["Type.Proxy"];                
  var showString = {
      show: $foreign.showStringImpl
  };
  var showRecordFieldsNil = {
      showRecordFields: function (v) {
          return function (v1) {
              return [  ];
          };
      }
  };
  var showRecordFields = function (dict) {
      return dict.showRecordFields;
  };
  var showRecord = function () {
      return function (dictShowRecordFields) {
          return {
              show: function (record) {
                  var v = showRecordFields(dictShowRecordFields)(Type_Proxy["Proxy"].value)(record);
                  if (v.length === 0) {
                      return "{}";
                  };
                  return $foreign.join(" ")([ "{", $foreign.join(", ")(v), "}" ]);
              }
          };
      };
  };
  var showNumber = {
      show: $foreign.showNumberImpl
  };
  var showInt = {
      show: $foreign.showIntImpl
  };
  var showChar = {
      show: $foreign.showCharImpl
  };
  var showBoolean = {
      show: function (v) {
          if (v) {
              return "true";
          };
          if (!v) {
              return "false";
          };
          throw new Error("Failed pattern match at Data.Show (line 20, column 1 - line 22, column 23): " + [ v.constructor.name ]);
      }
  };
  var show = function (dict) {
      return dict.show;
  };
  var showArray = function (dictShow) {
      return {
          show: $foreign.showArrayImpl(show(dictShow))
      };
  };
  var showRecordFieldsCons = function (dictIsSymbol) {
      return function (dictShowRecordFields) {
          return function (dictShow) {
              return {
                  showRecordFields: function (v) {
                      return function (record) {
                          var tail = showRecordFields(dictShowRecordFields)(Type_Proxy["Proxy"].value)(record);
                          var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Type_Proxy["Proxy"].value);
                          var focus = Record_Unsafe.unsafeGet(key)(record);
                          return $foreign.cons($foreign.join(": ")([ key, show(dictShow)(focus) ]))(tail);
                      };
                  }
              };
          };
      };
  };
  exports["show"] = show;
  exports["showBoolean"] = showBoolean;
  exports["showInt"] = showInt;
  exports["showNumber"] = showNumber;
  exports["showChar"] = showChar;
  exports["showString"] = showString;
  exports["showArray"] = showArray;
  exports["showRecord"] = showRecord;
  exports["showRecordFieldsNil"] = showRecordFieldsNil;
  exports["showRecordFieldsCons"] = showRecordFieldsCons;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Data.Maybe"] = $PS["Data.Maybe"] || {};
  var exports = $PS["Data.Maybe"];
  var Control_Category = $PS["Control.Category"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Ordering = $PS["Data.Ordering"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Show = $PS["Data.Show"];
  var Data_Unit = $PS["Data.Unit"];                
  var Nothing = (function () {
      function Nothing() {

      };
      Nothing.value = new Nothing();
      return Nothing;
  })();
  var Just = (function () {
      function Just(value0) {
          this.value0 = value0;
      };
      Just.create = function (value0) {
          return new Just(value0);
      };
      return Just;
  })();
  var showMaybe = function (dictShow) {
      return {
          show: function (v) {
              if (v instanceof Just) {
                  return "(Just " + (Data_Show.show(dictShow)(v.value0) + ")");
              };
              if (v instanceof Nothing) {
                  return "Nothing";
              };
              throw new Error("Failed pattern match at Data.Maybe (line 216, column 1 - line 218, column 28): " + [ v.constructor.name ]);
          }
      };
  };
  var semigroupMaybe = function (dictSemigroup) {
      return {
          append: function (v) {
              return function (v1) {
                  if (v instanceof Nothing) {
                      return v1;
                  };
                  if (v1 instanceof Nothing) {
                      return v;
                  };
                  if (v instanceof Just && v1 instanceof Just) {
                      return new Just(Data_Semigroup.append(dictSemigroup)(v.value0)(v1.value0));
                  };
                  throw new Error("Failed pattern match at Data.Maybe (line 185, column 1 - line 188, column 43): " + [ v.constructor.name, v1.constructor.name ]);
              };
          }
      };
  };
  var monoidMaybe = function (dictSemigroup) {
      return {
          mempty: Nothing.value,
          Semigroup0: function () {
              return semigroupMaybe(dictSemigroup);
          }
      };
  };
  var maybe$prime = function (v) {
      return function (v1) {
          return function (v2) {
              if (v2 instanceof Nothing) {
                  return v(Data_Unit.unit);
              };
              if (v2 instanceof Just) {
                  return v1(v2.value0);
              };
              throw new Error("Failed pattern match at Data.Maybe (line 243, column 1 - line 243, column 62): " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
          };
      };
  };
  var maybe = function (v) {
      return function (v1) {
          return function (v2) {
              if (v2 instanceof Nothing) {
                  return v;
              };
              if (v2 instanceof Just) {
                  return v1(v2.value0);
              };
              throw new Error("Failed pattern match at Data.Maybe (line 230, column 1 - line 230, column 51): " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
          };
      };
  };
  var isNothing = maybe(true)(Data_Function["const"](false));
  var isJust = maybe(false)(Data_Function["const"](true));
  var functorMaybe = {
      map: function (v) {
          return function (v1) {
              if (v1 instanceof Just) {
                  return new Just(v(v1.value0));
              };
              return Nothing.value;
          };
      }
  };
  var fromMaybe = function (a) {
      return maybe(a)(Control_Category.identity(Control_Category.categoryFn));
  };
  var fromJust = function () {
      return function (v) {
          if (v instanceof Just) {
              return v.value0;
          };
          throw new Error("Failed pattern match at Data.Maybe (line 281, column 1 - line 281, column 46): " + [ v.constructor.name ]);
      };
  };
  var eqMaybe = function (dictEq) {
      return {
          eq: function (x) {
              return function (y) {
                  if (x instanceof Nothing && y instanceof Nothing) {
                      return true;
                  };
                  if (x instanceof Just && y instanceof Just) {
                      return Data_Eq.eq(dictEq)(x.value0)(y.value0);
                  };
                  return false;
              };
          }
      };
  };
  var ordMaybe = function (dictOrd) {
      return {
          compare: function (x) {
              return function (y) {
                  if (x instanceof Nothing && y instanceof Nothing) {
                      return Data_Ordering.EQ.value;
                  };
                  if (x instanceof Nothing) {
                      return Data_Ordering.LT.value;
                  };
                  if (y instanceof Nothing) {
                      return Data_Ordering.GT.value;
                  };
                  if (x instanceof Just && y instanceof Just) {
                      return Data_Ord.compare(dictOrd)(x.value0)(y.value0);
                  };
                  throw new Error("Failed pattern match at Data.Maybe (line 205, column 1 - line 205, column 51): " + [ x.constructor.name, y.constructor.name ]);
              };
          },
          Eq0: function () {
              return eqMaybe(dictOrd.Eq0());
          }
      };
  };
  var applyMaybe = {
      apply: function (v) {
          return function (v1) {
              if (v instanceof Just) {
                  return Data_Functor.map(functorMaybe)(v.value0)(v1);
              };
              if (v instanceof Nothing) {
                  return Nothing.value;
              };
              throw new Error("Failed pattern match at Data.Maybe (line 68, column 1 - line 70, column 30): " + [ v.constructor.name, v1.constructor.name ]);
          };
      },
      Functor0: function () {
          return functorMaybe;
      }
  };
  var bindMaybe = {
      bind: function (v) {
          return function (v1) {
              if (v instanceof Just) {
                  return v1(v.value0);
              };
              if (v instanceof Nothing) {
                  return Nothing.value;
              };
              throw new Error("Failed pattern match at Data.Maybe (line 126, column 1 - line 128, column 28): " + [ v.constructor.name, v1.constructor.name ]);
          };
      },
      Apply0: function () {
          return applyMaybe;
      }
  };
  var applicativeMaybe = {
      pure: Just.create,
      Apply0: function () {
          return applyMaybe;
      }
  };
  var altMaybe = {
      alt: function (v) {
          return function (v1) {
              if (v instanceof Nothing) {
                  return v1;
              };
              return v;
          };
      },
      Functor0: function () {
          return functorMaybe;
      }
  };
  var plusMaybe = {
      empty: Nothing.value,
      Alt0: function () {
          return altMaybe;
      }
  };
  var alternativeMaybe = {
      Applicative0: function () {
          return applicativeMaybe;
      },
      Plus1: function () {
          return plusMaybe;
      }
  };
  exports["Nothing"] = Nothing;
  exports["Just"] = Just;
  exports["maybe"] = maybe;
  exports["maybe'"] = maybe$prime;
  exports["fromMaybe"] = fromMaybe;
  exports["isJust"] = isJust;
  exports["isNothing"] = isNothing;
  exports["fromJust"] = fromJust;
  exports["functorMaybe"] = functorMaybe;
  exports["applyMaybe"] = applyMaybe;
  exports["applicativeMaybe"] = applicativeMaybe;
  exports["altMaybe"] = altMaybe;
  exports["plusMaybe"] = plusMaybe;
  exports["alternativeMaybe"] = alternativeMaybe;
  exports["bindMaybe"] = bindMaybe;
  exports["semigroupMaybe"] = semigroupMaybe;
  exports["monoidMaybe"] = monoidMaybe;
  exports["eqMaybe"] = eqMaybe;
  exports["ordMaybe"] = ordMaybe;
  exports["showMaybe"] = showMaybe;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Data.Either"] = $PS["Data.Either"] || {};
  var exports = $PS["Data.Either"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Show = $PS["Data.Show"];                
  var Left = (function () {
      function Left(value0) {
          this.value0 = value0;
      };
      Left.create = function (value0) {
          return new Left(value0);
      };
      return Left;
  })();
  var Right = (function () {
      function Right(value0) {
          this.value0 = value0;
      };
      Right.create = function (value0) {
          return new Right(value0);
      };
      return Right;
  })();
  var showEither = function (dictShow) {
      return function (dictShow1) {
          return {
              show: function (v) {
                  if (v instanceof Left) {
                      return "(Left " + (Data_Show.show(dictShow)(v.value0) + ")");
                  };
                  if (v instanceof Right) {
                      return "(Right " + (Data_Show.show(dictShow1)(v.value0) + ")");
                  };
                  throw new Error("Failed pattern match at Data.Either (line 173, column 1 - line 175, column 46): " + [ v.constructor.name ]);
              }
          };
      };
  };
  var note = function (a) {
      return Data_Maybe.maybe(new Left(a))(Right.create);
  };
  var functorEither = {
      map: function (f) {
          return function (m) {
              if (m instanceof Left) {
                  return new Left(m.value0);
              };
              if (m instanceof Right) {
                  return new Right(f(m.value0));
              };
              throw new Error("Failed pattern match at Data.Either (line 31, column 1 - line 31, column 52): " + [ m.constructor.name ]);
          };
      }
  };
  var fromRight = function (v) {
      return function (v1) {
          if (v1 instanceof Right) {
              return v1.value0;
          };
          return v;
      };
  };
  var either = function (v) {
      return function (v1) {
          return function (v2) {
              if (v2 instanceof Left) {
                  return v(v2.value0);
              };
              if (v2 instanceof Right) {
                  return v1(v2.value0);
              };
              throw new Error("Failed pattern match at Data.Either (line 208, column 1 - line 208, column 64): " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
          };
      };
  };
  var hush = either(Data_Function["const"](Data_Maybe.Nothing.value))(Data_Maybe.Just.create);
  var isLeft = either(Data_Function["const"](true))(Data_Function["const"](false));
  var isRight = either(Data_Function["const"](false))(Data_Function["const"](true));
  var applyEither = {
      apply: function (v) {
          return function (v1) {
              if (v instanceof Left) {
                  return new Left(v.value0);
              };
              if (v instanceof Right) {
                  return Data_Functor.map(functorEither)(v.value0)(v1);
              };
              throw new Error("Failed pattern match at Data.Either (line 70, column 1 - line 72, column 30): " + [ v.constructor.name, v1.constructor.name ]);
          };
      },
      Functor0: function () {
          return functorEither;
      }
  };
  var bindEither = {
      bind: either(function (e) {
          return function (v) {
              return new Left(e);
          };
      })(function (a) {
          return function (f) {
              return f(a);
          };
      }),
      Apply0: function () {
          return applyEither;
      }
  };
  var applicativeEither = {
      pure: Right.create,
      Apply0: function () {
          return applyEither;
      }
  };
  var monadEither = {
      Applicative0: function () {
          return applicativeEither;
      },
      Bind1: function () {
          return bindEither;
      }
  };
  var altEither = {
      alt: function (v) {
          return function (v1) {
              if (v instanceof Left) {
                  return v1;
              };
              return v;
          };
      },
      Functor0: function () {
          return functorEither;
      }
  };
  exports["Left"] = Left;
  exports["Right"] = Right;
  exports["either"] = either;
  exports["isLeft"] = isLeft;
  exports["isRight"] = isRight;
  exports["fromRight"] = fromRight;
  exports["note"] = note;
  exports["hush"] = hush;
  exports["functorEither"] = functorEither;
  exports["applyEither"] = applyEither;
  exports["applicativeEither"] = applicativeEither;
  exports["altEither"] = altEither;
  exports["bindEither"] = bindEither;
  exports["monadEither"] = monadEither;
  exports["showEither"] = showEither;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Data.Maybe.First"] = $PS["Data.Maybe.First"] || {};
  var exports = $PS["Data.Maybe.First"];
  var Data_Maybe = $PS["Data.Maybe"];              
  var First = function (x) {
      return x;
  };
  var semigroupFirst = {
      append: function (v) {
          return function (v1) {
              if (v instanceof Data_Maybe.Just) {
                  return v;
              };
              return v1;
          };
      }
  };
  var monoidFirst = {
      mempty: Data_Maybe.Nothing.value,
      Semigroup0: function () {
          return semigroupFirst;
      }
  };
  exports["First"] = First;
  exports["semigroupFirst"] = semigroupFirst;
  exports["monoidFirst"] = monoidFirst;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Data.Monoid"] = $PS["Data.Monoid"] || {};
  var exports = $PS["Data.Monoid"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Data_Unit = $PS["Data.Unit"];
  var Record_Unsafe = $PS["Record.Unsafe"];
  var Type_Proxy = $PS["Type.Proxy"];                
  var monoidUnit = {
      mempty: Data_Unit.unit,
      Semigroup0: function () {
          return Data_Semigroup.semigroupUnit;
      }
  };
  var monoidString = {
      mempty: "",
      Semigroup0: function () {
          return Data_Semigroup.semigroupString;
      }
  };
  var monoidRecordNil = {
      memptyRecord: function (v) {
          return {};
      },
      SemigroupRecord0: function () {
          return Data_Semigroup.semigroupRecordNil;
      }
  };
  var monoidArray = {
      mempty: [  ],
      Semigroup0: function () {
          return Data_Semigroup.semigroupArray;
      }
  };
  var memptyRecord = function (dict) {
      return dict.memptyRecord;
  };
  var monoidRecord = function () {
      return function (dictMonoidRecord) {
          return {
              mempty: memptyRecord(dictMonoidRecord)(Type_Proxy["Proxy"].value),
              Semigroup0: function () {
                  return Data_Semigroup.semigroupRecord()(dictMonoidRecord.SemigroupRecord0());
              }
          };
      };
  };
  var mempty = function (dict) {
      return dict.mempty;
  };
  var monoidRecordCons = function (dictIsSymbol) {
      return function (dictMonoid) {
          return function () {
              return function (dictMonoidRecord) {
                  return {
                      memptyRecord: function (v) {
                          var tail = memptyRecord(dictMonoidRecord)(Type_Proxy["Proxy"].value);
                          var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Type_Proxy["Proxy"].value);
                          var insert = Record_Unsafe.unsafeSet(key);
                          return insert(mempty(dictMonoid))(tail);
                      },
                      SemigroupRecord0: function () {
                          return Data_Semigroup.semigroupRecordCons(dictIsSymbol)()(dictMonoidRecord.SemigroupRecord0())(dictMonoid.Semigroup0());
                      }
                  };
              };
          };
      };
  };
  var guard = function (dictMonoid) {
      return function (v) {
          return function (v1) {
              if (v) {
                  return v1;
              };
              if (!v) {
                  return mempty(dictMonoid);
              };
              throw new Error("Failed pattern match at Data.Monoid (line 94, column 1 - line 94, column 49): " + [ v.constructor.name, v1.constructor.name ]);
          };
      };
  };
  exports["mempty"] = mempty;
  exports["guard"] = guard;
  exports["monoidUnit"] = monoidUnit;
  exports["monoidString"] = monoidString;
  exports["monoidArray"] = monoidArray;
  exports["monoidRecord"] = monoidRecord;
  exports["monoidRecordNil"] = monoidRecordNil;
  exports["monoidRecordCons"] = monoidRecordCons;
})(PS);
(function(exports) {
  "use strict";

  exports.boolConj = function (b1) {
    return function (b2) {
      return b1 && b2;
    };
  };

  exports.boolDisj = function (b1) {
    return function (b2) {
      return b1 || b2;
    };
  };

  exports.boolNot = function (b) {
    return !b;
  };
})(PS["Data.HeytingAlgebra"] = PS["Data.HeytingAlgebra"] || {});
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Data.HeytingAlgebra"] = $PS["Data.HeytingAlgebra"] || {};
  var exports = $PS["Data.HeytingAlgebra"];
  var $foreign = $PS["Data.HeytingAlgebra"];
  var tt = function (dict) {
      return dict.tt;
  };
  var not = function (dict) {
      return dict.not;
  };
  var implies = function (dict) {
      return dict.implies;
  };
  var ff = function (dict) {
      return dict.ff;
  };
  var disj = function (dict) {
      return dict.disj;
  };
  var heytingAlgebraBoolean = {
      ff: false,
      tt: true,
      implies: function (a) {
          return function (b) {
              return disj(heytingAlgebraBoolean)(not(heytingAlgebraBoolean)(a))(b);
          };
      },
      conj: $foreign.boolConj,
      disj: $foreign.boolDisj,
      not: $foreign.boolNot
  };
  var conj = function (dict) {
      return dict.conj;
  };
  var heytingAlgebraFunction = function (dictHeytingAlgebra) {
      return {
          ff: function (v) {
              return ff(dictHeytingAlgebra);
          },
          tt: function (v) {
              return tt(dictHeytingAlgebra);
          },
          implies: function (f) {
              return function (g) {
                  return function (a) {
                      return implies(dictHeytingAlgebra)(f(a))(g(a));
                  };
              };
          },
          conj: function (f) {
              return function (g) {
                  return function (a) {
                      return conj(dictHeytingAlgebra)(f(a))(g(a));
                  };
              };
          },
          disj: function (f) {
              return function (g) {
                  return function (a) {
                      return disj(dictHeytingAlgebra)(f(a))(g(a));
                  };
              };
          },
          not: function (f) {
              return function (a) {
                  return not(dictHeytingAlgebra)(f(a));
              };
          }
      };
  };
  exports["tt"] = tt;
  exports["ff"] = ff;
  exports["conj"] = conj;
  exports["disj"] = disj;
  exports["not"] = not;
  exports["heytingAlgebraBoolean"] = heytingAlgebraBoolean;
  exports["heytingAlgebraFunction"] = heytingAlgebraFunction;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Data.Monoid.Conj"] = $PS["Data.Monoid.Conj"] || {};
  var exports = $PS["Data.Monoid.Conj"];
  var Data_HeytingAlgebra = $PS["Data.HeytingAlgebra"];
  var Conj = function (x) {
      return x;
  };
  var semigroupConj = function (dictHeytingAlgebra) {
      return {
          append: function (v) {
              return function (v1) {
                  return Data_HeytingAlgebra.conj(dictHeytingAlgebra)(v)(v1);
              };
          }
      };
  };
  var monoidConj = function (dictHeytingAlgebra) {
      return {
          mempty: Data_HeytingAlgebra.tt(dictHeytingAlgebra),
          Semigroup0: function () {
              return semigroupConj(dictHeytingAlgebra);
          }
      };
  };
  exports["Conj"] = Conj;
  exports["monoidConj"] = monoidConj;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Data.Monoid.Disj"] = $PS["Data.Monoid.Disj"] || {};
  var exports = $PS["Data.Monoid.Disj"];
  var Data_HeytingAlgebra = $PS["Data.HeytingAlgebra"];
  var Disj = function (x) {
      return x;
  };
  var semigroupDisj = function (dictHeytingAlgebra) {
      return {
          append: function (v) {
              return function (v1) {
                  return Data_HeytingAlgebra.disj(dictHeytingAlgebra)(v)(v1);
              };
          }
      };
  };
  var monoidDisj = function (dictHeytingAlgebra) {
      return {
          mempty: Data_HeytingAlgebra.ff(dictHeytingAlgebra),
          Semigroup0: function () {
              return semigroupDisj(dictHeytingAlgebra);
          }
      };
  };
  exports["Disj"] = Disj;
  exports["monoidDisj"] = monoidDisj;
})(PS);
(function(exports) {
  "use strict";

  // module Unsafe.Coerce

  exports.unsafeCoerce = function (x) {
    return x;
  };
})(PS["Unsafe.Coerce"] = PS["Unsafe.Coerce"] || {});
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Unsafe.Coerce"] = $PS["Unsafe.Coerce"] || {};
  var exports = $PS["Unsafe.Coerce"];
  var $foreign = $PS["Unsafe.Coerce"];
  exports["unsafeCoerce"] = $foreign.unsafeCoerce;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Safe.Coerce"] = $PS["Safe.Coerce"] || {};
  var exports = $PS["Safe.Coerce"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];                
  var coerce = function () {
      return Unsafe_Coerce.unsafeCoerce;
  };
  exports["coerce"] = coerce;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Data.Newtype"] = $PS["Data.Newtype"] || {};
  var exports = $PS["Data.Newtype"];
  var Safe_Coerce = $PS["Safe.Coerce"];                
  var wrap = Safe_Coerce.coerce;
  var unwrap = Safe_Coerce.coerce;
  var over2 = function () {
      return function () {
          return function (v) {
              return Safe_Coerce.coerce();
          };
      };
  };
  var over = function () {
      return function () {
          return function (v) {
              return Safe_Coerce.coerce();
          };
      };
  };
  var alaF = function () {
      return function () {
          return function () {
              return function () {
                  return function (v) {
                      return Safe_Coerce.coerce();
                  };
              };
          };
      };
  };
  exports["wrap"] = wrap;
  exports["unwrap"] = unwrap;
  exports["alaF"] = alaF;
  exports["over"] = over;
  exports["over2"] = over2;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Data.Foldable"] = $PS["Data.Foldable"] || {};
  var exports = $PS["Data.Foldable"];
  var $foreign = $PS["Data.Foldable"];
  var Control_Alt = $PS["Control.Alt"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Category = $PS["Control.Category"];
  var Control_Plus = $PS["Control.Plus"];
  var Data_Either = $PS["Data.Either"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Function = $PS["Data.Function"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Maybe_First = $PS["Data.Maybe.First"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Monoid_Conj = $PS["Data.Monoid.Conj"];
  var Data_Monoid_Disj = $PS["Data.Monoid.Disj"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Ordering = $PS["Data.Ordering"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Semiring = $PS["Data.Semiring"];
  var Data_Unit = $PS["Data.Unit"];                
  var foldr = function (dict) {
      return dict.foldr;
  };
  var $$null = function (dictFoldable) {
      return foldr(dictFoldable)(function (v) {
          return function (v1) {
              return false;
          };
      })(true);
  };
  var oneOfMap = function (dictFoldable) {
      return function (dictPlus) {
          return function (f) {
              return foldr(dictFoldable)((function () {
                  var $314 = Control_Alt.alt(dictPlus.Alt0());
                  return function ($315) {
                      return $314(f($315));
                  };
              })())(Control_Plus.empty(dictPlus));
          };
      };
  };
  var traverse_ = function (dictApplicative) {
      return function (dictFoldable) {
          return function (f) {
              return foldr(dictFoldable)((function () {
                  var $316 = Control_Apply.applySecond(dictApplicative.Apply0());
                  return function ($317) {
                      return $316(f($317));
                  };
              })())(Control_Applicative.pure(dictApplicative)(Data_Unit.unit));
          };
      };
  };
  var for_ = function (dictApplicative) {
      return function (dictFoldable) {
          return Data_Function.flip(traverse_(dictApplicative)(dictFoldable));
      };
  };
  var foldl = function (dict) {
      return dict.foldl;
  };
  var intercalate = function (dictFoldable) {
      return function (dictMonoid) {
          return function (sep) {
              return function (xs) {
                  var go = function (v) {
                      return function (x) {
                          if (v.init) {
                              return {
                                  init: false,
                                  acc: x
                              };
                          };
                          return {
                              init: false,
                              acc: Data_Semigroup.append(dictMonoid.Semigroup0())(v.acc)(Data_Semigroup.append(dictMonoid.Semigroup0())(sep)(x))
                          };
                      };
                  };
                  return (foldl(dictFoldable)(go)({
                      init: true,
                      acc: Data_Monoid.mempty(dictMonoid)
                  })(xs)).acc;
              };
          };
      };
  };
  var length = function (dictFoldable) {
      return function (dictSemiring) {
          return foldl(dictFoldable)(function (c) {
              return function (v) {
                  return Data_Semiring.add(dictSemiring)(Data_Semiring.one(dictSemiring))(c);
              };
          })(Data_Semiring.zero(dictSemiring));
      };
  };
  var maximumBy = function (dictFoldable) {
      return function (cmp) {
          var max$prime = function (v) {
              return function (v1) {
                  if (v instanceof Data_Maybe.Nothing) {
                      return new Data_Maybe.Just(v1);
                  };
                  if (v instanceof Data_Maybe.Just) {
                      return new Data_Maybe.Just((function () {
                          var $164 = Data_Eq.eq(Data_Ordering.eqOrdering)(cmp(v.value0)(v1))(Data_Ordering.GT.value);
                          if ($164) {
                              return v.value0;
                          };
                          return v1;
                      })());
                  };
                  throw new Error("Failed pattern match at Data.Foldable (line 441, column 3 - line 441, column 27): " + [ v.constructor.name, v1.constructor.name ]);
              };
          };
          return foldl(dictFoldable)(max$prime)(Data_Maybe.Nothing.value);
      };
  };
  var sum = function (dictFoldable) {
      return function (dictSemiring) {
          return foldl(dictFoldable)(Data_Semiring.add(dictSemiring))(Data_Semiring.zero(dictSemiring));
      };
  };
  var foldableTuple = {
      foldr: function (f) {
          return function (z) {
              return function (v) {
                  return f(v.value1)(z);
              };
          };
      },
      foldl: function (f) {
          return function (z) {
              return function (v) {
                  return f(z)(v.value1);
              };
          };
      },
      foldMap: function (dictMonoid) {
          return function (f) {
              return function (v) {
                  return f(v.value1);
              };
          };
      }
  };
  var foldableMaybe = {
      foldr: function (v) {
          return function (z) {
              return function (v1) {
                  if (v1 instanceof Data_Maybe.Nothing) {
                      return z;
                  };
                  if (v1 instanceof Data_Maybe.Just) {
                      return v(v1.value0)(z);
                  };
                  throw new Error("Failed pattern match at Data.Foldable (line 138, column 1 - line 144, column 27): " + [ v.constructor.name, z.constructor.name, v1.constructor.name ]);
              };
          };
      },
      foldl: function (v) {
          return function (z) {
              return function (v1) {
                  if (v1 instanceof Data_Maybe.Nothing) {
                      return z;
                  };
                  if (v1 instanceof Data_Maybe.Just) {
                      return v(z)(v1.value0);
                  };
                  throw new Error("Failed pattern match at Data.Foldable (line 138, column 1 - line 144, column 27): " + [ v.constructor.name, z.constructor.name, v1.constructor.name ]);
              };
          };
      },
      foldMap: function (dictMonoid) {
          return function (v) {
              return function (v1) {
                  if (v1 instanceof Data_Maybe.Nothing) {
                      return Data_Monoid.mempty(dictMonoid);
                  };
                  if (v1 instanceof Data_Maybe.Just) {
                      return v(v1.value0);
                  };
                  throw new Error("Failed pattern match at Data.Foldable (line 138, column 1 - line 144, column 27): " + [ v.constructor.name, v1.constructor.name ]);
              };
          };
      }
  };
  var foldableEither = {
      foldr: function (v) {
          return function (z) {
              return function (v1) {
                  if (v1 instanceof Data_Either.Left) {
                      return z;
                  };
                  if (v1 instanceof Data_Either.Right) {
                      return v(v1.value0)(z);
                  };
                  throw new Error("Failed pattern match at Data.Foldable (line 181, column 1 - line 187, column 28): " + [ v.constructor.name, z.constructor.name, v1.constructor.name ]);
              };
          };
      },
      foldl: function (v) {
          return function (z) {
              return function (v1) {
                  if (v1 instanceof Data_Either.Left) {
                      return z;
                  };
                  if (v1 instanceof Data_Either.Right) {
                      return v(z)(v1.value0);
                  };
                  throw new Error("Failed pattern match at Data.Foldable (line 181, column 1 - line 187, column 28): " + [ v.constructor.name, z.constructor.name, v1.constructor.name ]);
              };
          };
      },
      foldMap: function (dictMonoid) {
          return function (v) {
              return function (v1) {
                  if (v1 instanceof Data_Either.Left) {
                      return Data_Monoid.mempty(dictMonoid);
                  };
                  if (v1 instanceof Data_Either.Right) {
                      return v(v1.value0);
                  };
                  throw new Error("Failed pattern match at Data.Foldable (line 181, column 1 - line 187, column 28): " + [ v.constructor.name, v1.constructor.name ]);
              };
          };
      }
  };
  var foldMapDefaultR = function (dictFoldable) {
      return function (dictMonoid) {
          return function (f) {
              return foldr(dictFoldable)(function (x) {
                  return function (acc) {
                      return Data_Semigroup.append(dictMonoid.Semigroup0())(f(x))(acc);
                  };
              })(Data_Monoid.mempty(dictMonoid));
          };
      };
  };
  var foldableArray = {
      foldr: $foreign.foldrArray,
      foldl: $foreign.foldlArray,
      foldMap: function (dictMonoid) {
          return foldMapDefaultR(foldableArray)(dictMonoid);
      }
  };
  var foldMap = function (dict) {
      return dict.foldMap;
  };
  var lookup = function (dictFoldable) {
      return function (dictEq) {
          return function (a) {
              var $323 = Data_Newtype.unwrap();
              var $324 = foldMap(dictFoldable)(Data_Maybe_First.monoidFirst)(function (v) {
                  var $305 = Data_Eq.eq(dictEq)(a)(v.value0);
                  if ($305) {
                      return new Data_Maybe.Just(v.value1);
                  };
                  return Data_Maybe.Nothing.value;
              });
              return function ($325) {
                  return $323($324($325));
              };
          };
      };
  };
  var foldM = function (dictFoldable) {
      return function (dictMonad) {
          return function (f) {
              return function (b0) {
                  return foldl(dictFoldable)(function (b) {
                      return function (a) {
                          return Control_Bind.bind(dictMonad.Bind1())(b)(Data_Function.flip(f)(a));
                      };
                  })(Control_Applicative.pure(dictMonad.Applicative0())(b0));
              };
          };
      };
  };
  var fold = function (dictFoldable) {
      return function (dictMonoid) {
          return foldMap(dictFoldable)(dictMonoid)(Control_Category.identity(Control_Category.categoryFn));
      };
  };
  var find = function (dictFoldable) {
      return function (p) {
          var go = function (v) {
              return function (v1) {
                  if (v instanceof Data_Maybe.Nothing && p(v1)) {
                      return new Data_Maybe.Just(v1);
                  };
                  return v;
              };
          };
          return foldl(dictFoldable)(go)(Data_Maybe.Nothing.value);
      };
  };
  var any = function (dictFoldable) {
      return function (dictHeytingAlgebra) {
          return Data_Newtype.alaF()()()()(Data_Monoid_Disj.Disj)(foldMap(dictFoldable)(Data_Monoid_Disj.monoidDisj(dictHeytingAlgebra)));
      };
  };
  var all = function (dictFoldable) {
      return function (dictHeytingAlgebra) {
          return Data_Newtype.alaF()()()()(Data_Monoid_Conj.Conj)(foldMap(dictFoldable)(Data_Monoid_Conj.monoidConj(dictHeytingAlgebra)));
      };
  };
  exports["foldr"] = foldr;
  exports["foldl"] = foldl;
  exports["foldMap"] = foldMap;
  exports["fold"] = fold;
  exports["foldM"] = foldM;
  exports["traverse_"] = traverse_;
  exports["for_"] = for_;
  exports["oneOfMap"] = oneOfMap;
  exports["intercalate"] = intercalate;
  exports["all"] = all;
  exports["any"] = any;
  exports["sum"] = sum;
  exports["find"] = find;
  exports["maximumBy"] = maximumBy;
  exports["null"] = $$null;
  exports["length"] = length;
  exports["lookup"] = lookup;
  exports["foldableArray"] = foldableArray;
  exports["foldableMaybe"] = foldableMaybe;
  exports["foldableEither"] = foldableEither;
  exports["foldableTuple"] = foldableTuple;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Data.Tuple"] = $PS["Data.Tuple"] || {};
  var exports = $PS["Data.Tuple"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Ordering = $PS["Data.Ordering"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Semiring = $PS["Data.Semiring"];
  var Data_Show = $PS["Data.Show"];                
  var Tuple = (function () {
      function Tuple(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Tuple.create = function (value0) {
          return function (value1) {
              return new Tuple(value0, value1);
          };
      };
      return Tuple;
  })();
  var uncurry = function (f) {
      return function (v) {
          return f(v.value0)(v.value1);
      };
  };
  var snd = function (v) {
      return v.value1;
  };
  var showTuple = function (dictShow) {
      return function (dictShow1) {
          return {
              show: function (v) {
                  return "(Tuple " + (Data_Show.show(dictShow)(v.value0) + (" " + (Data_Show.show(dictShow1)(v.value1) + ")")));
              }
          };
      };
  };
  var semiringTuple = function (dictSemiring) {
      return function (dictSemiring1) {
          return {
              add: function (v) {
                  return function (v1) {
                      return new Tuple(Data_Semiring.add(dictSemiring)(v.value0)(v1.value0), Data_Semiring.add(dictSemiring1)(v.value1)(v1.value1));
                  };
              },
              one: new Tuple(Data_Semiring.one(dictSemiring), Data_Semiring.one(dictSemiring1)),
              mul: function (v) {
                  return function (v1) {
                      return new Tuple(Data_Semiring.mul(dictSemiring)(v.value0)(v1.value0), Data_Semiring.mul(dictSemiring1)(v.value1)(v1.value1));
                  };
              },
              zero: new Tuple(Data_Semiring.zero(dictSemiring), Data_Semiring.zero(dictSemiring1))
          };
      };
  };
  var semigroupTuple = function (dictSemigroup) {
      return function (dictSemigroup1) {
          return {
              append: function (v) {
                  return function (v1) {
                      return new Tuple(Data_Semigroup.append(dictSemigroup)(v.value0)(v1.value0), Data_Semigroup.append(dictSemigroup1)(v.value1)(v1.value1));
                  };
              }
          };
      };
  };
  var functorTuple = {
      map: function (f) {
          return function (m) {
              return new Tuple(m.value0, f(m.value1));
          };
      }
  };
  var fst = function (v) {
      return v.value0;
  };
  var eqTuple = function (dictEq) {
      return function (dictEq1) {
          return {
              eq: function (x) {
                  return function (y) {
                      return Data_Eq.eq(dictEq)(x.value0)(y.value0) && Data_Eq.eq(dictEq1)(x.value1)(y.value1);
                  };
              }
          };
      };
  };
  var ordTuple = function (dictOrd) {
      return function (dictOrd1) {
          return {
              compare: function (x) {
                  return function (y) {
                      var v = Data_Ord.compare(dictOrd)(x.value0)(y.value0);
                      if (v instanceof Data_Ordering.LT) {
                          return Data_Ordering.LT.value;
                      };
                      if (v instanceof Data_Ordering.GT) {
                          return Data_Ordering.GT.value;
                      };
                      return Data_Ord.compare(dictOrd1)(x.value1)(y.value1);
                  };
              },
              Eq0: function () {
                  return eqTuple(dictOrd.Eq0())(dictOrd1.Eq0());
              }
          };
      };
  };
  var curry = function (f) {
      return function (a) {
          return function (b) {
              return f(new Tuple(a, b));
          };
      };
  };
  exports["Tuple"] = Tuple;
  exports["fst"] = fst;
  exports["snd"] = snd;
  exports["curry"] = curry;
  exports["uncurry"] = uncurry;
  exports["showTuple"] = showTuple;
  exports["eqTuple"] = eqTuple;
  exports["ordTuple"] = ordTuple;
  exports["semigroupTuple"] = semigroupTuple;
  exports["semiringTuple"] = semiringTuple;
  exports["functorTuple"] = functorTuple;
})(PS);
(function(exports) {
  "use strict";

  exports.unfoldrArrayImpl = function (isNothing) {
    return function (fromJust) {
      return function (fst) {
        return function (snd) {
          return function (f) {
            return function (b) {
              var result = [];
              var value = b;
              while (true) { // eslint-disable-line no-constant-condition
                var maybe = f(value);
                if (isNothing(maybe)) return result;
                var tuple = fromJust(maybe);
                result.push(fst(tuple));
                value = snd(tuple);
              }
            };
          };
        };
      };
    };
  };
})(PS["Data.Unfoldable"] = PS["Data.Unfoldable"] || {});
(function(exports) {
  "use strict";

  exports.unfoldr1ArrayImpl = function (isNothing) {
    return function (fromJust) {
      return function (fst) {
        return function (snd) {
          return function (f) {
            return function (b) {
              var result = [];
              var value = b;
              while (true) { // eslint-disable-line no-constant-condition
                var tuple = f(value);
                result.push(fst(tuple));
                var maybe = snd(tuple);
                if (isNothing(maybe)) return result;
                value = fromJust(maybe);
              }
            };
          };
        };
      };
    };
  };
})(PS["Data.Unfoldable1"] = PS["Data.Unfoldable1"] || {});
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Data.Unfoldable1"] = $PS["Data.Unfoldable1"] || {};
  var exports = $PS["Data.Unfoldable1"];
  var $foreign = $PS["Data.Unfoldable1"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Tuple = $PS["Data.Tuple"];
  var unfoldable1Array = {
      unfoldr1: $foreign.unfoldr1ArrayImpl(Data_Maybe.isNothing)(Data_Maybe.fromJust())(Data_Tuple.fst)(Data_Tuple.snd)
  };
  exports["unfoldable1Array"] = unfoldable1Array;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Data.Unfoldable"] = $PS["Data.Unfoldable"] || {};
  var exports = $PS["Data.Unfoldable"];
  var $foreign = $PS["Data.Unfoldable"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unfoldable1 = $PS["Data.Unfoldable1"];  
  var unfoldr = function (dict) {
      return dict.unfoldr;
  };
  var unfoldableArray = {
      unfoldr: $foreign.unfoldrArrayImpl(Data_Maybe.isNothing)(Data_Maybe.fromJust())(Data_Tuple.fst)(Data_Tuple.snd),
      Unfoldable10: function () {
          return Data_Unfoldable1.unfoldable1Array;
      }
  };
  exports["unfoldr"] = unfoldr;
  exports["unfoldableArray"] = unfoldableArray;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Data.Array"] = $PS["Data.Array"] || {};
  var exports = $PS["Data.Array"];
  var $foreign = $PS["Data.Array"];
  var Control_Alt = $PS["Control.Alt"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Category = $PS["Control.Category"];
  var Control_Lazy = $PS["Control.Lazy"];
  var Control_Monad_ST_Internal = $PS["Control.Monad.ST.Internal"];
  var Data_Array_ST = $PS["Data.Array.ST"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_HeytingAlgebra = $PS["Data.HeytingAlgebra"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Ordering = $PS["Data.Ordering"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unfoldable = $PS["Data.Unfoldable"];
  var zip = $foreign.zipWith(Data_Tuple.Tuple.create);                                   
  var unsafeIndex = function () {
      return $foreign.unsafeIndexImpl;
  };
  var uncons = $foreign.unconsImpl(Data_Function["const"](Data_Maybe.Nothing.value))(function (x) {
      return function (xs) {
          return new Data_Maybe.Just({
              head: x,
              tail: xs
          });
      };
  });
  var toUnfoldable = function (dictUnfoldable) {
      return function (xs) {
          var len = $foreign.length(xs);
          var f = function (i) {
              if (i < len) {
                  return new Data_Maybe.Just(new Data_Tuple.Tuple(unsafeIndex()(xs)(i), i + 1 | 0));
              };
              if (Data_Boolean.otherwise) {
                  return Data_Maybe.Nothing.value;
              };
              throw new Error("Failed pattern match at Data.Array (line 158, column 3 - line 160, column 26): " + [ i.constructor.name ]);
          };
          return Data_Unfoldable.unfoldr(dictUnfoldable)(f)(0);
      };
  };
  var sortBy = function (comp) {
      return $foreign.sortByImpl(comp)(function (v) {
          if (v instanceof Data_Ordering.GT) {
              return 1;
          };
          if (v instanceof Data_Ordering.EQ) {
              return 0;
          };
          if (v instanceof Data_Ordering.LT) {
              return -1 | 0;
          };
          throw new Error("Failed pattern match at Data.Array (line 831, column 31 - line 834, column 11): " + [ v.constructor.name ]);
      });
  };
  var sortWith = function (dictOrd) {
      return function (f) {
          return sortBy(Data_Ord.comparing(dictOrd)(f));
      };
  };
  var snoc = function (xs) {
      return function (x) {
          return Data_Array_ST.withArray(Data_Array_ST.push(x))(xs)();
      };
  };
  var singleton = function (a) {
      return [ a ];
  };
  var $$null = function (xs) {
      return $foreign.length(xs) === 0;
  };
  var nubByEq = function (eq) {
      return function (xs) {
          return (function __do() {
              var arr = Data_Array_ST["new"]();
              Control_Monad_ST_Internal.foreach(xs)(function (x) {
                  return function __do() {
                      var e = Data_Functor.map(Control_Monad_ST_Internal.functorST)((function () {
                          var $90 = Data_HeytingAlgebra.not(Data_HeytingAlgebra.heytingAlgebraBoolean);
                          var $91 = $foreign.any(function (v) {
                              return eq(v)(x);
                          });
                          return function ($92) {
                              return $90($91($92));
                          };
                      })())(Data_Array_ST.unsafeFreeze(arr))();
                      return Control_Applicative.when(Control_Monad_ST_Internal.applicativeST)(e)(Data_Functor["void"](Control_Monad_ST_Internal.functorST)(Data_Array_ST.push(x)(arr)))();
                  };
              })();
              return Data_Array_ST.unsafeFreeze(arr)();
          })();
      };
  };
  var mapWithIndex = function (f) {
      return function (xs) {
          return $foreign.zipWith(f)($foreign.range(0)($foreign.length(xs) - 1 | 0))(xs);
      };
  };
  var index = $foreign.indexImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  var last = function (xs) {
      return index(xs)($foreign.length(xs) - 1 | 0);
  };
  var head = function (xs) {
      return index(xs)(0);
  };
  var nubBy = function (comp) {
      return function (xs) {
          var indexedAndSorted = sortBy(function (x) {
              return function (y) {
                  return comp(Data_Tuple.snd(x))(Data_Tuple.snd(y));
              };
          })(mapWithIndex(Data_Tuple.Tuple.create)(xs));
          var v = head(indexedAndSorted);
          if (v instanceof Data_Maybe.Nothing) {
              return [  ];
          };
          if (v instanceof Data_Maybe.Just) {
              return Data_Functor.map(Data_Functor.functorArray)(Data_Tuple.snd)(sortWith(Data_Ord.ordInt)(Data_Tuple.fst)((function __do() {
                  var result = Data_Array_ST.unsafeThaw(singleton(v.value0))();
                  Control_Monad_ST_Internal.foreach(indexedAndSorted)(function (v1) {
                      return function __do() {
                          var lst = Data_Functor.map(Control_Monad_ST_Internal.functorST)((function () {
                              var $93 = (function () {
                                  var $95 = Data_Maybe.fromJust();
                                  return function ($96) {
                                      return $95(last($96));
                                  };
                              })();
                              return function ($94) {
                                  return Data_Tuple.snd($93($94));
                              };
                          })())(Data_Array_ST.unsafeFreeze(result))();
                          return Control_Applicative.when(Control_Monad_ST_Internal.applicativeST)(Data_Eq.notEq(Data_Ordering.eqOrdering)(comp(lst)(v1.value1))(Data_Ordering.EQ.value))(Data_Functor["void"](Control_Monad_ST_Internal.functorST)(Data_Array_ST.push(v1)(result)))();
                      };
                  })();
                  return Data_Array_ST.unsafeFreeze(result)();
              })()));
          };
          throw new Error("Failed pattern match at Data.Array (line 1050, column 17 - line 1058, column 29): " + [ v.constructor.name ]);
      };
  };
  var nub = function (dictOrd) {
      return nubBy(Data_Ord.compare(dictOrd));
  };
  var fromFoldable = function (dictFoldable) {
      return $foreign.fromFoldableImpl(Data_Foldable.foldr(dictFoldable));
  };
  var foldr = Data_Foldable.foldr(Data_Foldable.foldableArray);
  var foldl = Data_Foldable.foldl(Data_Foldable.foldableArray);
  var foldMap = function (dictMonoid) {
      return Data_Foldable.foldMap(Data_Foldable.foldableArray)(dictMonoid);
  };
  var fold = function (dictMonoid) {
      return Data_Foldable.fold(Data_Foldable.foldableArray)(dictMonoid);
  };
  var findIndex = $foreign.findIndexImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  var find = function (f) {
      return function (xs) {
          return Data_Functor.map(Data_Maybe.functorMaybe)(unsafeIndex()(xs))(findIndex(f)(xs));
      };
  };
  var elemIndex = function (dictEq) {
      return function (x) {
          return findIndex(function (v) {
              return Data_Eq.eq(dictEq)(v)(x);
          });
      };
  };
  var notElem = function (dictEq) {
      return function (a) {
          return function (arr) {
              return Data_Maybe.isNothing(elemIndex(dictEq)(a)(arr));
          };
      };
  };
  var elem = function (dictEq) {
      return function (a) {
          return function (arr) {
              return Data_Maybe.isJust(elemIndex(dictEq)(a)(arr));
          };
      };
  };
  var deleteAt = $foreign["_deleteAt"](Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  var deleteBy = function (v) {
      return function (v1) {
          return function (v2) {
              if (v2.length === 0) {
                  return [  ];
              };
              return Data_Maybe.maybe(v2)(function (i) {
                  return Data_Maybe.fromJust()(deleteAt(i)(v2));
              })(findIndex(v(v1))(v2));
          };
      };
  };
  var unionBy = function (eq) {
      return function (xs) {
          return function (ys) {
              return Data_Semigroup.append(Data_Semigroup.semigroupArray)(xs)(foldl(Data_Function.flip(deleteBy(eq)))(nubByEq(eq)(ys))(xs));
          };
      };
  };
  var union = function (dictEq) {
      return unionBy(Data_Eq.eq(dictEq));
  };
  var cons = function (x) {
      return function (xs) {
          return Data_Semigroup.append(Data_Semigroup.semigroupArray)([ x ])(xs);
      };
  };
  var some = function (dictAlternative) {
      return function (dictLazy) {
          return function (v) {
              return Control_Apply.apply((dictAlternative.Applicative0()).Apply0())(Data_Functor.map(((dictAlternative.Plus1()).Alt0()).Functor0())(cons)(v))(Control_Lazy.defer(dictLazy)(function (v1) {
                  return many(dictAlternative)(dictLazy)(v);
              }));
          };
      };
  };
  var many = function (dictAlternative) {
      return function (dictLazy) {
          return function (v) {
              return Control_Alt.alt((dictAlternative.Plus1()).Alt0())(some(dictAlternative)(dictLazy)(v))(Control_Applicative.pure(dictAlternative.Applicative0())([  ]));
          };
      };
  };
  var concatMap = Data_Function.flip(Control_Bind.bind(Control_Bind.bindArray));
  var mapMaybe = function (f) {
      return concatMap((function () {
          var $100 = Data_Maybe.maybe([  ])(singleton);
          return function ($101) {
              return $100(f($101));
          };
      })());
  };
  var catMaybes = mapMaybe(Control_Category.identity(Control_Category.categoryFn));
  exports["fromFoldable"] = fromFoldable;
  exports["toUnfoldable"] = toUnfoldable;
  exports["singleton"] = singleton;
  exports["some"] = some;
  exports["null"] = $$null;
  exports["cons"] = cons;
  exports["snoc"] = snoc;
  exports["head"] = head;
  exports["uncons"] = uncons;
  exports["index"] = index;
  exports["elem"] = elem;
  exports["notElem"] = notElem;
  exports["elemIndex"] = elemIndex;
  exports["find"] = find;
  exports["concatMap"] = concatMap;
  exports["mapMaybe"] = mapMaybe;
  exports["catMaybes"] = catMaybes;
  exports["mapWithIndex"] = mapWithIndex;
  exports["foldl"] = foldl;
  exports["foldMap"] = foldMap;
  exports["fold"] = fold;
  exports["sortBy"] = sortBy;
  exports["sortWith"] = sortWith;
  exports["nub"] = nub;
  exports["union"] = union;
  exports["zip"] = zip;
  exports["range"] = $foreign.range;
  exports["replicate"] = $foreign.replicate;
  exports["length"] = $foreign.length;
  exports["reverse"] = $foreign.reverse;
  exports["concat"] = $foreign.concat;
  exports["filter"] = $foreign.filter;
  exports["partition"] = $foreign.partition;
  exports["zipWith"] = $foreign.zipWith;
  exports["any"] = $foreign.any;
})(PS);
(function(exports) {
  "use strict";

  exports.runFn3 = function (fn) {
    return function (a) {
      return function (b) {
        return function (c) {
          return fn(a, b, c);
        };
      };
    };
  };

  exports.runFn4 = function (fn) {
    return function (a) {
      return function (b) {
        return function (c) {
          return function (d) {
            return fn(a, b, c, d);
          };
        };
      };
    };
  };
})(PS["Data.Function.Uncurried"] = PS["Data.Function.Uncurried"] || {});
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Data.Function.Uncurried"] = $PS["Data.Function.Uncurried"] || {};
  var exports = $PS["Data.Function.Uncurried"];
  var $foreign = $PS["Data.Function.Uncurried"];
  exports["runFn3"] = $foreign.runFn3;
  exports["runFn4"] = $foreign.runFn4;
})(PS);
(function(exports) {
  "use strict";

  // jshint maxparams: 3

  exports.traverseArrayImpl = (function () {
    function array1(a) {
      return [a];
    }

    function array2(a) {
      return function (b) {
        return [a, b];
      };
    }

    function array3(a) {
      return function (b) {
        return function (c) {
          return [a, b, c];
        };
      };
    }

    function concat2(xs) {
      return function (ys) {
        return xs.concat(ys);
      };
    }

    return function (apply) {
      return function (map) {
        return function (pure) {
          return function (f) {
            return function (array) {
              function go(bot, top) {
                switch (top - bot) {
                case 0: return pure([]);
                case 1: return map(array1)(f(array[bot]));
                case 2: return apply(map(array2)(f(array[bot])))(f(array[bot + 1]));
                case 3: return apply(apply(map(array3)(f(array[bot])))(f(array[bot + 1])))(f(array[bot + 2]));
                default:
                  // This slightly tricky pivot selection aims to produce two
                  // even-length partitions where possible.
                  var pivot = bot + Math.floor((top - bot) / 4) * 2;
                  return apply(map(concat2)(go(bot, pivot)))(go(pivot, top));
                }
              }
              return go(0, array.length);
            };
          };
        };
      };
    };
  })();
})(PS["Data.Traversable"] = PS["Data.Traversable"] || {});
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Data.Traversable"] = $PS["Data.Traversable"] || {};
  var exports = $PS["Data.Traversable"];
  var $foreign = $PS["Data.Traversable"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Category = $PS["Control.Category"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Tuple = $PS["Data.Tuple"];                
  var traverse = function (dict) {
      return dict.traverse;
  };
  var traversableTuple = {
      traverse: function (dictApplicative) {
          return function (f) {
              return function (v) {
                  return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Tuple.Tuple.create(v.value0))(f(v.value1));
              };
          };
      },
      sequence: function (dictApplicative) {
          return function (v) {
              return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Tuple.Tuple.create(v.value0))(v.value1);
          };
      },
      Functor0: function () {
          return Data_Tuple.functorTuple;
      },
      Foldable1: function () {
          return Data_Foldable.foldableTuple;
      }
  };
  var traversableMaybe = {
      traverse: function (dictApplicative) {
          return function (v) {
              return function (v1) {
                  if (v1 instanceof Data_Maybe.Nothing) {
                      return Control_Applicative.pure(dictApplicative)(Data_Maybe.Nothing.value);
                  };
                  if (v1 instanceof Data_Maybe.Just) {
                      return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Maybe.Just.create)(v(v1.value0));
                  };
                  throw new Error("Failed pattern match at Data.Traversable (line 115, column 1 - line 119, column 33): " + [ v.constructor.name, v1.constructor.name ]);
              };
          };
      },
      sequence: function (dictApplicative) {
          return function (v) {
              if (v instanceof Data_Maybe.Nothing) {
                  return Control_Applicative.pure(dictApplicative)(Data_Maybe.Nothing.value);
              };
              if (v instanceof Data_Maybe.Just) {
                  return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Maybe.Just.create)(v.value0);
              };
              throw new Error("Failed pattern match at Data.Traversable (line 115, column 1 - line 119, column 33): " + [ v.constructor.name ]);
          };
      },
      Functor0: function () {
          return Data_Maybe.functorMaybe;
      },
      Foldable1: function () {
          return Data_Foldable.foldableMaybe;
      }
  };
  var sequenceDefault = function (dictTraversable) {
      return function (dictApplicative) {
          return traverse(dictTraversable)(dictApplicative)(Control_Category.identity(Control_Category.categoryFn));
      };
  };
  var traversableArray = {
      traverse: function (dictApplicative) {
          return $foreign.traverseArrayImpl(Control_Apply.apply(dictApplicative.Apply0()))(Data_Functor.map((dictApplicative.Apply0()).Functor0()))(Control_Applicative.pure(dictApplicative));
      },
      sequence: function (dictApplicative) {
          return sequenceDefault(traversableArray)(dictApplicative);
      },
      Functor0: function () {
          return Data_Functor.functorArray;
      },
      Foldable1: function () {
          return Data_Foldable.foldableArray;
      }
  };
  var sequence = function (dict) {
      return dict.sequence;
  };
  var $$for = function (dictApplicative) {
      return function (dictTraversable) {
          return function (x) {
              return function (f) {
                  return traverse(dictTraversable)(dictApplicative)(f)(x);
              };
          };
      };
  };
  exports["traverse"] = traverse;
  exports["sequence"] = sequence;
  exports["for"] = $$for;
  exports["traversableArray"] = traversableArray;
  exports["traversableMaybe"] = traversableMaybe;
  exports["traversableTuple"] = traversableTuple;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Data.TraversableWithIndex"] = $PS["Data.TraversableWithIndex"] || {};
  var exports = $PS["Data.TraversableWithIndex"];
  var traverseWithIndex = function (dict) {
      return dict.traverseWithIndex;
  };
  exports["traverseWithIndex"] = traverseWithIndex;
})(PS);
(function(exports) {
  "use strict";

  exports["new"] = function () {
    return {};
  };

  exports.poke = function (k) {
    return function (v) {
      return function (m) {
        return function () {
          m[k] = v;
          return m;
        };
      };
    };
  };
})(PS["Foreign.Object.ST"] = PS["Foreign.Object.ST"] || {});
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Foreign.Object.ST"] = $PS["Foreign.Object.ST"] || {};
  var exports = $PS["Foreign.Object.ST"];
  var $foreign = $PS["Foreign.Object.ST"];
  exports["new"] = $foreign["new"];
  exports["poke"] = $foreign.poke;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Foreign.Object"] = $PS["Foreign.Object"] || {};
  var exports = $PS["Foreign.Object"];
  var $foreign = $PS["Foreign.Object"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Category = $PS["Control.Category"];
  var Control_Monad_ST_Internal = $PS["Control.Monad.ST.Internal"];
  var Data_Array = $PS["Data.Array"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Function_Uncurried = $PS["Data.Function.Uncurried"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Traversable = $PS["Data.Traversable"];
  var Data_TraversableWithIndex = $PS["Data.TraversableWithIndex"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Foreign_Object_ST = $PS["Foreign.Object.ST"];        
  var values = $foreign.toArrayWithKey(function (v) {
      return function (v1) {
          return v1;
      };
  });
  var toUnfoldable = function (dictUnfoldable) {
      var $35 = Data_Array.toUnfoldable(dictUnfoldable);
      var $36 = $foreign.toArrayWithKey(Data_Tuple.Tuple.create);
      return function ($37) {
          return $35($36($37));
      };
  };                                                             
  var thawST = $foreign["_copyST"];
  var singleton = function (k) {
      return function (v) {
          return $foreign.runST(Control_Bind.bindFlipped(Control_Monad_ST_Internal.bindST)(Foreign_Object_ST.poke(k)(v))(Foreign_Object_ST["new"]));
      };
  };
  var mutate = function (f) {
      return function (m) {
          return $foreign.runST(function __do() {
              var s = thawST(m)();
              f(s)();
              return s;
          });
      };
  };                                                                                                    
  var mapWithKey = function (f) {
      return function (m) {
          return $foreign["_mapWithKey"](m, f);
      };
  };
  var lookup = Data_Function_Uncurried.runFn4($foreign["_lookup"])(Data_Maybe.Nothing.value)(Data_Maybe.Just.create);
  var insert = function (k) {
      return function (v) {
          return mutate(Foreign_Object_ST.poke(k)(v));
      };
  };
  var functorObject = {
      map: function (f) {
          return function (m) {
              return $foreign["_fmapObject"](m, f);
          };
      }
  };
  var functorWithIndexObject = {
      mapWithIndex: mapWithKey,
      Functor0: function () {
          return functorObject;
      }
  };
  var fromFoldable = function (dictFoldable) {
      return function (l) {
          return $foreign.runST(function __do() {
              var s = Foreign_Object_ST["new"]();
              Control_Monad_ST_Internal.foreach(Data_Array.fromFoldable(dictFoldable)(l))(function (v) {
                  return Data_Functor["void"](Control_Monad_ST_Internal.functorST)(Foreign_Object_ST.poke(v.value0)(v.value1)(s));
              })();
              return s;
          });
      };
  };
  var fold = $foreign["_foldM"](Data_Function.applyFlipped);
  var foldMap = function (dictMonoid) {
      return function (f) {
          return fold(function (acc) {
              return function (k) {
                  return function (v) {
                      return Data_Semigroup.append(dictMonoid.Semigroup0())(acc)(f(k)(v));
                  };
              };
          })(Data_Monoid.mempty(dictMonoid));
      };
  };
  var foldableObject = {
      foldl: function (f) {
          return fold(function (z) {
              return function (v) {
                  return f(z);
              };
          });
      },
      foldr: function (f) {
          return function (z) {
              return function (m) {
                  return Data_Foldable.foldr(Data_Foldable.foldableArray)(f)(z)(values(m));
              };
          };
      },
      foldMap: function (dictMonoid) {
          return function (f) {
              return foldMap(dictMonoid)(Data_Function["const"](f));
          };
      }
  };
  var foldableWithIndexObject = {
      foldlWithIndex: function (f) {
          return fold(Data_Function.flip(f));
      },
      foldrWithIndex: function (f) {
          return function (z) {
              return function (m) {
                  return Data_Foldable.foldr(Data_Foldable.foldableArray)(Data_Tuple.uncurry(f))(z)($foreign.toArrayWithKey(Data_Tuple.Tuple.create)(m));
              };
          };
      },
      foldMapWithIndex: function (dictMonoid) {
          return foldMap(dictMonoid);
      },
      Foldable0: function () {
          return foldableObject;
      }
  };
  var traversableWithIndexObject = {
      traverseWithIndex: function (dictApplicative) {
          return function (f) {
              return function (ms) {
                  return fold(function (acc) {
                      return function (k) {
                          return function (v) {
                              return Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Function.flip(insert(k)))(acc))(f(k)(v));
                          };
                      };
                  })(Control_Applicative.pure(dictApplicative)($foreign.empty))(ms);
              };
          };
      },
      FunctorWithIndex0: function () {
          return functorWithIndexObject;
      },
      FoldableWithIndex1: function () {
          return foldableWithIndexObject;
      },
      Traversable2: function () {
          return traversableObject;
      }
  };
  var traversableObject = {
      traverse: function (dictApplicative) {
          var $42 = Data_TraversableWithIndex.traverseWithIndex(traversableWithIndexObject)(dictApplicative);
          return function ($43) {
              return $42(Data_Function["const"]($43));
          };
      },
      sequence: function (dictApplicative) {
          return Data_Traversable.traverse(traversableObject)(dictApplicative)(Control_Category.identity(Control_Category.categoryFn));
      },
      Functor0: function () {
          return functorObject;
      },
      Foldable1: function () {
          return foldableObject;
      }
  };
  exports["singleton"] = singleton;
  exports["insert"] = insert;
  exports["lookup"] = lookup;
  exports["toUnfoldable"] = toUnfoldable;
  exports["fromFoldable"] = fromFoldable;
  exports["functorObject"] = functorObject;
  exports["traversableObject"] = traversableObject;
  exports["empty"] = $foreign.empty;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Data.Argonaut.Core"] = $PS["Data.Argonaut.Core"] || {};
  var exports = $PS["Data.Argonaut.Core"];
  var $foreign = $PS["Data.Argonaut.Core"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Ordering = $PS["Data.Ordering"];
  var Foreign_Object = $PS["Foreign.Object"];   
  var jsonEmptyObject = $foreign.fromObject(Foreign_Object.empty);   
  var ordJson = {
      compare: function (a) {
          return function (b) {
              return $foreign["_compare"](Data_Ordering.EQ.value, Data_Ordering.GT.value, Data_Ordering.LT.value, a, b);
          };
      },
      Eq0: function () {
          return eqJson;
      }
  };
  var eqJson = {
      eq: function (j1) {
          return function (j2) {
              return Data_Eq.eq(Data_Ordering.eqOrdering)(Data_Ord.compare(ordJson)(j1)(j2))(Data_Ordering.EQ.value);
          };
      }
  };
  exports["jsonEmptyObject"] = jsonEmptyObject;
  exports["eqJson"] = eqJson;
  exports["fromBoolean"] = $foreign.fromBoolean;
  exports["fromString"] = $foreign.fromString;
  exports["fromArray"] = $foreign.fromArray;
  exports["fromObject"] = $foreign.fromObject;
  exports["jsonNull"] = $foreign.jsonNull;
  exports["stringify"] = $foreign.stringify;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Data.Argonaut.Decode.Error"] = $PS["Data.Argonaut.Decode.Error"] || {};
  var exports = $PS["Data.Argonaut.Decode.Error"];
  var Data_Argonaut_Core = $PS["Data.Argonaut.Core"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Show = $PS["Data.Show"];                
  var TypeMismatch = (function () {
      function TypeMismatch(value0) {
          this.value0 = value0;
      };
      TypeMismatch.create = function (value0) {
          return new TypeMismatch(value0);
      };
      return TypeMismatch;
  })();
  var UnexpectedValue = (function () {
      function UnexpectedValue(value0) {
          this.value0 = value0;
      };
      UnexpectedValue.create = function (value0) {
          return new UnexpectedValue(value0);
      };
      return UnexpectedValue;
  })();
  var AtIndex = (function () {
      function AtIndex(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      AtIndex.create = function (value0) {
          return function (value1) {
              return new AtIndex(value0, value1);
          };
      };
      return AtIndex;
  })();
  var AtKey = (function () {
      function AtKey(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      AtKey.create = function (value0) {
          return function (value1) {
              return new AtKey(value0, value1);
          };
      };
      return AtKey;
  })();
  var Named = (function () {
      function Named(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Named.create = function (value0) {
          return function (value1) {
              return new Named(value0, value1);
          };
      };
      return Named;
  })();
  var MissingValue = (function () {
      function MissingValue() {

      };
      MissingValue.value = new MissingValue();
      return MissingValue;
  })();
  var showJsonDecodeError = {
      show: function (v) {
          if (v instanceof TypeMismatch) {
              return "(TypeMismatch " + (Data_Show.show(Data_Show.showString)(v.value0) + ")");
          };
          if (v instanceof UnexpectedValue) {
              return "(UnexpectedValue " + (Data_Argonaut_Core.stringify(v.value0) + ")");
          };
          if (v instanceof AtIndex) {
              return "(AtIndex " + (Data_Show.show(Data_Show.showInt)(v.value0) + (" " + (Data_Show.show(showJsonDecodeError)(v.value1) + ")")));
          };
          if (v instanceof AtKey) {
              return "(AtKey " + (Data_Show.show(Data_Show.showString)(v.value0) + (" " + (Data_Show.show(showJsonDecodeError)(v.value1) + ")")));
          };
          if (v instanceof Named) {
              return "(Named " + (Data_Show.show(Data_Show.showString)(v.value0) + (" " + (Data_Show.show(showJsonDecodeError)(v.value1) + ")")));
          };
          if (v instanceof MissingValue) {
              return "MissingValue";
          };
          throw new Error("Failed pattern match at Data.Argonaut.Decode.Error (line 24, column 10 - line 30, column 35): " + [ v.constructor.name ]);
      }
  };
  var eqJsonDecodeError = {
      eq: function (x) {
          return function (y) {
              if (x instanceof TypeMismatch && y instanceof TypeMismatch) {
                  return x.value0 === y.value0;
              };
              if (x instanceof UnexpectedValue && y instanceof UnexpectedValue) {
                  return Data_Eq.eq(Data_Argonaut_Core.eqJson)(x.value0)(y.value0);
              };
              if (x instanceof AtIndex && y instanceof AtIndex) {
                  return x.value0 === y.value0 && Data_Eq.eq(eqJsonDecodeError)(x.value1)(y.value1);
              };
              if (x instanceof AtKey && y instanceof AtKey) {
                  return x.value0 === y.value0 && Data_Eq.eq(eqJsonDecodeError)(x.value1)(y.value1);
              };
              if (x instanceof Named && y instanceof Named) {
                  return x.value0 === y.value0 && Data_Eq.eq(eqJsonDecodeError)(x.value1)(y.value1);
              };
              if (x instanceof MissingValue && y instanceof MissingValue) {
                  return true;
              };
              return false;
          };
      }
  };
  exports["TypeMismatch"] = TypeMismatch;
  exports["UnexpectedValue"] = UnexpectedValue;
  exports["AtKey"] = AtKey;
  exports["MissingValue"] = MissingValue;
  exports["eqJsonDecodeError"] = eqJsonDecodeError;
  exports["showJsonDecodeError"] = showJsonDecodeError;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Data.Argonaut.Encode.Encoders"] = $PS["Data.Argonaut.Encode.Encoders"] || {};
  var exports = $PS["Data.Argonaut.Encode.Encoders"];
  var Data_Argonaut_Core = $PS["Data.Argonaut.Core"];
  var encodeString = Data_Argonaut_Core.fromString;
  var encodeBoolean = Data_Argonaut_Core.fromBoolean;
  exports["encodeBoolean"] = encodeBoolean;
  exports["encodeString"] = encodeString;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Data.Bifunctor"] = $PS["Data.Bifunctor"] || {};
  var exports = $PS["Data.Bifunctor"];
  var Control_Category = $PS["Control.Category"];
  var Data_Either = $PS["Data.Either"];
  var Data_Tuple = $PS["Data.Tuple"];                
  var bimap = function (dict) {
      return dict.bimap;
  };
  var lmap = function (dictBifunctor) {
      return function (f) {
          return bimap(dictBifunctor)(f)(Control_Category.identity(Control_Category.categoryFn));
      };
  };
  var bifunctorTuple = {
      bimap: function (f) {
          return function (g) {
              return function (v) {
                  return new Data_Tuple.Tuple(f(v.value0), g(v.value1));
              };
          };
      }
  };
  var bifunctorEither = {
      bimap: function (v) {
          return function (v1) {
              return function (v2) {
                  if (v2 instanceof Data_Either.Left) {
                      return new Data_Either.Left(v(v2.value0));
                  };
                  if (v2 instanceof Data_Either.Right) {
                      return new Data_Either.Right(v1(v2.value0));
                  };
                  throw new Error("Failed pattern match at Data.Bifunctor (line 32, column 1 - line 34, column 36): " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
              };
          };
      }
  };
  exports["bimap"] = bimap;
  exports["lmap"] = lmap;
  exports["bifunctorEither"] = bifunctorEither;
  exports["bifunctorTuple"] = bifunctorTuple;
})(PS);
(function(exports) {
  
  var bigInt =require("big-integer"); 

  exports.fromBaseImpl = function(just) {
    return function(nothing) {
      return function(b) {
        return function(s) {
          try {
            var x = bigInt(s, b);
            return just(x);
          } catch (err) {
            return nothing;
          }
        };
      };
    };
  };

  function truncate(n) {
    if (n > 0) return Math.floor(n);
    return Math.ceil(n);
  }

  exports.fromNumberImpl = function(just) {
    return function(nothing) {
        return function(n) {
          try {
            var x = bigInt(truncate(n));
            return just(x);
          } catch (err) {
            return nothing;
          }
        };
    };
  };

  exports.fromInt = function(n) {
    return bigInt(n);
  };

  exports.toBase = function(base) {
    return function (x) {
      return x.toString(base);
    };
  };

  exports.toNumber = function(x) {
    return x.toJSNumber();
  };

  exports.biAdd = function(x) {
    return function(y) {
      return x.add(y);
    };
  };

  exports.biMul = function(x) {
    return function(y) {
      return x.multiply(y);
    };
  };

  exports.biSub = function(x) {
    return function(y) {
      return x.minus(y);
    };
  };

  exports.biMod = function(x) {
    return function(y) {
      return x.mod(y);
    };
  };

  exports.biDiv = function(x) {
    return function(y) {
      return x.divide(y);
    };
  };

  exports.biEquals = function(x) {
    return function(y) {
      return x.equals(y);
    };
  };

  exports.biCompare = function(x) {
    return function(y) {
      return x.compare(y);
    };
  };

  exports.abs = function(x) {
    return x.abs();
  };
})(PS["Data.BigInt"] = PS["Data.BigInt"] || {});
(function(exports) {
  "use strict";

  exports.intDegree = function (x) {
    return Math.min(Math.abs(x), 2147483647);
  };

  // See the Euclidean definition in
  // https://en.m.wikipedia.org/wiki/Modulo_operation.
  exports.intDiv = function (x) {
    return function (y) {
      if (y === 0) return 0;
      return y > 0 ? Math.floor(x / y) : -Math.floor(x / -y);
    };
  };

  exports.intMod = function (x) {
    return function (y) {
      if (y === 0) return 0;
      var yy = Math.abs(y);
      return ((x % yy) + yy) % yy;
    };
  };
})(PS["Data.EuclideanRing"] = PS["Data.EuclideanRing"] || {});
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Data.CommutativeRing"] = $PS["Data.CommutativeRing"] || {};
  var exports = $PS["Data.CommutativeRing"];
  var Data_Ring = $PS["Data.Ring"];
  var commutativeRingInt = {
      Ring0: function () {
          return Data_Ring.ringInt;
      }
  };
  exports["commutativeRingInt"] = commutativeRingInt;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Data.EuclideanRing"] = $PS["Data.EuclideanRing"] || {};
  var exports = $PS["Data.EuclideanRing"];
  var $foreign = $PS["Data.EuclideanRing"];
  var Data_CommutativeRing = $PS["Data.CommutativeRing"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Semiring = $PS["Data.Semiring"];                
  var mod = function (dict) {
      return dict.mod;
  };
  var gcd = function ($copy_dictEq) {
      return function ($copy_dictEuclideanRing) {
          return function ($copy_a) {
              return function ($copy_b) {
                  var $tco_var_dictEq = $copy_dictEq;
                  var $tco_var_dictEuclideanRing = $copy_dictEuclideanRing;
                  var $tco_var_a = $copy_a;
                  var $tco_done = false;
                  var $tco_result;
                  function $tco_loop(dictEq, dictEuclideanRing, a, b) {
                      var $8 = Data_Eq.eq(dictEq)(b)(Data_Semiring.zero(((dictEuclideanRing.CommutativeRing0()).Ring0()).Semiring0()));
                      if ($8) {
                          $tco_done = true;
                          return a;
                      };
                      $tco_var_dictEq = dictEq;
                      $tco_var_dictEuclideanRing = dictEuclideanRing;
                      $tco_var_a = b;
                      $copy_b = mod(dictEuclideanRing)(a)(b);
                      return;
                  };
                  while (!$tco_done) {
                      $tco_result = $tco_loop($tco_var_dictEq, $tco_var_dictEuclideanRing, $tco_var_a, $copy_b);
                  };
                  return $tco_result;
              };
          };
      };
  };
  var euclideanRingInt = {
      degree: $foreign.intDegree,
      div: $foreign.intDiv,
      mod: $foreign.intMod,
      CommutativeRing0: function () {
          return Data_CommutativeRing.commutativeRingInt;
      }
  };
  var div = function (dict) {
      return dict.div;
  };
  exports["div"] = div;
  exports["mod"] = mod;
  exports["gcd"] = gcd;
  exports["euclideanRingInt"] = euclideanRingInt;
})(PS);
(function(exports) {
  "use strict";

  exports.fromNumberImpl = function (just) {
    return function (nothing) {
      return function (n) {
        /* jshint bitwise: false */
        return (n | 0) === n ? just(n) : nothing;
      };
    };
  };

  exports.toNumber = function (n) {
    return n;
  };

  exports.fromStringAsImpl = function (just) {
    return function (nothing) {
      return function (radix) {
        var digits;
        if (radix < 11) {
          digits = "[0-" + (radix - 1).toString() + "]";
        } else if (radix === 11) {
          digits = "[0-9a]";
        } else {
          digits = "[0-9a-" + String.fromCharCode(86 + radix) + "]";
        }
        var pattern = new RegExp("^[\\+\\-]?" + digits + "+$", "i");

        return function (s) {
          /* jshint bitwise: false */
          if (pattern.test(s)) {
            var i = parseInt(s, radix);
            return (i | 0) === i ? just(i) : nothing;
          } else {
            return nothing;
          }
        };
      };
    };
  };

  exports.toStringAs = function (radix) {
    return function (i) {
      return i.toString(radix);
    };
  };
})(PS["Data.Int"] = PS["Data.Int"] || {});
(function(exports) {
  "use strict";

  exports.topInt = 2147483647;
  exports.bottomInt = -2147483648;

  exports.topChar = String.fromCharCode(65535);
  exports.bottomChar = String.fromCharCode(0);
})(PS["Data.Bounded"] = PS["Data.Bounded"] || {});
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Data.Bounded"] = $PS["Data.Bounded"] || {};
  var exports = $PS["Data.Bounded"];
  var $foreign = $PS["Data.Bounded"];
  var Data_Ord = $PS["Data.Ord"];
  var top = function (dict) {
      return dict.top;
  };
  var boundedInt = {
      top: $foreign.topInt,
      bottom: $foreign.bottomInt,
      Ord0: function () {
          return Data_Ord.ordInt;
      }
  };
  var boundedChar = {
      top: $foreign.topChar,
      bottom: $foreign.bottomChar,
      Ord0: function () {
          return Data_Ord.ordChar;
      }
  };
  var bottom = function (dict) {
      return dict.bottom;
  };
  exports["bottom"] = bottom;
  exports["top"] = top;
  exports["boundedInt"] = boundedInt;
  exports["boundedChar"] = boundedChar;
})(PS);
(function(exports) {
  /* globals exports */
  "use strict";     

  exports.isNaN = isNaN;

  exports.infinity = Infinity;

  exports.isFinite = isFinite;
})(PS["Data.Number"] = PS["Data.Number"] || {});
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Data.Number"] = $PS["Data.Number"] || {};
  var exports = $PS["Data.Number"];
  var $foreign = $PS["Data.Number"];
  exports["isNaN"] = $foreign["isNaN"];
  exports["infinity"] = $foreign.infinity;
  exports["isFinite"] = $foreign["isFinite"];
})(PS);
(function(exports) {
  "use strict";

  exports.ceil = Math.ceil;

  exports.floor = Math.floor;                          

  exports.trunc = Math.trunc || function (n) {
    return n < 0 ? Math.ceil(n) : Math.floor(n);
  };

  exports.remainder = function (n) {
    return function (m) {
      return n % m;
    };
  };
})(PS["Math"] = PS["Math"] || {});
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Math"] = $PS["Math"] || {};
  var exports = $PS["Math"];
  var $foreign = $PS["Math"];
  exports["ceil"] = $foreign.ceil;
  exports["floor"] = $foreign.floor;
  exports["trunc"] = $foreign.trunc;
  exports["remainder"] = $foreign.remainder;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Data.Int"] = $PS["Data.Int"] || {};
  var exports = $PS["Data.Int"];
  var $foreign = $PS["Data.Int"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Bounded = $PS["Data.Bounded"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Number = $PS["Data.Number"];
  var $$Math = $PS["Math"];
  var fromStringAs = $foreign.fromStringAsImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  var fromString = fromStringAs(10);
  var fromNumber = $foreign.fromNumberImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  var unsafeClamp = function (x) {
      if (!Data_Number["isFinite"](x)) {
          return 0;
      };
      if (x >= $foreign.toNumber(Data_Bounded.top(Data_Bounded.boundedInt))) {
          return Data_Bounded.top(Data_Bounded.boundedInt);
      };
      if (x <= $foreign.toNumber(Data_Bounded.bottom(Data_Bounded.boundedInt))) {
          return Data_Bounded.bottom(Data_Bounded.boundedInt);
      };
      if (Data_Boolean.otherwise) {
          return Data_Maybe.fromMaybe(0)(fromNumber(x));
      };
      throw new Error("Failed pattern match at Data.Int (line 66, column 1 - line 66, column 29): " + [ x.constructor.name ]);
  };
  var floor = function ($24) {
      return unsafeClamp($$Math.floor($24));
  };
  var decimal = 10;
  var ceil = function ($25) {
      return unsafeClamp($$Math.ceil($25));
  };
  exports["fromNumber"] = fromNumber;
  exports["ceil"] = ceil;
  exports["floor"] = floor;
  exports["fromString"] = fromString;
  exports["decimal"] = decimal;
  exports["toNumber"] = $foreign.toNumber;
  exports["toStringAs"] = $foreign.toStringAs;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Data.BigInt"] = $PS["Data.BigInt"] || {};
  var exports = $PS["Data.BigInt"];
  var $foreign = $PS["Data.BigInt"];
  var Data_EuclideanRing = $PS["Data.EuclideanRing"];
  var Data_Int = $PS["Data.Int"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ordering = $PS["Data.Ordering"];
  var Data_Ring = $PS["Data.Ring"];
  var Data_Semiring = $PS["Data.Semiring"];                                                
  var toString = $foreign.toBase(10);
  var toInt = function ($3) {
      return Data_Int.fromNumber($foreign.toNumber($3));
  };                                      
  var showBigInt = {
      show: function (x) {
          return "fromString \"" + (toString(x) + "\"");
      }
  };
  var semiringBigInt = {
      add: $foreign.biAdd,
      zero: $foreign.fromInt(0),
      mul: $foreign.biMul,
      one: $foreign.fromInt(1)
  };
  var ringBigInt = {
      sub: $foreign.biSub,
      Semiring0: function () {
          return semiringBigInt;
      }
  };                        
  var fromNumber = $foreign.fromNumberImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  var fromBase = $foreign.fromBaseImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  var fromString = fromBase(10);
  var eqBigInt = {
      eq: $foreign.biEquals
  };
  var ordBigInt = {
      compare: function (x) {
          return function (y) {
              var v = $foreign.biCompare(x)(y);
              if (v === 1) {
                  return Data_Ordering.GT.value;
              };
              if (v === 0) {
                  return Data_Ordering.EQ.value;
              };
              return Data_Ordering.LT.value;
          };
      },
      Eq0: function () {
          return eqBigInt;
      }
  };
  var commutativeRingBigInt = {
      Ring0: function () {
          return ringBigInt;
      }
  };
  var euclideanRingBigInt = {
      div: function (x) {
          return function (y) {
              return $foreign.biDiv(Data_Ring.sub(ringBigInt)(x)(Data_EuclideanRing.mod(euclideanRingBigInt)(x)(y)))(y);
          };
      },
      mod: function (x) {
          return function (y) {
              var yy = $foreign.abs(y);
              return $foreign.biMod(Data_Semiring.add(semiringBigInt)($foreign.biMod(x)(yy))(yy))(yy);
          };
      },
      degree: function ($4) {
          return Data_Int.floor($foreign.toNumber($foreign.abs($4)));
      },
      CommutativeRing0: function () {
          return commutativeRingBigInt;
      }
  };
  exports["fromString"] = fromString;
  exports["fromNumber"] = fromNumber;
  exports["toString"] = toString;
  exports["toInt"] = toInt;
  exports["eqBigInt"] = eqBigInt;
  exports["ordBigInt"] = ordBigInt;
  exports["showBigInt"] = showBigInt;
  exports["semiringBigInt"] = semiringBigInt;
  exports["ringBigInt"] = ringBigInt;
  exports["euclideanRingBigInt"] = euclideanRingBigInt;
  exports["fromInt"] = $foreign.fromInt;
  exports["abs"] = $foreign.abs;
  exports["toNumber"] = $foreign.toNumber;
})(PS);
(function(exports) {
  "use strict";
  var BigNumber =require("bignumber.js"); 

  exports.parseBigNumberImpl = function parseBigNumberImpl (Left,Right,s) {
      var x;
      try {
          x = new BigNumber(s);
      } catch (e) {
          return Left(e);
      }
      return Right(x);
  };

  exports.isInteger = function isInteger (x) {
      return x.isInteger();
  };

  exports.toNumber = function toNumber (x) {
      return x.toNumber();
  };

  exports.toString = function toString (x) {
      return x.toString();
  };

  exports.toFixed = function toFixed (x) {
      return x.toFixed();
  };

  exports.toFractionImpl = function (tuple) {
      return function toFractionImpl (x, maximum_denominator) {
          var fraction = x.toFraction(maximum_denominator);
          return tuple(fraction[0])(fraction[1]);
      };
  };

  exports.fromNumber = function fromNumber(x) {
      return new BigNumber(x);
  };
})(PS["Data.BigNumber"] = PS["Data.BigNumber"] || {});
(function(exports) {
  "use strict";

  exports.from = function (val) {
      return val >>> 0;
  };

  exports.exact = function (just) {
      return function (nothing) {
          return function (conv) {
              return function (val) {
                  var cval = conv(val);
                  if (cval == val) {
                      return just(cval);
                  }
                  return nothing;
              };
          };
      };
  };

  exports.toInt = function (uval) {
      return uval | 0;
  };

  exports.toNumber = function (uval) {
      return uval;
  };

  exports.uintAdd = function (x) {
      return function (y) {
          return (x + y) >>> 0;
      };
  };

  exports.uintMul = function (x) {
      return function (y) {
          return Math.imul(x, y) >>> 0;
      };
  };

  exports.uintEq = function (x) {
      return function (y) {
          return x == y;
      };
  };

  exports.uintCmp = function (lt) {
      return function (eq) {
          return function (gt) {
              return function (x) {
                  return function (y) {
                      if (x < y) return lt;
                      if (x === y) return eq;
                      return gt;
                  };
              };
          };
      };
  };

  exports.toString = function (x) {
      return x.toString();
  };

  exports.and = function (n1) {
      return function (n2) {
          return (n1 & n2) >>> 0;
      };
  };

  exports.or = function (n1) {
      return function (n2) {
          return (n1 | n2) >>> 0;
      };
  };

  exports.shl = function (n1) {
      return function (n2) {
          return (n1 << n2) >>> 0;
      };
  };

  exports.zshr = function (n1) {
      return function (n2) {
          return (n1 >>> n2) >>> 0;
      };
  };
})(PS["Data.UInt"] = PS["Data.UInt"] || {});
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Data.UInt"] = $PS["Data.UInt"] || {};
  var exports = $PS["Data.UInt"];
  var $foreign = $PS["Data.UInt"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ordering = $PS["Data.Ordering"];
  var uintShowInstance = {
      show: function (u) {
          return $foreign.toString(u) + "u";
      }
  };
  var uintEqInstance = {
      eq: $foreign.uintEq
  };
  var uintOrd = {
      compare: $foreign.uintCmp(Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value),
      Eq0: function () {
          return uintEqInstance;
      }
  };                                                                                                 
  var fromNumber = $foreign.from;
  var fromNumber$prime = $foreign.exact(Data_Maybe.Just.create)(Data_Maybe.Nothing.value)(fromNumber);
  var fromInt = $foreign.from;
  var uintSemiring = {
      zero: fromInt(0),
      add: $foreign.uintAdd,
      one: fromInt(1),
      mul: $foreign.uintMul
  };
  exports["fromInt"] = fromInt;
  exports["fromNumber'"] = fromNumber$prime;
  exports["uintSemiring"] = uintSemiring;
  exports["uintEqInstance"] = uintEqInstance;
  exports["uintOrd"] = uintOrd;
  exports["uintShowInstance"] = uintShowInstance;
  exports["toInt"] = $foreign.toInt;
  exports["toNumber"] = $foreign.toNumber;
  exports["and"] = $foreign.and;
  exports["or"] = $foreign.or;
  exports["shl"] = $foreign.shl;
  exports["zshr"] = $foreign.zshr;
  exports["toString"] = $foreign.toString;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Data.BigNumber"] = $PS["Data.BigNumber"] || {};
  var exports = $PS["Data.BigNumber"];
  var $foreign = $PS["Data.BigNumber"];
  var Data_Either = $PS["Data.Either"];
  var Data_Function_Uncurried = $PS["Data.Function.Uncurried"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_UInt = $PS["Data.UInt"];                
  var toFraction = function (a) {
      return function (b) {
          return $foreign.toFractionImpl(Data_Tuple.Tuple.create)(a, b);
      };
  };                                                                  
  var parseBigNumber = Data_Function_Uncurried.runFn3($foreign.parseBigNumberImpl)(Data_Either.Left.create)(Data_Either.Right.create);
  var fromUInt = function ($14) {
      return $foreign.fromNumber(Data_UInt.toNumber($14));
  };
  exports["parseBigNumber"] = parseBigNumber;
  exports["toFraction"] = toFraction;
  exports["fromUInt"] = fromUInt;
  exports["isInteger"] = $foreign.isInteger;
  exports["toNumber"] = $foreign.toNumber;
  exports["toString"] = $foreign.toString;
  exports["toFixed"] = $foreign.toFixed;
  exports["fromNumber"] = $foreign.fromNumber;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Data.Typelevel.Undefined"] = $PS["Data.Typelevel.Undefined"] || {};
  var exports = $PS["Data.Typelevel.Undefined"];
  var Data_Unit = $PS["Data.Unit"];                
  var $$undefined = Data_Unit.unit;
  exports["undefined"] = $$undefined;
})(PS);
(function(exports) {
  "use strict";

  exports.unsafeUnionFn = function(r1, r2) {
    var copy = {};
    for (var k1 in r2) {
      if ({}.hasOwnProperty.call(r2, k1)) {
        copy[k1] = r2[k1];
      }
    }
    for (var k2 in r1) {
      if ({}.hasOwnProperty.call(r1, k2)) {
        copy[k2] = r1[k2];
      }
    }
    return copy;
  };
})(PS["Record.Unsafe.Union"] = PS["Record.Unsafe.Union"] || {});
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Record.Unsafe.Union"] = $PS["Record.Unsafe.Union"] || {};
  var exports = $PS["Record.Unsafe.Union"];
  var $foreign = $PS["Record.Unsafe.Union"];
  exports["unsafeUnionFn"] = $foreign.unsafeUnionFn;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Record"] = $PS["Record"] || {};
  var exports = $PS["Record"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Record_Unsafe = $PS["Record.Unsafe"];
  var Record_Unsafe_Union = $PS["Record.Unsafe.Union"];
  var set = function (dictIsSymbol) {
      return function () {
          return function () {
              return function (l) {
                  return function (b) {
                      return function (r) {
                          return Record_Unsafe.unsafeSet(Data_Symbol.reflectSymbol(dictIsSymbol)(l))(b)(r);
                      };
                  };
              };
          };
      };
  };
  var merge = function () {
      return function () {
          return function (l) {
              return function (r) {
                  return Record_Unsafe_Union.unsafeUnionFn(l, r);
              };
          };
      };
  };
  var insert = function (dictIsSymbol) {
      return function () {
          return function () {
              return function (l) {
                  return function (a) {
                      return function (r) {
                          return Record_Unsafe.unsafeSet(Data_Symbol.reflectSymbol(dictIsSymbol)(l))(a)(r);
                      };
                  };
              };
          };
      };
  };
  var get = function (dictIsSymbol) {
      return function () {
          return function (l) {
              return function (r) {
                  return Record_Unsafe.unsafeGet(Data_Symbol.reflectSymbol(dictIsSymbol)(l))(r);
              };
          };
      };
  };
  exports["get"] = get;
  exports["set"] = set;
  exports["insert"] = insert;
  exports["merge"] = merge;
})(PS);
(function(exports) {
  "use strict";

  exports.typeOf = function (value) {
    return typeof value;
  };

  exports.tagOf = function (value) {
    return Object.prototype.toString.call(value).slice(8, -1);
  };
})(PS["Foreign"] = PS["Foreign"] || {});
(function(exports) {
  "use strict";

  exports.pureE = function (a) {
    return function () {
      return a;
    };
  };

  exports.bindE = function (a) {
    return function (f) {
      return function () {
        return f(a())();
      };
    };
  };
})(PS["Effect"] = PS["Effect"] || {});
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Effect"] = $PS["Effect"] || {};
  var exports = $PS["Effect"];
  var $foreign = $PS["Effect"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Monad = $PS["Control.Monad"];                  
  var monadEffect = {
      Applicative0: function () {
          return applicativeEffect;
      },
      Bind1: function () {
          return bindEffect;
      }
  };
  var bindEffect = {
      bind: $foreign.bindE,
      Apply0: function () {
          return applyEffect;
      }
  };
  var applyEffect = {
      apply: Control_Monad.ap(monadEffect),
      Functor0: function () {
          return functorEffect;
      }
  };
  var applicativeEffect = {
      pure: $foreign.pureE,
      Apply0: function () {
          return applyEffect;
      }
  };
  var functorEffect = {
      map: Control_Applicative.liftA1(applicativeEffect)
  };
  exports["functorEffect"] = functorEffect;
  exports["applyEffect"] = applyEffect;
  exports["applicativeEffect"] = applicativeEffect;
  exports["bindEffect"] = bindEffect;
  exports["monadEffect"] = monadEffect;
})(PS);
(function(exports) {
  "use strict";

  exports.showErrorImpl = function (err) {
    return err.stack || err.toString();
  };

  exports.error = function (msg) {
    return new Error(msg);
  };

  exports.message = function (e) {
    return e.message;
  };

  exports.throwException = function (e) {
    return function () {
      throw e;
    };
  };

  exports.catchException = function (c) {
    return function (t) {
      return function () {
        try {
          return t();
        } catch (e) {
          if (e instanceof Error || Object.prototype.toString.call(e) === "[object Error]") {
            return c(e)();
          } else {
            return c(new Error(e.toString()))();
          }
        }
      };
    };
  };
})(PS["Effect.Exception"] = PS["Effect.Exception"] || {});
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Effect.Exception"] = $PS["Effect.Exception"] || {};
  var exports = $PS["Effect.Exception"];
  var $foreign = $PS["Effect.Exception"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Data_Either = $PS["Data.Either"];
  var Data_Functor = $PS["Data.Functor"];
  var Effect = $PS["Effect"];                
  var $$try = function (action) {
      return $foreign.catchException((function () {
          var $0 = Control_Applicative.pure(Effect.applicativeEffect);
          return function ($1) {
              return $0(Data_Either.Left.create($1));
          };
      })())(Data_Functor.map(Effect.functorEffect)(Data_Either.Right.create)(action));
  };
  var $$throw = function ($2) {
      return $foreign.throwException($foreign.error($2));
  };                                                                               
  var showError = {
      show: $foreign.showErrorImpl
  };
  exports["throw"] = $$throw;
  exports["try"] = $$try;
  exports["showError"] = showError;
  exports["error"] = $foreign.error;
  exports["message"] = $foreign.message;
  exports["throwException"] = $foreign.throwException;
  exports["catchException"] = $foreign.catchException;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Control.Monad.Error.Class"] = $PS["Control.Monad.Error.Class"] || {};
  var exports = $PS["Control.Monad.Error.Class"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Data_Either = $PS["Data.Either"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Effect = $PS["Effect"];
  var Effect_Exception = $PS["Effect.Exception"];                
  var throwError = function (dict) {
      return dict.throwError;
  };
  var monadThrowEither = {
      throwError: Data_Either.Left.create,
      Monad0: function () {
          return Data_Either.monadEither;
      }
  };
  var monadThrowEffect = {
      throwError: Effect_Exception.throwException,
      Monad0: function () {
          return Effect.monadEffect;
      }
  };
  var monadErrorEither = {
      catchError: function (v) {
          return function (v1) {
              if (v instanceof Data_Either.Left) {
                  return v1(v.value0);
              };
              if (v instanceof Data_Either.Right) {
                  return new Data_Either.Right(v.value0);
              };
              throw new Error("Failed pattern match at Control.Monad.Error.Class (line 72, column 1 - line 74, column 35): " + [ v.constructor.name, v1.constructor.name ]);
          };
      },
      MonadThrow0: function () {
          return monadThrowEither;
      }
  };
  var monadErrorEffect = {
      catchError: Data_Function.flip(Effect_Exception.catchException),
      MonadThrow0: function () {
          return monadThrowEffect;
      }
  };
  var liftMaybe = function (dictMonadThrow) {
      return function (error) {
          return Data_Maybe.maybe(throwError(dictMonadThrow)(error))(Control_Applicative.pure((dictMonadThrow.Monad0()).Applicative0()));
      };
  };
  var liftEither = function (dictMonadThrow) {
      return Data_Either.either(throwError(dictMonadThrow))(Control_Applicative.pure((dictMonadThrow.Monad0()).Applicative0()));
  };
  var catchError = function (dict) {
      return dict.catchError;
  };
  var $$try = function (dictMonadError) {
      return function (a) {
          return catchError(dictMonadError)(Data_Functor.map(((((dictMonadError.MonadThrow0()).Monad0()).Bind1()).Apply0()).Functor0())(Data_Either.Right.create)(a))((function () {
              var $21 = Control_Applicative.pure(((dictMonadError.MonadThrow0()).Monad0()).Applicative0());
              return function ($22) {
                  return $21(Data_Either.Left.create($22));
              };
          })());
      };
  };
  exports["catchError"] = catchError;
  exports["throwError"] = throwError;
  exports["try"] = $$try;
  exports["liftMaybe"] = liftMaybe;
  exports["liftEither"] = liftEither;
  exports["monadThrowEither"] = monadThrowEither;
  exports["monadErrorEither"] = monadErrorEither;
  exports["monadThrowEffect"] = monadThrowEffect;
  exports["monadErrorEffect"] = monadErrorEffect;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Control.Monad.Reader.Class"] = $PS["Control.Monad.Reader.Class"] || {};
  var exports = $PS["Control.Monad.Reader.Class"];
  var Data_Functor = $PS["Data.Functor"];
  var ask = function (dict) {
      return dict.ask;
  };
  var asks = function (dictMonadAsk) {
      return function (f) {
          return Data_Functor.map((((dictMonadAsk.Monad0()).Bind1()).Apply0()).Functor0())(f)(ask(dictMonadAsk));
      };
  };
  exports["ask"] = ask;
  exports["asks"] = asks;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Control.Monad.State.Class"] = $PS["Control.Monad.State.Class"] || {};
  var exports = $PS["Control.Monad.State.Class"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unit = $PS["Data.Unit"];                
  var state = function (dict) {
      return dict.state;
  };
  var put = function (dictMonadState) {
      return function (s) {
          return state(dictMonadState)(function (v) {
              return new Data_Tuple.Tuple(Data_Unit.unit, s);
          });
      };
  };
  var modify_ = function (dictMonadState) {
      return function (f) {
          return state(dictMonadState)(function (s) {
              return new Data_Tuple.Tuple(Data_Unit.unit, f(s));
          });
      };
  };
  var modify = function (dictMonadState) {
      return function (f) {
          return state(dictMonadState)(function (s) {
              var s$prime = f(s);
              return new Data_Tuple.Tuple(s$prime, s$prime);
          });
      };
  };
  var gets = function (dictMonadState) {
      return function (f) {
          return state(dictMonadState)(function (s) {
              return new Data_Tuple.Tuple(f(s), s);
          });
      };
  };
  var get = function (dictMonadState) {
      return state(dictMonadState)(function (s) {
          return new Data_Tuple.Tuple(s, s);
      });
  };
  exports["state"] = state;
  exports["get"] = get;
  exports["gets"] = gets;
  exports["put"] = put;
  exports["modify"] = modify;
  exports["modify_"] = modify_;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Control.Monad.Trans.Class"] = $PS["Control.Monad.Trans.Class"] || {};
  var exports = $PS["Control.Monad.Trans.Class"];
  var lift = function (dict) {
      return dict.lift;
  };
  exports["lift"] = lift;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Effect.Class"] = $PS["Effect.Class"] || {};
  var exports = $PS["Effect.Class"];
  var Control_Category = $PS["Control.Category"];
  var Effect = $PS["Effect"];                
  var monadEffectEffect = {
      liftEffect: Control_Category.identity(Control_Category.categoryFn),
      Monad0: function () {
          return Effect.monadEffect;
      }
  };
  var liftEffect = function (dict) {
      return dict.liftEffect;
  };
  exports["liftEffect"] = liftEffect;
  exports["monadEffectEffect"] = monadEffectEffect;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Control.Monad.Except.Trans"] = $PS["Control.Monad.Except.Trans"] || {};
  var exports = $PS["Control.Monad.Except.Trans"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad = $PS["Control.Monad"];
  var Control_Monad_Reader_Class = $PS["Control.Monad.Reader.Class"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Control_Monad_Trans_Class = $PS["Control.Monad.Trans.Class"];
  var Data_Either = $PS["Data.Either"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Effect_Class = $PS["Effect.Class"];                
  var ExceptT = function (x) {
      return x;
  };
  var runExceptT = function (v) {
      return v;
  };
  var monadTransExceptT = {
      lift: function (dictMonad) {
          return function (m) {
              return Control_Bind.bind(dictMonad.Bind1())(m)(function (a) {
                  return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Either.Right(a));
              });
          };
      }
  };
  var mapExceptT = function (f) {
      return function (v) {
          return f(v);
      };
  };
  var functorExceptT = function (dictFunctor) {
      return {
          map: function (f) {
              return mapExceptT(Data_Functor.map(dictFunctor)(Data_Functor.map(Data_Either.functorEither)(f)));
          }
      };
  };
  var except = function (dictApplicative) {
      var $89 = Control_Applicative.pure(dictApplicative);
      return function ($90) {
          return ExceptT($89($90));
      };
  };
  var monadExceptT = function (dictMonad) {
      return {
          Applicative0: function () {
              return applicativeExceptT(dictMonad);
          },
          Bind1: function () {
              return bindExceptT(dictMonad);
          }
      };
  };
  var bindExceptT = function (dictMonad) {
      return {
          bind: function (v) {
              return function (k) {
                  return Control_Bind.bind(dictMonad.Bind1())(v)(Data_Either.either((function () {
                      var $91 = Control_Applicative.pure(dictMonad.Applicative0());
                      return function ($92) {
                          return $91(Data_Either.Left.create($92));
                      };
                  })())(function (a) {
                      var v1 = k(a);
                      return v1;
                  }));
              };
          },
          Apply0: function () {
              return applyExceptT(dictMonad);
          }
      };
  };
  var applyExceptT = function (dictMonad) {
      return {
          apply: Control_Monad.ap(monadExceptT(dictMonad)),
          Functor0: function () {
              return functorExceptT(((dictMonad.Bind1()).Apply0()).Functor0());
          }
      };
  };
  var applicativeExceptT = function (dictMonad) {
      return {
          pure: (function () {
              var $93 = Control_Applicative.pure(dictMonad.Applicative0());
              return function ($94) {
                  return ExceptT($93(Data_Either.Right.create($94)));
              };
          })(),
          Apply0: function () {
              return applyExceptT(dictMonad);
          }
      };
  };
  var semigroupExceptT = function (dictMonad) {
      return function (dictSemigroup) {
          return {
              append: Control_Apply.lift2(applyExceptT(dictMonad))(Data_Semigroup.append(dictSemigroup))
          };
      };
  };
  var monadAskExceptT = function (dictMonadAsk) {
      return {
          ask: Control_Monad_Trans_Class.lift(monadTransExceptT)(dictMonadAsk.Monad0())(Control_Monad_Reader_Class.ask(dictMonadAsk)),
          Monad0: function () {
              return monadExceptT(dictMonadAsk.Monad0());
          }
      };
  };
  var monadEffectExceptT = function (dictMonadEffect) {
      return {
          liftEffect: (function () {
              var $95 = Control_Monad_Trans_Class.lift(monadTransExceptT)(dictMonadEffect.Monad0());
              var $96 = Effect_Class.liftEffect(dictMonadEffect);
              return function ($97) {
                  return $95($96($97));
              };
          })(),
          Monad0: function () {
              return monadExceptT(dictMonadEffect.Monad0());
          }
      };
  };
  var monadStateExceptT = function (dictMonadState) {
      return {
          state: function (f) {
              return Control_Monad_Trans_Class.lift(monadTransExceptT)(dictMonadState.Monad0())(Control_Monad_State_Class.state(dictMonadState)(f));
          },
          Monad0: function () {
              return monadExceptT(dictMonadState.Monad0());
          }
      };
  };
  var monadThrowExceptT = function (dictMonad) {
      return {
          throwError: (function () {
              var $103 = Control_Applicative.pure(dictMonad.Applicative0());
              return function ($104) {
                  return ExceptT($103(Data_Either.Left.create($104)));
              };
          })(),
          Monad0: function () {
              return monadExceptT(dictMonad);
          }
      };
  };
  var monadErrorExceptT = function (dictMonad) {
      return {
          catchError: function (v) {
              return function (k) {
                  return Control_Bind.bind(dictMonad.Bind1())(v)(Data_Either.either(function (a) {
                      var v1 = k(a);
                      return v1;
                  })((function () {
                      var $105 = Control_Applicative.pure(dictMonad.Applicative0());
                      return function ($106) {
                          return $105(Data_Either.Right.create($106));
                      };
                  })()));
              };
          },
          MonadThrow0: function () {
              return monadThrowExceptT(dictMonad);
          }
      };
  };
  var monoidExceptT = function (dictMonad) {
      return function (dictMonoid) {
          return {
              mempty: Control_Applicative.pure(applicativeExceptT(dictMonad))(Data_Monoid.mempty(dictMonoid)),
              Semigroup0: function () {
                  return semigroupExceptT(dictMonad)(dictMonoid.Semigroup0());
              }
          };
      };
  };
  var altExceptT = function (dictSemigroup) {
      return function (dictMonad) {
          return {
              alt: function (v) {
                  return function (v1) {
                      return Control_Bind.bind(dictMonad.Bind1())(v)(function (rm) {
                          if (rm instanceof Data_Either.Right) {
                              return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Either.Right(rm.value0));
                          };
                          if (rm instanceof Data_Either.Left) {
                              return Control_Bind.bind(dictMonad.Bind1())(v1)(function (rn) {
                                  if (rn instanceof Data_Either.Right) {
                                      return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Either.Right(rn.value0));
                                  };
                                  if (rn instanceof Data_Either.Left) {
                                      return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Either.Left(Data_Semigroup.append(dictSemigroup)(rm.value0)(rn.value0)));
                                  };
                                  throw new Error("Failed pattern match at Control.Monad.Except.Trans (line 87, column 9 - line 89, column 49): " + [ rn.constructor.name ]);
                              });
                          };
                          throw new Error("Failed pattern match at Control.Monad.Except.Trans (line 83, column 5 - line 89, column 49): " + [ rm.constructor.name ]);
                      });
                  };
              },
              Functor0: function () {
                  return functorExceptT(((dictMonad.Bind1()).Apply0()).Functor0());
              }
          };
      };
  };
  exports["ExceptT"] = ExceptT;
  exports["runExceptT"] = runExceptT;
  exports["mapExceptT"] = mapExceptT;
  exports["except"] = except;
  exports["functorExceptT"] = functorExceptT;
  exports["applyExceptT"] = applyExceptT;
  exports["applicativeExceptT"] = applicativeExceptT;
  exports["bindExceptT"] = bindExceptT;
  exports["monadExceptT"] = monadExceptT;
  exports["altExceptT"] = altExceptT;
  exports["monadTransExceptT"] = monadTransExceptT;
  exports["monadEffectExceptT"] = monadEffectExceptT;
  exports["monadThrowExceptT"] = monadThrowExceptT;
  exports["monadErrorExceptT"] = monadErrorExceptT;
  exports["monadAskExceptT"] = monadAskExceptT;
  exports["monadStateExceptT"] = monadStateExceptT;
  exports["monoidExceptT"] = monoidExceptT;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Data.NonEmpty"] = $PS["Data.NonEmpty"] || {};
  var exports = $PS["Data.NonEmpty"];
  var Control_Plus = $PS["Control.Plus"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Semigroup = $PS["Data.Semigroup"];                  
  var NonEmpty = (function () {
      function NonEmpty(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      NonEmpty.create = function (value0) {
          return function (value1) {
              return new NonEmpty(value0, value1);
          };
      };
      return NonEmpty;
  })();
  var singleton = function (dictPlus) {
      return function (a) {
          return new NonEmpty(a, Control_Plus.empty(dictPlus));
      };
  };
  var functorNonEmpty = function (dictFunctor) {
      return {
          map: function (f) {
              return function (m) {
                  return new NonEmpty(f(m.value0), Data_Functor.map(dictFunctor)(f)(m.value1));
              };
          }
      };
  };
  var foldableNonEmpty = function (dictFoldable) {
      return {
          foldMap: function (dictMonoid) {
              return function (f) {
                  return function (v) {
                      return Data_Semigroup.append(dictMonoid.Semigroup0())(f(v.value0))(Data_Foldable.foldMap(dictFoldable)(dictMonoid)(f)(v.value1));
                  };
              };
          },
          foldl: function (f) {
              return function (b) {
                  return function (v) {
                      return Data_Foldable.foldl(dictFoldable)(f)(f(b)(v.value0))(v.value1);
                  };
              };
          },
          foldr: function (f) {
              return function (b) {
                  return function (v) {
                      return f(v.value0)(Data_Foldable.foldr(dictFoldable)(f)(b)(v.value1));
                  };
              };
          }
      };
  };
  exports["NonEmpty"] = NonEmpty;
  exports["singleton"] = singleton;
  exports["functorNonEmpty"] = functorNonEmpty;
  exports["foldableNonEmpty"] = foldableNonEmpty;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Data.List.Types"] = $PS["Data.List.Types"] || {};
  var exports = $PS["Data.List.Types"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Category = $PS["Control.Category"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_NonEmpty = $PS["Data.NonEmpty"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Ordering = $PS["Data.Ordering"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Traversable = $PS["Data.Traversable"];    
  var Nil = (function () {
      function Nil() {

      };
      Nil.value = new Nil();
      return Nil;
  })();
  var Cons = (function () {
      function Cons(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Cons.create = function (value0) {
          return function (value1) {
              return new Cons(value0, value1);
          };
      };
      return Cons;
  })();
  var NonEmptyList = function (x) {
      return x;
  };
  var toList = function (v) {
      return new Cons(v.value0, v.value1);
  };
  var listMap = function (f) {
      var chunkedRevMap = function ($copy_chunksAcc) {
          return function ($copy_v) {
              var $tco_var_chunksAcc = $copy_chunksAcc;
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(chunksAcc, v) {
                  if (v instanceof Cons && (v.value1 instanceof Cons && v.value1.value1 instanceof Cons)) {
                      $tco_var_chunksAcc = new Cons(v, chunksAcc);
                      $copy_v = v.value1.value1.value1;
                      return;
                  };
                  var unrolledMap = function (v1) {
                      if (v1 instanceof Cons && (v1.value1 instanceof Cons && v1.value1.value1 instanceof Nil)) {
                          return new Cons(f(v1.value0), new Cons(f(v1.value1.value0), Nil.value));
                      };
                      if (v1 instanceof Cons && v1.value1 instanceof Nil) {
                          return new Cons(f(v1.value0), Nil.value);
                      };
                      return Nil.value;
                  };
                  var reverseUnrolledMap = function ($copy_v1) {
                      return function ($copy_acc) {
                          var $tco_var_v1 = $copy_v1;
                          var $tco_done1 = false;
                          var $tco_result;
                          function $tco_loop(v1, acc) {
                              if (v1 instanceof Cons && (v1.value0 instanceof Cons && (v1.value0.value1 instanceof Cons && v1.value0.value1.value1 instanceof Cons))) {
                                  $tco_var_v1 = v1.value1;
                                  $copy_acc = new Cons(f(v1.value0.value0), new Cons(f(v1.value0.value1.value0), new Cons(f(v1.value0.value1.value1.value0), acc)));
                                  return;
                              };
                              $tco_done1 = true;
                              return acc;
                          };
                          while (!$tco_done1) {
                              $tco_result = $tco_loop($tco_var_v1, $copy_acc);
                          };
                          return $tco_result;
                      };
                  };
                  $tco_done = true;
                  return reverseUnrolledMap(chunksAcc)(unrolledMap(v));
              };
              while (!$tco_done) {
                  $tco_result = $tco_loop($tco_var_chunksAcc, $copy_v);
              };
              return $tco_result;
          };
      };
      return chunkedRevMap(Nil.value);
  };
  var functorList = {
      map: listMap
  };
  var functorNonEmptyList = Data_NonEmpty.functorNonEmpty(functorList);
  var foldableList = {
      foldr: function (f) {
          return function (b) {
              var rev = (function () {
                  var go = function ($copy_acc) {
                      return function ($copy_v) {
                          var $tco_var_acc = $copy_acc;
                          var $tco_done = false;
                          var $tco_result;
                          function $tco_loop(acc, v) {
                              if (v instanceof Nil) {
                                  $tco_done = true;
                                  return acc;
                              };
                              if (v instanceof Cons) {
                                  $tco_var_acc = new Cons(v.value0, acc);
                                  $copy_v = v.value1;
                                  return;
                              };
                              throw new Error("Failed pattern match at Data.List.Types (line 108, column 7 - line 108, column 23): " + [ acc.constructor.name, v.constructor.name ]);
                          };
                          while (!$tco_done) {
                              $tco_result = $tco_loop($tco_var_acc, $copy_v);
                          };
                          return $tco_result;
                      };
                  };
                  return go(Nil.value);
              })();
              var $205 = Data_Foldable.foldl(foldableList)(Data_Function.flip(f))(b);
              return function ($206) {
                  return $205(rev($206));
              };
          };
      },
      foldl: function (f) {
          var go = function ($copy_b) {
              return function ($copy_v) {
                  var $tco_var_b = $copy_b;
                  var $tco_done1 = false;
                  var $tco_result;
                  function $tco_loop(b, v) {
                      if (v instanceof Nil) {
                          $tco_done1 = true;
                          return b;
                      };
                      if (v instanceof Cons) {
                          $tco_var_b = f(b)(v.value0);
                          $copy_v = v.value1;
                          return;
                      };
                      throw new Error("Failed pattern match at Data.List.Types (line 112, column 12 - line 114, column 30): " + [ v.constructor.name ]);
                  };
                  while (!$tco_done1) {
                      $tco_result = $tco_loop($tco_var_b, $copy_v);
                  };
                  return $tco_result;
              };
          };
          return go;
      },
      foldMap: function (dictMonoid) {
          return function (f) {
              return Data_Foldable.foldl(foldableList)(function (acc) {
                  var $207 = Data_Semigroup.append(dictMonoid.Semigroup0())(acc);
                  return function ($208) {
                      return $207(f($208));
                  };
              })(Data_Monoid.mempty(dictMonoid));
          };
      }
  };
  var foldableNonEmptyList = Data_NonEmpty.foldableNonEmpty(foldableList);
  var semigroupList = {
      append: function (xs) {
          return function (ys) {
              return Data_Foldable.foldr(foldableList)(Cons.create)(ys)(xs);
          };
      }
  };
  var monoidList = {
      mempty: Nil.value,
      Semigroup0: function () {
          return semigroupList;
      }
  };
  var semigroupNonEmptyList = {
      append: function (v) {
          return function (as$prime) {
              return new Data_NonEmpty.NonEmpty(v.value0, Data_Semigroup.append(semigroupList)(v.value1)(toList(as$prime)));
          };
      }
  };
  var traversableList = {
      traverse: function (dictApplicative) {
          return function (f) {
              var $222 = Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Foldable.foldl(foldableList)(Data_Function.flip(Cons.create))(Nil.value));
              var $223 = Data_Foldable.foldl(foldableList)(function (acc) {
                  var $225 = Control_Apply.lift2(dictApplicative.Apply0())(Data_Function.flip(Cons.create))(acc);
                  return function ($226) {
                      return $225(f($226));
                  };
              })(Control_Applicative.pure(dictApplicative)(Nil.value));
              return function ($224) {
                  return $222($223($224));
              };
          };
      },
      sequence: function (dictApplicative) {
          return Data_Traversable.traverse(traversableList)(dictApplicative)(Control_Category.identity(Control_Category.categoryFn));
      },
      Functor0: function () {
          return functorList;
      },
      Foldable1: function () {
          return foldableList;
      }
  };
  var unfoldable1List = {
      unfoldr1: function (f) {
          return function (b) {
              var go = function ($copy_source) {
                  return function ($copy_memo) {
                      var $tco_var_source = $copy_source;
                      var $tco_done = false;
                      var $tco_result;
                      function $tco_loop(source, memo) {
                          var v = f(source);
                          if (v.value1 instanceof Data_Maybe.Just) {
                              $tco_var_source = v.value1.value0;
                              $copy_memo = new Cons(v.value0, memo);
                              return;
                          };
                          if (v.value1 instanceof Data_Maybe.Nothing) {
                              $tco_done = true;
                              return Data_Foldable.foldl(foldableList)(Data_Function.flip(Cons.create))(Nil.value)(new Cons(v.value0, memo));
                          };
                          throw new Error("Failed pattern match at Data.List.Types (line 136, column 22 - line 138, column 61): " + [ v.constructor.name ]);
                      };
                      while (!$tco_done) {
                          $tco_result = $tco_loop($tco_var_source, $copy_memo);
                      };
                      return $tco_result;
                  };
              };
              return go(b)(Nil.value);
          };
      }
  };
  var unfoldableList = {
      unfoldr: function (f) {
          return function (b) {
              var go = function ($copy_source) {
                  return function ($copy_memo) {
                      var $tco_var_source = $copy_source;
                      var $tco_done = false;
                      var $tco_result;
                      function $tco_loop(source, memo) {
                          var v = f(source);
                          if (v instanceof Data_Maybe.Nothing) {
                              $tco_done = true;
                              return Data_Foldable.foldl(foldableList)(Data_Function.flip(Cons.create))(Nil.value)(memo);
                          };
                          if (v instanceof Data_Maybe.Just) {
                              $tco_var_source = v.value0.value1;
                              $copy_memo = new Cons(v.value0.value0, memo);
                              return;
                          };
                          throw new Error("Failed pattern match at Data.List.Types (line 143, column 22 - line 145, column 52): " + [ v.constructor.name ]);
                      };
                      while (!$tco_done) {
                          $tco_result = $tco_loop($tco_var_source, $copy_memo);
                      };
                      return $tco_result;
                  };
              };
              return go(b)(Nil.value);
          };
      },
      Unfoldable10: function () {
          return unfoldable1List;
      }
  };
  var eq1List = {
      eq1: function (dictEq) {
          return function (xs) {
              return function (ys) {
                  var go = function ($copy_v) {
                      return function ($copy_v1) {
                          return function ($copy_v2) {
                              var $tco_var_v = $copy_v;
                              var $tco_var_v1 = $copy_v1;
                              var $tco_done = false;
                              var $tco_result;
                              function $tco_loop(v, v1, v2) {
                                  if (!v2) {
                                      $tco_done = true;
                                      return false;
                                  };
                                  if (v instanceof Nil && v1 instanceof Nil) {
                                      $tco_done = true;
                                      return v2;
                                  };
                                  if (v instanceof Cons && v1 instanceof Cons) {
                                      $tco_var_v = v.value1;
                                      $tco_var_v1 = v1.value1;
                                      $copy_v2 = v2 && Data_Eq.eq(dictEq)(v1.value0)(v.value0);
                                      return;
                                  };
                                  $tco_done = true;
                                  return false;
                              };
                              while (!$tco_done) {
                                  $tco_result = $tco_loop($tco_var_v, $tco_var_v1, $copy_v2);
                              };
                              return $tco_result;
                          };
                      };
                  };
                  return go(xs)(ys)(true);
              };
          };
      }
  };                                                       
  var eqList = function (dictEq) {
      return {
          eq: Data_Eq.eq1(eq1List)(dictEq)
      };
  };
  var ord1List = {
      compare1: function (dictOrd) {
          return function (xs) {
              return function (ys) {
                  var go = function ($copy_v) {
                      return function ($copy_v1) {
                          var $tco_var_v = $copy_v;
                          var $tco_done = false;
                          var $tco_result;
                          function $tco_loop(v, v1) {
                              if (v instanceof Nil && v1 instanceof Nil) {
                                  $tco_done = true;
                                  return Data_Ordering.EQ.value;
                              };
                              if (v instanceof Nil) {
                                  $tco_done = true;
                                  return Data_Ordering.LT.value;
                              };
                              if (v1 instanceof Nil) {
                                  $tco_done = true;
                                  return Data_Ordering.GT.value;
                              };
                              if (v instanceof Cons && v1 instanceof Cons) {
                                  var v2 = Data_Ord.compare(dictOrd)(v.value0)(v1.value0);
                                  if (v2 instanceof Data_Ordering.EQ) {
                                      $tco_var_v = v.value1;
                                      $copy_v1 = v1.value1;
                                      return;
                                  };
                                  $tco_done = true;
                                  return v2;
                              };
                              throw new Error("Failed pattern match at Data.List.Types (line 61, column 5 - line 61, column 20): " + [ v.constructor.name, v1.constructor.name ]);
                          };
                          while (!$tco_done) {
                              $tco_result = $tco_loop($tco_var_v, $copy_v1);
                          };
                          return $tco_result;
                      };
                  };
                  return go(xs)(ys);
              };
          };
      },
      Eq10: function () {
          return eq1List;
      }
  };                                                          
  var ordList = function (dictOrd) {
      return {
          compare: Data_Ord.compare1(ord1List)(dictOrd),
          Eq0: function () {
              return eqList(dictOrd.Eq0());
          }
      };
  };
  var applyList = {
      apply: function (v) {
          return function (v1) {
              if (v instanceof Nil) {
                  return Nil.value;
              };
              if (v instanceof Cons) {
                  return Data_Semigroup.append(semigroupList)(Data_Functor.map(functorList)(v.value0)(v1))(Control_Apply.apply(applyList)(v.value1)(v1));
              };
              throw new Error("Failed pattern match at Data.List.Types (line 158, column 1 - line 160, column 48): " + [ v.constructor.name, v1.constructor.name ]);
          };
      },
      Functor0: function () {
          return functorList;
      }
  };
  var applyNonEmptyList = {
      apply: function (v) {
          return function (v1) {
              return new Data_NonEmpty.NonEmpty(v.value0(v1.value0), Data_Semigroup.append(semigroupList)(Control_Apply.apply(applyList)(v.value1)(new Cons(v1.value0, Nil.value)))(Control_Apply.apply(applyList)(new Cons(v.value0, v.value1))(v1.value1)));
          };
      },
      Functor0: function () {
          return functorNonEmptyList;
      }
  };
  var bindList = {
      bind: function (v) {
          return function (v1) {
              if (v instanceof Nil) {
                  return Nil.value;
              };
              if (v instanceof Cons) {
                  return Data_Semigroup.append(semigroupList)(v1(v.value0))(Control_Bind.bind(bindList)(v.value1)(v1));
              };
              throw new Error("Failed pattern match at Data.List.Types (line 165, column 1 - line 167, column 37): " + [ v.constructor.name, v1.constructor.name ]);
          };
      },
      Apply0: function () {
          return applyList;
      }
  };
  var applicativeList = {
      pure: function (a) {
          return new Cons(a, Nil.value);
      },
      Apply0: function () {
          return applyList;
      }
  };
  var altList = {
      alt: Data_Semigroup.append(semigroupList),
      Functor0: function () {
          return functorList;
      }
  };
  var plusList = {
      empty: Nil.value,
      Alt0: function () {
          return altList;
      }
  };
  var alternativeList = {
      Applicative0: function () {
          return applicativeList;
      },
      Plus1: function () {
          return plusList;
      }
  };
  var applicativeNonEmptyList = {
      pure: (function () {
          var $236 = Data_NonEmpty.singleton(plusList);
          return function ($237) {
              return NonEmptyList($236($237));
          };
      })(),
      Apply0: function () {
          return applyNonEmptyList;
      }
  };
  exports["Nil"] = Nil;
  exports["Cons"] = Cons;
  exports["NonEmptyList"] = NonEmptyList;
  exports["ordList"] = ordList;
  exports["semigroupList"] = semigroupList;
  exports["monoidList"] = monoidList;
  exports["functorList"] = functorList;
  exports["foldableList"] = foldableList;
  exports["unfoldableList"] = unfoldableList;
  exports["traversableList"] = traversableList;
  exports["applicativeList"] = applicativeList;
  exports["bindList"] = bindList;
  exports["plusList"] = plusList;
  exports["alternativeList"] = alternativeList;
  exports["functorNonEmptyList"] = functorNonEmptyList;
  exports["applicativeNonEmptyList"] = applicativeNonEmptyList;
  exports["semigroupNonEmptyList"] = semigroupNonEmptyList;
  exports["foldableNonEmptyList"] = foldableNonEmptyList;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Data.List.NonEmpty"] = $PS["Data.List.NonEmpty"] || {};
  var exports = $PS["Data.List.NonEmpty"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_NonEmpty = $PS["Data.NonEmpty"];
  var singleton = (function () {
      var $171 = Data_NonEmpty.singleton(Data_List_Types.plusList);
      return function ($172) {
          return Data_List_Types.NonEmptyList($171($172));
      };
  })();
  var head = function (v) {
      return v.value0;
  };
  exports["singleton"] = singleton;
  exports["head"] = head;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Foreign"] = $PS["Foreign"] || {};
  var exports = $PS["Foreign"];
  var $foreign = $PS["Foreign"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Monad_Error_Class = $PS["Control.Monad.Error.Class"];
  var Control_Monad_Except_Trans = $PS["Control.Monad.Except.Trans"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_List_NonEmpty = $PS["Data.List.NonEmpty"];
  var Data_Show = $PS["Data.Show"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];                
  var ForeignError = (function () {
      function ForeignError(value0) {
          this.value0 = value0;
      };
      ForeignError.create = function (value0) {
          return new ForeignError(value0);
      };
      return ForeignError;
  })();
  var TypeMismatch = (function () {
      function TypeMismatch(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      TypeMismatch.create = function (value0) {
          return function (value1) {
              return new TypeMismatch(value0, value1);
          };
      };
      return TypeMismatch;
  })();
  var ErrorAtIndex = (function () {
      function ErrorAtIndex(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      ErrorAtIndex.create = function (value0) {
          return function (value1) {
              return new ErrorAtIndex(value0, value1);
          };
      };
      return ErrorAtIndex;
  })();
  var ErrorAtProperty = (function () {
      function ErrorAtProperty(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      ErrorAtProperty.create = function (value0) {
          return function (value1) {
              return new ErrorAtProperty(value0, value1);
          };
      };
      return ErrorAtProperty;
  })();
  var unsafeToForeign = Unsafe_Coerce.unsafeCoerce;
  var unsafeFromForeign = Unsafe_Coerce.unsafeCoerce;
  var renderForeignError = function (v) {
      if (v instanceof ForeignError) {
          return v.value0;
      };
      if (v instanceof ErrorAtIndex) {
          return "Error at array index " + (Data_Show.show(Data_Show.showInt)(v.value0) + (": " + renderForeignError(v.value1)));
      };
      if (v instanceof ErrorAtProperty) {
          return "Error at property " + (Data_Show.show(Data_Show.showString)(v.value0) + (": " + renderForeignError(v.value1)));
      };
      if (v instanceof TypeMismatch) {
          return "Type mismatch: expected " + (v.value0 + (", found " + v.value1));
      };
      throw new Error("Failed pattern match at Foreign (line 73, column 1 - line 73, column 45): " + [ v.constructor.name ]);
  };
  var fail = function (dictMonad) {
      var $118 = Control_Monad_Error_Class.throwError(Control_Monad_Except_Trans.monadThrowExceptT(dictMonad));
      return function ($119) {
          return $118(Data_List_NonEmpty.singleton($119));
      };
  };
  var unsafeReadTagged = function (dictMonad) {
      return function (tag) {
          return function (value) {
              if ($foreign.tagOf(value) === tag) {
                  return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(dictMonad))(unsafeFromForeign(value));
              };
              if (Data_Boolean.otherwise) {
                  return fail(dictMonad)(new TypeMismatch(tag, $foreign.tagOf(value)));
              };
              throw new Error("Failed pattern match at Foreign (line 110, column 1 - line 110, column 71): " + [ tag.constructor.name, value.constructor.name ]);
          };
      };
  };
  var readString = function (dictMonad) {
      return unsafeReadTagged(dictMonad)("String");
  };
  exports["ForeignError"] = ForeignError;
  exports["renderForeignError"] = renderForeignError;
  exports["unsafeToForeign"] = unsafeToForeign;
  exports["unsafeReadTagged"] = unsafeReadTagged;
  exports["readString"] = readString;
  exports["fail"] = fail;
  exports["typeOf"] = $foreign.typeOf;
})(PS);
(function(exports) {
  exports.undefined = undefined;
})(PS["Literals.Undefined"] = PS["Literals.Undefined"] || {});
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Literals.Undefined"] = $PS["Literals.Undefined"] || {};
  var exports = $PS["Literals.Undefined"];
  var $foreign = $PS["Literals.Undefined"];
  exports["undefined"] = $foreign["undefined"];
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Untagged.Castable"] = $PS["Untagged.Castable"] || {};
  var exports = $PS["Untagged.Castable"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];
  var cast = function () {
      return Unsafe_Coerce.unsafeCoerce;
  };
  exports["cast"] = cast;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Untagged.TypeCheck"] = $PS["Untagged.TypeCheck"] || {};
  var exports = $PS["Untagged.TypeCheck"];
  var Foreign = $PS["Foreign"];
  var hasRuntimeType = function (dict) {
      return dict.hasRuntimeType;
  };
  var hasJsType = function (name) {
      return function (x) {
          return Foreign.typeOf(x) === name;
      };
  };
  var hasRuntimeTypeString = {
      hasRuntimeType: function (v) {
          return hasJsType("string");
      }
  };
  exports["hasRuntimeType"] = hasRuntimeType;
  exports["hasRuntimeTypeString"] = hasRuntimeTypeString;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Untagged.Union"] = $PS["Untagged.Union"] || {};
  var exports = $PS["Untagged.Union"];
  var Data_Either = $PS["Data.Either"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Foreign = $PS["Foreign"];
  var Literals_Undefined = $PS["Literals.Undefined"];
  var Type_Proxy = $PS["Type.Proxy"];
  var Untagged_Castable = $PS["Untagged.Castable"];
  var Untagged_TypeCheck = $PS["Untagged.TypeCheck"];                
  var withOneOf = function (dictHasRuntimeType) {
      return function (f) {
          return function (g) {
              return function (o) {
                  var isTypeA = Untagged_TypeCheck.hasRuntimeType(dictHasRuntimeType)(Type_Proxy["Proxy"].value);
                  var $23 = isTypeA(Foreign.unsafeToForeign(o));
                  if ($23) {
                      return f(o);
                  };
                  return g(o);
              };
          };
      };
  };
  var toEither1 = function (dictHasRuntimeType) {
      return withOneOf(dictHasRuntimeType)(Data_Either.Left.create)(Data_Either.Right.create);
  };
  var maybeToUor = function (v) {
      if (v instanceof Data_Maybe.Just) {
          return v.value0;
      };
      if (v instanceof Data_Maybe.Nothing) {
          return Untagged_Castable.cast()(Literals_Undefined["undefined"]);
      };
      throw new Error("Failed pattern match at Untagged.Union (line 121, column 1 - line 121, column 49): " + [ v.constructor.name ]);
  };
  var asOneOf = Untagged_Castable.cast;
  exports["asOneOf"] = asOneOf;
  exports["toEither1"] = toEither1;
  exports["maybeToUor"] = maybeToUor;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Aeson"] = $PS["Aeson"] || {};
  var exports = $PS["Aeson"];
  var $foreign = $PS["Aeson"];
  var Control_Alt = $PS["Control.Alt"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Category = $PS["Control.Category"];
  var Control_Lazy = $PS["Control.Lazy"];
  var Data_Argonaut_Core = $PS["Data.Argonaut.Core"];
  var Data_Argonaut_Decode_Error = $PS["Data.Argonaut.Decode.Error"];
  var Data_Argonaut_Encode_Encoders = $PS["Data.Argonaut.Encode.Encoders"];
  var Data_Bifunctor = $PS["Data.Bifunctor"];
  var Data_BigInt = $PS["Data.BigInt"];
  var Data_BigNumber = $PS["Data.BigNumber"];
  var Data_Either = $PS["Data.Either"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Int = $PS["Data.Int"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Number = $PS["Data.Number"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Data_Traversable = $PS["Data.Traversable"];
  var Data_Typelevel_Undefined = $PS["Data.Typelevel.Undefined"];
  var Data_UInt = $PS["Data.UInt"];
  var Foreign_Object = $PS["Foreign.Object"];
  var Record = $PS["Record"];
  var Type_Proxy = $PS["Type.Proxy"];
  var Untagged_Union = $PS["Untagged.Union"];                
  var Finite = function (x) {
      return x;
  };
  var showAeson = {
      show: $foreign.stringifyAeson
  };
  var gDecodeAesonRowNil = {
      gDecodeAeson: function (v) {
          return function (v1) {
              return new Data_Either.Right({});
          };
      }
  };
  var encodeAesonString = {
      encodeAeson: $foreign.fromString
  };
  var encodeAesonFiniteBigNumbe = {
      encodeAeson: $foreign.fromFiniteBigNumber
  };
  var encodeAesonAeson = {
      encodeAeson: Control_Category.identity(Control_Category.categoryFn)
  };
  var decodeAesonAeson = {
      decodeAeson: Control_Applicative.pure(Data_Either.applicativeEither)
  };
  var unpackFinite = function (v) {
      return v;
  };
  var tupleToArray = function (dict) {
      return dict.tupleToArray;
  };
  var toAesonType = function (cs) {
      return cs(Data_Maybe.Nothing.value)(Data_Maybe.Just.create);
  };
  var parseJsonStringToAeson = function (payload) {
      return Data_Either.note(new Data_Argonaut_Decode_Error.TypeMismatch("JSON String"))($foreign.parseAeson(Data_Maybe.Nothing.value)(Data_Maybe.Just.create)(payload));
  };
  var isAesonType = function (cs) {
      return cs(false)(Data_Function["const"](true));
  };
  var gEncodeAesonNil = {
      gEncodeAeson: function (v) {
          return function (v1) {
              return Foreign_Object.empty;
          };
      }
  };
  var gEncodeAeson = function (dict) {
      return dict.gEncodeAeson;
  };
  var gDecodeAeson = function (dict) {
      return dict.gDecodeAeson;
  };
  var fromUInt = function ($181) {
      return $foreign.fromFiniteBigNumber(Finite(Data_BigNumber.fromUInt($181)));
  };
  var encodeAesonUInt = {
      encodeAeson: fromUInt
  };
  var finiteNumber = function (n) {
      var $144 = Data_Number["isFinite"](n) && !Data_Number["isNaN"](n);
      if ($144) {
          return new Data_Maybe.Just(n);
      };
      return Data_Maybe.Nothing.value;
  };
  var encodeAeson = function (dict) {
      return dict.encodeAeson;
  };
  var fromBigInt = (function () {
      var $194 = Data_Either.fromRight(Data_Typelevel_Undefined["undefined"]);
      var $195 = Data_Functor.map(Data_Either.functorEither)((function () {
          var $197 = encodeAeson(encodeAesonFiniteBigNumbe);
          return function ($198) {
              return $197(Finite($198));
          };
      })());
      return function ($196) {
          return $194($195(Data_BigNumber.parseBigNumber(Data_BigInt.toString($196))));
      };
  })();
  var encodeAesonBigInt = {
      encodeAeson: fromBigInt
  };
  var gEncodeAesonCons = function (dictEncodeAeson) {
      return function (dictGEncodeAeson) {
          return function (dictIsSymbol) {
              return function () {
                  return {
                      gEncodeAeson: function (row) {
                          return function (v) {
                              return Foreign_Object.insert(Data_Symbol.reflectSymbol(dictIsSymbol)(Type_Proxy["Proxy"].value))(encodeAeson(dictEncodeAeson)(Record.get(dictIsSymbol)()(Type_Proxy["Proxy"].value)(row)))(gEncodeAeson(dictGEncodeAeson)(row)(Type_Proxy["Proxy"].value));
                          };
                      }
                  };
              };
          };
      };
  };
  var encodeAesonArray = function (dictEncodeAeson) {
      return {
          encodeAeson: (function () {
              var $199 = Data_Functor.map(Data_Functor.functorArray)(encodeAeson(dictEncodeAeson));
              return function ($200) {
                  return $foreign.fromArray($199($200));
              };
          })()
      };
  };
  var encodeAesonMaybe = function (dictEncodeAeson) {
      return {
          encodeAeson: function (v) {
              if (v instanceof Data_Maybe.Nothing) {
                  return $foreign.aesonNull;
              };
              if (v instanceof Data_Maybe.Just) {
                  return encodeAeson(dictEncodeAeson)(v.value0);
              };
              throw new Error("Failed pattern match at Aeson (line 845, column 1 - line 847, column 39): " + [ v.constructor.name ]);
          }
      };
  };
  var encodeAesonObject = function (dictEncodeAeson) {
      return {
          encodeAeson: function (input) {
              return $foreign.fromObject(Data_Functor.map(Foreign_Object.functorObject)(encodeAeson(dictEncodeAeson))(input));
          }
      };
  };
  var encodeAesonRecord = function (dictGEncodeAeson) {
      return function () {
          return {
              encodeAeson: function (rec) {
                  return encodeAeson(encodeAesonObject(encodeAesonAeson))(gEncodeAeson(dictGEncodeAeson)(rec)(Type_Proxy["Proxy"].value));
              }
          };
      };
  };
  var encodeAesonTuple = function (dictEncodeTupleAux) {
      return {
          encodeAeson: (function () {
              var $210 = encodeAeson(encodeAesonArray(encodeAesonAeson));
              var $211 = tupleToArray(dictEncodeTupleAux);
              return function ($212) {
                  return $210($211($212));
              };
          })()
      };
  };
  var encodeTupleAuxTuple = function (dictEncodeAeson) {
      return function (dictEncodeAeson1) {
          return {
              tupleToArray: function (v) {
                  return [ encodeAeson(dictEncodeAeson)(v.value0), encodeAeson(dictEncodeAeson1)(v.value1) ];
              }
          };
      };
  };
  var decodeAesonField = function (dict) {
      return dict.decodeAesonField;
  };
  var gDecodeAesonCons = function (dictDecodeAesonField) {
      return function (dictGDecodeAeson) {
          return function (dictIsSymbol) {
              return function () {
                  return function () {
                      return {
                          gDecodeAeson: function (object) {
                              return function (v) {
                                  var fieldName = Data_Symbol.reflectSymbol(dictIsSymbol)(Type_Proxy["Proxy"].value);
                                  var fieldValue = Foreign_Object.lookup(fieldName)(object);
                                  var v1 = decodeAesonField(dictDecodeAesonField)(fieldValue);
                                  if (v1 instanceof Data_Maybe.Just) {
                                      return Control_Bind.bind(Data_Either.bindEither)(Data_Bifunctor.lmap(Data_Bifunctor.bifunctorEither)(Data_Argonaut_Decode_Error.AtKey.create(fieldName))(v1.value0))(function (val) {
                                          return Control_Bind.bind(Data_Either.bindEither)(gDecodeAeson(dictGDecodeAeson)(object)(Type_Proxy["Proxy"].value))(function (rest) {
                                              return new Data_Either.Right(Record.insert(dictIsSymbol)()()(Type_Proxy["Proxy"].value)(val)(rest));
                                          });
                                      });
                                  };
                                  if (v1 instanceof Data_Maybe.Nothing) {
                                      return new Data_Either.Left(new Data_Argonaut_Decode_Error.AtKey(fieldName, Data_Argonaut_Decode_Error.MissingValue.value));
                                  };
                                  throw new Error("Failed pattern match at Aeson (line 718, column 5 - line 725, column 44): " + [ v1.constructor.name ]);
                              };
                          }
                      };
                  };
              };
          };
      };
  };
  var decodeAeson = function (dict) {
      return dict.decodeAeson;
  };
  var decodeJsonString = function (dictDecodeAeson) {
      return Control_Bind.composeKleisli(Data_Either.bindEither)(parseJsonStringToAeson)(decodeAeson(dictDecodeAeson));
  };
  var getField = function (dictDecodeAeson) {
      return function (aesonObject) {
          return function (field) {
              var getField$prime = function (decoder) {
                  return function (obj) {
                      return function (str) {
                          return Data_Maybe.maybe(new Data_Either.Left(new Data_Argonaut_Decode_Error.AtKey(str, Data_Argonaut_Decode_Error.MissingValue.value)))((function () {
                              var $213 = Data_Bifunctor.lmap(Data_Bifunctor.bifunctorEither)(Data_Argonaut_Decode_Error.AtKey.create(str));
                              return function ($214) {
                                  return $213(decoder($214));
                              };
                          })())(Foreign_Object.lookup(str)(obj));
                      };
                  };
              };
              return getField$prime(decodeAeson(dictDecodeAeson))(aesonObject)(field);
          };
      };
  };
  var getFieldOptional = function (dictDecodeAeson) {
      var getFieldOptional_ = function (decoder) {
          return function (obj) {
              return function (str) {
                  var decode = (function () {
                      var $215 = Data_Bifunctor.lmap(Data_Bifunctor.bifunctorEither)(Data_Argonaut_Decode_Error.AtKey.create(str));
                      return function ($216) {
                          return $215(decoder($216));
                      };
                  })();
                  return Data_Maybe.maybe(Control_Applicative.pure(Data_Either.applicativeEither)(Data_Maybe.Nothing.value))((function () {
                      var $217 = Data_Functor.map(Data_Either.functorEither)(Data_Maybe.Just.create);
                      return function ($218) {
                          return $217(decode($218));
                      };
                  })())(Foreign_Object.lookup(str)(obj));
              };
          };
      };
      return getFieldOptional_(decodeAeson(dictDecodeAeson));
  };
  var decodeAesonField1 = function (dictDecodeAeson) {
      return {
          decodeAesonField: function (j) {
              return Data_Functor.map(Data_Maybe.functorMaybe)(decodeAeson(dictDecodeAeson))(j);
          }
      };
  };
  var decodeAeson$bar$plus$bar = function () {
      return function (dictDecodeAeson) {
          return function (dictDecodeAeson1) {
              return {
                  decodeAeson: function (j) {
                      return Control_Alt.alt(Data_Either.altEither)(Data_Functor.map(Data_Either.functorEither)(Untagged_Union.asOneOf())(decodeAeson(dictDecodeAeson)(j)))(Data_Functor.map(Data_Either.functorEither)(Untagged_Union.asOneOf())(decodeAeson(dictDecodeAeson1)(j)));
                  }
              };
          };
      };
  };
  var constAesonCases = function (v) {
      var c = Data_Function["const"](v);
      return {
          caseObject: c,
          caseNull: c,
          caseBoolean: c,
          caseString: c,
          caseFiniteBigNumber: c,
          caseArray: c
      };
  };
  var caseAeson = function (v) {
      return function (v1) {
          return $foreign["_caseAeson"](v.caseNull)(v.caseBoolean)(v.caseFiniteBigNumber)(v.caseString)(v.caseArray)(v.caseObject)(v1);
      };
  };
  var caseAesonArray = function (def) {
      return function (f) {
          return caseAeson((function (v) {
              return {
                  caseArray: f,
                  caseBoolean: v.caseBoolean,
                  caseFiniteBigNumber: v.caseFiniteBigNumber,
                  caseNull: v.caseNull,
                  caseObject: v.caseObject,
                  caseString: v.caseString
              };
          })(constAesonCases(def)));
      };
  };                                        
  var decodeAesonArray = function (dictDecodeAeson) {
      return {
          decodeAeson: caseAesonArray(new Data_Either.Left(new Data_Argonaut_Decode_Error.TypeMismatch("Array")))(Data_Traversable.traverse(Data_Traversable.traversableArray)(Data_Either.applicativeEither)(decodeAeson(dictDecodeAeson)))
      };
  };
  var caseAesonBoolean = function (def) {
      return function (f) {
          return caseAeson((function (v) {
              return {
                  caseBoolean: f,
                  caseArray: v.caseArray,
                  caseFiniteBigNumber: v.caseFiniteBigNumber,
                  caseNull: v.caseNull,
                  caseObject: v.caseObject,
                  caseString: v.caseString
              };
          })(constAesonCases(def)));
      };
  };                                            
  var decodeAesonBoolean = {
      decodeAeson: caseAesonBoolean(new Data_Either.Left(new Data_Argonaut_Decode_Error.TypeMismatch("Boolean")))(Data_Either.Right.create)
  };
  var caseAesonFiniteBigNumber = function (def) {
      return function (f) {
          return caseAeson((function (v) {
              return {
                  caseFiniteBigNumber: f,
                  caseArray: v.caseArray,
                  caseBoolean: v.caseBoolean,
                  caseNull: v.caseNull,
                  caseObject: v.caseObject,
                  caseString: v.caseString
              };
          })(constAesonCases(def)));
      };
  };
  var caseAesonBigNumber = function (def) {
      return function (f) {
          return caseAesonFiniteBigNumber(def)(function ($219) {
              return f(unpackFinite($219));
          });
      };
  };
  var caseAesonBigInt = function (def) {
      return function (f) {
          var $220 = Data_Maybe.maybe(def)(f);
          var $221 = caseAesonBigNumber(Data_Maybe.Nothing.value)(function (bn) {
              var $177 = Data_BigNumber.isInteger(bn);
              if ($177) {
                  return Data_BigInt.fromString(Data_BigNumber.toFixed(bn));
              };
              return Data_Maybe.Nothing.value;
          });
          return function ($222) {
              return $220($221($222));
          };
      };
  };                                          
  var decodeAesonBigInt = {
      decodeAeson: caseAesonBigInt(new Data_Either.Left(new Data_Argonaut_Decode_Error.TypeMismatch("BigInt")))(Data_Either.Right.create)
  };
  var caseAesonFiniteNumber = function (def) {
      return function (f) {
          return caseAesonBigNumber(def)((function () {
              var $223 = Data_Maybe.maybe(def)(f);
              return function ($224) {
                  return $223(finiteNumber(Data_BigNumber.toNumber($224)));
              };
          })());
      };
  };
  var caseAesonNumber = function (def) {
      return function (f) {
          return caseAesonFiniteNumber(def)(function ($225) {
              return f(unpackFinite($225));
          });
      };
  };                                          
  var toNumber = toAesonType(caseAesonNumber);
  var decodeAesonNumber = {
      decodeAeson: caseAesonNumber(new Data_Either.Left(new Data_Argonaut_Decode_Error.TypeMismatch("Number")))(Data_Either.Right.create)
  };
  var caseAesonInt = function (def) {
      return function (f) {
          var $226 = Data_Maybe.maybe(def)(f);
          var $227 = caseAesonBigNumber(Data_Maybe.Nothing.value)(function (bn) {
              var $178 = Data_BigNumber.isInteger(bn);
              if ($178) {
                  return Data_Int.fromNumber(Data_BigNumber.toNumber(bn));
              };
              return Data_Maybe.Nothing.value;
          });
          return function ($228) {
              return $226($227($228));
          };
      };
  };                                    
  var decodeAesonInt = {
      decodeAeson: caseAesonInt(new Data_Either.Left(new Data_Argonaut_Decode_Error.TypeMismatch("Int")))(Data_Either.Right.create)
  };
  var caseAesonUInt = function (def) {
      return function (f) {
          var $229 = Data_Maybe.maybe(def)(f);
          var $230 = caseAesonBigNumber(Data_Maybe.Nothing.value)(function (bn) {
              var $179 = Data_BigNumber.isInteger(bn);
              if ($179) {
                  return Data_UInt["fromNumber'"](Data_BigNumber.toNumber(bn));
              };
              return Data_Maybe.Nothing.value;
          });
          return function ($231) {
              return $229($230($231));
          };
      };
  };                                      
  var decodeAesonUInt = {
      decodeAeson: caseAesonUInt(new Data_Either.Left(new Data_Argonaut_Decode_Error.TypeMismatch("UInt")))(Data_Either.Right.create)
  };
  var decodeAesonFiniteBigNumbe = {
      decodeAeson: caseAesonFiniteBigNumber(new Data_Either.Left(new Data_Argonaut_Decode_Error.TypeMismatch("Finite BigNumber")))(Data_Either.Right.create)
  };
  var caseAesonNull = function (def) {
      return function (f) {
          return caseAeson((function (v) {
              return {
                  caseNull: f,
                  caseArray: v.caseArray,
                  caseBoolean: v.caseBoolean,
                  caseFiniteBigNumber: v.caseFiniteBigNumber,
                  caseObject: v.caseObject,
                  caseString: v.caseString
              };
          })(constAesonCases(def)));
      };
  };
  var isNull = isAesonType(caseAesonNull);
  var getFieldOptional$prime = function (dictDecodeAeson) {
      var getFieldOptional$prime_ = function (decoder) {
          return function (obj) {
              return function (str) {
                  var decode = function (aeson) {
                      var $180 = isNull(aeson);
                      if ($180) {
                          return Control_Applicative.pure(Data_Either.applicativeEither)(Data_Maybe.Nothing.value);
                      };
                      return Data_Functor.map(Data_Either.functorEither)(Data_Maybe.Just.create)(Data_Bifunctor.lmap(Data_Bifunctor.bifunctorEither)(Data_Argonaut_Decode_Error.AtKey.create(str))(decoder(aeson)));
                  };
                  return Data_Maybe.maybe(Control_Applicative.pure(Data_Either.applicativeEither)(Data_Maybe.Nothing.value))(decode)(Foreign_Object.lookup(str)(obj));
              };
          };
      };
      return getFieldOptional$prime_(decodeAeson(dictDecodeAeson));
  };                                      
  var caseAesonObject = function (def) {
      return function (f) {
          return caseAeson((function (v) {
              return {
                  caseObject: f,
                  caseArray: v.caseArray,
                  caseBoolean: v.caseBoolean,
                  caseFiniteBigNumber: v.caseFiniteBigNumber,
                  caseNull: v.caseNull,
                  caseString: v.caseString
              };
          })(constAesonCases(def)));
      };
  };                                          
  var decodeAesonObject = function (dictDecodeAeson) {
      return {
          decodeAeson: caseAesonObject(new Data_Either.Left(new Data_Argonaut_Decode_Error.TypeMismatch("Object")))(Data_Traversable.traverse(Foreign_Object.traversableObject)(Data_Either.applicativeEither)(decodeAeson(dictDecodeAeson)))
      };
  };
  var decodeAesonRecord = function (dictGDecodeAeson) {
      return function () {
          return {
              decodeAeson: caseAesonObject(new Data_Either.Left(new Data_Argonaut_Decode_Error.TypeMismatch("Record")))(function (object) {
                  return gDecodeAeson(dictGDecodeAeson)(object)(Type_Proxy["Proxy"].value);
              })
          };
      };
  };
  var caseAesonString = function (def) {
      return function (f) {
          return caseAeson((function (v) {
              return {
                  caseString: f,
                  caseArray: v.caseArray,
                  caseBoolean: v.caseBoolean,
                  caseFiniteBigNumber: v.caseFiniteBigNumber,
                  caseNull: v.caseNull,
                  caseObject: v.caseObject
              };
          })(constAesonCases(def)));
      };
  };                                          
  var toString = toAesonType(caseAesonString);
  var decodeAesonString = {
      decodeAeson: caseAesonString(new Data_Either.Left(new Data_Argonaut_Decode_Error.TypeMismatch("String")))(Data_Either.Right.create)
  };
  var toStringifiedNumbersJson = Control_Lazy.defer(Control_Lazy.lazyFn)(function (v) {
      return caseAeson({
          caseNull: Data_Function["const"](Data_Argonaut_Core.jsonNull),
          caseBoolean: Data_Argonaut_Encode_Encoders.encodeBoolean,
          caseFiniteBigNumber: function ($232) {
              return Data_Argonaut_Encode_Encoders.encodeString(Data_BigNumber.toString(unpackFinite($232)));
          },
          caseString: Data_Argonaut_Encode_Encoders.encodeString,
          caseArray: (function () {
              var $233 = Data_Functor.map(Data_Functor.functorArray)(toStringifiedNumbersJson);
              return function ($234) {
                  return Data_Argonaut_Core.fromArray($233($234));
              };
          })(),
          caseObject: (function () {
              var $235 = Data_Functor.map(Foreign_Object.functorObject)(toStringifiedNumbersJson);
              return function ($236) {
                  return Data_Argonaut_Core.fromObject($235($236));
              };
          })()
      });
  });
  var decodeAesonMaybe = function (dictDecodeAeson) {
      return {
          decodeAeson: function (aeson) {
              var mdecode = function (dictDecodeAeson1) {
                  return function (v) {
                      return Data_Functor.map(Data_Either.functorEither)(Data_Maybe.Just.create)(decodeAeson(dictDecodeAeson1)(aeson));
                  };
              };
              return caseAeson({
                  caseNull: Data_Function["const"](new Data_Either.Right(Data_Maybe.Nothing.value)),
                  caseBoolean: mdecode(dictDecodeAeson),
                  caseFiniteBigNumber: mdecode(dictDecodeAeson),
                  caseString: mdecode(dictDecodeAeson),
                  caseArray: mdecode(dictDecodeAeson),
                  caseObject: mdecode(dictDecodeAeson)
              })(aeson);
          }
      };
  };
  var decodeAesonFieldMaybe = function (dictDecodeAeson) {
      return {
          decodeAesonField: (function () {
              var $237 = Data_Maybe.maybe(new Data_Either.Right(Data_Maybe.Nothing.value))(decodeAeson(decodeAesonMaybe(dictDecodeAeson)));
              return function ($238) {
                  return Data_Maybe.Just.create($237($238));
              };
          })()
      };
  };
  exports["unpackFinite"] = unpackFinite;
  exports["caseAesonArray"] = caseAesonArray;
  exports["caseAesonBigInt"] = caseAesonBigInt;
  exports["caseAesonObject"] = caseAesonObject;
  exports["caseAesonString"] = caseAesonString;
  exports["decodeAeson"] = decodeAeson;
  exports["decodeJsonString"] = decodeJsonString;
  exports["encodeAeson"] = encodeAeson;
  exports["getField"] = getField;
  exports["getFieldOptional"] = getFieldOptional;
  exports["getFieldOptional'"] = getFieldOptional$prime;
  exports["parseJsonStringToAeson"] = parseJsonStringToAeson;
  exports["isNull"] = isNull;
  exports["toString"] = toString;
  exports["toStringifiedNumbersJson"] = toStringifiedNumbersJson;
  exports["showAeson"] = showAeson;
  exports["decodeAesonUInt"] = decodeAesonUInt;
  exports["decodeAesonInt"] = decodeAesonInt;
  exports["decodeAesonBigInt"] = decodeAesonBigInt;
  exports["decodeAesonNumber"] = decodeAesonNumber;
  exports["decodeAesonFiniteBigNumbe"] = decodeAesonFiniteBigNumbe;
  exports["decodeAesonBoolean"] = decodeAesonBoolean;
  exports["decodeAesonString"] = decodeAesonString;
  exports["decodeAesonAeson"] = decodeAesonAeson;
  exports["decodeAesonObject"] = decodeAesonObject;
  exports["decodeAesonRecord"] = decodeAesonRecord;
  exports["decodeAeson|+|"] = decodeAeson$bar$plus$bar;
  exports["decodeAesonArray"] = decodeAesonArray;
  exports["decodeAesonMaybe"] = decodeAesonMaybe;
  exports["gDecodeAesonRowNil"] = gDecodeAesonRowNil;
  exports["gDecodeAesonCons"] = gDecodeAesonCons;
  exports["decodeAesonFieldMaybe"] = decodeAesonFieldMaybe;
  exports["decodeAesonField1"] = decodeAesonField1;
  exports["encodeAesonBigInt"] = encodeAesonBigInt;
  exports["encodeAesonUInt"] = encodeAesonUInt;
  exports["encodeAesonString"] = encodeAesonString;
  exports["encodeAesonAeson"] = encodeAesonAeson;
  exports["encodeAesonObject"] = encodeAesonObject;
  exports["encodeAesonRecord"] = encodeAesonRecord;
  exports["encodeAesonArray"] = encodeAesonArray;
  exports["encodeTupleAuxTuple"] = encodeTupleAuxTuple;
  exports["encodeAesonTuple"] = encodeAesonTuple;
  exports["encodeAesonMaybe"] = encodeAesonMaybe;
  exports["gEncodeAesonNil"] = gEncodeAesonNil;
  exports["gEncodeAesonCons"] = gEncodeAesonCons;
  exports["stringifyAeson"] = $foreign.stringifyAeson;
})(PS);
(function(exports) {
  /* global XMLHttpRequest */
  /* global process */
  "use strict";

  exports._ajax = function () {
    var platformSpecific = { };
    if (typeof module !== "undefined" && module.require && !(typeof process !== "undefined" && process.versions["electron"])) {
      // We are on node.js
      platformSpecific.newXHR = function () {
        var XHR = module.require("xhr2");
        return new XHR();
      };

      platformSpecific.fixupUrl = function (url, xhr) {
        if (xhr.nodejsBaseUrl === null) {
          var urllib = module.require("url");
          var u = urllib.parse(url);
          u.protocol = u.protocol || "http:";
          u.hostname = u.hostname || "localhost";
          return urllib.format(u);
        } else {
          return url || "/";
        }
      };

      platformSpecific.getResponse = function (xhr) {
        return xhr.response;
      };
    } else {
      // We are in the browser
      platformSpecific.newXHR = function () {
        return new XMLHttpRequest();
      };

      platformSpecific.fixupUrl = function (url) {
        return url || "/";
      };

      platformSpecific.getResponse = function (xhr) {
        return xhr.response;
      };
    }

    return function (timeoutErrorMessageIdent, requestFailedMessageIdent, mkHeader, options) {
      return function (errback, callback) {
        var xhr = platformSpecific.newXHR();
        var fixedUrl = platformSpecific.fixupUrl(options.url, xhr);
        xhr.open(options.method || "GET", fixedUrl, true, options.username, options.password);
        if (options.headers) {
          try {
            // eslint-disable-next-line no-eq-null,eqeqeq
            for (var i = 0, header; (header = options.headers[i]) != null; i++) {
              xhr.setRequestHeader(header.field, header.value);
            }
          } catch (e) {
            errback(e);
          }
        }
        var onerror = function (msgIdent) {
          return function () {
            errback(new Error(msgIdent));
          };
        };
        xhr.onerror = onerror(requestFailedMessageIdent);
        xhr.ontimeout = onerror(timeoutErrorMessageIdent);
        xhr.onload = function () {
          callback({
            status: xhr.status,
            statusText: xhr.statusText,
            headers: xhr.getAllResponseHeaders().split("\r\n")
              .filter(function (header) {
                return header.length > 0;
              })
              .map(function (header) {
                var i = header.indexOf(":");
                return mkHeader(header.substring(0, i))(header.substring(i + 2));
              }),
            body: platformSpecific.getResponse(xhr)
          });
        };
        xhr.responseType = options.responseType;
        xhr.withCredentials = options.withCredentials;
        xhr.timeout = options.timeout;
        xhr.send(options.content);

        return function (error, cancelErrback, cancelCallback) {
          try {
            xhr.abort();
          } catch (e) {
            return cancelErrback(e);
          }
          return cancelCallback();
        };
      };
    };
  }();
})(PS["Affjax"] = PS["Affjax"] || {});
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Data.MediaType.Common"] = $PS["Data.MediaType.Common"] || {};
  var exports = $PS["Data.MediaType.Common"];          
  var applicationJSON = "application/json";
  var applicationFormURLEncoded = "application/x-www-form-urlencoded";
  exports["applicationFormURLEncoded"] = applicationFormURLEncoded;
  exports["applicationJSON"] = applicationJSON;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Affjax.RequestBody"] = $PS["Affjax.RequestBody"] || {};
  var exports = $PS["Affjax.RequestBody"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_MediaType_Common = $PS["Data.MediaType.Common"];                
  var ArrayView = (function () {
      function ArrayView(value0) {
          this.value0 = value0;
      };
      ArrayView.create = function (value0) {
          return new ArrayView(value0);
      };
      return ArrayView;
  })();
  var Blob = (function () {
      function Blob(value0) {
          this.value0 = value0;
      };
      Blob.create = function (value0) {
          return new Blob(value0);
      };
      return Blob;
  })();
  var Document = (function () {
      function Document(value0) {
          this.value0 = value0;
      };
      Document.create = function (value0) {
          return new Document(value0);
      };
      return Document;
  })();
  var $$String = (function () {
      function $$String(value0) {
          this.value0 = value0;
      };
      $$String.create = function (value0) {
          return new $$String(value0);
      };
      return $$String;
  })();
  var FormData = (function () {
      function FormData(value0) {
          this.value0 = value0;
      };
      FormData.create = function (value0) {
          return new FormData(value0);
      };
      return FormData;
  })();
  var FormURLEncoded = (function () {
      function FormURLEncoded(value0) {
          this.value0 = value0;
      };
      FormURLEncoded.create = function (value0) {
          return new FormURLEncoded(value0);
      };
      return FormURLEncoded;
  })();
  var Json = (function () {
      function Json(value0) {
          this.value0 = value0;
      };
      Json.create = function (value0) {
          return new Json(value0);
      };
      return Json;
  })();
  var toMediaType = function (v) {
      if (v instanceof FormURLEncoded) {
          return new Data_Maybe.Just(Data_MediaType_Common.applicationFormURLEncoded);
      };
      if (v instanceof Json) {
          return new Data_Maybe.Just(Data_MediaType_Common.applicationJSON);
      };
      return Data_Maybe.Nothing.value;
  };
  var string = $$String.create;
  var arrayView = function (av) {
      return new ArrayView(function (f) {
          return f(av);
      });
  };
  exports["ArrayView"] = ArrayView;
  exports["Blob"] = Blob;
  exports["Document"] = Document;
  exports["String"] = $$String;
  exports["FormData"] = FormData;
  exports["FormURLEncoded"] = FormURLEncoded;
  exports["Json"] = Json;
  exports["arrayView"] = arrayView;
  exports["string"] = string;
  exports["toMediaType"] = toMediaType;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Affjax.RequestHeader"] = $PS["Affjax.RequestHeader"] || {};
  var exports = $PS["Affjax.RequestHeader"];
  var Data_Newtype = $PS["Data.Newtype"];          
  var Accept = (function () {
      function Accept(value0) {
          this.value0 = value0;
      };
      Accept.create = function (value0) {
          return new Accept(value0);
      };
      return Accept;
  })();
  var ContentType = (function () {
      function ContentType(value0) {
          this.value0 = value0;
      };
      ContentType.create = function (value0) {
          return new ContentType(value0);
      };
      return ContentType;
  })();
  var RequestHeader = (function () {
      function RequestHeader(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      RequestHeader.create = function (value0) {
          return function (value1) {
              return new RequestHeader(value0, value1);
          };
      };
      return RequestHeader;
  })();
  var value = function (v) {
      if (v instanceof Accept) {
          return Data_Newtype.unwrap()(v.value0);
      };
      if (v instanceof ContentType) {
          return Data_Newtype.unwrap()(v.value0);
      };
      if (v instanceof RequestHeader) {
          return v.value1;
      };
      throw new Error("Failed pattern match at Affjax.RequestHeader (line 26, column 1 - line 26, column 33): " + [ v.constructor.name ]);
  };
  var name = function (v) {
      if (v instanceof Accept) {
          return "Accept";
      };
      if (v instanceof ContentType) {
          return "Content-Type";
      };
      if (v instanceof RequestHeader) {
          return v.value0;
      };
      throw new Error("Failed pattern match at Affjax.RequestHeader (line 21, column 1 - line 21, column 32): " + [ v.constructor.name ]);
  };
  exports["Accept"] = Accept;
  exports["ContentType"] = ContentType;
  exports["RequestHeader"] = RequestHeader;
  exports["name"] = name;
  exports["value"] = value;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Affjax.ResponseFormat"] = $PS["Affjax.ResponseFormat"] || {};
  var exports = $PS["Affjax.ResponseFormat"];
  var Control_Category = $PS["Control.Category"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_MediaType_Common = $PS["Data.MediaType.Common"];                
  var $$ArrayBuffer = (function () {
      function $$ArrayBuffer(value0) {
          this.value0 = value0;
      };
      $$ArrayBuffer.create = function (value0) {
          return new $$ArrayBuffer(value0);
      };
      return $$ArrayBuffer;
  })();
  var Blob = (function () {
      function Blob(value0) {
          this.value0 = value0;
      };
      Blob.create = function (value0) {
          return new Blob(value0);
      };
      return Blob;
  })();
  var Document = (function () {
      function Document(value0) {
          this.value0 = value0;
      };
      Document.create = function (value0) {
          return new Document(value0);
      };
      return Document;
  })();
  var Json = (function () {
      function Json(value0) {
          this.value0 = value0;
      };
      Json.create = function (value0) {
          return new Json(value0);
      };
      return Json;
  })();
  var $$String = (function () {
      function $$String(value0) {
          this.value0 = value0;
      };
      $$String.create = function (value0) {
          return new $$String(value0);
      };
      return $$String;
  })();
  var Ignore = (function () {
      function Ignore(value0) {
          this.value0 = value0;
      };
      Ignore.create = function (value0) {
          return new Ignore(value0);
      };
      return Ignore;
  })();
  var toResponseType = function (v) {
      if (v instanceof $$ArrayBuffer) {
          return "arraybuffer";
      };
      if (v instanceof Blob) {
          return "blob";
      };
      if (v instanceof Document) {
          return "document";
      };
      if (v instanceof Json) {
          return "text";
      };
      if (v instanceof $$String) {
          return "text";
      };
      if (v instanceof Ignore) {
          return "";
      };
      throw new Error("Failed pattern match at Affjax.ResponseFormat (line 44, column 3 - line 50, column 19): " + [ v.constructor.name ]);
  };
  var toMediaType = function (v) {
      if (v instanceof Json) {
          return new Data_Maybe.Just(Data_MediaType_Common.applicationJSON);
      };
      return Data_Maybe.Nothing.value;
  };
  var string = new $$String(Control_Category.identity(Control_Category.categoryFn));
  var ignore = new Ignore(Control_Category.identity(Control_Category.categoryFn));
  exports["ArrayBuffer"] = $$ArrayBuffer;
  exports["Blob"] = Blob;
  exports["Document"] = Document;
  exports["Json"] = Json;
  exports["String"] = $$String;
  exports["Ignore"] = Ignore;
  exports["string"] = string;
  exports["ignore"] = ignore;
  exports["toResponseType"] = toResponseType;
  exports["toMediaType"] = toMediaType;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Affjax.ResponseHeader"] = $PS["Affjax.ResponseHeader"] || {};
  var exports = $PS["Affjax.ResponseHeader"];
  var Data_Show = $PS["Data.Show"];                
  var ResponseHeader = (function () {
      function ResponseHeader(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      ResponseHeader.create = function (value0) {
          return function (value1) {
              return new ResponseHeader(value0, value1);
          };
      };
      return ResponseHeader;
  })();
  var showResponseHeader = {
      show: function (v) {
          return "(ResponseHeader " + (Data_Show.show(Data_Show.showString)(v.value0) + (" " + (Data_Show.show(Data_Show.showString)(v.value1) + ")")));
      }
  };
  exports["ResponseHeader"] = ResponseHeader;
  exports["showResponseHeader"] = showResponseHeader;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Control.Monad.Except"] = $PS["Control.Monad.Except"] || {};
  var exports = $PS["Control.Monad.Except"];
  var Control_Monad_Except_Trans = $PS["Control.Monad.Except.Trans"];
  var Data_Newtype = $PS["Data.Newtype"];                                                
  var runExcept = (function () {
      var $0 = Data_Newtype.unwrap();
      return function ($1) {
          return $0(Control_Monad_Except_Trans.runExceptT($1));
      };
  })();
  exports["runExcept"] = runExcept;
})(PS);
(function(exports) {
  "use strict";

  exports._jsonParser = function (fail, succ, s) {
    try {
      return succ(JSON.parse(s));
    }
    catch (e) {
      return fail(e.message);
    }
  };
})(PS["Data.Argonaut.Parser"] = PS["Data.Argonaut.Parser"] || {});
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Data.Argonaut.Parser"] = $PS["Data.Argonaut.Parser"] || {};
  var exports = $PS["Data.Argonaut.Parser"];
  var $foreign = $PS["Data.Argonaut.Parser"];
  var Data_Either = $PS["Data.Either"];                
  var jsonParser = function (j) {
      return $foreign["_jsonParser"](Data_Either.Left.create, Data_Either.Right.create, j);
  };
  exports["jsonParser"] = jsonParser;
})(PS);
(function(exports) {
  "use strict";

  exports.replaceAll = function (s1) {
    return function (s2) {
      return function (s3) {
        return s3.replace(new RegExp(s1.replace(/[-\/\\^$*+?.()|[\]{}]/g, "\\$&"), "g"), s2); // eslint-disable-line no-useless-escape
      };
    };
  };

  exports.split = function (sep) {
    return function (s) {
      return s.split(sep);
    };
  };

  exports.joinWith = function (s) {
    return function (xs) {
      return xs.join(s);
    };
  };
})(PS["Data.String.Common"] = PS["Data.String.Common"] || {});
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Data.String.Common"] = $PS["Data.String.Common"] || {};
  var exports = $PS["Data.String.Common"];
  var $foreign = $PS["Data.String.Common"];                
  var $$null = function (s) {
      return s === "";
  };
  exports["null"] = $$null;
  exports["replaceAll"] = $foreign.replaceAll;
  exports["split"] = $foreign.split;
  exports["joinWith"] = $foreign.joinWith;
})(PS);
(function(exports) {
  "use strict";

  // A helper which transforms the result ofencodeURIComponent to be compliant
  // with RFC3896, as described in the MDN documentation here:
  //
  // https://web.archive.org/web/20201206001047/https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/encodeURIComponent
  function toRFC3896(input) {
    return input.replace(/[!'()*]/g, function (c) {
      return "%" + c.charCodeAt(0).toString(16);
    });
  } 

  exports._encodeFormURLComponent = function encode(fail, succeed, input) {
    try {
      return succeed(toRFC3896(encodeURIComponent(input)).replace(/%20/g, "+"));
    } catch (err) {
      return fail(err);
    }
  };
})(PS["JSURI"] = PS["JSURI"] || {});
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["JSURI"] = $PS["JSURI"] || {};
  var exports = $PS["JSURI"];
  var $foreign = $PS["JSURI"];
  var Data_Function = $PS["Data.Function"];
  var Data_Function_Uncurried = $PS["Data.Function.Uncurried"];
  var Data_Maybe = $PS["Data.Maybe"];                                                                                                                                  
  var encodeFormURLComponent = Data_Function_Uncurried.runFn3($foreign["_encodeFormURLComponent"])(Data_Function["const"](Data_Maybe.Nothing.value))(Data_Maybe.Just.create);
  exports["encodeFormURLComponent"] = encodeFormURLComponent;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Data.FormURLEncoded"] = $PS["Data.FormURLEncoded"] || {};
  var exports = $PS["Data.FormURLEncoded"];
  var Control_Apply = $PS["Control.Apply"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_String_Common = $PS["Data.String.Common"];
  var Data_Traversable = $PS["Data.Traversable"];
  var JSURI = $PS["JSURI"];
  var toArray = function (v) {
      return v;
  };                                                                                                                 
  var encode = (function () {
      var encodePart = function (v) {
          if (v.value1 instanceof Data_Maybe.Nothing) {
              return JSURI.encodeFormURLComponent(v.value0);
          };
          if (v.value1 instanceof Data_Maybe.Just) {
              return Control_Apply.apply(Data_Maybe.applyMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(function (key) {
                  return function (val) {
                      return key + ("=" + val);
                  };
              })(JSURI.encodeFormURLComponent(v.value0)))(JSURI.encodeFormURLComponent(v.value1.value0));
          };
          throw new Error("Failed pattern match at Data.FormURLEncoded (line 37, column 18 - line 39, column 116): " + [ v.constructor.name ]);
      };
      var $16 = Data_Functor.map(Data_Maybe.functorMaybe)(Data_String_Common.joinWith("&"));
      var $17 = Data_Traversable.traverse(Data_Traversable.traversableArray)(Data_Maybe.applicativeMaybe)(encodePart);
      return function ($18) {
          return $16($17(toArray($18)));
      };
  })();
  exports["encode"] = encode;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Data.HTTP.Method"] = $PS["Data.HTTP.Method"] || {};
  var exports = $PS["Data.HTTP.Method"];
  var Data_Either = $PS["Data.Either"];
  var Data_Show = $PS["Data.Show"];                                  
  var OPTIONS = (function () {
      function OPTIONS() {

      };
      OPTIONS.value = new OPTIONS();
      return OPTIONS;
  })();
  var GET = (function () {
      function GET() {

      };
      GET.value = new GET();
      return GET;
  })();
  var HEAD = (function () {
      function HEAD() {

      };
      HEAD.value = new HEAD();
      return HEAD;
  })();
  var POST = (function () {
      function POST() {

      };
      POST.value = new POST();
      return POST;
  })();
  var PUT = (function () {
      function PUT() {

      };
      PUT.value = new PUT();
      return PUT;
  })();
  var DELETE = (function () {
      function DELETE() {

      };
      DELETE.value = new DELETE();
      return DELETE;
  })();
  var TRACE = (function () {
      function TRACE() {

      };
      TRACE.value = new TRACE();
      return TRACE;
  })();
  var CONNECT = (function () {
      function CONNECT() {

      };
      CONNECT.value = new CONNECT();
      return CONNECT;
  })();
  var PROPFIND = (function () {
      function PROPFIND() {

      };
      PROPFIND.value = new PROPFIND();
      return PROPFIND;
  })();
  var PROPPATCH = (function () {
      function PROPPATCH() {

      };
      PROPPATCH.value = new PROPPATCH();
      return PROPPATCH;
  })();
  var MKCOL = (function () {
      function MKCOL() {

      };
      MKCOL.value = new MKCOL();
      return MKCOL;
  })();
  var COPY = (function () {
      function COPY() {

      };
      COPY.value = new COPY();
      return COPY;
  })();
  var MOVE = (function () {
      function MOVE() {

      };
      MOVE.value = new MOVE();
      return MOVE;
  })();
  var LOCK = (function () {
      function LOCK() {

      };
      LOCK.value = new LOCK();
      return LOCK;
  })();
  var UNLOCK = (function () {
      function UNLOCK() {

      };
      UNLOCK.value = new UNLOCK();
      return UNLOCK;
  })();
  var PATCH = (function () {
      function PATCH() {

      };
      PATCH.value = new PATCH();
      return PATCH;
  })();
  var unCustomMethod = function (v) {
      return v;
  };
  var showMethod = {
      show: function (v) {
          if (v instanceof OPTIONS) {
              return "OPTIONS";
          };
          if (v instanceof GET) {
              return "GET";
          };
          if (v instanceof HEAD) {
              return "HEAD";
          };
          if (v instanceof POST) {
              return "POST";
          };
          if (v instanceof PUT) {
              return "PUT";
          };
          if (v instanceof DELETE) {
              return "DELETE";
          };
          if (v instanceof TRACE) {
              return "TRACE";
          };
          if (v instanceof CONNECT) {
              return "CONNECT";
          };
          if (v instanceof PROPFIND) {
              return "PROPFIND";
          };
          if (v instanceof PROPPATCH) {
              return "PROPPATCH";
          };
          if (v instanceof MKCOL) {
              return "MKCOL";
          };
          if (v instanceof COPY) {
              return "COPY";
          };
          if (v instanceof MOVE) {
              return "MOVE";
          };
          if (v instanceof LOCK) {
              return "LOCK";
          };
          if (v instanceof UNLOCK) {
              return "UNLOCK";
          };
          if (v instanceof PATCH) {
              return "PATCH";
          };
          throw new Error("Failed pattern match at Data.HTTP.Method (line 43, column 1 - line 59, column 23): " + [ v.constructor.name ]);
      }
  };
  var print = Data_Either.either(Data_Show.show(showMethod))(unCustomMethod);
  exports["GET"] = GET;
  exports["POST"] = POST;
  exports["print"] = print;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Data.Identity"] = $PS["Data.Identity"] || {};
  var exports = $PS["Data.Identity"];              
  var Identity = function (x) {
      return x;
  };
  var functorIdentity = {
      map: function (f) {
          return function (m) {
              return f(m);
          };
      }
  };
  var applyIdentity = {
      apply: function (v) {
          return function (v1) {
              return v(v1);
          };
      },
      Functor0: function () {
          return functorIdentity;
      }
  };
  var bindIdentity = {
      bind: function (v) {
          return function (f) {
              return f(v);
          };
      },
      Apply0: function () {
          return applyIdentity;
      }
  };
  var applicativeIdentity = {
      pure: Identity,
      Apply0: function () {
          return applyIdentity;
      }
  };
  var monadIdentity = {
      Applicative0: function () {
          return applicativeIdentity;
      },
      Bind1: function () {
          return bindIdentity;
      }
  };
  exports["functorIdentity"] = functorIdentity;
  exports["monadIdentity"] = monadIdentity;
})(PS);
(function(exports) {
  /* eslint-disable no-eq-null, eqeqeq */

  "use strict";

  exports["null"] = null;

  exports.notNull = function (x) {
    return x;
  };
})(PS["Data.Nullable"] = PS["Data.Nullable"] || {});
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Data.Nullable"] = $PS["Data.Nullable"] || {};
  var exports = $PS["Data.Nullable"];
  var $foreign = $PS["Data.Nullable"];
  var Data_Maybe = $PS["Data.Maybe"];              
  var toNullable = Data_Maybe.maybe($foreign["null"])($foreign.notNull);
  exports["toNullable"] = toNullable;
})(PS);
(function(exports) {
  /* globals setImmediate, clearImmediate, setTimeout, clearTimeout */
  /* eslint-disable no-unused-vars, no-prototype-builtins, no-use-before-define, no-unused-labels, no-param-reassign */
  "use strict";

  var Aff = function () {
    // A unique value for empty.
    var EMPTY = {};

    /*

  An awkward approximation. We elide evidence we would otherwise need in PS for
  efficiency sake.

  data Aff eff a
    = Pure a
    | Throw Error
    | Catch (Aff eff a) (Error -> Aff eff a)
    | Sync (Eff eff a)
    | Async ((Either Error a -> Eff eff Unit) -> Eff eff (Canceler eff))
    | forall b. Bind (Aff eff b) (b -> Aff eff a)
    | forall b. Bracket (Aff eff b) (BracketConditions eff b) (b -> Aff eff a)
    | forall b. Fork Boolean (Aff eff b) ?(Fiber eff b -> a)
    | Sequential (ParAff aff a)

  */  
    var PURE    = "Pure";
    var THROW   = "Throw";
    var CATCH   = "Catch";
    var SYNC    = "Sync";
    var ASYNC   = "Async";
    var BIND    = "Bind";
    var BRACKET = "Bracket";
    var FORK    = "Fork";
    var SEQ     = "Sequential";

    /*

  data ParAff eff a
    = forall b. Map (b -> a) (ParAff eff b)
    | forall b. Apply (ParAff eff (b -> a)) (ParAff eff b)
    | Alt (ParAff eff a) (ParAff eff a)
    | ?Par (Aff eff a)

  */  
    var MAP   = "Map";
    var APPLY = "Apply";
    var ALT   = "Alt";

    // Various constructors used in interpretation
    var CONS      = "Cons";      // Cons-list, for stacks
    var RESUME    = "Resume";    // Continue indiscriminately
    var RELEASE   = "Release";   // Continue with bracket finalizers
    var FINALIZER = "Finalizer"; // A non-interruptible effect
    var FINALIZED = "Finalized"; // Marker for finalization
    var FORKED    = "Forked";    // Reference to a forked fiber, with resumption stack
    var FIBER     = "Fiber";     // Actual fiber reference
    var THUNK     = "Thunk";     // Primed effect, ready to invoke

    function Aff(tag, _1, _2, _3) {
      this.tag = tag;
      this._1  = _1;
      this._2  = _2;
      this._3  = _3;
    }

    function AffCtr(tag) {
      var fn = function (_1, _2, _3) {
        return new Aff(tag, _1, _2, _3);
      };
      fn.tag = tag;
      return fn;
    }

    function nonCanceler(error) {
      return new Aff(PURE, void 0);
    }

    function runEff(eff) {
      try {
        eff();
      } catch (error) {
        setTimeout(function () {
          throw error;
        }, 0);
      }
    }

    function runSync(left, right, eff) {
      try {
        return right(eff());
      } catch (error) {
        return left(error);
      }
    }

    function runAsync(left, eff, k) {
      try {
        return eff(k)();
      } catch (error) {
        k(left(error))();
        return nonCanceler;
      }
    }

    var Scheduler = function () {
      var limit    = 1024;
      var size     = 0;
      var ix       = 0;
      var queue    = new Array(limit);
      var draining = false;

      function drain() {
        var thunk;
        draining = true;
        while (size !== 0) {
          size--;
          thunk     = queue[ix];
          queue[ix] = void 0;
          ix        = (ix + 1) % limit;
          thunk();
        }
        draining = false;
      }

      return {
        isDraining: function () {
          return draining;
        },
        enqueue: function (cb) {
          var i, tmp;
          if (size === limit) {
            tmp = draining;
            drain();
            draining = tmp;
          }

          queue[(ix + size) % limit] = cb;
          size++;

          if (!draining) {
            drain();
          }
        }
      };
    }();

    function Supervisor(util) {
      var fibers  = {};
      var fiberId = 0;
      var count   = 0;

      return {
        register: function (fiber) {
          var fid = fiberId++;
          fiber.onComplete({
            rethrow: true,
            handler: function (result) {
              return function () {
                count--;
                delete fibers[fid];
              };
            }
          })();
          fibers[fid] = fiber;
          count++;
        },
        isEmpty: function () {
          return count === 0;
        },
        killAll: function (killError, cb) {
          return function () {
            if (count === 0) {
              return cb();
            }

            var killCount = 0;
            var kills     = {};

            function kill(fid) {
              kills[fid] = fibers[fid].kill(killError, function (result) {
                return function () {
                  delete kills[fid];
                  killCount--;
                  if (util.isLeft(result) && util.fromLeft(result)) {
                    setTimeout(function () {
                      throw util.fromLeft(result);
                    }, 0);
                  }
                  if (killCount === 0) {
                    cb();
                  }
                };
              })();
            }

            for (var k in fibers) {
              if (fibers.hasOwnProperty(k)) {
                killCount++;
                kill(k);
              }
            }

            fibers  = {};
            fiberId = 0;
            count   = 0;

            return function (error) {
              return new Aff(SYNC, function () {
                for (var k in kills) {
                  if (kills.hasOwnProperty(k)) {
                    kills[k]();
                  }
                }
              });
            };
          };
        }
      };
    }

    // Fiber state machine
    var SUSPENDED   = 0; // Suspended, pending a join.
    var CONTINUE    = 1; // Interpret the next instruction.
    var STEP_BIND   = 2; // Apply the next bind.
    var STEP_RESULT = 3; // Handle potential failure from a result.
    var PENDING     = 4; // An async effect is running.
    var RETURN      = 5; // The current stack has returned.
    var COMPLETED   = 6; // The entire fiber has completed.

    function Fiber(util, supervisor, aff) {
      // Monotonically increasing tick, increased on each asynchronous turn.
      var runTick = 0;

      // The current branch of the state machine.
      var status = SUSPENDED;

      // The current point of interest for the state machine branch.
      var step      = aff;  // Successful step
      var fail      = null; // Failure step
      var interrupt = null; // Asynchronous interrupt

      // Stack of continuations for the current fiber.
      var bhead = null;
      var btail = null;

      // Stack of attempts and finalizers for error recovery. Every `Cons` is also
      // tagged with current `interrupt` state. We use this to track which items
      // should be ignored or evaluated as a result of a kill.
      var attempts = null;

      // A special state is needed for Bracket, because it cannot be killed. When
      // we enter a bracket acquisition or finalizer, we increment the counter,
      // and then decrement once complete.
      var bracketCount = 0;

      // Each join gets a new id so they can be revoked.
      var joinId  = 0;
      var joins   = null;
      var rethrow = true;

      // Each invocation of `run` requires a tick. When an asynchronous effect is
      // resolved, we must check that the local tick coincides with the fiber
      // tick before resuming. This prevents multiple async continuations from
      // accidentally resuming the same fiber. A common example may be invoking
      // the provided callback in `makeAff` more than once, but it may also be an
      // async effect resuming after the fiber was already cancelled.
      function run(localRunTick) {
        var tmp, result, attempt;
        while (true) {
          tmp       = null;
          result    = null;
          attempt   = null;

          switch (status) {
          case STEP_BIND:
            status = CONTINUE;
            try {
              step   = bhead(step);
              if (btail === null) {
                bhead = null;
              } else {
                bhead = btail._1;
                btail = btail._2;
              }
            } catch (e) {
              status = RETURN;
              fail   = util.left(e);
              step   = null;
            }
            break;

          case STEP_RESULT:
            if (util.isLeft(step)) {
              status = RETURN;
              fail   = step;
              step   = null;
            } else if (bhead === null) {
              status = RETURN;
            } else {
              status = STEP_BIND;
              step   = util.fromRight(step);
            }
            break;

          case CONTINUE:
            switch (step.tag) {
            case BIND:
              if (bhead) {
                btail = new Aff(CONS, bhead, btail);
              }
              bhead  = step._2;
              status = CONTINUE;
              step   = step._1;
              break;

            case PURE:
              if (bhead === null) {
                status = RETURN;
                step   = util.right(step._1);
              } else {
                status = STEP_BIND;
                step   = step._1;
              }
              break;

            case SYNC:
              status = STEP_RESULT;
              step   = runSync(util.left, util.right, step._1);
              break;

            case ASYNC:
              status = PENDING;
              step   = runAsync(util.left, step._1, function (result) {
                return function () {
                  if (runTick !== localRunTick) {
                    return;
                  }
                  runTick++;
                  Scheduler.enqueue(function () {
                    // It's possible to interrupt the fiber between enqueuing and
                    // resuming, so we need to check that the runTick is still
                    // valid.
                    if (runTick !== localRunTick + 1) {
                      return;
                    }
                    status = STEP_RESULT;
                    step   = result;
                    run(runTick);
                  });
                };
              });
              return;

            case THROW:
              status = RETURN;
              fail   = util.left(step._1);
              step   = null;
              break;

            // Enqueue the Catch so that we can call the error handler later on
            // in case of an exception.
            case CATCH:
              if (bhead === null) {
                attempts = new Aff(CONS, step, attempts, interrupt);
              } else {
                attempts = new Aff(CONS, step, new Aff(CONS, new Aff(RESUME, bhead, btail), attempts, interrupt), interrupt);
              }
              bhead    = null;
              btail    = null;
              status   = CONTINUE;
              step     = step._1;
              break;

            // Enqueue the Bracket so that we can call the appropriate handlers
            // after resource acquisition.
            case BRACKET:
              bracketCount++;
              if (bhead === null) {
                attempts = new Aff(CONS, step, attempts, interrupt);
              } else {
                attempts = new Aff(CONS, step, new Aff(CONS, new Aff(RESUME, bhead, btail), attempts, interrupt), interrupt);
              }
              bhead  = null;
              btail  = null;
              status = CONTINUE;
              step   = step._1;
              break;

            case FORK:
              status = STEP_RESULT;
              tmp    = Fiber(util, supervisor, step._2);
              if (supervisor) {
                supervisor.register(tmp);
              }
              if (step._1) {
                tmp.run();
              }
              step = util.right(tmp);
              break;

            case SEQ:
              status = CONTINUE;
              step   = sequential(util, supervisor, step._1);
              break;
            }
            break;

          case RETURN:
            bhead = null;
            btail = null;
            // If the current stack has returned, and we have no other stacks to
            // resume or finalizers to run, the fiber has halted and we can
            // invoke all join callbacks. Otherwise we need to resume.
            if (attempts === null) {
              status = COMPLETED;
              step   = interrupt || fail || step;
            } else {
              // The interrupt status for the enqueued item.
              tmp      = attempts._3;
              attempt  = attempts._1;
              attempts = attempts._2;

              switch (attempt.tag) {
              // We cannot recover from an unmasked interrupt. Otherwise we should
              // continue stepping, or run the exception handler if an exception
              // was raised.
              case CATCH:
                // We should compare the interrupt status as well because we
                // only want it to apply if there has been an interrupt since
                // enqueuing the catch.
                if (interrupt && interrupt !== tmp && bracketCount === 0) {
                  status = RETURN;
                } else if (fail) {
                  status = CONTINUE;
                  step   = attempt._2(util.fromLeft(fail));
                  fail   = null;
                }
                break;

              // We cannot resume from an unmasked interrupt or exception.
              case RESUME:
                // As with Catch, we only want to ignore in the case of an
                // interrupt since enqueing the item.
                if (interrupt && interrupt !== tmp && bracketCount === 0 || fail) {
                  status = RETURN;
                } else {
                  bhead  = attempt._1;
                  btail  = attempt._2;
                  status = STEP_BIND;
                  step   = util.fromRight(step);
                }
                break;

              // If we have a bracket, we should enqueue the handlers,
              // and continue with the success branch only if the fiber has
              // not been interrupted. If the bracket acquisition failed, we
              // should not run either.
              case BRACKET:
                bracketCount--;
                if (fail === null) {
                  result   = util.fromRight(step);
                  // We need to enqueue the Release with the same interrupt
                  // status as the Bracket that is initiating it.
                  attempts = new Aff(CONS, new Aff(RELEASE, attempt._2, result), attempts, tmp);
                  // We should only coninue as long as the interrupt status has not changed or
                  // we are currently within a non-interruptable finalizer.
                  if (interrupt === tmp || bracketCount > 0) {
                    status = CONTINUE;
                    step   = attempt._3(result);
                  }
                }
                break;

              // Enqueue the appropriate handler. We increase the bracket count
              // because it should not be cancelled.
              case RELEASE:
                attempts = new Aff(CONS, new Aff(FINALIZED, step, fail), attempts, interrupt);
                status   = CONTINUE;
                // It has only been killed if the interrupt status has changed
                // since we enqueued the item, and the bracket count is 0. If the
                // bracket count is non-zero then we are in a masked state so it's
                // impossible to be killed.
                if (interrupt && interrupt !== tmp && bracketCount === 0) {
                  step = attempt._1.killed(util.fromLeft(interrupt))(attempt._2);
                } else if (fail) {
                  step = attempt._1.failed(util.fromLeft(fail))(attempt._2);
                } else {
                  step = attempt._1.completed(util.fromRight(step))(attempt._2);
                }
                fail = null;
                bracketCount++;
                break;

              case FINALIZER:
                bracketCount++;
                attempts = new Aff(CONS, new Aff(FINALIZED, step, fail), attempts, interrupt);
                status   = CONTINUE;
                step     = attempt._1;
                break;

              case FINALIZED:
                bracketCount--;
                status = RETURN;
                step   = attempt._1;
                fail   = attempt._2;
                break;
              }
            }
            break;

          case COMPLETED:
            for (var k in joins) {
              if (joins.hasOwnProperty(k)) {
                rethrow = rethrow && joins[k].rethrow;
                runEff(joins[k].handler(step));
              }
            }
            joins = null;
            // If we have an interrupt and a fail, then the thread threw while
            // running finalizers. This should always rethrow in a fresh stack.
            if (interrupt && fail) {
              setTimeout(function () {
                throw util.fromLeft(fail);
              }, 0);
            // If we have an unhandled exception, and no other fiber has joined
            // then we need to throw the exception in a fresh stack.
            } else if (util.isLeft(step) && rethrow) {
              setTimeout(function () {
                // Guard on reathrow because a completely synchronous fiber can
                // still have an observer which was added after-the-fact.
                if (rethrow) {
                  throw util.fromLeft(step);
                }
              }, 0);
            }
            return;
          case SUSPENDED:
            status = CONTINUE;
            break;
          case PENDING: return;
          }
        }
      }

      function onComplete(join) {
        return function () {
          if (status === COMPLETED) {
            rethrow = rethrow && join.rethrow;
            join.handler(step)();
            return function () {};
          }

          var jid    = joinId++;
          joins      = joins || {};
          joins[jid] = join;

          return function() {
            if (joins !== null) {
              delete joins[jid];
            }
          };
        };
      }

      function kill(error, cb) {
        return function () {
          if (status === COMPLETED) {
            cb(util.right(void 0))();
            return function () {};
          }

          var canceler = onComplete({
            rethrow: false,
            handler: function (/* unused */) {
              return cb(util.right(void 0));
            }
          })();

          switch (status) {
          case SUSPENDED:
            interrupt = util.left(error);
            status    = COMPLETED;
            step      = interrupt;
            run(runTick);
            break;
          case PENDING:
            if (interrupt === null) {
              interrupt = util.left(error);
            }
            if (bracketCount === 0) {
              if (status === PENDING) {
                attempts = new Aff(CONS, new Aff(FINALIZER, step(error)), attempts, interrupt);
              }
              status   = RETURN;
              step     = null;
              fail     = null;
              run(++runTick);
            }
            break;
          default:
            if (interrupt === null) {
              interrupt = util.left(error);
            }
            if (bracketCount === 0) {
              status = RETURN;
              step   = null;
              fail   = null;
            }
          }

          return canceler;
        };
      }

      function join(cb) {
        return function () {
          var canceler = onComplete({
            rethrow: false,
            handler: cb
          })();
          if (status === SUSPENDED) {
            run(runTick);
          }
          return canceler;
        };
      }

      return {
        kill: kill,
        join: join,
        onComplete: onComplete,
        isSuspended: function () {
          return status === SUSPENDED;
        },
        run: function () {
          if (status === SUSPENDED) {
            if (!Scheduler.isDraining()) {
              Scheduler.enqueue(function () {
                run(runTick);
              });
            } else {
              run(runTick);
            }
          }
        }
      };
    }

    function runPar(util, supervisor, par, cb) {
      // Table of all forked fibers.
      var fiberId   = 0;
      var fibers    = {};

      // Table of currently running cancelers, as a product of `Alt` behavior.
      var killId    = 0;
      var kills     = {};

      // Error used for early cancelation on Alt branches.
      var early     = new Error("[ParAff] Early exit");

      // Error used to kill the entire tree.
      var interrupt = null;

      // The root pointer of the tree.
      var root      = EMPTY;

      // Walks a tree, invoking all the cancelers. Returns the table of pending
      // cancellation fibers.
      function kill(error, par, cb) {
        var step  = par;
        var head  = null;
        var tail  = null;
        var count = 0;
        var kills = {};
        var tmp, kid;

        loop: while (true) {
          tmp = null;

          switch (step.tag) {
          case FORKED:
            if (step._3 === EMPTY) {
              tmp = fibers[step._1];
              kills[count++] = tmp.kill(error, function (result) {
                return function () {
                  count--;
                  if (count === 0) {
                    cb(result)();
                  }
                };
              });
            }
            // Terminal case.
            if (head === null) {
              break loop;
            }
            // Go down the right side of the tree.
            step = head._2;
            if (tail === null) {
              head = null;
            } else {
              head = tail._1;
              tail = tail._2;
            }
            break;
          case MAP:
            step = step._2;
            break;
          case APPLY:
          case ALT:
            if (head) {
              tail = new Aff(CONS, head, tail);
            }
            head = step;
            step = step._1;
            break;
          }
        }

        if (count === 0) {
          cb(util.right(void 0))();
        } else {
          // Run the cancelation effects. We alias `count` because it's mutable.
          kid = 0;
          tmp = count;
          for (; kid < tmp; kid++) {
            kills[kid] = kills[kid]();
          }
        }

        return kills;
      }

      // When a fiber resolves, we need to bubble back up the tree with the
      // result, computing the applicative nodes.
      function join(result, head, tail) {
        var fail, step, lhs, rhs, tmp, kid;

        if (util.isLeft(result)) {
          fail = result;
          step = null;
        } else {
          step = result;
          fail = null;
        }

        loop: while (true) {
          lhs = null;
          rhs = null;
          tmp = null;
          kid = null;

          // We should never continue if the entire tree has been interrupted.
          if (interrupt !== null) {
            return;
          }

          // We've made it all the way to the root of the tree, which means
          // the tree has fully evaluated.
          if (head === null) {
            cb(fail || step)();
            return;
          }

          // The tree has already been computed, so we shouldn't try to do it
          // again. This should never happen.
          // TODO: Remove this?
          if (head._3 !== EMPTY) {
            return;
          }

          switch (head.tag) {
          case MAP:
            if (fail === null) {
              head._3 = util.right(head._1(util.fromRight(step)));
              step    = head._3;
            } else {
              head._3 = fail;
            }
            break;
          case APPLY:
            lhs = head._1._3;
            rhs = head._2._3;
            // If we have a failure we should kill the other side because we
            // can't possible yield a result anymore.
            if (fail) {
              head._3 = fail;
              tmp     = true;
              kid     = killId++;

              kills[kid] = kill(early, fail === lhs ? head._2 : head._1, function (/* unused */) {
                return function () {
                  delete kills[kid];
                  if (tmp) {
                    tmp = false;
                  } else if (tail === null) {
                    join(fail, null, null);
                  } else {
                    join(fail, tail._1, tail._2);
                  }
                };
              });

              if (tmp) {
                tmp = false;
                return;
              }
            } else if (lhs === EMPTY || rhs === EMPTY) {
              // We can only proceed if both sides have resolved.
              return;
            } else {
              step    = util.right(util.fromRight(lhs)(util.fromRight(rhs)));
              head._3 = step;
            }
            break;
          case ALT:
            lhs = head._1._3;
            rhs = head._2._3;
            // We can only proceed if both have resolved or we have a success
            if (lhs === EMPTY && util.isLeft(rhs) || rhs === EMPTY && util.isLeft(lhs)) {
              return;
            }
            // If both sides resolve with an error, we should continue with the
            // first error
            if (lhs !== EMPTY && util.isLeft(lhs) && rhs !== EMPTY && util.isLeft(rhs)) {
              fail    = step === lhs ? rhs : lhs;
              step    = null;
              head._3 = fail;
            } else {
              head._3 = step;
              tmp     = true;
              kid     = killId++;
              // Once a side has resolved, we need to cancel the side that is still
              // pending before we can continue.
              kills[kid] = kill(early, step === lhs ? head._2 : head._1, function (/* unused */) {
                return function () {
                  delete kills[kid];
                  if (tmp) {
                    tmp = false;
                  } else if (tail === null) {
                    join(step, null, null);
                  } else {
                    join(step, tail._1, tail._2);
                  }
                };
              });

              if (tmp) {
                tmp = false;
                return;
              }
            }
            break;
          }

          if (tail === null) {
            head = null;
          } else {
            head = tail._1;
            tail = tail._2;
          }
        }
      }

      function resolve(fiber) {
        return function (result) {
          return function () {
            delete fibers[fiber._1];
            fiber._3 = result;
            join(result, fiber._2._1, fiber._2._2);
          };
        };
      }

      // Walks the applicative tree, substituting non-applicative nodes with
      // `FORKED` nodes. In this tree, all applicative nodes use the `_3` slot
      // as a mutable slot for memoization. In an unresolved state, the `_3`
      // slot is `EMPTY`. In the cases of `ALT` and `APPLY`, we always walk
      // the left side first, because both operations are left-associative. As
      // we `RETURN` from those branches, we then walk the right side.
      function run() {
        var status = CONTINUE;
        var step   = par;
        var head   = null;
        var tail   = null;
        var tmp, fid;

        loop: while (true) {
          tmp = null;
          fid = null;

          switch (status) {
          case CONTINUE:
            switch (step.tag) {
            case MAP:
              if (head) {
                tail = new Aff(CONS, head, tail);
              }
              head = new Aff(MAP, step._1, EMPTY, EMPTY);
              step = step._2;
              break;
            case APPLY:
              if (head) {
                tail = new Aff(CONS, head, tail);
              }
              head = new Aff(APPLY, EMPTY, step._2, EMPTY);
              step = step._1;
              break;
            case ALT:
              if (head) {
                tail = new Aff(CONS, head, tail);
              }
              head = new Aff(ALT, EMPTY, step._2, EMPTY);
              step = step._1;
              break;
            default:
              // When we hit a leaf value, we suspend the stack in the `FORKED`.
              // When the fiber resolves, it can bubble back up the tree.
              fid    = fiberId++;
              status = RETURN;
              tmp    = step;
              step   = new Aff(FORKED, fid, new Aff(CONS, head, tail), EMPTY);
              tmp    = Fiber(util, supervisor, tmp);
              tmp.onComplete({
                rethrow: false,
                handler: resolve(step)
              })();
              fibers[fid] = tmp;
              if (supervisor) {
                supervisor.register(tmp);
              }
            }
            break;
          case RETURN:
            // Terminal case, we are back at the root.
            if (head === null) {
              break loop;
            }
            // If we are done with the right side, we need to continue down the
            // left. Otherwise we should continue up the stack.
            if (head._1 === EMPTY) {
              head._1 = step;
              status  = CONTINUE;
              step    = head._2;
              head._2 = EMPTY;
            } else {
              head._2 = step;
              step    = head;
              if (tail === null) {
                head  = null;
              } else {
                head  = tail._1;
                tail  = tail._2;
              }
            }
          }
        }

        // Keep a reference to the tree root so it can be cancelled.
        root = step;

        for (fid = 0; fid < fiberId; fid++) {
          fibers[fid].run();
        }
      }

      // Cancels the entire tree. If there are already subtrees being canceled,
      // we need to first cancel those joins. We will then add fresh joins for
      // all pending branches including those that were in the process of being
      // canceled.
      function cancel(error, cb) {
        interrupt = util.left(error);
        var innerKills;
        for (var kid in kills) {
          if (kills.hasOwnProperty(kid)) {
            innerKills = kills[kid];
            for (kid in innerKills) {
              if (innerKills.hasOwnProperty(kid)) {
                innerKills[kid]();
              }
            }
          }
        }

        kills = null;
        var newKills = kill(error, root, cb);

        return function (killError) {
          return new Aff(ASYNC, function (killCb) {
            return function () {
              for (var kid in newKills) {
                if (newKills.hasOwnProperty(kid)) {
                  newKills[kid]();
                }
              }
              return nonCanceler;
            };
          });
        };
      }

      run();

      return function (killError) {
        return new Aff(ASYNC, function (killCb) {
          return function () {
            return cancel(killError, killCb);
          };
        });
      };
    }

    function sequential(util, supervisor, par) {
      return new Aff(ASYNC, function (cb) {
        return function () {
          return runPar(util, supervisor, par, cb);
        };
      });
    }

    Aff.EMPTY       = EMPTY;
    Aff.Pure        = AffCtr(PURE);
    Aff.Throw       = AffCtr(THROW);
    Aff.Catch       = AffCtr(CATCH);
    Aff.Sync        = AffCtr(SYNC);
    Aff.Async       = AffCtr(ASYNC);
    Aff.Bind        = AffCtr(BIND);
    Aff.Bracket     = AffCtr(BRACKET);
    Aff.Fork        = AffCtr(FORK);
    Aff.Seq         = AffCtr(SEQ);
    Aff.ParMap      = AffCtr(MAP);
    Aff.ParApply    = AffCtr(APPLY);
    Aff.ParAlt      = AffCtr(ALT);
    Aff.Fiber       = Fiber;
    Aff.Supervisor  = Supervisor;
    Aff.Scheduler   = Scheduler;
    Aff.nonCanceler = nonCanceler;

    return Aff;
  }();

  exports._pure = Aff.Pure;

  exports._throwError = Aff.Throw;

  exports._catchError = function (aff) {
    return function (k) {
      return Aff.Catch(aff, k);
    };
  };

  exports._map = function (f) {
    return function (aff) {
      if (aff.tag === Aff.Pure.tag) {
        return Aff.Pure(f(aff._1));
      } else {
        return Aff.Bind(aff, function (value) {
          return Aff.Pure(f(value));
        });
      }
    };
  };

  exports._bind = function (aff) {
    return function (k) {
      return Aff.Bind(aff, k);
    };
  };

  exports._liftEffect = Aff.Sync;

  exports._parAffMap = function (f) {
    return function (aff) {
      return Aff.ParMap(f, aff);
    };
  };

  exports._parAffApply = function (aff1) {
    return function (aff2) {
      return Aff.ParApply(aff1, aff2);
    };
  };

  exports._parAffAlt = function (aff1) {
    return function (aff2) {
      return Aff.ParAlt(aff1, aff2);
    };
  };

  exports.makeAff = Aff.Async;

  exports.generalBracket = function (acquire) {
    return function (options) {
      return function (k) {
        return Aff.Bracket(acquire, options, k);
      };
    };
  };

  exports._makeFiber = function (util, aff) {
    return function () {
      return Aff.Fiber(util, null, aff);
    };
  };

  exports._makeSupervisedFiber = function (util, aff) {
    return function () {
      var supervisor = Aff.Supervisor(util);
      return {
        fiber: Aff.Fiber(util, supervisor, aff),
        supervisor: supervisor
      };
    };
  };

  exports._killAll = function (error, supervisor, cb) {
    return supervisor.killAll(error, cb);
  };

  exports._delay = function () {
    function setDelay(n, k) {
      if (n === 0 && typeof setImmediate !== "undefined") {
        return setImmediate(k);
      } else {
        return setTimeout(k, n);
      }
    }

    function clearDelay(n, t) {
      if (n === 0 && typeof clearImmediate !== "undefined") {
        return clearImmediate(t);
      } else {
        return clearTimeout(t);
      }
    }

    return function (right, ms) {
      return Aff.Async(function (cb) {
        return function () {
          var timer = setDelay(ms, cb(right()));
          return function () {
            return Aff.Sync(function () {
              return right(clearDelay(ms, timer));
            });
          };
        };
      });
    };
  }();

  exports._sequential = Aff.Seq;
})(PS["Effect.Aff"] = PS["Effect.Aff"] || {});
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Control.Monad.Reader.Trans"] = $PS["Control.Monad.Reader.Trans"] || {};
  var exports = $PS["Control.Monad.Reader.Trans"];
  var Control_Alt = $PS["Control.Alt"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_Error_Class = $PS["Control.Monad.Error.Class"];
  var Control_Monad_Trans_Class = $PS["Control.Monad.Trans.Class"];
  var Control_Plus = $PS["Control.Plus"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Effect_Class = $PS["Effect.Class"];                
  var ReaderT = function (x) {
      return x;
  };
  var withReaderT = function (f) {
      return function (v) {
          return function ($63) {
              return v(f($63));
          };
      };
  };
  var runReaderT = function (v) {
      return v;
  };
  var monadTransReaderT = {
      lift: function (dictMonad) {
          return function ($64) {
              return ReaderT(Data_Function["const"]($64));
          };
      }
  };
  var mapReaderT = function (f) {
      return function (v) {
          return function ($65) {
              return f(v($65));
          };
      };
  };
  var functorReaderT = function (dictFunctor) {
      return {
          map: (function () {
              var $66 = Data_Functor.map(dictFunctor);
              return function ($67) {
                  return mapReaderT($66($67));
              };
          })()
      };
  };
  var applyReaderT = function (dictApply) {
      return {
          apply: function (v) {
              return function (v1) {
                  return function (r) {
                      return Control_Apply.apply(dictApply)(v(r))(v1(r));
                  };
              };
          },
          Functor0: function () {
              return functorReaderT(dictApply.Functor0());
          }
      };
  };
  var bindReaderT = function (dictBind) {
      return {
          bind: function (v) {
              return function (k) {
                  return function (r) {
                      return Control_Bind.bind(dictBind)(v(r))(function (a) {
                          var v1 = k(a);
                          return v1(r);
                      });
                  };
              };
          },
          Apply0: function () {
              return applyReaderT(dictBind.Apply0());
          }
      };
  };
  var semigroupReaderT = function (dictApply) {
      return function (dictSemigroup) {
          return {
              append: Control_Apply.lift2(applyReaderT(dictApply))(Data_Semigroup.append(dictSemigroup))
          };
      };
  };
  var applicativeReaderT = function (dictApplicative) {
      return {
          pure: (function () {
              var $71 = Control_Applicative.pure(dictApplicative);
              return function ($72) {
                  return ReaderT(Data_Function["const"]($71($72)));
              };
          })(),
          Apply0: function () {
              return applyReaderT(dictApplicative.Apply0());
          }
      };
  };
  var monadReaderT = function (dictMonad) {
      return {
          Applicative0: function () {
              return applicativeReaderT(dictMonad.Applicative0());
          },
          Bind1: function () {
              return bindReaderT(dictMonad.Bind1());
          }
      };
  };
  var monadAskReaderT = function (dictMonad) {
      return {
          ask: Control_Applicative.pure(dictMonad.Applicative0()),
          Monad0: function () {
              return monadReaderT(dictMonad);
          }
      };
  };
  var monadEffectReader = function (dictMonadEffect) {
      return {
          liftEffect: (function () {
              var $74 = Control_Monad_Trans_Class.lift(monadTransReaderT)(dictMonadEffect.Monad0());
              var $75 = Effect_Class.liftEffect(dictMonadEffect);
              return function ($76) {
                  return $74($75($76));
              };
          })(),
          Monad0: function () {
              return monadReaderT(dictMonadEffect.Monad0());
          }
      };
  };
  var monadThrowReaderT = function (dictMonadThrow) {
      return {
          throwError: (function () {
              var $83 = Control_Monad_Trans_Class.lift(monadTransReaderT)(dictMonadThrow.Monad0());
              var $84 = Control_Monad_Error_Class.throwError(dictMonadThrow);
              return function ($85) {
                  return $83($84($85));
              };
          })(),
          Monad0: function () {
              return monadReaderT(dictMonadThrow.Monad0());
          }
      };
  };
  var monadErrorReaderT = function (dictMonadError) {
      return {
          catchError: function (v) {
              return function (h) {
                  return function (r) {
                      return Control_Monad_Error_Class.catchError(dictMonadError)(v(r))(function (e) {
                          var v1 = h(e);
                          return v1(r);
                      });
                  };
              };
          },
          MonadThrow0: function () {
              return monadThrowReaderT(dictMonadError.MonadThrow0());
          }
      };
  };
  var altReaderT = function (dictAlt) {
      return {
          alt: function (v) {
              return function (v1) {
                  return function (r) {
                      return Control_Alt.alt(dictAlt)(v(r))(v1(r));
                  };
              };
          },
          Functor0: function () {
              return functorReaderT(dictAlt.Functor0());
          }
      };
  };
  var plusReaderT = function (dictPlus) {
      return {
          empty: Data_Function["const"](Control_Plus.empty(dictPlus)),
          Alt0: function () {
              return altReaderT(dictPlus.Alt0());
          }
      };
  };
  var alternativeReaderT = function (dictAlternative) {
      return {
          Applicative0: function () {
              return applicativeReaderT(dictAlternative.Applicative0());
          },
          Plus1: function () {
              return plusReaderT(dictAlternative.Plus1());
          }
      };
  };
  exports["runReaderT"] = runReaderT;
  exports["withReaderT"] = withReaderT;
  exports["mapReaderT"] = mapReaderT;
  exports["functorReaderT"] = functorReaderT;
  exports["applicativeReaderT"] = applicativeReaderT;
  exports["altReaderT"] = altReaderT;
  exports["alternativeReaderT"] = alternativeReaderT;
  exports["bindReaderT"] = bindReaderT;
  exports["monadReaderT"] = monadReaderT;
  exports["semigroupReaderT"] = semigroupReaderT;
  exports["monadTransReaderT"] = monadTransReaderT;
  exports["monadEffectReader"] = monadEffectReader;
  exports["monadThrowReaderT"] = monadThrowReaderT;
  exports["monadErrorReaderT"] = monadErrorReaderT;
  exports["monadAskReaderT"] = monadAskReaderT;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Data.Functor.Compose"] = $PS["Data.Functor.Compose"] || {};
  var exports = $PS["Data.Functor.Compose"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Data_Functor = $PS["Data.Functor"];          
  var Compose = function (x) {
      return x;
  };
  var functorCompose = function (dictFunctor) {
      return function (dictFunctor1) {
          return {
              map: function (f) {
                  return function (v) {
                      return Data_Functor.map(dictFunctor)(Data_Functor.map(dictFunctor1)(f))(v);
                  };
              }
          };
      };
  };
  var applyCompose = function (dictApply) {
      return function (dictApply1) {
          return {
              apply: function (v) {
                  return function (v1) {
                      return Control_Apply.apply(dictApply)(Data_Functor.map(dictApply.Functor0())(Control_Apply.apply(dictApply1))(v))(v1);
                  };
              },
              Functor0: function () {
                  return functorCompose(dictApply.Functor0())(dictApply1.Functor0());
              }
          };
      };
  };
  var applicativeCompose = function (dictApplicative) {
      return function (dictApplicative1) {
          return {
              pure: (function () {
                  var $51 = Control_Applicative.pure(dictApplicative);
                  var $52 = Control_Applicative.pure(dictApplicative1);
                  return function ($53) {
                      return Compose($51($52($53)));
                  };
              })(),
              Apply0: function () {
                  return applyCompose(dictApplicative.Apply0())(dictApplicative1.Apply0());
              }
          };
      };
  };
  exports["applicativeCompose"] = applicativeCompose;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Control.Parallel.Class"] = $PS["Control.Parallel.Class"] || {};
  var exports = $PS["Control.Parallel.Class"];
  var Control_Monad_Except_Trans = $PS["Control.Monad.Except.Trans"];
  var Control_Monad_Reader_Trans = $PS["Control.Monad.Reader.Trans"];
  var Data_Either = $PS["Data.Either"];
  var Data_Functor_Compose = $PS["Data.Functor.Compose"];
  var sequential = function (dict) {
      return dict.sequential;
  };
  var parallel = function (dict) {
      return dict.parallel;
  };
  var monadParReaderT = function (dictParallel) {
      return {
          parallel: Control_Monad_Reader_Trans.mapReaderT(parallel(dictParallel)),
          sequential: Control_Monad_Reader_Trans.mapReaderT(sequential(dictParallel)),
          Monad0: function () {
              return Control_Monad_Reader_Trans.monadReaderT(dictParallel.Monad0());
          },
          Applicative1: function () {
              return Control_Monad_Reader_Trans.applicativeReaderT(dictParallel.Applicative1());
          }
      };
  };
  var monadParExceptT = function (dictParallel) {
      return {
          parallel: function (v) {
              return parallel(dictParallel)(v);
          },
          sequential: function (v) {
              return sequential(dictParallel)(v);
          },
          Monad0: function () {
              return Control_Monad_Except_Trans.monadExceptT(dictParallel.Monad0());
          },
          Applicative1: function () {
              return Data_Functor_Compose.applicativeCompose(dictParallel.Applicative1())(Data_Either.applicativeEither);
          }
      };
  };
  exports["parallel"] = parallel;
  exports["sequential"] = sequential;
  exports["monadParExceptT"] = monadParExceptT;
  exports["monadParReaderT"] = monadParReaderT;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Control.Parallel"] = $PS["Control.Parallel"] || {};
  var exports = $PS["Control.Parallel"];
  var Control_Category = $PS["Control.Category"];
  var Control_Parallel_Class = $PS["Control.Parallel.Class"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Traversable = $PS["Data.Traversable"];                
  var parTraverse_ = function (dictParallel) {
      return function (dictFoldable) {
          return function (f) {
              var $17 = Control_Parallel_Class.sequential(dictParallel);
              var $18 = Data_Foldable.traverse_(dictParallel.Applicative1())(dictFoldable)((function () {
                  var $20 = Control_Parallel_Class.parallel(dictParallel);
                  return function ($21) {
                      return $20(f($21));
                  };
              })());
              return function ($19) {
                  return $17($18($19));
              };
          };
      };
  };
  var parTraverse = function (dictParallel) {
      return function (dictTraversable) {
          return function (f) {
              var $22 = Control_Parallel_Class.sequential(dictParallel);
              var $23 = Data_Traversable.traverse(dictTraversable)(dictParallel.Applicative1())((function () {
                  var $25 = Control_Parallel_Class.parallel(dictParallel);
                  return function ($26) {
                      return $25(f($26));
                  };
              })());
              return function ($24) {
                  return $22($23($24));
              };
          };
      };
  };
  var parSequence_ = function (dictParallel) {
      return function (dictFoldable) {
          return parTraverse_(dictParallel)(dictFoldable)(Control_Category.identity(Control_Category.categoryFn));
      };
  };
  var parOneOf = function (dictParallel) {
      return function (dictAlternative) {
          return function (dictFoldable) {
              return function (dictFunctor) {
                  var $32 = Control_Parallel_Class.sequential(dictParallel);
                  var $33 = Data_Foldable.oneOfMap(dictFoldable)(dictAlternative.Plus1())(Control_Parallel_Class.parallel(dictParallel));
                  return function ($34) {
                      return $32($33($34));
                  };
              };
          };
      };
  };
  exports["parTraverse"] = parTraverse;
  exports["parSequence_"] = parSequence_;
  exports["parOneOf"] = parOneOf;
})(PS);
(function(exports) {
  "use strict";

  // module Partial.Unsafe

  exports._unsafePartial = function (f) {
    return f();
  };
})(PS["Partial.Unsafe"] = PS["Partial.Unsafe"] || {});
(function(exports) {
  "use strict";

  // module Partial

  exports._crashWith = function (msg) {
    throw new Error(msg);
  };
})(PS["Partial"] = PS["Partial"] || {});
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Partial"] = $PS["Partial"] || {};
  var exports = $PS["Partial"];
  var $foreign = $PS["Partial"];         
  var crashWith = function () {
      return $foreign["_crashWith"];
  };
  exports["crashWith"] = crashWith;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Partial.Unsafe"] = $PS["Partial.Unsafe"] || {};
  var exports = $PS["Partial.Unsafe"];
  var $foreign = $PS["Partial.Unsafe"];
  var Partial = $PS["Partial"];                
  var unsafePartial = $foreign["_unsafePartial"];
  var unsafeCrashWith = function (msg) {
      return unsafePartial(function () {
          return Partial.crashWith()(msg);
      });
  };
  exports["unsafeCrashWith"] = unsafeCrashWith;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Effect.Aff"] = $PS["Effect.Aff"] || {};
  var exports = $PS["Effect.Aff"];
  var $foreign = $PS["Effect.Aff"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad = $PS["Control.Monad"];
  var Control_Monad_Error_Class = $PS["Control.Monad.Error.Class"];
  var Control_Parallel = $PS["Control.Parallel"];
  var Control_Parallel_Class = $PS["Control.Parallel.Class"];
  var Control_Plus = $PS["Control.Plus"];
  var Data_Either = $PS["Data.Either"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect = $PS["Effect"];
  var Effect_Class = $PS["Effect.Class"];
  var Effect_Exception = $PS["Effect.Exception"];
  var Partial_Unsafe = $PS["Partial.Unsafe"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];
  var Canceler = function (x) {
      return x;
  };
  var functorParAff = {
      map: $foreign["_parAffMap"]
  };
  var functorAff = {
      map: $foreign["_map"]
  };                                    
  var ffiUtil = (function () {
      var unsafeFromRight = function (v) {
          if (v instanceof Data_Either.Right) {
              return v.value0;
          };
          if (v instanceof Data_Either.Left) {
              return Partial_Unsafe.unsafeCrashWith("unsafeFromRight: Left");
          };
          throw new Error("Failed pattern match at Effect.Aff (line 404, column 21 - line 406, column 54): " + [ v.constructor.name ]);
      };
      var unsafeFromLeft = function (v) {
          if (v instanceof Data_Either.Left) {
              return v.value0;
          };
          if (v instanceof Data_Either.Right) {
              return Partial_Unsafe.unsafeCrashWith("unsafeFromLeft: Right");
          };
          throw new Error("Failed pattern match at Effect.Aff (line 399, column 20 - line 401, column 54): " + [ v.constructor.name ]);
      };
      var isLeft = function (v) {
          if (v instanceof Data_Either.Left) {
              return true;
          };
          if (v instanceof Data_Either.Right) {
              return false;
          };
          throw new Error("Failed pattern match at Effect.Aff (line 394, column 12 - line 396, column 20): " + [ v.constructor.name ]);
      };
      return {
          isLeft: isLeft,
          fromLeft: unsafeFromLeft,
          fromRight: unsafeFromRight,
          left: Data_Either.Left.create,
          right: Data_Either.Right.create
      };
  })();
  var makeFiber = function (aff) {
      return $foreign["_makeFiber"](ffiUtil, aff);
  };
  var launchAff = function (aff) {
      return function __do() {
          var fiber = makeFiber(aff)();
          fiber.run();
          return fiber;
      };
  };
  var launchAff_ = (function () {
      var $40 = Data_Functor["void"](Effect.functorEffect);
      return function ($41) {
          return $40(launchAff($41));
      };
  })();                              
  var delay = function (v) {
      return $foreign["_delay"](Data_Either.Right.create, v);
  };
  var bracket = function (acquire) {
      return function (completed) {
          return $foreign.generalBracket(acquire)({
              killed: Data_Function["const"](completed),
              failed: Data_Function["const"](completed),
              completed: Data_Function["const"](completed)
          });
      };
  };
  var applyParAff = {
      apply: $foreign["_parAffApply"],
      Functor0: function () {
          return functorParAff;
      }
  };
  var monadAff = {
      Applicative0: function () {
          return applicativeAff;
      },
      Bind1: function () {
          return bindAff;
      }
  };
  var bindAff = {
      bind: $foreign["_bind"],
      Apply0: function () {
          return applyAff;
      }
  };
  var applyAff = {
      apply: Control_Monad.ap(monadAff),
      Functor0: function () {
          return functorAff;
      }
  };
  var applicativeAff = {
      pure: $foreign["_pure"],
      Apply0: function () {
          return applyAff;
      }
  };
  var $$finally = function (fin) {
      return function (a) {
          return bracket(Control_Applicative.pure(applicativeAff)(Data_Unit.unit))(Data_Function["const"](fin))(Data_Function["const"](a));
      };
  };
  var monadEffectAff = {
      liftEffect: $foreign["_liftEffect"],
      Monad0: function () {
          return monadAff;
      }
  };
  var effectCanceler = (function () {
      var $42 = Effect_Class.liftEffect(monadEffectAff);
      return function ($43) {
          return Canceler(Data_Function["const"]($42($43)));
      };
  })();
  var joinFiber = function (v) {
      return $foreign.makeAff(function (k) {
          return Data_Functor.map(Effect.functorEffect)(effectCanceler)(v.join(k));
      });
  };
  var killFiber = function (e) {
      return function (v) {
          return Control_Bind.bind(bindAff)(Effect_Class.liftEffect(monadEffectAff)(v.isSuspended))(function (v1) {
              if (v1) {
                  return Effect_Class.liftEffect(monadEffectAff)(Data_Functor["void"](Effect.functorEffect)(v.kill(e, Data_Function["const"](Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit)))));
              };
              return $foreign.makeAff(function (k) {
                  return Data_Functor.map(Effect.functorEffect)(effectCanceler)(v.kill(e, k));
              });
          });
      };
  };   
  var monadThrowAff = {
      throwError: $foreign["_throwError"],
      Monad0: function () {
          return monadAff;
      }
  };
  var monadErrorAff = {
      catchError: $foreign["_catchError"],
      MonadThrow0: function () {
          return monadThrowAff;
      }
  };
  var attempt = Control_Monad_Error_Class["try"](monadErrorAff);
  var runAff = function (k) {
      return function (aff) {
          return launchAff(Control_Bind.bindFlipped(bindAff)((function () {
              var $46 = Effect_Class.liftEffect(monadEffectAff);
              return function ($47) {
                  return $46(k($47));
              };
          })())(Control_Monad_Error_Class["try"](monadErrorAff)(aff)));
      };
  };
  var runAff_ = function (k) {
      return function (aff) {
          return Data_Functor["void"](Effect.functorEffect)(runAff(k)(aff));
      };
  };
  var parallelAff = {
      parallel: Unsafe_Coerce.unsafeCoerce,
      sequential: $foreign["_sequential"],
      Monad0: function () {
          return monadAff;
      },
      Applicative1: function () {
          return applicativeParAff;
      }
  };
  var applicativeParAff = {
      pure: (function () {
          var $50 = Control_Parallel_Class.parallel(parallelAff);
          var $51 = Control_Applicative.pure(applicativeAff);
          return function ($52) {
              return $50($51($52));
          };
      })(),
      Apply0: function () {
          return applyParAff;
      }
  };
  var semigroupCanceler = {
      append: function (v) {
          return function (v1) {
              return function (err) {
                  return Control_Parallel.parSequence_(parallelAff)(Data_Foldable.foldableArray)([ v(err), v1(err) ]);
              };
          };
      }
  };
  var supervise = function (aff) {
      var killError = Effect_Exception.error("[Aff] Child fiber outlived parent");
      var killAll = function (err) {
          return function (sup) {
              return $foreign.makeAff(function (k) {
                  return $foreign["_killAll"](err, sup.supervisor, k(Control_Applicative.pure(Data_Either.applicativeEither)(Data_Unit.unit)));
              });
          };
      };
      var acquire = function __do() {
          var sup = $foreign["_makeSupervisedFiber"](ffiUtil, aff)();
          sup.fiber.run();
          return sup;
      };
      return $foreign.generalBracket(Effect_Class.liftEffect(monadEffectAff)(acquire))({
          killed: function (err) {
              return function (sup) {
                  return Control_Parallel.parSequence_(parallelAff)(Data_Foldable.foldableArray)([ killFiber(err)(sup.fiber), killAll(err)(sup) ]);
              };
          },
          failed: Data_Function["const"](killAll(killError)),
          completed: Data_Function["const"](killAll(killError))
      })(function ($53) {
          return joinFiber((function (v) {
              return v.fiber;
          })($53));
      });
  };
  var nonCanceler = Data_Function["const"](Control_Applicative.pure(applicativeAff)(Data_Unit.unit));
  var monoidCanceler = {
      mempty: nonCanceler,
      Semigroup0: function () {
          return semigroupCanceler;
      }
  };   
  var altParAff = {
      alt: $foreign["_parAffAlt"],
      Functor0: function () {
          return functorParAff;
      }
  };
  var altAff = {
      alt: function (a1) {
          return function (a2) {
              return Control_Monad_Error_Class.catchError(monadErrorAff)(a1)(Data_Function["const"](a2));
          };
      },
      Functor0: function () {
          return functorAff;
      }
  };
  var plusAff = {
      empty: Control_Monad_Error_Class.throwError(monadThrowAff)(Effect_Exception.error("Always fails")),
      Alt0: function () {
          return altAff;
      }
  };
  var plusParAff = {
      empty: Control_Parallel_Class.parallel(parallelAff)(Control_Plus.empty(plusAff)),
      Alt0: function () {
          return altParAff;
      }
  };
  var alternativeParAff = {
      Applicative0: function () {
          return applicativeParAff;
      },
      Plus1: function () {
          return plusParAff;
      }
  };
  exports["launchAff_"] = launchAff_;
  exports["runAff_"] = runAff_;
  exports["supervise"] = supervise;
  exports["attempt"] = attempt;
  exports["delay"] = delay;
  exports["finally"] = $$finally;
  exports["nonCanceler"] = nonCanceler;
  exports["functorAff"] = functorAff;
  exports["applyAff"] = applyAff;
  exports["applicativeAff"] = applicativeAff;
  exports["bindAff"] = bindAff;
  exports["monadAff"] = monadAff;
  exports["monadThrowAff"] = monadThrowAff;
  exports["monadErrorAff"] = monadErrorAff;
  exports["monadEffectAff"] = monadEffectAff;
  exports["functorParAff"] = functorParAff;
  exports["applyParAff"] = applyParAff;
  exports["applicativeParAff"] = applicativeParAff;
  exports["alternativeParAff"] = alternativeParAff;
  exports["parallelAff"] = parallelAff;
  exports["monoidCanceler"] = monoidCanceler;
  exports["makeAff"] = $foreign.makeAff;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Effect.Aff.Compat"] = $PS["Effect.Aff.Compat"] || {};
  var exports = $PS["Effect.Aff.Compat"];
  var Data_Either = $PS["Data.Either"];
  var Effect_Aff = $PS["Effect.Aff"];
  var fromEffectFnAff = function (v) {
      return Effect_Aff.makeAff(function (k) {
          return function __do() {
              var v1 = v(function ($4) {
                  return k(Data_Either.Left.create($4))();
              }, function ($5) {
                  return k(Data_Either.Right.create($5))();
              });
              return function (e) {
                  return Effect_Aff.makeAff(function (k2) {
                      return function __do() {
                          v1(e, function ($6) {
                              return k2(Data_Either.Left.create($6))();
                          }, function ($7) {
                              return k2(Data_Either.Right.create($7))();
                          });
                          return Effect_Aff.nonCanceler;
                      };
                  });
              };
          };
      });
  };
  exports["fromEffectFnAff"] = fromEffectFnAff;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Affjax"] = $PS["Affjax"] || {};
  var exports = $PS["Affjax"];
  var $foreign = $PS["Affjax"];
  var Affjax_RequestBody = $PS["Affjax.RequestBody"];
  var Affjax_RequestHeader = $PS["Affjax.RequestHeader"];
  var Affjax_ResponseFormat = $PS["Affjax.ResponseFormat"];
  var Affjax_ResponseHeader = $PS["Affjax.ResponseHeader"];
  var Control_Alt = $PS["Control.Alt"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_Error_Class = $PS["Control.Monad.Error.Class"];
  var Control_Monad_Except = $PS["Control.Monad.Except"];
  var Control_Monad_Except_Trans = $PS["Control.Monad.Except.Trans"];
  var Data_Argonaut_Core = $PS["Data.Argonaut.Core"];
  var Data_Argonaut_Parser = $PS["Data.Argonaut.Parser"];
  var Data_Array = $PS["Data.Array"];
  var Data_Either = $PS["Data.Either"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_FormURLEncoded = $PS["Data.FormURLEncoded"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_HTTP_Method = $PS["Data.HTTP.Method"];
  var Data_HeytingAlgebra = $PS["Data.HeytingAlgebra"];
  var Data_Identity = $PS["Data.Identity"];
  var Data_List_NonEmpty = $PS["Data.List.NonEmpty"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Nullable = $PS["Data.Nullable"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect_Aff = $PS["Effect.Aff"];
  var Effect_Aff_Compat = $PS["Effect.Aff.Compat"];
  var Effect_Exception = $PS["Effect.Exception"];
  var Foreign = $PS["Foreign"];                
  var RequestContentError = (function () {
      function RequestContentError(value0) {
          this.value0 = value0;
      };
      RequestContentError.create = function (value0) {
          return new RequestContentError(value0);
      };
      return RequestContentError;
  })();
  var ResponseBodyError = (function () {
      function ResponseBodyError(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      ResponseBodyError.create = function (value0) {
          return function (value1) {
              return new ResponseBodyError(value0, value1);
          };
      };
      return ResponseBodyError;
  })();
  var TimeoutError = (function () {
      function TimeoutError() {

      };
      TimeoutError.value = new TimeoutError();
      return TimeoutError;
  })();
  var RequestFailedError = (function () {
      function RequestFailedError() {

      };
      RequestFailedError.value = new RequestFailedError();
      return RequestFailedError;
  })();
  var XHROtherError = (function () {
      function XHROtherError(value0) {
          this.value0 = value0;
      };
      XHROtherError.create = function (value0) {
          return new XHROtherError(value0);
      };
      return XHROtherError;
  })();
  var request = function (req) {
      var parseJSON = function (v) {
          if (v === "") {
              return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(Data_Argonaut_Core.jsonEmptyObject);
          };
          return Data_Either.either((function () {
              var $51 = Foreign.fail(Data_Identity.monadIdentity);
              return function ($52) {
                  return $51(Foreign.ForeignError.create($52));
              };
          })())(Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity)))(Data_Argonaut_Parser.jsonParser(v));
      };
      var fromResponse = (function () {
          if (req.responseFormat instanceof Affjax_ResponseFormat["ArrayBuffer"]) {
              return Foreign.unsafeReadTagged(Data_Identity.monadIdentity)("ArrayBuffer");
          };
          if (req.responseFormat instanceof Affjax_ResponseFormat.Blob) {
              return Foreign.unsafeReadTagged(Data_Identity.monadIdentity)("Blob");
          };
          if (req.responseFormat instanceof Affjax_ResponseFormat.Document) {
              return function (x) {
                  return Control_Alt.alt(Control_Monad_Except_Trans.altExceptT(Data_List_Types.semigroupNonEmptyList)(Data_Identity.monadIdentity))(Control_Alt.alt(Control_Monad_Except_Trans.altExceptT(Data_List_Types.semigroupNonEmptyList)(Data_Identity.monadIdentity))(Foreign.unsafeReadTagged(Data_Identity.monadIdentity)("Document")(x))(Foreign.unsafeReadTagged(Data_Identity.monadIdentity)("XMLDocument")(x)))(Foreign.unsafeReadTagged(Data_Identity.monadIdentity)("HTMLDocument")(x));
              };
          };
          if (req.responseFormat instanceof Affjax_ResponseFormat.Json) {
              return Control_Bind.composeKleisliFlipped(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(function ($53) {
                  return req.responseFormat.value0(parseJSON($53));
              })(Foreign.unsafeReadTagged(Data_Identity.monadIdentity)("String"));
          };
          if (req.responseFormat instanceof Affjax_ResponseFormat["String"]) {
              return Foreign.unsafeReadTagged(Data_Identity.monadIdentity)("String");
          };
          if (req.responseFormat instanceof Affjax_ResponseFormat.Ignore) {
              return Data_Function["const"](req.responseFormat.value0(Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(Data_Unit.unit)));
          };
          throw new Error("Failed pattern match at Affjax (line 257, column 18 - line 265, column 57): " + [ req.responseFormat.constructor.name ]);
      })();
      var extractContent = function (v) {
          if (v instanceof Affjax_RequestBody.ArrayView) {
              return new Data_Either.Right(v.value0(Foreign.unsafeToForeign));
          };
          if (v instanceof Affjax_RequestBody.Blob) {
              return new Data_Either.Right(Foreign.unsafeToForeign(v.value0));
          };
          if (v instanceof Affjax_RequestBody.Document) {
              return new Data_Either.Right(Foreign.unsafeToForeign(v.value0));
          };
          if (v instanceof Affjax_RequestBody["String"]) {
              return new Data_Either.Right(Foreign.unsafeToForeign(v.value0));
          };
          if (v instanceof Affjax_RequestBody.FormData) {
              return new Data_Either.Right(Foreign.unsafeToForeign(v.value0));
          };
          if (v instanceof Affjax_RequestBody.FormURLEncoded) {
              return Data_Either.note("Body contains values that cannot be encoded as application/x-www-form-urlencoded")(Data_Functor.map(Data_Maybe.functorMaybe)(Foreign.unsafeToForeign)(Data_FormURLEncoded.encode(v.value0)));
          };
          if (v instanceof Affjax_RequestBody.Json) {
              return new Data_Either.Right(Foreign.unsafeToForeign(Data_Argonaut_Core.stringify(v.value0)));
          };
          throw new Error("Failed pattern match at Affjax (line 217, column 20 - line 232, column 69): " + [ v.constructor.name ]);
      };
      var addHeader = function (mh) {
          return function (hs) {
              if (mh instanceof Data_Maybe.Just && !Data_Foldable.any(Data_Foldable.foldableArray)(Data_HeytingAlgebra.heytingAlgebraBoolean)(Data_Function.on(Data_Eq.eq(Data_Eq.eqString))(Affjax_RequestHeader.name)(mh.value0))(hs)) {
                  return Data_Array.snoc(hs)(mh.value0);
              };
              return hs;
          };
      };
      var headers = function (reqContent) {
          return addHeader(Data_Functor.map(Data_Maybe.functorMaybe)(Affjax_RequestHeader.ContentType.create)(Control_Bind.bindFlipped(Data_Maybe.bindMaybe)(Affjax_RequestBody.toMediaType)(reqContent)))(addHeader(Data_Functor.map(Data_Maybe.functorMaybe)(Affjax_RequestHeader.Accept.create)(Affjax_ResponseFormat.toMediaType(req.responseFormat)))(req.headers));
      };
      var ajaxRequest = function (v) {
          return {
              method: Data_HTTP_Method.print(req.method),
              url: req.url,
              headers: Data_Functor.map(Data_Functor.functorArray)(function (h) {
                  return {
                      field: Affjax_RequestHeader.name(h),
                      value: Affjax_RequestHeader.value(h)
                  };
              })(headers(req.content)),
              content: v,
              responseType: Affjax_ResponseFormat.toResponseType(req.responseFormat),
              username: Data_Nullable.toNullable(req.username),
              password: Data_Nullable.toNullable(req.password),
              withCredentials: req.withCredentials,
              timeout: Data_Maybe.fromMaybe(0.0)(Data_Functor.map(Data_Maybe.functorMaybe)(function (v1) {
                  return v1;
              })(req.timeout))
          };
      };
      var send = function (content) {
          return Data_Functor.mapFlipped(Effect_Aff.functorAff)(Control_Monad_Error_Class["try"](Effect_Aff.monadErrorAff)(Effect_Aff_Compat.fromEffectFnAff($foreign["_ajax"]("AffjaxTimeoutErrorMessageIdent", "AffjaxRequestFailedMessageIdent", Affjax_ResponseHeader.ResponseHeader.create, ajaxRequest(content)))))(function (v) {
              if (v instanceof Data_Either.Right) {
                  var v1 = Control_Monad_Except.runExcept(fromResponse(v.value0.body));
                  if (v1 instanceof Data_Either.Left) {
                      return new Data_Either.Left(new ResponseBodyError(Data_List_NonEmpty.head(v1.value0), v.value0));
                  };
                  if (v1 instanceof Data_Either.Right) {
                      return new Data_Either.Right({
                          body: v1.value0,
                          headers: v.value0.headers,
                          status: v.value0.status,
                          statusText: v.value0.statusText
                      });
                  };
                  throw new Error("Failed pattern match at Affjax (line 193, column 9 - line 195, column 52): " + [ v1.constructor.name ]);
              };
              if (v instanceof Data_Either.Left) {
                  var message = Effect_Exception.message(v.value0);
                  return new Data_Either.Left((function () {
                      var $38 = message === "AffjaxTimeoutErrorMessageIdent";
                      if ($38) {
                          return TimeoutError.value;
                      };
                      var $39 = message === "AffjaxRequestFailedMessageIdent";
                      if ($39) {
                          return RequestFailedError.value;
                      };
                      return new XHROtherError(v.value0);
                  })());
              };
              throw new Error("Failed pattern match at Affjax (line 191, column 137 - line 201, column 33): " + [ v.constructor.name ]);
          });
      };
      if (req.content instanceof Data_Maybe.Nothing) {
          return send(Data_Nullable.toNullable(Data_Maybe.Nothing.value));
      };
      if (req.content instanceof Data_Maybe.Just) {
          var v = extractContent(req.content.value0);
          if (v instanceof Data_Either.Right) {
              return send(Data_Nullable.toNullable(new Data_Maybe.Just(v.value0)));
          };
          if (v instanceof Data_Either.Left) {
              return Control_Applicative.pure(Effect_Aff.applicativeAff)(new Data_Either.Left(new RequestContentError(v.value0)));
          };
          throw new Error("Failed pattern match at Affjax (line 183, column 7 - line 187, column 48): " + [ v.constructor.name ]);
      };
      throw new Error("Failed pattern match at Affjax (line 179, column 3 - line 187, column 48): " + [ req.content.constructor.name ]);
  };
  var printError = function (v) {
      if (v instanceof RequestContentError) {
          return "There was a problem with the request content: " + v.value0;
      };
      if (v instanceof ResponseBodyError) {
          return "There was a problem with the response body: " + Foreign.renderForeignError(v.value0);
      };
      if (v instanceof TimeoutError) {
          return "There was a problem making the request: timeout";
      };
      if (v instanceof RequestFailedError) {
          return "There was a problem making the request: request failed";
      };
      if (v instanceof XHROtherError) {
          return "There was a problem making the request: " + Effect_Exception.message(v.value0);
      };
      throw new Error("Failed pattern match at Affjax (line 97, column 14 - line 107, column 66): " + [ v.constructor.name ]);
  };
  var defaultRequest = {
      method: new Data_Either.Left(Data_HTTP_Method.GET.value),
      url: "/",
      headers: [  ],
      content: Data_Maybe.Nothing.value,
      username: Data_Maybe.Nothing.value,
      password: Data_Maybe.Nothing.value,
      withCredentials: false,
      responseFormat: Affjax_ResponseFormat.ignore,
      timeout: Data_Maybe.Nothing.value
  };
  exports["defaultRequest"] = defaultRequest;
  exports["printError"] = printError;
  exports["request"] = request;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Affjax.StatusCode"] = $PS["Affjax.StatusCode"] || {};
  var exports = $PS["Affjax.StatusCode"];
  var Data_Show = $PS["Data.Show"];
  var showStatusCode = {
      show: function (v) {
          return "(StatusCode " + (Data_Show.show(Data_Show.showInt)(v) + ")");
      }
  };
  exports["showStatusCode"] = showStatusCode;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Ansi.Codes"] = $PS["Ansi.Codes"] || {};
  var exports = $PS["Ansi.Codes"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Show = $PS["Data.Show"];                                
  var Bold = (function () {
      function Bold() {

      };
      Bold.value = new Bold();
      return Bold;
  })();
  var Dim = (function () {
      function Dim() {

      };
      Dim.value = new Dim();
      return Dim;
  })();
  var Italic = (function () {
      function Italic() {

      };
      Italic.value = new Italic();
      return Italic;
  })();
  var Underline = (function () {
      function Underline() {

      };
      Underline.value = new Underline();
      return Underline;
  })();
  var Inverse = (function () {
      function Inverse() {

      };
      Inverse.value = new Inverse();
      return Inverse;
  })();
  var Strikethrough = (function () {
      function Strikethrough() {

      };
      Strikethrough.value = new Strikethrough();
      return Strikethrough;
  })();
  var ToEnd = (function () {
      function ToEnd() {

      };
      ToEnd.value = new ToEnd();
      return ToEnd;
  })();
  var FromBeginning = (function () {
      function FromBeginning() {

      };
      FromBeginning.value = new FromBeginning();
      return FromBeginning;
  })();
  var Entire = (function () {
      function Entire() {

      };
      Entire.value = new Entire();
      return Entire;
  })();
  var Black = (function () {
      function Black() {

      };
      Black.value = new Black();
      return Black;
  })();
  var Red = (function () {
      function Red() {

      };
      Red.value = new Red();
      return Red;
  })();
  var Green = (function () {
      function Green() {

      };
      Green.value = new Green();
      return Green;
  })();
  var Yellow = (function () {
      function Yellow() {

      };
      Yellow.value = new Yellow();
      return Yellow;
  })();
  var Blue = (function () {
      function Blue() {

      };
      Blue.value = new Blue();
      return Blue;
  })();
  var Magenta = (function () {
      function Magenta() {

      };
      Magenta.value = new Magenta();
      return Magenta;
  })();
  var Cyan = (function () {
      function Cyan() {

      };
      Cyan.value = new Cyan();
      return Cyan;
  })();
  var White = (function () {
      function White() {

      };
      White.value = new White();
      return White;
  })();
  var BrightBlack = (function () {
      function BrightBlack() {

      };
      BrightBlack.value = new BrightBlack();
      return BrightBlack;
  })();
  var BrightRed = (function () {
      function BrightRed() {

      };
      BrightRed.value = new BrightRed();
      return BrightRed;
  })();
  var BrightGreen = (function () {
      function BrightGreen() {

      };
      BrightGreen.value = new BrightGreen();
      return BrightGreen;
  })();
  var BrightYellow = (function () {
      function BrightYellow() {

      };
      BrightYellow.value = new BrightYellow();
      return BrightYellow;
  })();
  var BrightBlue = (function () {
      function BrightBlue() {

      };
      BrightBlue.value = new BrightBlue();
      return BrightBlue;
  })();
  var BrightMagenta = (function () {
      function BrightMagenta() {

      };
      BrightMagenta.value = new BrightMagenta();
      return BrightMagenta;
  })();
  var BrightCyan = (function () {
      function BrightCyan() {

      };
      BrightCyan.value = new BrightCyan();
      return BrightCyan;
  })();
  var BrightWhite = (function () {
      function BrightWhite() {

      };
      BrightWhite.value = new BrightWhite();
      return BrightWhite;
  })();
  var Reset = (function () {
      function Reset() {

      };
      Reset.value = new Reset();
      return Reset;
  })();
  var PMode = (function () {
      function PMode(value0) {
          this.value0 = value0;
      };
      PMode.create = function (value0) {
          return new PMode(value0);
      };
      return PMode;
  })();
  var PForeground = (function () {
      function PForeground(value0) {
          this.value0 = value0;
      };
      PForeground.create = function (value0) {
          return new PForeground(value0);
      };
      return PForeground;
  })();
  var PBackground = (function () {
      function PBackground(value0) {
          this.value0 = value0;
      };
      PBackground.create = function (value0) {
          return new PBackground(value0);
      };
      return PBackground;
  })();
  var Up = (function () {
      function Up(value0) {
          this.value0 = value0;
      };
      Up.create = function (value0) {
          return new Up(value0);
      };
      return Up;
  })();
  var Down = (function () {
      function Down(value0) {
          this.value0 = value0;
      };
      Down.create = function (value0) {
          return new Down(value0);
      };
      return Down;
  })();
  var Forward = (function () {
      function Forward(value0) {
          this.value0 = value0;
      };
      Forward.create = function (value0) {
          return new Forward(value0);
      };
      return Forward;
  })();
  var Back = (function () {
      function Back(value0) {
          this.value0 = value0;
      };
      Back.create = function (value0) {
          return new Back(value0);
      };
      return Back;
  })();
  var NextLine = (function () {
      function NextLine(value0) {
          this.value0 = value0;
      };
      NextLine.create = function (value0) {
          return new NextLine(value0);
      };
      return NextLine;
  })();
  var PreviousLine = (function () {
      function PreviousLine(value0) {
          this.value0 = value0;
      };
      PreviousLine.create = function (value0) {
          return new PreviousLine(value0);
      };
      return PreviousLine;
  })();
  var HorizontalAbsolute = (function () {
      function HorizontalAbsolute(value0) {
          this.value0 = value0;
      };
      HorizontalAbsolute.create = function (value0) {
          return new HorizontalAbsolute(value0);
      };
      return HorizontalAbsolute;
  })();
  var Position = (function () {
      function Position(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Position.create = function (value0) {
          return function (value1) {
              return new Position(value0, value1);
          };
      };
      return Position;
  })();
  var EraseData = (function () {
      function EraseData(value0) {
          this.value0 = value0;
      };
      EraseData.create = function (value0) {
          return new EraseData(value0);
      };
      return EraseData;
  })();
  var EraseLine = (function () {
      function EraseLine(value0) {
          this.value0 = value0;
      };
      EraseLine.create = function (value0) {
          return new EraseLine(value0);
      };
      return EraseLine;
  })();
  var ScrollUp = (function () {
      function ScrollUp(value0) {
          this.value0 = value0;
      };
      ScrollUp.create = function (value0) {
          return new ScrollUp(value0);
      };
      return ScrollUp;
  })();
  var ScrollDown = (function () {
      function ScrollDown(value0) {
          this.value0 = value0;
      };
      ScrollDown.create = function (value0) {
          return new ScrollDown(value0);
      };
      return ScrollDown;
  })();
  var Graphics = (function () {
      function Graphics(value0) {
          this.value0 = value0;
      };
      Graphics.create = function (value0) {
          return new Graphics(value0);
      };
      return Graphics;
  })();
  var SavePosition = (function () {
      function SavePosition() {

      };
      SavePosition.value = new SavePosition();
      return SavePosition;
  })();
  var RestorePosition = (function () {
      function RestorePosition() {

      };
      RestorePosition.value = new RestorePosition();
      return RestorePosition;
  })();
  var QueryPosition = (function () {
      function QueryPosition() {

      };
      QueryPosition.value = new QueryPosition();
      return QueryPosition;
  })();
  var HideCursor = (function () {
      function HideCursor() {

      };
      HideCursor.value = new HideCursor();
      return HideCursor;
  })();
  var ShowCursor = (function () {
      function ShowCursor() {

      };
      ShowCursor.value = new ShowCursor();
      return ShowCursor;
  })();
  var prefix = "\x1b[";
  var eraseParamToString = function (ep) {
      if (ep instanceof ToEnd) {
          return "0";
      };
      if (ep instanceof FromBeginning) {
          return "1";
      };
      if (ep instanceof Entire) {
          return "2";
      };
      throw new Error("Failed pattern match at Ansi.Codes (line 95, column 3 - line 98, column 25): " + [ ep.constructor.name ]);
  };
  var colorSuffix = "m";
  var colorCode = function (c) {
      if (c instanceof Black) {
          return 30;
      };
      if (c instanceof Red) {
          return 31;
      };
      if (c instanceof Green) {
          return 32;
      };
      if (c instanceof Yellow) {
          return 33;
      };
      if (c instanceof Blue) {
          return 34;
      };
      if (c instanceof Magenta) {
          return 35;
      };
      if (c instanceof Cyan) {
          return 36;
      };
      if (c instanceof White) {
          return 37;
      };
      if (c instanceof BrightBlack) {
          return 90;
      };
      if (c instanceof BrightRed) {
          return 91;
      };
      if (c instanceof BrightGreen) {
          return 92;
      };
      if (c instanceof BrightYellow) {
          return 93;
      };
      if (c instanceof BrightBlue) {
          return 94;
      };
      if (c instanceof BrightMagenta) {
          return 95;
      };
      if (c instanceof BrightCyan) {
          return 96;
      };
      if (c instanceof BrightWhite) {
          return 97;
      };
      throw new Error("Failed pattern match at Ansi.Codes (line 173, column 3 - line 189, column 22): " + [ c.constructor.name ]);
  };
  var codeForRenderingMode = function (m) {
      if (m instanceof Bold) {
          return 1;
      };
      if (m instanceof Dim) {
          return 2;
      };
      if (m instanceof Italic) {
          return 3;
      };
      if (m instanceof Underline) {
          return 4;
      };
      if (m instanceof Inverse) {
          return 7;
      };
      if (m instanceof Strikethrough) {
          return 9;
      };
      throw new Error("Failed pattern match at Ansi.Codes (line 138, column 3 - line 144, column 23): " + [ m.constructor.name ]);
  };
  var graphicsParamToString = function (gp) {
      if (gp instanceof Reset) {
          return "0";
      };
      if (gp instanceof PMode) {
          return Data_Show.show(Data_Show.showInt)(codeForRenderingMode(gp.value0));
      };
      if (gp instanceof PForeground) {
          return Data_Show.show(Data_Show.showInt)(colorCode(gp.value0));
      };
      if (gp instanceof PBackground) {
          return Data_Show.show(Data_Show.showInt)(colorCode(gp.value0) + 10 | 0);
      };
      throw new Error("Failed pattern match at Ansi.Codes (line 116, column 3 - line 120, column 45): " + [ gp.constructor.name ]);
  };
  var escapeCodeToString = (function () {
      var go = function (c) {
          if (c instanceof Up) {
              return Data_Show.show(Data_Show.showInt)(c.value0) + "A";
          };
          if (c instanceof Down) {
              return Data_Show.show(Data_Show.showInt)(c.value0) + "B";
          };
          if (c instanceof Forward) {
              return Data_Show.show(Data_Show.showInt)(c.value0) + "C";
          };
          if (c instanceof Back) {
              return Data_Show.show(Data_Show.showInt)(c.value0) + "D";
          };
          if (c instanceof NextLine) {
              return Data_Show.show(Data_Show.showInt)(c.value0) + "E";
          };
          if (c instanceof PreviousLine) {
              return Data_Show.show(Data_Show.showInt)(c.value0) + "F";
          };
          if (c instanceof HorizontalAbsolute) {
              return Data_Show.show(Data_Show.showInt)(c.value0) + "G";
          };
          if (c instanceof Position) {
              return Data_Show.show(Data_Show.showInt)(c.value0) + (";" + (Data_Show.show(Data_Show.showInt)(c.value1) + "H"));
          };
          if (c instanceof EraseData) {
              return eraseParamToString(c.value0) + "J";
          };
          if (c instanceof EraseLine) {
              return eraseParamToString(c.value0) + "K";
          };
          if (c instanceof ScrollUp) {
              return Data_Show.show(Data_Show.showInt)(c.value0) + "S";
          };
          if (c instanceof ScrollDown) {
              return Data_Show.show(Data_Show.showInt)(c.value0) + "T";
          };
          if (c instanceof Graphics) {
              return Data_Foldable.intercalate(Data_List_Types.foldableNonEmptyList)(Data_Monoid.monoidString)(";")(Data_Functor.map(Data_List_Types.functorNonEmptyList)(graphicsParamToString)(c.value0)) + colorSuffix;
          };
          if (c instanceof SavePosition) {
              return "s";
          };
          if (c instanceof RestorePosition) {
              return "u";
          };
          if (c instanceof QueryPosition) {
              return "6n";
          };
          if (c instanceof HideCursor) {
              return "?25l";
          };
          if (c instanceof ShowCursor) {
              return "?25h";
          };
          throw new Error("Failed pattern match at Ansi.Codes (line 53, column 5 - line 71, column 37): " + [ c.constructor.name ]);
      };
      return function ($624) {
          return (function (v) {
              return prefix + v;
          })(go($624));
      };
  })();
  exports["Graphics"] = Graphics;
  exports["escapeCodeToString"] = escapeCodeToString;
  exports["Reset"] = Reset;
  exports["PMode"] = PMode;
  exports["PForeground"] = PForeground;
  exports["Bold"] = Bold;
  exports["Red"] = Red;
  exports["Yellow"] = Yellow;
  exports["Blue"] = Blue;
  exports["Cyan"] = Cyan;
  exports["White"] = White;
  exports["BrightBlack"] = BrightBlack;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Ansi.Output"] = $PS["Ansi.Output"] || {};
  var exports = $PS["Ansi.Output"];
  var Ansi_Codes = $PS["Ansi.Codes"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Data_List_Types = $PS["Data.List.Types"];                
  var withGraphics = function (params) {
      return function (text) {
          return Ansi_Codes.escapeCodeToString(new Ansi_Codes.Graphics(params)) + (text + Ansi_Codes.escapeCodeToString(new Ansi_Codes.Graphics(Control_Applicative.pure(Data_List_Types.applicativeNonEmptyList)(Ansi_Codes.Reset.value))));
      };
  };                                                                                                                              
  var foreground = function (c) {
      return Control_Applicative.pure(Data_List_Types.applicativeNonEmptyList)(new Ansi_Codes.PForeground(c));
  };                                                                                                                      
  var bold = Control_Applicative.pure(Data_List_Types.applicativeNonEmptyList)(new Ansi_Codes.PMode(Ansi_Codes.Bold.value));
  exports["withGraphics"] = withGraphics;
  exports["bold"] = bold;
  exports["foreground"] = foreground;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Ctl.Internal.Contract.Hooks"] = $PS["Ctl.Internal.Contract.Hooks"] || {};
  var exports = $PS["Ctl.Internal.Contract.Hooks"];
  var Data_Maybe = $PS["Data.Maybe"];                
  var emptyHooks = {
      beforeSign: Data_Maybe.Nothing.value,
      beforeInit: Data_Maybe.Nothing.value,
      onSuccess: Data_Maybe.Nothing.value,
      onError: Data_Maybe.Nothing.value,
      onSubmit: Data_Maybe.Nothing.value
  };
  exports["emptyHooks"] = emptyHooks;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Ctl.Internal.Contract.QueryBackend"] = $PS["Ctl.Internal.Contract.QueryBackend"] || {};
  var exports = $PS["Ctl.Internal.Contract.QueryBackend"];
  var Data_Function = $PS["Data.Function"];
  var Data_Maybe = $PS["Data.Maybe"];                
  var CtlBackendParams = (function () {
      function CtlBackendParams(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      CtlBackendParams.create = function (value0) {
          return function (value1) {
              return new CtlBackendParams(value0, value1);
          };
      };
      return CtlBackendParams;
  })();
  var BlockfrostBackendParams = (function () {
      function BlockfrostBackendParams(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      BlockfrostBackendParams.create = function (value0) {
          return function (value1) {
              return new BlockfrostBackendParams(value0, value1);
          };
      };
      return BlockfrostBackendParams;
  })();
  var CtlBackend = (function () {
      function CtlBackend(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      CtlBackend.create = function (value0) {
          return function (value1) {
              return new CtlBackend(value0, value1);
          };
      };
      return CtlBackend;
  })();
  var BlockfrostBackend = (function () {
      function BlockfrostBackend(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      BlockfrostBackend.create = function (value0) {
          return function (value1) {
              return new BlockfrostBackend(value0, value1);
          };
      };
      return BlockfrostBackend;
  })();
  var mkCtlBackendParams = Data_Function.flip(CtlBackendParams.create)(Data_Maybe.Nothing.value);              
  var getCtlBackend = function (v) {
      if (v instanceof CtlBackend) {
          return new Data_Maybe.Just(v.value0);
      };
      if (v instanceof BlockfrostBackend) {
          return v.value1;
      };
      throw new Error("Failed pattern match at Ctl.Internal.Contract.QueryBackend (line 44, column 1 - line 44, column 50): " + [ v.constructor.name ]);
  };
  var getBlockfrostBackend = function (v) {
      if (v instanceof CtlBackend) {
          return v.value1;
      };
      if (v instanceof BlockfrostBackend) {
          return new Data_Maybe.Just(v.value0);
      };
      throw new Error("Failed pattern match at Ctl.Internal.Contract.QueryBackend (line 48, column 1 - line 48, column 64): " + [ v.constructor.name ]);
  };
  exports["BlockfrostBackend"] = BlockfrostBackend;
  exports["CtlBackend"] = CtlBackend;
  exports["BlockfrostBackendParams"] = BlockfrostBackendParams;
  exports["CtlBackendParams"] = CtlBackendParams;
  exports["getBlockfrostBackend"] = getBlockfrostBackend;
  exports["getCtlBackend"] = getCtlBackend;
  exports["mkCtlBackendParams"] = mkCtlBackendParams;
})(PS);
(function(exports) {
  /* global BROWSER_RUNTIME */

  let lib;
  if (typeof BROWSER_RUNTIME != "undefined" && BROWSER_RUNTIME) {
    lib = require("@emurgo/cardano-serialization-lib-browser");
  } else {
    lib = require("@emurgo/cardano-serialization-lib-nodejs");
  }
  lib = require("@mlabs-haskell/csl-gc-wrapper")(lib);

  const callClassStaticMaybe = (classname, functionname) => maybe => input => {
    let ret = null;
    try {
      ret = lib[classname][functionname](input);
    } catch (_) {
      // ignored
    }
    if (ret == null) {
      return maybe.nothing;
    }
    return maybe.just(ret);
  };

  const callMethodParameterless = methodname => object => {
    return object[methodname]();
  };
  const callToAddress = callMethodParameterless("to_address");
  const callToBytes = callMethodParameterless("to_bytes");
  const callToBech32 = callMethodParameterless("to_bech32");
  const callNetworkId = callMethodParameterless("network_id");
  const callPaymentCred = callMethodParameterless("payment_cred");
  const callStakeCred = callMethodParameterless("stake_cred");

  exports.withStakeCredential = cbObj => stakeCred => {
    return stakeCred.kind() == lib.StakeCredKind.Key
      ? cbObj.onKeyHash(stakeCred.to_keyhash())
      : cbObj.onScriptHash(stakeCred.to_scripthash());
  };

  exports.keyHashCredential = lib.StakeCredential.from_keyhash;
  exports.scriptHashCredential = lib.StakeCredential.from_scripthash;

  exports.addressBytes = callToBytes;     
  exports.stakeCredentialToBytes = callToBytes;

  exports.addressBech32 = callToBech32;
  exports._addressNetworkId = toAdt => addr => {
    return toAdt(callNetworkId(addr));
  };

  exports._addressFromBech32 = callClassStaticMaybe("Address", "from_bech32");

  exports._baseAddressFromAddress = callClassStaticMaybe(
    "BaseAddress",
    "from_address"
  );
  exports._enterpriseAddressFromAddress = callClassStaticMaybe(
    "EnterpriseAddress",
    "from_address"
  );
  exports._pointerAddressFromAddress = callClassStaticMaybe(
    "PointerAddress",
    "from_address"
  );
  exports._rewardAddressFromAddress = callClassStaticMaybe(
    "RewardAddress",
    "from_address"
  );

  exports.baseAddressToAddress = callToAddress; 
  exports.enterpriseAddressToAddress = callToAddress;
  exports.pointerAddressToAddress = callToAddress;
  exports.rewardAddressToAddress = callToAddress;

  exports.baseAddressPaymentCred = callPaymentCred;  
  exports.enterpriseAddressPaymentCred = callPaymentCred;
  exports.pointerAddressPaymentCred = callPaymentCred;

  exports.baseAddressDelegationCred = callStakeCred;

  exports.pointerAddressStakePointer = pa => {
    const pointerForeign = pa.stake_pointer();
    return {
      slot: pointerForeign.slot_bignum(),
      txIx: pointerForeign.tx_index_bignum(),
      certIx: pointerForeign.cert_index_bignum(),
    };
  };

  exports._enterpriseAddress = netIdToInt => inpRec => {
    return lib.EnterpriseAddress.new(
      netIdToInt(inpRec.network),
      inpRec.paymentCred
    );
  };

  exports._rewardAddress = netIdToInt => inpRec => {
    return lib.RewardAddress.new(netIdToInt(inpRec.network), inpRec.paymentCred);
  };

  exports._baseAddress = netIdToInt => inpRec => {
    return lib.BaseAddress.new(
      netIdToInt(inpRec.network),
      inpRec.paymentCred,
      inpRec.delegationCred
    );
  };

  exports._pointerAddress = netIdToInt => inpRec => {
    const p = inpRec.stakePointer;
    const pointerForeign = lib.Pointer.new_pointer(p.slot, p.txIx, p.certIx);
    return lib.PointerAddress.new(
      netIdToInt(inpRec.network),
      inpRec.paymentCred,
      pointerForeign
    );
  };
})(PS["Ctl.Internal.Serialization.Address"] = PS["Ctl.Internal.Serialization.Address"] || {});
(function(exports) {
  // Abstracts away unpacking elements from a monomorphic container.
  const unpack = obj => {
    const res = [];

    for (let i = 0; i < obj.len(); i++) {
      res.push(obj.get(i));
    }

    return res;
  };

  const unpackFromProperty = prop => obj => unpack(obj[prop]());

  exports._containerHelper = r => ({
    unpack,
    unpackFromProperty,
    // unpacks an associative container where keys are stored in .keys()
    // and values for that keys might be missing.
    unpackKeyIndexed: obj => {
      const res = [];
      for (let i = 0; i < obj.len(); i++) {
        let k = obj.keys().get(i);
        let v = obj.get(k);
        if (v == null) continue;
        res.push(r.tuple(k)(v));
      }
      return res;
    },
    // Abstracts away packing array of something into a monomorphic container.
    pack: (container, elements) => {
      const res = container.new();
      elements.forEach(elem => res.add(elem));
      return res;
    },
    // Abstracts away packing a list of KV-pairs into a map-like structure.
    packMap: (container, entries) => {
      const res = container.new();
      entries.forEach(entry => {
        const [key, value] = r.untuple(entry);
        res.insert(key, value);
      });
      return res;
    },
  });
})(PS["Ctl.Internal.FfiHelpers"] = PS["Ctl.Internal.FfiHelpers"] || {});
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Ctl.Internal.FfiHelpers"] = $PS["Ctl.Internal.FfiHelpers"] || {};
  var exports = $PS["Ctl.Internal.FfiHelpers"];
  var $foreign = $PS["Ctl.Internal.FfiHelpers"];
  var Data_Either = $PS["Data.Either"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Tuple = $PS["Data.Tuple"];                
  var untuple = function (v) {
      return [ v.value0, v.value1 ];
  };
  var maybeFfiHelper = {
      nothing: Data_Maybe.Nothing.value,
      just: Data_Maybe.Just.create,
      from: Data_Maybe.fromMaybe
  };
  var errorHelper = function (v) {
      return {
          error: function ($4) {
              return Data_Either.Left.create(v($4));
          },
          valid: Data_Either.Right.create,
          from: function (e) {
              var $5 = Data_Maybe.fromMaybe(e);
              return function ($6) {
                  return $5(Data_Either.hush($6));
              };
          }
      };
  };
  var containerHelper = $foreign["_containerHelper"]({
      untuple: untuple,
      tuple: Data_Tuple.Tuple.create
  });
  exports["maybeFfiHelper"] = maybeFfiHelper;
  exports["containerHelper"] = containerHelper;
  exports["errorHelper"] = errorHelper;
})(PS);
(function(exports) {
  /* global BROWSER_RUNTIME */

  let lib;
  if (typeof BROWSER_RUNTIME != "undefined" && BROWSER_RUNTIME) {
    lib = require("@emurgo/cardano-serialization-lib-browser");
  } else {
    lib = require("@emurgo/cardano-serialization-lib-nodejs");
  }
  lib = require("@mlabs-haskell/csl-gc-wrapper")(lib);

  exports.hashToBytes = hash => {
    return hash.to_bytes();
  };

  exports.hashFromBytes = name => maybe => bytes => {
    return hashFromImpl(lib[name].from_bytes)(maybe)(bytes);
  };

  exports.hashToBech32Unsafe = prefix => hash => {
    return hash.to_bech32(prefix);
  };

  const hashFromImpl = hashClassFrom => maybe => input => {
    let ret = null;
    try {
      ret = hashClassFrom(input);
    } catch (e) {
      // Do nothing
    }
    if (ret == null) {
      return maybe.nothing;
    }
    return maybe.just(ret);
  };

  exports.hashToBech32Impl = maybe => prefix => hash => {
    let ret = null;
    try {
      ret = hash.to_bech32(prefix);
    } catch (e) {
      // Do nothing
    }
    if (ret == null) {
      return maybe.nothing;
    }
    return maybe.just(ret);
  };

  exports._ed25519KeyHashFromBech32Impl = maybe => bech32str => {
    return hashFromImpl(lib.Ed25519KeyHash.from_bech32)(maybe)(bech32str);
  };

  exports.nativeScriptHash = script => script.hash();
})(PS["Ctl.Internal.Serialization.Hash"] = PS["Ctl.Internal.Serialization.Hash"] || {});
(function(exports) {
  // From instance for Array in prelude
  exports.ord_ = f => xs => ys => {
    let i = 0;
    const xlen = xs.length;
    const ylen = ys.length;
    while (i < xlen && i < ylen) {
      let o = f(xs[i])(ys[i]);
      if (o !== 0) {
        return o;
      }
      i++;
    }
    if (xlen === ylen) {
      return 0;
    } else if (xlen > ylen) {
      return -1;
    } else {
      return 1;
    }
  };

  exports.concat_ = xs => ys => {
    const res = new Uint8Array(xs.length + ys.length);
    for (let i = 0; i < xs.length; i++) {
      res[i] = xs[i];
    }
    for (let i = 0; i < ys.length; i++) {
      res[i + xs.length] = ys[i];
    }
    return res;
  };

  exports.byteArrayToHex = arr => Buffer.from(arr).toString("hex");

  /* adapted from https://github.com/WebReflection/uint8-to-utf16/blob/master/esm/index.js
 * (someone who knows javascript should like import that or something)
 */  
  const { ceil } = Math;
  const { fromCharCode } = String;

  exports.hexToByteArray_ = nothing => just => hex => {
    let bytes = [];
    for (let c = 0; c < hex.length; c += 2) {
      const chunk = hex.substr(c, 2);
      if (/[0-9a-f]{2}/i.test(chunk)) {
        bytes.push(parseInt(chunk, 16));
      } else {
        return nothing;
      }
    }
    return just(new Uint8Array(bytes));
  };

  exports.byteArrayFromIntArrayUnsafe = ints => new Uint8Array(ints);

  exports.byteArrayFromIntArray_ = nothing => just => ints => {
    if (ints.every(i => i < 256 && i >= 0)) {
      return just(new Uint8Array(ints));
    } else {
      return nothing;
    }
  };

  exports.byteArrayToIntArray = bytes => Array.from(bytes);

  exports.byteLength = bytes => bytes.byteLength;

  exports.subarray = start => end => bytes => bytes.subarray(start, end);
})(PS["Ctl.Internal.Types.ByteArray"] = PS["Ctl.Internal.Types.ByteArray"] || {});
(function(exports) {
  "use strict";

  exports.toCharCode = function (c) {
    return c.charCodeAt(0);
  };

  exports.fromCharCode = function (c) {
    return String.fromCharCode(c);
  };
})(PS["Data.Enum"] = PS["Data.Enum"] || {});
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Data.Enum"] = $PS["Data.Enum"] || {};
  var exports = $PS["Data.Enum"];
  var $foreign = $PS["Data.Enum"];
  var Data_Bounded = $PS["Data.Bounded"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var toEnum = function (dict) {
      return dict.toEnum;
  };
  var fromEnum = function (dict) {
      return dict.fromEnum;
  };
  var toEnumWithDefaults = function (dictBoundedEnum) {
      return function (low) {
          return function (high) {
              return function (x) {
                  var v = toEnum(dictBoundedEnum)(x);
                  if (v instanceof Data_Maybe.Just) {
                      return v.value0;
                  };
                  if (v instanceof Data_Maybe.Nothing) {
                      var $54 = x < fromEnum(dictBoundedEnum)(Data_Bounded.bottom(dictBoundedEnum.Bounded0()));
                      if ($54) {
                          return low;
                      };
                      return high;
                  };
                  throw new Error("Failed pattern match at Data.Enum (line 158, column 33 - line 160, column 62): " + [ v.constructor.name ]);
              };
          };
      };
  };
  var defaultSucc = function (toEnum$prime) {
      return function (fromEnum$prime) {
          return function (a) {
              return toEnum$prime(fromEnum$prime(a) + 1 | 0);
          };
      };
  };
  var defaultPred = function (toEnum$prime) {
      return function (fromEnum$prime) {
          return function (a) {
              return toEnum$prime(fromEnum$prime(a) - 1 | 0);
          };
      };
  };
  var charToEnum = function (v) {
      if (v >= Data_Bounded.bottom(Data_Bounded.boundedInt) && v <= Data_Bounded.top(Data_Bounded.boundedInt)) {
          return new Data_Maybe.Just($foreign.fromCharCode(v));
      };
      return Data_Maybe.Nothing.value;
  };
  var enumChar = {
      succ: defaultSucc(charToEnum)($foreign.toCharCode),
      pred: defaultPred(charToEnum)($foreign.toCharCode),
      Ord0: function () {
          return Data_Ord.ordChar;
      }
  };
  var boundedEnumChar = {
      cardinality: $foreign.toCharCode(Data_Bounded.top(Data_Bounded.boundedChar)) - $foreign.toCharCode(Data_Bounded.bottom(Data_Bounded.boundedChar)) | 0,
      toEnum: charToEnum,
      fromEnum: $foreign.toCharCode,
      Bounded0: function () {
          return Data_Bounded.boundedChar;
      },
      Enum1: function () {
          return enumChar;
      }
  };
  exports["toEnum"] = toEnum;
  exports["fromEnum"] = fromEnum;
  exports["toEnumWithDefaults"] = toEnumWithDefaults;
  exports["boundedEnumChar"] = boundedEnumChar;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Data.Char"] = $PS["Data.Char"] || {};
  var exports = $PS["Data.Char"];
  var Data_Enum = $PS["Data.Enum"];                
  var toCharCode = Data_Enum.fromEnum(Data_Enum.boundedEnumChar);
  var fromCharCode = Data_Enum.toEnum(Data_Enum.boundedEnumChar);
  exports["toCharCode"] = toCharCode;
  exports["fromCharCode"] = fromCharCode;
})(PS);
(function(exports) {
  "use strict";

  exports.fromCharArray = function (a) {
    return a.join("");
  };

  exports.toCharArray = function (s) {
    return s.split("");
  };

  exports.singleton = function (c) {
    return c;
  };

  exports.length = function (s) {
    return s.length;
  };

  exports._indexOf = function (just) {
    return function (nothing) {
      return function (x) {
        return function (s) {
          var i = s.indexOf(x);
          return i === -1 ? nothing : just(i);
        };
      };
    };
  };

  exports.take = function (n) {
    return function (s) {
      return s.substr(0, n);
    };
  };

  exports.drop = function (n) {
    return function (s) {
      return s.substring(n);
    };
  };

  exports.splitAt = function (i) {
    return function (s) {
      return { before: s.substring(0, i), after: s.substring(i) };
    };
  };
})(PS["Data.String.CodeUnits"] = PS["Data.String.CodeUnits"] || {});
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Data.String.CodeUnits"] = $PS["Data.String.CodeUnits"] || {};
  var exports = $PS["Data.String.CodeUnits"];
  var $foreign = $PS["Data.String.CodeUnits"];
  var Data_Maybe = $PS["Data.Maybe"];
  var stripSuffix = function (v) {
      return function (str) {
          var v1 = $foreign.splitAt($foreign.length(str) - $foreign.length(v) | 0)(str);
          var $9 = v1.after === v;
          if ($9) {
              return new Data_Maybe.Just(v1.before);
          };
          return Data_Maybe.Nothing.value;
      };
  };
  var stripPrefix = function (v) {
      return function (str) {
          var v1 = $foreign.splitAt($foreign.length(v))(str);
          var $15 = v1.before === v;
          if ($15) {
              return new Data_Maybe.Just(v1.after);
          };
          return Data_Maybe.Nothing.value;
      };
  };                                                                                                   
  var indexOf = $foreign["_indexOf"](Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  exports["stripPrefix"] = stripPrefix;
  exports["stripSuffix"] = stripSuffix;
  exports["indexOf"] = indexOf;
  exports["singleton"] = $foreign.singleton;
  exports["fromCharArray"] = $foreign.fromCharArray;
  exports["toCharArray"] = $foreign.toCharArray;
  exports["length"] = $foreign.length;
  exports["take"] = $foreign.take;
  exports["drop"] = $foreign.drop;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Ctl.Internal.Types.ByteArray"] = $PS["Ctl.Internal.Types.ByteArray"] || {};
  var exports = $PS["Ctl.Internal.Types.ByteArray"];
  var $foreign = $PS["Ctl.Internal.Types.ByteArray"];
  var Aeson = $PS["Aeson"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Data_Argonaut_Decode_Error = $PS["Data.Argonaut.Decode.Error"];
  var Data_Char = $PS["Data.Char"];
  var Data_Either = $PS["Data.Either"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Ordering = $PS["Data.Ordering"];
  var Data_Show = $PS["Data.Show"];
  var Data_String_CodeUnits = $PS["Data.String.CodeUnits"];
  var Data_Traversable = $PS["Data.Traversable"];
  var showByteArray = {
      show: function (arr) {
          return "(hexToByteArrayUnsafe " + (Data_Show.show(Data_Show.showString)($foreign.byteArrayToHex(arr)) + ")");
      }
  };
  var semigroupByteArray = {
      append: $foreign.concat_
  };
  var monoidByteArray = {
      mempty: $foreign.byteArrayFromIntArrayUnsafe([  ]),
      Semigroup0: function () {
          return semigroupByteArray;
      }
  };
  var ordByteArray = {
      compare: (function () {
          var toDelta = function (x) {
              return function (y) {
                  var v = Data_Ord.compare(Data_Ord.ordInt)(x)(y);
                  if (v instanceof Data_Ordering.EQ) {
                      return 0;
                  };
                  if (v instanceof Data_Ordering.LT) {
                      return 1;
                  };
                  if (v instanceof Data_Ordering.GT) {
                      return -1 | 0;
                  };
                  throw new Error("Failed pattern match at Ctl.Internal.Types.ByteArray (line 56, column 7 - line 59, column 17): " + [ v.constructor.name ]);
              };
          };
          return function (xs) {
              return function (ys) {
                  return Data_Ord.compare(Data_Ord.ordInt)(0)($foreign.ord_(toDelta)(xs)(ys));
              };
          };
      })(),
      Eq0: function () {
          return eqByteArray;
      }
  };
  var eqByteArray = {
      eq: function (a) {
          return function (b) {
              return Data_Eq.eq(Data_Ordering.eqOrdering)(Data_Ord.compare(ordByteArray)(a)(b))(Data_Ordering.EQ.value);
          };
      }
  };
  var encodeAesonByteArray = {
      encodeAeson: function (ba) {
          return Aeson.encodeAeson(Aeson.encodeAesonString)($foreign.byteArrayToHex(ba));
      }
  };
  var hexToByteArray = $foreign.hexToByteArray_(Data_Maybe.Nothing.value)(Data_Maybe.Just.create);
  var decodeAesonByteArray = {
      decodeAeson: function (j) {
          var unexpectedValueError = new Data_Argonaut_Decode_Error.UnexpectedValue(Aeson.toStringifiedNumbersJson(j));
          var typeMismatchError = new Data_Argonaut_Decode_Error.TypeMismatch("expected a hex-encoded string");
          return Aeson.caseAesonString(new Data_Either.Left(typeMismatchError))((function () {
              var $14 = Data_Either.note(unexpectedValueError);
              return function ($15) {
                  return $14(hexToByteArray($15));
              };
          })())(j);
      }
  };
  var byteArrayFromIntArray = $foreign.byteArrayFromIntArray_(Data_Maybe.Nothing.value)(Data_Maybe.Just.create);
  var byteArrayFromAscii = function (str) {
      return Data_Functor.map(Data_Maybe.functorMaybe)($foreign.byteArrayFromIntArrayUnsafe)(Data_Traversable["for"](Data_Maybe.applicativeMaybe)(Data_Traversable.traversableArray)(Data_String_CodeUnits.toCharArray(str))(function (cp) {
          var charCode = Data_Char.toCharCode(cp);
          var $13 = charCode <= 255 && charCode >= 0;
          if ($13) {
              return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(charCode);
          };
          return Data_Maybe.Nothing.value;
      }));
  };
  exports["byteArrayFromIntArray"] = byteArrayFromIntArray;
  exports["byteArrayFromAscii"] = byteArrayFromAscii;
  exports["hexToByteArray"] = hexToByteArray;
  exports["showByteArray"] = showByteArray;
  exports["eqByteArray"] = eqByteArray;
  exports["ordByteArray"] = ordByteArray;
  exports["monoidByteArray"] = monoidByteArray;
  exports["decodeAesonByteArray"] = decodeAesonByteArray;
  exports["encodeAesonByteArray"] = encodeAesonByteArray;
  exports["byteArrayToHex"] = $foreign.byteArrayToHex;
  exports["byteArrayToIntArray"] = $foreign.byteArrayToIntArray;
  exports["byteLength"] = $foreign.byteLength;
  exports["subarray"] = $foreign.subarray;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Ctl.Internal.Types.RawBytes"] = $PS["Ctl.Internal.Types.RawBytes"] || {};
  var exports = $PS["Ctl.Internal.Types.RawBytes"];
  var Ctl_Internal_Types_ByteArray = $PS["Ctl.Internal.Types.ByteArray"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Show = $PS["Data.Show"];                                       
  var ordRawBytes = Ctl_Internal_Types_ByteArray.ordByteArray;
  var monoidRawBytes = Ctl_Internal_Types_ByteArray.monoidByteArray;                  
  var eqRawBytes = Ctl_Internal_Types_ByteArray.eqByteArray;
  var rawBytesToHex = (function () {
      var $13 = Data_Newtype.unwrap();
      return function ($14) {
          return Ctl_Internal_Types_ByteArray.byteArrayToHex($13($14));
      };
  })();
  var showRawBytes = {
      show: function (rb) {
          return "(hexToRawBytesUnsafe " + (Data_Show.show(Data_Show.showString)(rawBytesToHex(rb)) + ")");
      }
  };   
  var hexToRawBytes = (function () {
      var $23 = Data_Functor.map(Data_Maybe.functorMaybe)(Data_Newtype.wrap());
      return function ($24) {
          return $23(Ctl_Internal_Types_ByteArray.hexToByteArray($24));
      };
  })();
  exports["rawBytesToHex"] = rawBytesToHex;
  exports["hexToRawBytes"] = hexToRawBytes;
  exports["showRawBytes"] = showRawBytes;
  exports["eqRawBytes"] = eqRawBytes;
  exports["ordRawBytes"] = ordRawBytes;
  exports["monoidRawBytes"] = monoidRawBytes;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Ctl.Internal.Serialization.Hash"] = $PS["Ctl.Internal.Serialization.Hash"] || {};
  var exports = $PS["Ctl.Internal.Serialization.Hash"];
  var $foreign = $PS["Ctl.Internal.Serialization.Hash"];
  var Aeson = $PS["Aeson"];
  var Control_Bind = $PS["Control.Bind"];
  var Ctl_Internal_FfiHelpers = $PS["Ctl.Internal.FfiHelpers"];
  var Ctl_Internal_Types_ByteArray = $PS["Ctl.Internal.Types.ByteArray"];
  var Ctl_Internal_Types_RawBytes = $PS["Ctl.Internal.Types.RawBytes"];
  var Data_Argonaut_Decode_Error = $PS["Data.Argonaut.Decode.Error"];
  var Data_Either = $PS["Data.Either"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Function = $PS["Data.Function"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Ord = $PS["Data.Ord"];
  var scriptHashToBytes = (function () {
      var $37 = Data_Newtype.wrap();
      return function ($38) {
          return $37($foreign.hashToBytes($38));
      };
  })();
  var eqScriptHash = {
      eq: Data_Function.on(Data_Eq.eq(Ctl_Internal_Types_RawBytes.eqRawBytes))(scriptHashToBytes)
  };
  var ordScriptHash = {
      compare: Data_Function.on(Data_Ord.compare(Ctl_Internal_Types_RawBytes.ordRawBytes))(scriptHashToBytes),
      Eq0: function () {
          return eqScriptHash;
      }
  };
  var showScriptHash = {
      show: function (edkh) {
          return "(ScriptHash " + (Ctl_Internal_Types_RawBytes.rawBytesToHex(scriptHashToBytes(edkh)) + ")");
      }
  };
  var scriptHashToBech32Unsafe = $foreign.hashToBech32Unsafe;
  var scriptHashFromBytes = $foreign.hashFromBytes("ScriptHash")(Ctl_Internal_FfiHelpers.maybeFfiHelper);
  var decodeAesonScriptHash = {
      decodeAeson: (function () {
          var $44 = Data_Maybe.maybe(new Data_Either.Left(new Data_Argonaut_Decode_Error.TypeMismatch("Expected hex-encoded script hash")))(Data_Either.Right.create);
          var $45 = Aeson.caseAesonString(Data_Maybe.Nothing.value)(Control_Bind.composeKleisliFlipped(Data_Maybe.bindMaybe)(Data_Maybe.Just.create)(Control_Bind.composeKleisliFlipped(Data_Maybe.bindMaybe)(scriptHashFromBytes)(Ctl_Internal_Types_ByteArray.hexToByteArray)));
          return function ($46) {
              return $44($45($46));
          };
      })()
  };                                                                                                       
  var ed25519KeyHashToBytes = (function () {
      var $47 = Data_Newtype.wrap();
      return function ($48) {
          return $47($foreign.hashToBytes($48));
      };
  })();
  var encodeAesonEd25519KeyHash = {
      encodeAeson: (function () {
          var $49 = Aeson.encodeAeson(Aeson.encodeAesonString);
          return function ($50) {
              return $49(Ctl_Internal_Types_RawBytes.rawBytesToHex(ed25519KeyHashToBytes($50)));
          };
      })()
  };
  var eqEd25519KeyHash = {
      eq: Data_Function.on(Data_Eq.eq(Ctl_Internal_Types_RawBytes.eqRawBytes))(ed25519KeyHashToBytes)
  };
  var ordEd25519KeyHash = {
      compare: Data_Function.on(Data_Ord.compare(Ctl_Internal_Types_RawBytes.ordRawBytes))(ed25519KeyHashToBytes),
      Eq0: function () {
          return eqEd25519KeyHash;
      }
  };
  var showEd25519KeyHash = {
      show: function (edkh) {
          return "(Ed25519KeyHash " + (Ctl_Internal_Types_RawBytes.rawBytesToHex(ed25519KeyHashToBytes(edkh)) + ")");
      }
  };
  var ed25519KeyHashToBech32Unsafe = $foreign.hashToBech32Unsafe;
  var ed25519KeyHashFromBytes = $foreign.hashFromBytes("Ed25519KeyHash")(Ctl_Internal_FfiHelpers.maybeFfiHelper);
  var decodeAesonEd25519KeyHash = {
      decodeAeson: Aeson.caseAesonString(new Data_Either.Left(new Data_Argonaut_Decode_Error.TypeMismatch("Expected Plutus BuiltinByteString")))(Control_Bind.composeKleisliFlipped(Data_Either.bindEither)((function () {
          var $58 = Data_Either.note(new Data_Argonaut_Decode_Error.TypeMismatch("Invalid Ed25519KeyHash"));
          return function ($59) {
              return $58(ed25519KeyHashFromBytes($59));
          };
      })())((function () {
          var $60 = Data_Either.note(new Data_Argonaut_Decode_Error.TypeMismatch("Invalid ByteArray"));
          return function ($61) {
              return $60(Ctl_Internal_Types_ByteArray.hexToByteArray($61));
          };
      })()))
  };
  var ed25519KeyHashFromBech32 = $foreign["_ed25519KeyHashFromBech32Impl"](Ctl_Internal_FfiHelpers.maybeFfiHelper);
  var _ed25519KeyHashToBech32Impl = $foreign.hashToBech32Impl;
  var ed25519KeyHashToBech32 = _ed25519KeyHashToBech32Impl(Ctl_Internal_FfiHelpers.maybeFfiHelper);
  exports["ed25519KeyHashFromBech32"] = ed25519KeyHashFromBech32;
  exports["ed25519KeyHashFromBytes"] = ed25519KeyHashFromBytes;
  exports["ed25519KeyHashToBech32"] = ed25519KeyHashToBech32;
  exports["ed25519KeyHashToBech32Unsafe"] = ed25519KeyHashToBech32Unsafe;
  exports["ed25519KeyHashToBytes"] = ed25519KeyHashToBytes;
  exports["scriptHashFromBytes"] = scriptHashFromBytes;
  exports["scriptHashToBech32Unsafe"] = scriptHashToBech32Unsafe;
  exports["scriptHashToBytes"] = scriptHashToBytes;
  exports["eqEd25519KeyHash"] = eqEd25519KeyHash;
  exports["ordEd25519KeyHash"] = ordEd25519KeyHash;
  exports["showEd25519KeyHash"] = showEd25519KeyHash;
  exports["decodeAesonEd25519KeyHash"] = decodeAesonEd25519KeyHash;
  exports["encodeAesonEd25519KeyHash"] = encodeAesonEd25519KeyHash;
  exports["eqScriptHash"] = eqScriptHash;
  exports["ordScriptHash"] = ordScriptHash;
  exports["showScriptHash"] = showScriptHash;
  exports["decodeAesonScriptHash"] = decodeAesonScriptHash;
  exports["nativeScriptHash"] = $foreign.nativeScriptHash;
})(PS);
(function(exports) {
  /* global BROWSER_RUNTIME */

  let lib;
  if (typeof BROWSER_RUNTIME != "undefined" && BROWSER_RUNTIME) {
    lib = require("@emurgo/cardano-serialization-lib-browser");
  } else {
    lib = require("@emurgo/cardano-serialization-lib-nodejs");
  }
  lib = require("@mlabs-haskell/csl-gc-wrapper")(lib);

  exports.bnCompare = lhs => rhs => lhs.compare(rhs);

  exports.zero = lib.BigNum.zero();

  exports.one = lib.BigNum.one();

  exports.bnAdd = maybe => lhs => rhs => {
    try {
      return maybe.just(lhs.checked_add(rhs));
    } catch (_) {
      return maybe.nothing;
    }
  };

  exports._fromString = maybe => str => {
    try {
      return maybe.just(lib.BigNum.from_str(str));
    } catch (_) {
      return maybe.nothing;
    }
  };

  exports.toString = bn => bn.to_str();
})(PS["Ctl.Internal.Types.BigNum"] = PS["Ctl.Internal.Types.BigNum"] || {});
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Ctl.Internal.Types.BigNum"] = $PS["Ctl.Internal.Types.BigNum"] || {};
  var exports = $PS["Ctl.Internal.Types.BigNum"];
  var $foreign = $PS["Ctl.Internal.Types.BigNum"];
  var Aeson = $PS["Aeson"];
  var Control_Bind = $PS["Control.Bind"];
  var Ctl_Internal_FfiHelpers = $PS["Ctl.Internal.FfiHelpers"];
  var Data_Argonaut_Decode_Error = $PS["Data.Argonaut.Decode.Error"];
  var Data_BigInt = $PS["Data.BigInt"];
  var Data_Either = $PS["Data.Either"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ordering = $PS["Data.Ordering"];
  var Data_UInt = $PS["Data.UInt"];                
  var showBigNum = {
      show: function (bn) {
          return "fromString \"" + ($foreign.toString(bn) + "\"");
      }
  };
  var eqBigNum = {
      eq: function (lhs) {
          return function (rhs) {
              return $foreign.bnCompare(lhs)(rhs) === 0;
          };
      }
  };
  var ordBigNum = {
      compare: function (lhs) {
          return function (rhs) {
              var v = $foreign.bnCompare(lhs)(rhs);
              if (v === 1) {
                  return Data_Ordering.GT.value;
              };
              if (v === 0) {
                  return Data_Ordering.EQ.value;
              };
              return Data_Ordering.LT.value;
          };
      },
      Eq0: function () {
          return eqBigNum;
      }
  };
  var toBigInt = (function () {
      var $10 = Data_Maybe.fromJust();
      return function ($11) {
          return $10(Data_BigInt.fromString($foreign.toString($11)));
      };
  })();
  var encodeAesonBigNum = {
      encodeAeson: (function () {
          var $12 = Aeson.encodeAeson(Aeson.encodeAesonBigInt);
          return function ($13) {
              return $12(toBigInt($13));
          };
      })()
  };                                                               
  var fromString = $foreign["_fromString"](Ctl_Internal_FfiHelpers.maybeFfiHelper);
  var fromStringUnsafe = (function () {
      var $14 = Data_Maybe.fromJust();
      return function ($15) {
          return $14(fromString($15));
      };
  })();
  var fromUInt = function ($16) {
      return fromStringUnsafe(Data_UInt.toString($16));
  };
  var maxValue = fromStringUnsafe("18446744073709551615");
  var fromInt = function ($17) {
      return fromStringUnsafe(Data_UInt.toString(Data_UInt.fromInt($17)));
  };
  var fromBigInt = function ($18) {
      return fromString(Data_BigInt.toString($18));
  };
  var decodeAesonBigNum = {
      decodeAeson: Control_Bind.composeKleisliFlipped(Data_Either.bindEither)((function () {
          var $19 = Data_Either.note(new Data_Argonaut_Decode_Error.TypeMismatch("Couldn't convert `BigInt` to `BigNum`"));
          return function ($20) {
              return $19(fromBigInt($20));
          };
      })())(Aeson.decodeAeson(Aeson.decodeAesonBigInt))
  };
  var add = $foreign.bnAdd(Ctl_Internal_FfiHelpers.maybeFfiHelper);
  exports["add"] = add;
  exports["fromBigInt"] = fromBigInt;
  exports["fromInt"] = fromInt;
  exports["fromString"] = fromString;
  exports["fromStringUnsafe"] = fromStringUnsafe;
  exports["maxValue"] = maxValue;
  exports["toBigInt"] = toBigInt;
  exports["fromUInt"] = fromUInt;
  exports["eqBigNum"] = eqBigNum;
  exports["ordBigNum"] = ordBigNum;
  exports["showBigNum"] = showBigNum;
  exports["decodeAesonBigNum"] = decodeAesonBigNum;
  exports["encodeAesonBigNum"] = encodeAesonBigNum;
  exports["one"] = $foreign.one;
  exports["toString"] = $foreign.toString;
  exports["zero"] = $foreign.zero;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Ctl.Internal.Types.CborBytes"] = $PS["Ctl.Internal.Types.CborBytes"] || {};
  var exports = $PS["Ctl.Internal.Types.CborBytes"];
  var Ctl_Internal_Types_ByteArray = $PS["Ctl.Internal.Types.ByteArray"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Newtype = $PS["Data.Newtype"];          
  var CborBytes = function (x) {
      return x;
  };                                                                       
  var ordCborBytes = Ctl_Internal_Types_ByteArray.ordByteArray;                        
  var eqCborBytes = Ctl_Internal_Types_ByteArray.eqByteArray;                  
  var decodeAesonCborBytes = Ctl_Internal_Types_ByteArray.decodeAesonByteArray;
  var rawBytesAsCborBytes = (function () {
      var $11 = Data_Newtype.wrap();
      var $12 = Data_Newtype.unwrap();
      return function ($13) {
          return $11($12($13));
      };
  })();
  var hexToCborBytes = (function () {
      var $16 = Data_Functor.map(Data_Maybe.functorMaybe)(Data_Newtype.wrap());
      return function ($17) {
          return $16(Ctl_Internal_Types_ByteArray.hexToByteArray($17));
      };
  })();
  var cborBytesToHex = (function () {
      var $20 = Data_Newtype.unwrap();
      return function ($21) {
          return Ctl_Internal_Types_ByteArray.byteArrayToHex($20($21));
      };
  })();
  exports["CborBytes"] = CborBytes;
  exports["cborBytesToHex"] = cborBytesToHex;
  exports["hexToCborBytes"] = hexToCborBytes;
  exports["rawBytesAsCborBytes"] = rawBytesAsCborBytes;
  exports["eqCborBytes"] = eqCborBytes;
  exports["ordCborBytes"] = ordCborBytes;
  exports["decodeAesonCborBytes"] = decodeAesonCborBytes;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Data.Generic.Rep"] = $PS["Data.Generic.Rep"] || {};
  var exports = $PS["Data.Generic.Rep"];             
  var Inl = (function () {
      function Inl(value0) {
          this.value0 = value0;
      };
      Inl.create = function (value0) {
          return new Inl(value0);
      };
      return Inl;
  })();
  var Inr = (function () {
      function Inr(value0) {
          this.value0 = value0;
      };
      Inr.create = function (value0) {
          return new Inr(value0);
      };
      return Inr;
  })();
  var Product = (function () {
      function Product(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Product.create = function (value0) {
          return function (value1) {
              return new Product(value0, value1);
          };
      };
      return Product;
  })();
  var NoArguments = (function () {
      function NoArguments() {

      };
      NoArguments.value = new NoArguments();
      return NoArguments;
  })();
  var from = function (dict) {
      return dict.from;
  };
  exports["from"] = from;
  exports["NoArguments"] = NoArguments;
  exports["Inl"] = Inl;
  exports["Inr"] = Inr;
  exports["Product"] = Product;
})(PS);
(function(exports) {
  "use strict";

  exports.intercalate = function (separator) {
    return function (xs) {
      var len = xs.length;
      if (len === 0) return "";

      var res = xs[0];
      for (var i = 1; i < len; i++) {
        res = res + separator + xs[i];
      }
      return res;
    };
  };
})(PS["Data.Show.Generic"] = PS["Data.Show.Generic"] || {});
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Data.Show.Generic"] = $PS["Data.Show.Generic"] || {};
  var exports = $PS["Data.Show.Generic"];
  var $foreign = $PS["Data.Show.Generic"];
  var Data_Generic_Rep = $PS["Data.Generic.Rep"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Show = $PS["Data.Show"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Type_Proxy = $PS["Type.Proxy"];                
  var genericShowArgsNoArguments = {
      genericShowArgs: function (v) {
          return [  ];
      }
  };
  var genericShowArgsArgument = function (dictShow) {
      return {
          genericShowArgs: function (v) {
              return [ Data_Show.show(dictShow)(v) ];
          }
      };
  };
  var genericShowArgs = function (dict) {
      return dict.genericShowArgs;
  };
  var genericShowArgsProduct = function (dictGenericShowArgs) {
      return function (dictGenericShowArgs1) {
          return {
              genericShowArgs: function (v) {
                  return Data_Semigroup.append(Data_Semigroup.semigroupArray)(genericShowArgs(dictGenericShowArgs)(v.value0))(genericShowArgs(dictGenericShowArgs1)(v.value1));
              }
          };
      };
  };
  var genericShowConstructor = function (dictGenericShowArgs) {
      return function (dictIsSymbol) {
          return {
              "genericShow'": function (v) {
                  var ctor = Data_Symbol.reflectSymbol(dictIsSymbol)(Type_Proxy["Proxy"].value);
                  var v1 = genericShowArgs(dictGenericShowArgs)(v);
                  if (v1.length === 0) {
                      return ctor;
                  };
                  return "(" + ($foreign.intercalate(" ")(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ ctor ])(v1)) + ")");
              }
          };
      };
  };
  var genericShow$prime = function (dict) {
      return dict["genericShow'"];
  };
  var genericShowSum = function (dictGenericShow) {
      return function (dictGenericShow1) {
          return {
              "genericShow'": function (v) {
                  if (v instanceof Data_Generic_Rep.Inl) {
                      return genericShow$prime(dictGenericShow)(v.value0);
                  };
                  if (v instanceof Data_Generic_Rep.Inr) {
                      return genericShow$prime(dictGenericShow1)(v.value0);
                  };
                  throw new Error("Failed pattern match at Data.Show.Generic (line 26, column 1 - line 28, column 40): " + [ v.constructor.name ]);
              }
          };
      };
  };
  var genericShow = function (dictGeneric) {
      return function (dictGenericShow) {
          return function (x) {
              return genericShow$prime(dictGenericShow)(Data_Generic_Rep.from(dictGeneric)(x));
          };
      };
  };
  exports["genericShow"] = genericShow;
  exports["genericShowArgsNoArguments"] = genericShowArgsNoArguments;
  exports["genericShowSum"] = genericShowSum;
  exports["genericShowArgsProduct"] = genericShowArgsProduct;
  exports["genericShowConstructor"] = genericShowConstructor;
  exports["genericShowArgsArgument"] = genericShowArgsArgument;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Ctl.Internal.Serialization.Address"] = $PS["Ctl.Internal.Serialization.Address"] || {};
  var exports = $PS["Ctl.Internal.Serialization.Address"];
  var $foreign = $PS["Ctl.Internal.Serialization.Address"];
  var Aeson = $PS["Aeson"];
  var Control_Alt = $PS["Control.Alt"];
  var Control_Bind = $PS["Control.Bind"];
  var Ctl_Internal_FfiHelpers = $PS["Ctl.Internal.FfiHelpers"];
  var Ctl_Internal_Serialization_Hash = $PS["Ctl.Internal.Serialization.Hash"];
  var Ctl_Internal_Types_BigNum = $PS["Ctl.Internal.Types.BigNum"];
  var Ctl_Internal_Types_CborBytes = $PS["Ctl.Internal.Types.CborBytes"];
  var Data_Argonaut_Decode_Error = $PS["Data.Argonaut.Decode.Error"];
  var Data_Either = $PS["Data.Either"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Generic_Rep = $PS["Data.Generic.Rep"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Show = $PS["Data.Show"];
  var Data_Show_Generic = $PS["Data.Show.Generic"];
  var Slot = function (x) {
      return x;
  };
  var TestnetId = (function () {
      function TestnetId() {

      };
      TestnetId.value = new TestnetId();
      return TestnetId;
  })();
  var MainnetId = (function () {
      function MainnetId() {

      };
      MainnetId.value = new MainnetId();
      return MainnetId;
  })();
  var showAddress = {
      show: function (a) {
          return "(Address " + ($foreign.addressBech32(a) + ")");
      }
  };
  var genericTransactionIndex_ = {
      to: function (x) {
          return x;
      },
      from: function (x) {
          return x;
      }
  };
  var showTransactionIndex = {
      show: Data_Show_Generic.genericShow(genericTransactionIndex_)(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Ctl_Internal_Types_BigNum.showBigNum))({
          reflectSymbol: function () {
              return "TransactionIndex";
          }
      }))
  };
  var genericSlot_ = {
      to: function (x) {
          return x;
      },
      from: function (x) {
          return x;
      }
  };
  var showSlot = {
      show: Data_Show_Generic.genericShow(genericSlot_)(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Ctl_Internal_Types_BigNum.showBigNum))({
          reflectSymbol: function () {
              return "Slot";
          }
      }))
  };
  var genericNetworkId_ = {
      to: function (x) {
          if (x instanceof Data_Generic_Rep.Inl) {
              return TestnetId.value;
          };
          if (x instanceof Data_Generic_Rep.Inr) {
              return MainnetId.value;
          };
          throw new Error("Failed pattern match at Ctl.Internal.Serialization.Address (line 392, column 1 - line 392, column 36): " + [ x.constructor.name ]);
      },
      from: function (x) {
          if (x instanceof TestnetId) {
              return new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value);
          };
          if (x instanceof MainnetId) {
              return new Data_Generic_Rep.Inr(Data_Generic_Rep.NoArguments.value);
          };
          throw new Error("Failed pattern match at Ctl.Internal.Serialization.Address (line 392, column 1 - line 392, column 36): " + [ x.constructor.name ]);
      }
  };
  var showNetworkId = {
      show: Data_Show_Generic.genericShow(genericNetworkId_)(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsNoArguments)({
          reflectSymbol: function () {
              return "TestnetId";
          }
      }))(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsNoArguments)({
          reflectSymbol: function () {
              return "MainnetId";
          }
      })))
  };
  var genericCertificateIndex_ = {
      to: function (x) {
          return x;
      },
      from: function (x) {
          return x;
      }
  };
  var showCertificateIndex = {
      show: Data_Show_Generic.genericShow(genericCertificateIndex_)(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Ctl_Internal_Types_BigNum.showBigNum))({
          reflectSymbol: function () {
              return "CertificateIndex";
          }
      }))
  };
  var eqStakeCredential = {
      eq: Data_Function.on(Data_Eq.eq(Ctl_Internal_Types_CborBytes.eqCborBytes))($foreign.stakeCredentialToBytes)
  };
  var eqSlot = Ctl_Internal_Types_BigNum.eqBigNum;
  var eqNetworkId = {
      eq: function (x) {
          return function (y) {
              if (x instanceof TestnetId && y instanceof TestnetId) {
                  return true;
              };
              if (x instanceof MainnetId && y instanceof MainnetId) {
                  return true;
              };
              return false;
          };
      }
  };                                       
  var eqAddress = {
      eq: Data_Function.on(Data_Eq.eq(Ctl_Internal_Types_CborBytes.eqCborBytes))($foreign.addressBytes)
  };
  var eqRewardAddress = {
      eq: Data_Function.on(Data_Eq.eq(eqAddress))($foreign.rewardAddressToAddress)
  };
  var ordAddress = {
      compare: Data_Function.on(Data_Ord.compare(Ctl_Internal_Types_CborBytes.ordCborBytes))($foreign.addressBytes),
      Eq0: function () {
          return eqAddress;
      }
  };                                                                          
  var decodeAesonSlot = Ctl_Internal_Types_BigNum.decodeAesonBigNum;          
  var stakeCredentialToScriptHash = $foreign.withStakeCredential({
      onKeyHash: Data_Function["const"](Data_Maybe.Nothing.value),
      onScriptHash: Data_Maybe.Just.create
  });
  var stakeCredentialToKeyHash = $foreign.withStakeCredential({
      onKeyHash: Data_Maybe.Just.create,
      onScriptHash: Data_Function["const"](Data_Maybe.Nothing.value)
  });
  var showVia = function (dictShow) {
      return function (nm) {
          return function (toShowable) {
              return function (addr) {
                  return "(" + (nm + (" " + (Data_Show.show(dictShow)(toShowable(addr)) + ")")));
              };
          };
      };
  };
  var showRewardAddress = {
      show: showVia(showAddress)("RewardAddress")($foreign.rewardAddressToAddress)
  };
  var showStakeCredential = {
      show: showVia(Data_Show.showString)("StakeCredenetial")($foreign.withStakeCredential({
          onKeyHash: Data_Show.show(Ctl_Internal_Serialization_Hash.showEd25519KeyHash),
          onScriptHash: Data_Show.show(Ctl_Internal_Serialization_Hash.showScriptHash)
      }))
  };
  var rewardAddressFromAddress = $foreign["_rewardAddressFromAddress"](Ctl_Internal_FfiHelpers.maybeFfiHelper);
  var rewardAddressBytes = function ($165) {
      return $foreign.addressBytes($foreign.rewardAddressToAddress($165));
  };
  var ordRewardAddress = {
      compare: Data_Function.on(Data_Ord.compare(Ctl_Internal_Types_CborBytes.ordCborBytes))(rewardAddressBytes),
      Eq0: function () {
          return eqRewardAddress;
      }
  };
  var rewardAddressBech32 = function ($168) {
      return $foreign.addressBech32($foreign.rewardAddressToAddress($168));
  };
  var pointerAddressFromAddress = $foreign["_pointerAddressFromAddress"](Ctl_Internal_FfiHelpers.maybeFfiHelper);
  var pointerAddressBytes = function ($171) {
      return $foreign.addressBytes($foreign.pointerAddressToAddress($171));
  };
  var networkIdToInt = function (v) {
      if (v instanceof TestnetId) {
          return 0;
      };
      if (v instanceof MainnetId) {
          return 1;
      };
      throw new Error("Failed pattern match at Ctl.Internal.Serialization.Address (line 387, column 18 - line 389, column 17): " + [ v.constructor.name ]);
  };
  var pointerAddress = $foreign["_pointerAddress"](networkIdToInt);
  var paymentKeyHashPointerAddress = function (networkId) {
      return function (pkh) {
          return function (ptr) {
              return pointerAddress({
                  network: networkId,
                  paymentCred: $foreign.keyHashCredential(pkh),
                  stakePointer: ptr
              });
          };
      };
  };
  var scriptHashPointerAddress = function (networkId) {
      return function (sh) {
          return function (ptr) {
              return pointerAddress({
                  network: networkId,
                  paymentCred: $foreign.scriptHashCredential(sh),
                  stakePointer: ptr
              });
          };
      };
  };
  var rewardAddress = $foreign["_rewardAddress"](networkIdToInt);
  var intToNetworkId = function (v) {
      if (v === 0) {
          return new Data_Maybe.Just(TestnetId.value);
      };
      if (v === 1) {
          return new Data_Maybe.Just(MainnetId.value);
      };
      return Data_Maybe.Nothing.value;
  };
  var unsafeIntToNetId = function (i) {
      return Data_Maybe.fromJust()(intToNetworkId(i));
  };
  var enterpriseAddressFromAddress = $foreign["_enterpriseAddressFromAddress"](Ctl_Internal_FfiHelpers.maybeFfiHelper);
  var enterpriseAddressBytes = function ($175) {
      return $foreign.addressBytes($foreign.enterpriseAddressToAddress($175));
  };
  var enterpriseAddress = $foreign["_enterpriseAddress"](networkIdToInt);
  var paymentKeyHashEnterpriseAddress = function (networkId) {
      return function (pkh) {
          return enterpriseAddress({
              network: networkId,
              paymentCred: $foreign.keyHashCredential(pkh)
          });
      };
  };
  var scriptHashEnterpriseAddress = function (networkId) {
      return function (sh) {
          return enterpriseAddress({
              network: networkId,
              paymentCred: $foreign.scriptHashCredential(sh)
          });
      };
  };                                                                                                         
  var baseAddressFromAddress = $foreign["_baseAddressFromAddress"](Ctl_Internal_FfiHelpers.maybeFfiHelper);
  var baseAddressBytes = function ($177) {
      return $foreign.addressBytes($foreign.baseAddressToAddress($177));
  };
  var baseAddress = $foreign["_baseAddress"](networkIdToInt);
  var paymentKeyHashScriptHashAddress = function (networkId) {
      return function (pkh) {
          return function (sh) {
              return baseAddress({
                  network: networkId,
                  paymentCred: $foreign.keyHashCredential(pkh),
                  delegationCred: $foreign.scriptHashCredential(sh)
              });
          };
      };
  };
  var paymentKeyHashStakeKeyHashAddress = function (networkId) {
      return function (pkh) {
          return function (skh) {
              return baseAddress({
                  network: networkId,
                  paymentCred: $foreign.keyHashCredential(pkh),
                  delegationCred: $foreign.keyHashCredential(skh)
              });
          };
      };
  };
  var scriptHashScriptHashAddress = function (networkId) {
      return function (sh) {
          return function (sh$prime) {
              return baseAddress({
                  network: networkId,
                  paymentCred: $foreign.scriptHashCredential(sh),
                  delegationCred: $foreign.scriptHashCredential(sh$prime)
              });
          };
      };
  };
  var scriptHashStakeKeyHashAddress = function (networkId) {
      return function (sh) {
          return function (skh) {
              return baseAddress({
                  network: networkId,
                  paymentCred: $foreign.scriptHashCredential(sh),
                  delegationCred: $foreign.keyHashCredential(skh)
              });
          };
      };
  };
  var addressStakeCred = function (addr) {
      return Data_Functor.map(Data_Maybe.functorMaybe)($foreign.baseAddressDelegationCred)(baseAddressFromAddress(addr));
  };
  var addressPaymentCred = function (addr) {
      return Control_Alt.alt(Data_Maybe.altMaybe)(Control_Alt.alt(Data_Maybe.altMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)($foreign.baseAddressPaymentCred)(baseAddressFromAddress(addr)))(Data_Functor.map(Data_Maybe.functorMaybe)($foreign.pointerAddressPaymentCred)(pointerAddressFromAddress(addr))))(Data_Functor.map(Data_Maybe.functorMaybe)($foreign.enterpriseAddressPaymentCred)(enterpriseAddressFromAddress(addr)));
  };
  var addressNetworkId = $foreign["_addressNetworkId"](unsafeIntToNetId);
  var addressFromBech32 = $foreign["_addressFromBech32"](Ctl_Internal_FfiHelpers.maybeFfiHelper);                                
  var rewardAddressFromBech32 = Control_Bind.composeKleisli(Data_Maybe.bindMaybe)(addressFromBech32)(rewardAddressFromAddress);
  var decodeAesonRewardAddress = {
      decodeAeson: Control_Bind.composeKleisli(Data_Either.bindEither)(Aeson.decodeAeson(Aeson.decodeAesonString))((function () {
          var $183 = Data_Either.note(new Data_Argonaut_Decode_Error.TypeMismatch("RewardAddress"));
          return function ($184) {
              return $183(rewardAddressFromBech32($184));
          };
      })())
  };
  exports["Slot"] = Slot;
  exports["addressNetworkId"] = addressNetworkId;
  exports["baseAddress"] = baseAddress;
  exports["paymentKeyHashStakeKeyHashAddress"] = paymentKeyHashStakeKeyHashAddress;
  exports["scriptHashStakeKeyHashAddress"] = scriptHashStakeKeyHashAddress;
  exports["paymentKeyHashScriptHashAddress"] = paymentKeyHashScriptHashAddress;
  exports["scriptHashScriptHashAddress"] = scriptHashScriptHashAddress;
  exports["MainnetId"] = MainnetId;
  exports["TestnetId"] = TestnetId;
  exports["stakeCredentialToKeyHash"] = stakeCredentialToKeyHash;
  exports["stakeCredentialToScriptHash"] = stakeCredentialToScriptHash;
  exports["addressFromBech32"] = addressFromBech32;
  exports["addressPaymentCred"] = addressPaymentCred;
  exports["addressStakeCred"] = addressStakeCred;
  exports["baseAddressFromAddress"] = baseAddressFromAddress;
  exports["baseAddressBytes"] = baseAddressBytes;
  exports["enterpriseAddress"] = enterpriseAddress;
  exports["enterpriseAddressFromAddress"] = enterpriseAddressFromAddress;
  exports["enterpriseAddressBytes"] = enterpriseAddressBytes;
  exports["paymentKeyHashEnterpriseAddress"] = paymentKeyHashEnterpriseAddress;
  exports["scriptHashEnterpriseAddress"] = scriptHashEnterpriseAddress;
  exports["pointerAddressFromAddress"] = pointerAddressFromAddress;
  exports["pointerAddressBytes"] = pointerAddressBytes;
  exports["paymentKeyHashPointerAddress"] = paymentKeyHashPointerAddress;
  exports["scriptHashPointerAddress"] = scriptHashPointerAddress;
  exports["rewardAddress"] = rewardAddress;
  exports["rewardAddressBytes"] = rewardAddressBytes;
  exports["rewardAddressBech32"] = rewardAddressBech32;
  exports["rewardAddressFromAddress"] = rewardAddressFromAddress;
  exports["eqSlot"] = eqSlot;
  exports["decodeAesonSlot"] = decodeAesonSlot;
  exports["showSlot"] = showSlot;
  exports["showTransactionIndex"] = showTransactionIndex;
  exports["showCertificateIndex"] = showCertificateIndex;
  exports["showAddress"] = showAddress;
  exports["eqAddress"] = eqAddress;
  exports["ordAddress"] = ordAddress;
  exports["eqRewardAddress"] = eqRewardAddress;
  exports["showRewardAddress"] = showRewardAddress;
  exports["ordRewardAddress"] = ordRewardAddress;
  exports["decodeAesonRewardAddress"] = decodeAesonRewardAddress;
  exports["eqStakeCredential"] = eqStakeCredential;
  exports["showStakeCredential"] = showStakeCredential;
  exports["eqNetworkId"] = eqNetworkId;
  exports["showNetworkId"] = showNetworkId;
  exports["addressBech32"] = $foreign.addressBech32;
  exports["keyHashCredential"] = $foreign.keyHashCredential;
  exports["scriptHashCredential"] = $foreign.scriptHashCredential;
  exports["withStakeCredential"] = $foreign.withStakeCredential;
  exports["baseAddressPaymentCred"] = $foreign.baseAddressPaymentCred;
  exports["baseAddressDelegationCred"] = $foreign.baseAddressDelegationCred;
  exports["baseAddressToAddress"] = $foreign.baseAddressToAddress;
  exports["enterpriseAddressPaymentCred"] = $foreign.enterpriseAddressPaymentCred;
  exports["enterpriseAddressToAddress"] = $foreign.enterpriseAddressToAddress;
  exports["pointerAddressPaymentCred"] = $foreign.pointerAddressPaymentCred;
  exports["pointerAddressToAddress"] = $foreign.pointerAddressToAddress;
  exports["pointerAddressStakePointer"] = $foreign.pointerAddressStakePointer;
  exports["rewardAddressToAddress"] = $foreign.rewardAddressToAddress;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Data.Bifoldable"] = $PS["Data.Bifoldable"] || {};
  var exports = $PS["Data.Bifoldable"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var bifoldableTuple = {
      bifoldMap: function (dictMonoid) {
          return function (f) {
              return function (g) {
                  return function (v) {
                      return Data_Semigroup.append(dictMonoid.Semigroup0())(f(v.value0))(g(v.value1));
                  };
              };
          };
      },
      bifoldr: function (f) {
          return function (g) {
              return function (z) {
                  return function (v) {
                      return f(v.value0)(g(v.value1)(z));
                  };
              };
          };
      },
      bifoldl: function (f) {
          return function (g) {
              return function (z) {
                  return function (v) {
                      return g(f(z)(v.value0))(v.value1);
                  };
              };
          };
      }
  };
  exports["bifoldableTuple"] = bifoldableTuple;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Data.Bitraversable"] = $PS["Data.Bitraversable"] || {};
  var exports = $PS["Data.Bitraversable"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Data_Bifoldable = $PS["Data.Bifoldable"];
  var Data_Bifunctor = $PS["Data.Bifunctor"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Tuple = $PS["Data.Tuple"];                
  var bitraverse = function (dict) {
      return dict.bitraverse;
  };
  var ltraverse = function (dictBitraversable) {
      return function (dictApplicative) {
          return function (f) {
              return bitraverse(dictBitraversable)(dictApplicative)(f)(Control_Applicative.pure(dictApplicative));
          };
      };
  };
  var bitraversableTuple = {
      bitraverse: function (dictApplicative) {
          return function (f) {
              return function (g) {
                  return function (v) {
                      return Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Tuple.Tuple.create)(f(v.value0)))(g(v.value1));
                  };
              };
          };
      },
      bisequence: function (dictApplicative) {
          return function (v) {
              return Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Tuple.Tuple.create)(v.value0))(v.value1);
          };
      },
      Bifunctor0: function () {
          return Data_Bifunctor.bifunctorTuple;
      },
      Bifoldable1: function () {
          return Data_Bifoldable.bifoldableTuple;
      }
  };
  exports["bitraverse"] = bitraverse;
  exports["ltraverse"] = ltraverse;
  exports["bitraversableTuple"] = bitraversableTuple;
})(PS);
(function(exports) {
  // global exports
  "use strict";

  exports.now = function() {
    return new Date();
  };

  exports.dateMethodEff = function(method, date) {
    return function() {
      return date[method]();
    };
  };
})(PS["Data.JSDate"] = PS["Data.JSDate"] || {});
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Data.JSDate"] = $PS["Data.JSDate"] || {};
  var exports = $PS["Data.JSDate"];
  var $foreign = $PS["Data.JSDate"];                                           
  var toISOString = function (dt) {
      return $foreign.dateMethodEff("toISOString", dt);
  };
  exports["toISOString"] = toISOString;
  exports["now"] = $foreign.now;
})(PS);
(function(exports) {
  "use strict";

  exports.defer = function (thunk) {
    var v = null;
    return function() {
      if (thunk === undefined) return v;

      v = thunk();
      thunk = undefined; // eslint-disable-line no-param-reassign
      return v;
    };
  };

  exports.force = function (l) {
    return l();
  };
})(PS["Data.Lazy"] = PS["Data.Lazy"] || {});
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Data.Lazy"] = $PS["Data.Lazy"] || {};
  var exports = $PS["Data.Lazy"];
  var $foreign = $PS["Data.Lazy"];
  var functorLazy = {
      map: function (f) {
          return function (l) {
              return $foreign.defer(function (v) {
                  return f($foreign.force(l));
              });
          };
      }
  };
  exports["functorLazy"] = functorLazy;
  exports["defer"] = $foreign.defer;
  exports["force"] = $foreign.force;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Data.List.Lazy.Types"] = $PS["Data.List.Lazy.Types"] || {};
  var exports = $PS["Data.List.Lazy.Types"];
  var Control_Lazy = $PS["Control.Lazy"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Lazy = $PS["Data.Lazy"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Semigroup = $PS["Data.Semigroup"];                    
  var List = function (x) {
      return x;
  };
  var Nil = (function () {
      function Nil() {

      };
      Nil.value = new Nil();
      return Nil;
  })();
  var Cons = (function () {
      function Cons(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Cons.create = function (value0) {
          return function (value1) {
              return new Cons(value0, value1);
          };
      };
      return Cons;
  })();
  var nil = Data_Lazy.defer(function (v) {
      return Nil.value;
  });
  var step = (function () {
      var $225 = Data_Newtype.unwrap();
      return function ($226) {
          return Data_Lazy.force($225($226));
      };
  })();
  var lazyList = {
      defer: function (f) {
          return Data_Lazy.defer(function ($227) {
              return step(f($227));
          });
      }
  };
  var cons = function (x) {
      return function (xs) {
          return Data_Lazy.defer(function (v) {
              return new Cons(x, xs);
          });
      };
  };
  var foldableList = {
      foldr: function (op) {
          return function (z) {
              return function (xs) {
                  var rev = Data_Foldable.foldl(foldableList)(Data_Function.flip(cons))(nil);
                  return Data_Foldable.foldl(foldableList)(Data_Function.flip(op))(z)(rev(xs));
              };
          };
      },
      foldl: function (op) {
          var go = function ($copy_b) {
              return function ($copy_xs) {
                  var $tco_var_b = $copy_b;
                  var $tco_done = false;
                  var $tco_result;
                  function $tco_loop(b, xs) {
                      var v = step(xs);
                      if (v instanceof Nil) {
                          $tco_done = true;
                          return b;
                      };
                      if (v instanceof Cons) {
                          $tco_var_b = op(b)(v.value0);
                          $copy_xs = v.value1;
                          return;
                      };
                      throw new Error("Failed pattern match at Data.List.Lazy.Types (line 128, column 7 - line 130, column 40): " + [ v.constructor.name ]);
                  };
                  while (!$tco_done) {
                      $tco_result = $tco_loop($tco_var_b, $copy_xs);
                  };
                  return $tco_result;
              };
          };
          return go;
      },
      foldMap: function (dictMonoid) {
          return function (f) {
              return Data_Foldable.foldl(foldableList)(function (b) {
                  return function (a) {
                      return Data_Semigroup.append(dictMonoid.Semigroup0())(b)(f(a));
                  };
              })(Data_Monoid.mempty(dictMonoid));
          };
      }
  };
  var unfoldable1List = {
      unfoldr1: (function () {
          var go = function (f) {
              return function (b) {
                  return Control_Lazy.defer(lazyList)(function (v) {
                      var v1 = f(b);
                      if (v1.value1 instanceof Data_Maybe.Just) {
                          return cons(v1.value0)(go(f)(v1.value1.value0));
                      };
                      if (v1.value1 instanceof Data_Maybe.Nothing) {
                          return cons(v1.value0)(nil);
                      };
                      throw new Error("Failed pattern match at Data.List.Lazy.Types (line 152, column 28 - line 154, column 33): " + [ v1.constructor.name ]);
                  });
              };
          };
          return go;
      })()
  };
  var unfoldableList = {
      unfoldr: (function () {
          var go = function (f) {
              return function (b) {
                  return Control_Lazy.defer(lazyList)(function (v) {
                      var v1 = f(b);
                      if (v1 instanceof Data_Maybe.Nothing) {
                          return nil;
                      };
                      if (v1 instanceof Data_Maybe.Just) {
                          return cons(v1.value0.value0)(go(f)(v1.value0.value1));
                      };
                      throw new Error("Failed pattern match at Data.List.Lazy.Types (line 158, column 28 - line 160, column 39): " + [ v1.constructor.name ]);
                  });
              };
          };
          return go;
      })(),
      Unfoldable10: function () {
          return unfoldable1List;
      }
  };
  exports["List"] = List;
  exports["Nil"] = Nil;
  exports["Cons"] = Cons;
  exports["step"] = step;
  exports["nil"] = nil;
  exports["cons"] = cons;
  exports["foldableList"] = foldableList;
  exports["unfoldableList"] = unfoldableList;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Data.List.Lazy"] = $PS["Data.List.Lazy"] || {};
  var exports = $PS["Data.List.Lazy"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Lazy = $PS["Data.Lazy"];
  var Data_List_Lazy_Types = $PS["Data.List.Lazy.Types"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Newtype = $PS["Data.Newtype"];                                      
  var uncons = function (xs) {
      var v = Data_List_Lazy_Types.step(xs);
      if (v instanceof Data_List_Lazy_Types.Nil) {
          return Data_Maybe.Nothing.value;
      };
      if (v instanceof Data_List_Lazy_Types.Cons) {
          return new Data_Maybe.Just({
              head: v.value0,
              tail: v.value1
          });
      };
      throw new Error("Failed pattern match at Data.List.Lazy (line 288, column 13 - line 290, column 44): " + [ v.constructor.name ]);
  };
  var tail = function (xs) {
      return Data_Functor.map(Data_Maybe.functorMaybe)(function (v) {
          return v.tail;
      })(uncons(xs));
  };
  var head = function (xs) {
      return Data_Functor.map(Data_Maybe.functorMaybe)(function (v) {
          return v.head;
      })(uncons(xs));
  };
  var filterM = function (dictMonad) {
      return function (p) {
          return function (list) {
              var v = uncons(list);
              if (v instanceof Data_Maybe.Nothing) {
                  return Control_Applicative.pure(dictMonad.Applicative0())(Data_List_Lazy_Types.nil);
              };
              if (v instanceof Data_Maybe.Just) {
                  return Control_Bind.bind(dictMonad.Bind1())(p(v.value0.head))(function (b) {
                      return Control_Bind.bind(dictMonad.Bind1())(filterM(dictMonad)(p)(v.value0.tail))(function (xs$prime) {
                          return Control_Applicative.pure(dictMonad.Applicative0())((function () {
                              if (b) {
                                  return Data_List_Lazy_Types.cons(v.value0.head)(xs$prime);
                              };
                              return xs$prime;
                          })());
                      });
                  });
              };
              throw new Error("Failed pattern match at Data.List.Lazy (line 431, column 5 - line 436, column 48): " + [ v.constructor.name ]);
          };
      };
  };
  var filter = function (p) {
      var go = function ($copy_v) {
          var $tco_done = false;
          var $tco_result;
          function $tco_loop(v) {
              if (v instanceof Data_List_Lazy_Types.Nil) {
                  $tco_done = true;
                  return Data_List_Lazy_Types.Nil.value;
              };
              if (v instanceof Data_List_Lazy_Types.Cons) {
                  if (p(v.value0)) {
                      $tco_done = true;
                      return new Data_List_Lazy_Types.Cons(v.value0, filter(p)(v.value1));
                  };
                  if (Data_Boolean.otherwise) {
                      $copy_v = Data_List_Lazy_Types.step(v.value1);
                      return;
                  };
              };
              throw new Error("Failed pattern match at Data.List.Lazy (line 416, column 3 - line 416, column 15): " + [ v.constructor.name ]);
          };
          while (!$tco_done) {
              $tco_result = $tco_loop($copy_v);
          };
          return $tco_result;
      };
      var $268 = Data_Functor.map(Data_Lazy.functorLazy)(go);
      var $269 = Data_Newtype.unwrap();
      return function ($270) {
          return Data_List_Lazy_Types.List($268($269($270)));
      };
  };
  exports["filter"] = filter;
  exports["filterM"] = filterM;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Data.Log.Level"] = $PS["Data.Log.Level"] || {};
  var exports = $PS["Data.Log.Level"];
  var Data_Ordering = $PS["Data.Ordering"];                
  var Trace = (function () {
      function Trace() {

      };
      Trace.value = new Trace();
      return Trace;
  })();
  var Debug = (function () {
      function Debug() {

      };
      Debug.value = new Debug();
      return Debug;
  })();
  var Info = (function () {
      function Info() {

      };
      Info.value = new Info();
      return Info;
  })();
  var Warn = (function () {
      function Warn() {

      };
      Warn.value = new Warn();
      return Warn;
  })();
  var $$Error = (function () {
      function $$Error() {

      };
      $$Error.value = new $$Error();
      return $$Error;
  })();
  var eqLogLevel = {
      eq: function (x) {
          return function (y) {
              if (x instanceof Trace && y instanceof Trace) {
                  return true;
              };
              if (x instanceof Debug && y instanceof Debug) {
                  return true;
              };
              if (x instanceof Info && y instanceof Info) {
                  return true;
              };
              if (x instanceof Warn && y instanceof Warn) {
                  return true;
              };
              if (x instanceof $$Error && y instanceof $$Error) {
                  return true;
              };
              return false;
          };
      }
  };
  var ordLogLevel = {
      compare: function (x) {
          return function (y) {
              if (x instanceof Trace && y instanceof Trace) {
                  return Data_Ordering.EQ.value;
              };
              if (x instanceof Trace) {
                  return Data_Ordering.LT.value;
              };
              if (y instanceof Trace) {
                  return Data_Ordering.GT.value;
              };
              if (x instanceof Debug && y instanceof Debug) {
                  return Data_Ordering.EQ.value;
              };
              if (x instanceof Debug) {
                  return Data_Ordering.LT.value;
              };
              if (y instanceof Debug) {
                  return Data_Ordering.GT.value;
              };
              if (x instanceof Info && y instanceof Info) {
                  return Data_Ordering.EQ.value;
              };
              if (x instanceof Info) {
                  return Data_Ordering.LT.value;
              };
              if (y instanceof Info) {
                  return Data_Ordering.GT.value;
              };
              if (x instanceof Warn && y instanceof Warn) {
                  return Data_Ordering.EQ.value;
              };
              if (x instanceof Warn) {
                  return Data_Ordering.LT.value;
              };
              if (y instanceof Warn) {
                  return Data_Ordering.GT.value;
              };
              if (x instanceof $$Error && y instanceof $$Error) {
                  return Data_Ordering.EQ.value;
              };
              throw new Error("Failed pattern match at Data.Log.Level (line 9, column 1 - line 9, column 44): " + [ x.constructor.name, y.constructor.name ]);
          };
      },
      Eq0: function () {
          return eqLogLevel;
      }
  };
  exports["Trace"] = Trace;
  exports["Debug"] = Debug;
  exports["Info"] = Info;
  exports["Warn"] = Warn;
  exports["Error"] = $$Error;
  exports["ordLogLevel"] = ordLogLevel;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Data.Map.Internal"] = $PS["Data.Map.Internal"] || {};
  var exports = $PS["Data.Map.Internal"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Category = $PS["Control.Category"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_HeytingAlgebra = $PS["Data.HeytingAlgebra"];
  var Data_List_Lazy = $PS["Data.List.Lazy"];
  var Data_List_Lazy_Types = $PS["Data.List.Lazy.Types"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Ordering = $PS["Data.Ordering"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Show = $PS["Data.Show"];
  var Data_Traversable = $PS["Data.Traversable"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unfoldable = $PS["Data.Unfoldable"];                
  var Leaf = (function () {
      function Leaf() {

      };
      Leaf.value = new Leaf();
      return Leaf;
  })();
  var Two = (function () {
      function Two(value0, value1, value2, value3) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
      };
      Two.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return new Two(value0, value1, value2, value3);
                  };
              };
          };
      };
      return Two;
  })();
  var Three = (function () {
      function Three(value0, value1, value2, value3, value4, value5, value6) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
          this.value4 = value4;
          this.value5 = value5;
          this.value6 = value6;
      };
      Three.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return function (value4) {
                          return function (value5) {
                              return function (value6) {
                                  return new Three(value0, value1, value2, value3, value4, value5, value6);
                              };
                          };
                      };
                  };
              };
          };
      };
      return Three;
  })();
  var TwoLeft = (function () {
      function TwoLeft(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      TwoLeft.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new TwoLeft(value0, value1, value2);
              };
          };
      };
      return TwoLeft;
  })();
  var TwoRight = (function () {
      function TwoRight(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      TwoRight.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new TwoRight(value0, value1, value2);
              };
          };
      };
      return TwoRight;
  })();
  var ThreeLeft = (function () {
      function ThreeLeft(value0, value1, value2, value3, value4, value5) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
          this.value4 = value4;
          this.value5 = value5;
      };
      ThreeLeft.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return function (value4) {
                          return function (value5) {
                              return new ThreeLeft(value0, value1, value2, value3, value4, value5);
                          };
                      };
                  };
              };
          };
      };
      return ThreeLeft;
  })();
  var ThreeMiddle = (function () {
      function ThreeMiddle(value0, value1, value2, value3, value4, value5) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
          this.value4 = value4;
          this.value5 = value5;
      };
      ThreeMiddle.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return function (value4) {
                          return function (value5) {
                              return new ThreeMiddle(value0, value1, value2, value3, value4, value5);
                          };
                      };
                  };
              };
          };
      };
      return ThreeMiddle;
  })();
  var ThreeRight = (function () {
      function ThreeRight(value0, value1, value2, value3, value4, value5) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
          this.value4 = value4;
          this.value5 = value5;
      };
      ThreeRight.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return function (value4) {
                          return function (value5) {
                              return new ThreeRight(value0, value1, value2, value3, value4, value5);
                          };
                      };
                  };
              };
          };
      };
      return ThreeRight;
  })();
  var KickUp = (function () {
      function KickUp(value0, value1, value2, value3) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
      };
      KickUp.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return new KickUp(value0, value1, value2, value3);
                  };
              };
          };
      };
      return KickUp;
  })();
  var values = function (v) {
      if (v instanceof Leaf) {
          return Data_List_Types.Nil.value;
      };
      if (v instanceof Two) {
          return Data_Semigroup.append(Data_List_Types.semigroupList)(values(v.value0))(Data_Semigroup.append(Data_List_Types.semigroupList)(Control_Applicative.pure(Data_List_Types.applicativeList)(v.value2))(values(v.value3)));
      };
      if (v instanceof Three) {
          return Data_Semigroup.append(Data_List_Types.semigroupList)(values(v.value0))(Data_Semigroup.append(Data_List_Types.semigroupList)(Control_Applicative.pure(Data_List_Types.applicativeList)(v.value2))(Data_Semigroup.append(Data_List_Types.semigroupList)(values(v.value3))(Data_Semigroup.append(Data_List_Types.semigroupList)(Control_Applicative.pure(Data_List_Types.applicativeList)(v.value5))(values(v.value6)))));
      };
      throw new Error("Failed pattern match at Data.Map.Internal (line 626, column 1 - line 626, column 40): " + [ v.constructor.name ]);
  };
  var size = function (v) {
      if (v instanceof Leaf) {
          return 0;
      };
      if (v instanceof Two) {
          return (1 + size(v.value0) | 0) + size(v.value3) | 0;
      };
      if (v instanceof Three) {
          return ((2 + size(v.value0) | 0) + size(v.value3) | 0) + size(v.value6) | 0;
      };
      throw new Error("Failed pattern match at Data.Map.Internal (line 676, column 1 - line 676, column 35): " + [ v.constructor.name ]);
  };
  var singleton = function (k) {
      return function (v) {
          return new Two(Leaf.value, k, v, Leaf.value);
      };
  };
  var toUnfoldable = function (dictUnfoldable) {
      return function (m) {
          var go = function ($copy_v) {
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(v) {
                  if (v instanceof Data_List_Types.Nil) {
                      $tco_done = true;
                      return Data_Maybe.Nothing.value;
                  };
                  if (v instanceof Data_List_Types.Cons) {
                      if (v.value0 instanceof Leaf) {
                          $copy_v = v.value1;
                          return;
                      };
                      if (v.value0 instanceof Two && (v.value0.value0 instanceof Leaf && v.value0.value3 instanceof Leaf)) {
                          $tco_done = true;
                          return new Data_Maybe.Just(new Data_Tuple.Tuple(new Data_Tuple.Tuple(v.value0.value1, v.value0.value2), v.value1));
                      };
                      if (v.value0 instanceof Two && v.value0.value0 instanceof Leaf) {
                          $tco_done = true;
                          return new Data_Maybe.Just(new Data_Tuple.Tuple(new Data_Tuple.Tuple(v.value0.value1, v.value0.value2), new Data_List_Types.Cons(v.value0.value3, v.value1)));
                      };
                      if (v.value0 instanceof Two) {
                          $copy_v = new Data_List_Types.Cons(v.value0.value0, new Data_List_Types.Cons(singleton(v.value0.value1)(v.value0.value2), new Data_List_Types.Cons(v.value0.value3, v.value1)));
                          return;
                      };
                      if (v.value0 instanceof Three) {
                          $copy_v = new Data_List_Types.Cons(v.value0.value0, new Data_List_Types.Cons(singleton(v.value0.value1)(v.value0.value2), new Data_List_Types.Cons(v.value0.value3, new Data_List_Types.Cons(singleton(v.value0.value4)(v.value0.value5), new Data_List_Types.Cons(v.value0.value6, v.value1)))));
                          return;
                      };
                      throw new Error("Failed pattern match at Data.Map.Internal (line 591, column 18 - line 600, column 71): " + [ v.value0.constructor.name ]);
                  };
                  throw new Error("Failed pattern match at Data.Map.Internal (line 590, column 3 - line 590, column 19): " + [ v.constructor.name ]);
              };
              while (!$tco_done) {
                  $tco_result = $tco_loop($copy_v);
              };
              return $tco_result;
          };
          return Data_Unfoldable.unfoldr(dictUnfoldable)(go)(new Data_List_Types.Cons(m, Data_List_Types.Nil.value));
      };
  };
  var toAscArray = toUnfoldable(Data_Unfoldable.unfoldableArray);
  var showMap = function (dictShow) {
      return function (dictShow1) {
          return {
              show: function (m) {
                  return "(fromFoldable " + (Data_Show.show(Data_Show.showArray(Data_Tuple.showTuple(dictShow)(dictShow1)))(toAscArray(m)) + ")");
              }
          };
      };
  };
  var lookup = function (dictOrd) {
      return function (k) {
          var comp = Data_Ord.compare(dictOrd);
          var go = function ($copy_v) {
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(v) {
                  if (v instanceof Leaf) {
                      $tco_done = true;
                      return Data_Maybe.Nothing.value;
                  };
                  if (v instanceof Two) {
                      var v2 = comp(k)(v.value1);
                      if (v2 instanceof Data_Ordering.EQ) {
                          $tco_done = true;
                          return new Data_Maybe.Just(v.value2);
                      };
                      if (v2 instanceof Data_Ordering.LT) {
                          $copy_v = v.value0;
                          return;
                      };
                      $copy_v = v.value3;
                      return;
                  };
                  if (v instanceof Three) {
                      var v3 = comp(k)(v.value1);
                      if (v3 instanceof Data_Ordering.EQ) {
                          $tco_done = true;
                          return new Data_Maybe.Just(v.value2);
                      };
                      var v4 = comp(k)(v.value4);
                      if (v4 instanceof Data_Ordering.EQ) {
                          $tco_done = true;
                          return new Data_Maybe.Just(v.value5);
                      };
                      if (v3 instanceof Data_Ordering.LT) {
                          $copy_v = v.value0;
                          return;
                      };
                      if (v4 instanceof Data_Ordering.GT) {
                          $copy_v = v.value6;
                          return;
                      };
                      $copy_v = v.value3;
                      return;
                  };
                  throw new Error("Failed pattern match at Data.Map.Internal (line 211, column 5 - line 211, column 22): " + [ v.constructor.name ]);
              };
              while (!$tco_done) {
                  $tco_result = $tco_loop($copy_v);
              };
              return $tco_result;
          };
          return go;
      };
  };
  var member = function (dictOrd) {
      return function (k) {
          return function (m) {
              return Data_Maybe.isJust(lookup(dictOrd)(k)(m));
          };
      };
  };
  var keys = function (v) {
      if (v instanceof Leaf) {
          return Data_List_Types.Nil.value;
      };
      if (v instanceof Two) {
          return Data_Semigroup.append(Data_List_Types.semigroupList)(keys(v.value0))(Data_Semigroup.append(Data_List_Types.semigroupList)(Control_Applicative.pure(Data_List_Types.applicativeList)(v.value1))(keys(v.value3)));
      };
      if (v instanceof Three) {
          return Data_Semigroup.append(Data_List_Types.semigroupList)(keys(v.value0))(Data_Semigroup.append(Data_List_Types.semigroupList)(Control_Applicative.pure(Data_List_Types.applicativeList)(v.value1))(Data_Semigroup.append(Data_List_Types.semigroupList)(keys(v.value3))(Data_Semigroup.append(Data_List_Types.semigroupList)(Control_Applicative.pure(Data_List_Types.applicativeList)(v.value4))(keys(v.value6)))));
      };
      throw new Error("Failed pattern match at Data.Map.Internal (line 620, column 1 - line 620, column 38): " + [ v.constructor.name ]);
  };
  var isSubmap = function (dictOrd) {
      return function (dictEq) {
          return function (m1) {
              return function (m2) {
                  var f = function (v) {
                      return Data_Eq.eq(Data_Maybe.eqMaybe(dictEq))(lookup(dictOrd)(v.value0)(m2))(new Data_Maybe.Just(v.value1));
                  };
                  return Data_Foldable.all(Data_List_Lazy_Types.foldableList)(Data_HeytingAlgebra.heytingAlgebraBoolean)(f)(toUnfoldable(Data_List_Lazy_Types.unfoldableList)(m1));
              };
          };
      };
  };
  var isEmpty = function (v) {
      if (v instanceof Leaf) {
          return true;
      };
      return false;
  };
  var functorMap = {
      map: function (v) {
          return function (v1) {
              if (v1 instanceof Leaf) {
                  return Leaf.value;
              };
              if (v1 instanceof Two) {
                  return new Two(Data_Functor.map(functorMap)(v)(v1.value0), v1.value1, v(v1.value2), Data_Functor.map(functorMap)(v)(v1.value3));
              };
              if (v1 instanceof Three) {
                  return new Three(Data_Functor.map(functorMap)(v)(v1.value0), v1.value1, v(v1.value2), Data_Functor.map(functorMap)(v)(v1.value3), v1.value4, v(v1.value5), Data_Functor.map(functorMap)(v)(v1.value6));
              };
              throw new Error("Failed pattern match at Data.Map.Internal (line 101, column 1 - line 104, column 110): " + [ v.constructor.name, v1.constructor.name ]);
          };
      }
  };
  var fromZipper = function ($copy_dictOrd) {
      return function ($copy_v) {
          return function ($copy_tree) {
              var $tco_var_dictOrd = $copy_dictOrd;
              var $tco_var_v = $copy_v;
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(dictOrd, v, tree) {
                  if (v instanceof Data_List_Types.Nil) {
                      $tco_done = true;
                      return tree;
                  };
                  if (v instanceof Data_List_Types.Cons) {
                      if (v.value0 instanceof TwoLeft) {
                          $tco_var_dictOrd = dictOrd;
                          $tco_var_v = v.value1;
                          $copy_tree = new Two(tree, v.value0.value0, v.value0.value1, v.value0.value2);
                          return;
                      };
                      if (v.value0 instanceof TwoRight) {
                          $tco_var_dictOrd = dictOrd;
                          $tco_var_v = v.value1;
                          $copy_tree = new Two(v.value0.value0, v.value0.value1, v.value0.value2, tree);
                          return;
                      };
                      if (v.value0 instanceof ThreeLeft) {
                          $tco_var_dictOrd = dictOrd;
                          $tco_var_v = v.value1;
                          $copy_tree = new Three(tree, v.value0.value0, v.value0.value1, v.value0.value2, v.value0.value3, v.value0.value4, v.value0.value5);
                          return;
                      };
                      if (v.value0 instanceof ThreeMiddle) {
                          $tco_var_dictOrd = dictOrd;
                          $tco_var_v = v.value1;
                          $copy_tree = new Three(v.value0.value0, v.value0.value1, v.value0.value2, tree, v.value0.value3, v.value0.value4, v.value0.value5);
                          return;
                      };
                      if (v.value0 instanceof ThreeRight) {
                          $tco_var_dictOrd = dictOrd;
                          $tco_var_v = v.value1;
                          $copy_tree = new Three(v.value0.value0, v.value0.value1, v.value0.value2, v.value0.value3, v.value0.value4, v.value0.value5, tree);
                          return;
                      };
                      throw new Error("Failed pattern match at Data.Map.Internal (line 432, column 3 - line 437, column 88): " + [ v.value0.constructor.name ]);
                  };
                  throw new Error("Failed pattern match at Data.Map.Internal (line 429, column 1 - line 429, column 80): " + [ v.constructor.name, tree.constructor.name ]);
              };
              while (!$tco_done) {
                  $tco_result = $tco_loop($tco_var_dictOrd, $tco_var_v, $copy_tree);
              };
              return $tco_result;
          };
      };
  };
  var insert = function (dictOrd) {
      return function (k) {
          return function (v) {
              var up = function ($copy_v1) {
                  return function ($copy_v2) {
                      var $tco_var_v1 = $copy_v1;
                      var $tco_done = false;
                      var $tco_result;
                      function $tco_loop(v1, v2) {
                          if (v1 instanceof Data_List_Types.Nil) {
                              $tco_done = true;
                              return new Two(v2.value0, v2.value1, v2.value2, v2.value3);
                          };
                          if (v1 instanceof Data_List_Types.Cons) {
                              if (v1.value0 instanceof TwoLeft) {
                                  $tco_done = true;
                                  return fromZipper(dictOrd)(v1.value1)(new Three(v2.value0, v2.value1, v2.value2, v2.value3, v1.value0.value0, v1.value0.value1, v1.value0.value2));
                              };
                              if (v1.value0 instanceof TwoRight) {
                                  $tco_done = true;
                                  return fromZipper(dictOrd)(v1.value1)(new Three(v1.value0.value0, v1.value0.value1, v1.value0.value2, v2.value0, v2.value1, v2.value2, v2.value3));
                              };
                              if (v1.value0 instanceof ThreeLeft) {
                                  $tco_var_v1 = v1.value1;
                                  $copy_v2 = new KickUp(new Two(v2.value0, v2.value1, v2.value2, v2.value3), v1.value0.value0, v1.value0.value1, new Two(v1.value0.value2, v1.value0.value3, v1.value0.value4, v1.value0.value5));
                                  return;
                              };
                              if (v1.value0 instanceof ThreeMiddle) {
                                  $tco_var_v1 = v1.value1;
                                  $copy_v2 = new KickUp(new Two(v1.value0.value0, v1.value0.value1, v1.value0.value2, v2.value0), v2.value1, v2.value2, new Two(v2.value3, v1.value0.value3, v1.value0.value4, v1.value0.value5));
                                  return;
                              };
                              if (v1.value0 instanceof ThreeRight) {
                                  $tco_var_v1 = v1.value1;
                                  $copy_v2 = new KickUp(new Two(v1.value0.value0, v1.value0.value1, v1.value0.value2, v1.value0.value3), v1.value0.value4, v1.value0.value5, new Two(v2.value0, v2.value1, v2.value2, v2.value3));
                                  return;
                              };
                              throw new Error("Failed pattern match at Data.Map.Internal (line 468, column 5 - line 473, column 108): " + [ v1.value0.constructor.name, v2.constructor.name ]);
                          };
                          throw new Error("Failed pattern match at Data.Map.Internal (line 465, column 3 - line 465, column 56): " + [ v1.constructor.name, v2.constructor.name ]);
                      };
                      while (!$tco_done) {
                          $tco_result = $tco_loop($tco_var_v1, $copy_v2);
                      };
                      return $tco_result;
                  };
              };
              var comp = Data_Ord.compare(dictOrd);
              var down = function ($copy_ctx) {
                  return function ($copy_v1) {
                      var $tco_var_ctx = $copy_ctx;
                      var $tco_done1 = false;
                      var $tco_result;
                      function $tco_loop(ctx, v1) {
                          if (v1 instanceof Leaf) {
                              $tco_done1 = true;
                              return up(ctx)(new KickUp(Leaf.value, k, v, Leaf.value));
                          };
                          if (v1 instanceof Two) {
                              var v2 = comp(k)(v1.value1);
                              if (v2 instanceof Data_Ordering.EQ) {
                                  $tco_done1 = true;
                                  return fromZipper(dictOrd)(ctx)(new Two(v1.value0, k, v, v1.value3));
                              };
                              if (v2 instanceof Data_Ordering.LT) {
                                  $tco_var_ctx = new Data_List_Types.Cons(new TwoLeft(v1.value1, v1.value2, v1.value3), ctx);
                                  $copy_v1 = v1.value0;
                                  return;
                              };
                              $tco_var_ctx = new Data_List_Types.Cons(new TwoRight(v1.value0, v1.value1, v1.value2), ctx);
                              $copy_v1 = v1.value3;
                              return;
                          };
                          if (v1 instanceof Three) {
                              var v3 = comp(k)(v1.value1);
                              if (v3 instanceof Data_Ordering.EQ) {
                                  $tco_done1 = true;
                                  return fromZipper(dictOrd)(ctx)(new Three(v1.value0, k, v, v1.value3, v1.value4, v1.value5, v1.value6));
                              };
                              var v4 = comp(k)(v1.value4);
                              if (v4 instanceof Data_Ordering.EQ) {
                                  $tco_done1 = true;
                                  return fromZipper(dictOrd)(ctx)(new Three(v1.value0, v1.value1, v1.value2, v1.value3, k, v, v1.value6));
                              };
                              if (v3 instanceof Data_Ordering.LT) {
                                  $tco_var_ctx = new Data_List_Types.Cons(new ThreeLeft(v1.value1, v1.value2, v1.value3, v1.value4, v1.value5, v1.value6), ctx);
                                  $copy_v1 = v1.value0;
                                  return;
                              };
                              if (v3 instanceof Data_Ordering.GT && v4 instanceof Data_Ordering.LT) {
                                  $tco_var_ctx = new Data_List_Types.Cons(new ThreeMiddle(v1.value0, v1.value1, v1.value2, v1.value4, v1.value5, v1.value6), ctx);
                                  $copy_v1 = v1.value3;
                                  return;
                              };
                              $tco_var_ctx = new Data_List_Types.Cons(new ThreeRight(v1.value0, v1.value1, v1.value2, v1.value3, v1.value4, v1.value5), ctx);
                              $copy_v1 = v1.value6;
                              return;
                          };
                          throw new Error("Failed pattern match at Data.Map.Internal (line 448, column 3 - line 448, column 55): " + [ ctx.constructor.name, v1.constructor.name ]);
                      };
                      while (!$tco_done1) {
                          $tco_result = $tco_loop($tco_var_ctx, $copy_v1);
                      };
                      return $tco_result;
                  };
              };
              return down(Data_List_Types.Nil.value);
          };
      };
  };
  var pop = function (dictOrd) {
      return function (k) {
          var up = function ($copy_ctxs) {
              return function ($copy_tree) {
                  var $tco_var_ctxs = $copy_ctxs;
                  var $tco_done = false;
                  var $tco_result;
                  function $tco_loop(ctxs, tree) {
                      if (ctxs instanceof Data_List_Types.Nil) {
                          $tco_done = true;
                          return tree;
                      };
                      if (ctxs instanceof Data_List_Types.Cons) {
                          if (ctxs.value0 instanceof TwoLeft && (ctxs.value0.value2 instanceof Leaf && tree instanceof Leaf)) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Two(Leaf.value, ctxs.value0.value0, ctxs.value0.value1, Leaf.value));
                          };
                          if (ctxs.value0 instanceof TwoRight && (ctxs.value0.value0 instanceof Leaf && tree instanceof Leaf)) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Two(Leaf.value, ctxs.value0.value1, ctxs.value0.value2, Leaf.value));
                          };
                          if (ctxs.value0 instanceof TwoLeft && ctxs.value0.value2 instanceof Two) {
                              $tco_var_ctxs = ctxs.value1;
                              $copy_tree = new Three(tree, ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2.value0, ctxs.value0.value2.value1, ctxs.value0.value2.value2, ctxs.value0.value2.value3);
                              return;
                          };
                          if (ctxs.value0 instanceof TwoRight && ctxs.value0.value0 instanceof Two) {
                              $tco_var_ctxs = ctxs.value1;
                              $copy_tree = new Three(ctxs.value0.value0.value0, ctxs.value0.value0.value1, ctxs.value0.value0.value2, ctxs.value0.value0.value3, ctxs.value0.value1, ctxs.value0.value2, tree);
                              return;
                          };
                          if (ctxs.value0 instanceof TwoLeft && ctxs.value0.value2 instanceof Three) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Two(new Two(tree, ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2.value0), ctxs.value0.value2.value1, ctxs.value0.value2.value2, new Two(ctxs.value0.value2.value3, ctxs.value0.value2.value4, ctxs.value0.value2.value5, ctxs.value0.value2.value6)));
                          };
                          if (ctxs.value0 instanceof TwoRight && ctxs.value0.value0 instanceof Three) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Two(new Two(ctxs.value0.value0.value0, ctxs.value0.value0.value1, ctxs.value0.value0.value2, ctxs.value0.value0.value3), ctxs.value0.value0.value4, ctxs.value0.value0.value5, new Two(ctxs.value0.value0.value6, ctxs.value0.value1, ctxs.value0.value2, tree)));
                          };
                          if (ctxs.value0 instanceof ThreeLeft && (ctxs.value0.value2 instanceof Leaf && (ctxs.value0.value5 instanceof Leaf && tree instanceof Leaf))) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Three(Leaf.value, ctxs.value0.value0, ctxs.value0.value1, Leaf.value, ctxs.value0.value3, ctxs.value0.value4, Leaf.value));
                          };
                          if (ctxs.value0 instanceof ThreeMiddle && (ctxs.value0.value0 instanceof Leaf && (ctxs.value0.value5 instanceof Leaf && tree instanceof Leaf))) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Three(Leaf.value, ctxs.value0.value1, ctxs.value0.value2, Leaf.value, ctxs.value0.value3, ctxs.value0.value4, Leaf.value));
                          };
                          if (ctxs.value0 instanceof ThreeRight && (ctxs.value0.value0 instanceof Leaf && (ctxs.value0.value3 instanceof Leaf && tree instanceof Leaf))) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Three(Leaf.value, ctxs.value0.value1, ctxs.value0.value2, Leaf.value, ctxs.value0.value4, ctxs.value0.value5, Leaf.value));
                          };
                          if (ctxs.value0 instanceof ThreeLeft && ctxs.value0.value2 instanceof Two) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Two(new Three(tree, ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2.value0, ctxs.value0.value2.value1, ctxs.value0.value2.value2, ctxs.value0.value2.value3), ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5));
                          };
                          if (ctxs.value0 instanceof ThreeMiddle && ctxs.value0.value0 instanceof Two) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Two(new Three(ctxs.value0.value0.value0, ctxs.value0.value0.value1, ctxs.value0.value0.value2, ctxs.value0.value0.value3, ctxs.value0.value1, ctxs.value0.value2, tree), ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5));
                          };
                          if (ctxs.value0 instanceof ThreeMiddle && ctxs.value0.value5 instanceof Two) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Two(ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2, new Three(tree, ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5.value0, ctxs.value0.value5.value1, ctxs.value0.value5.value2, ctxs.value0.value5.value3)));
                          };
                          if (ctxs.value0 instanceof ThreeRight && ctxs.value0.value3 instanceof Two) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Two(ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2, new Three(ctxs.value0.value3.value0, ctxs.value0.value3.value1, ctxs.value0.value3.value2, ctxs.value0.value3.value3, ctxs.value0.value4, ctxs.value0.value5, tree)));
                          };
                          if (ctxs.value0 instanceof ThreeLeft && ctxs.value0.value2 instanceof Three) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Three(new Two(tree, ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2.value0), ctxs.value0.value2.value1, ctxs.value0.value2.value2, new Two(ctxs.value0.value2.value3, ctxs.value0.value2.value4, ctxs.value0.value2.value5, ctxs.value0.value2.value6), ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5));
                          };
                          if (ctxs.value0 instanceof ThreeMiddle && ctxs.value0.value0 instanceof Three) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Three(new Two(ctxs.value0.value0.value0, ctxs.value0.value0.value1, ctxs.value0.value0.value2, ctxs.value0.value0.value3), ctxs.value0.value0.value4, ctxs.value0.value0.value5, new Two(ctxs.value0.value0.value6, ctxs.value0.value1, ctxs.value0.value2, tree), ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5));
                          };
                          if (ctxs.value0 instanceof ThreeMiddle && ctxs.value0.value5 instanceof Three) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Three(ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2, new Two(tree, ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5.value0), ctxs.value0.value5.value1, ctxs.value0.value5.value2, new Two(ctxs.value0.value5.value3, ctxs.value0.value5.value4, ctxs.value0.value5.value5, ctxs.value0.value5.value6)));
                          };
                          if (ctxs.value0 instanceof ThreeRight && ctxs.value0.value3 instanceof Three) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Three(ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2, new Two(ctxs.value0.value3.value0, ctxs.value0.value3.value1, ctxs.value0.value3.value2, ctxs.value0.value3.value3), ctxs.value0.value3.value4, ctxs.value0.value3.value5, new Two(ctxs.value0.value3.value6, ctxs.value0.value4, ctxs.value0.value5, tree)));
                          };
                          throw new Error("Failed pattern match at Data.Map.Internal (line 525, column 9 - line 542, column 136): " + [ ctxs.value0.constructor.name, tree.constructor.name ]);
                      };
                      throw new Error("Failed pattern match at Data.Map.Internal (line 522, column 5 - line 542, column 136): " + [ ctxs.constructor.name ]);
                  };
                  while (!$tco_done) {
                      $tco_result = $tco_loop($tco_var_ctxs, $copy_tree);
                  };
                  return $tco_result;
              };
          };
          var removeMaxNode = function ($copy_ctx) {
              return function ($copy_m) {
                  var $tco_var_ctx = $copy_ctx;
                  var $tco_done1 = false;
                  var $tco_result;
                  function $tco_loop(ctx, m) {
                      if (m instanceof Two && (m.value0 instanceof Leaf && m.value3 instanceof Leaf)) {
                          $tco_done1 = true;
                          return up(ctx)(Leaf.value);
                      };
                      if (m instanceof Two) {
                          $tco_var_ctx = new Data_List_Types.Cons(new TwoRight(m.value0, m.value1, m.value2), ctx);
                          $copy_m = m.value3;
                          return;
                      };
                      if (m instanceof Three && (m.value0 instanceof Leaf && (m.value3 instanceof Leaf && m.value6 instanceof Leaf))) {
                          $tco_done1 = true;
                          return up(new Data_List_Types.Cons(new TwoRight(Leaf.value, m.value1, m.value2), ctx))(Leaf.value);
                      };
                      if (m instanceof Three) {
                          $tco_var_ctx = new Data_List_Types.Cons(new ThreeRight(m.value0, m.value1, m.value2, m.value3, m.value4, m.value5), ctx);
                          $copy_m = m.value6;
                          return;
                      };
                      throw new Error("Failed pattern match at Data.Map.Internal (line 554, column 5 - line 558, column 107): " + [ m.constructor.name ]);
                  };
                  while (!$tco_done1) {
                      $tco_result = $tco_loop($tco_var_ctx, $copy_m);
                  };
                  return $tco_result;
              };
          };
          var maxNode = function ($copy_m) {
              var $tco_done2 = false;
              var $tco_result;
              function $tco_loop(m) {
                  if (m instanceof Two && m.value3 instanceof Leaf) {
                      $tco_done2 = true;
                      return {
                          key: m.value1,
                          value: m.value2
                      };
                  };
                  if (m instanceof Two) {
                      $copy_m = m.value3;
                      return;
                  };
                  if (m instanceof Three && m.value6 instanceof Leaf) {
                      $tco_done2 = true;
                      return {
                          key: m.value4,
                          value: m.value5
                      };
                  };
                  if (m instanceof Three) {
                      $copy_m = m.value6;
                      return;
                  };
                  throw new Error("Failed pattern match at Data.Map.Internal (line 545, column 33 - line 549, column 45): " + [ m.constructor.name ]);
              };
              while (!$tco_done2) {
                  $tco_result = $tco_loop($copy_m);
              };
              return $tco_result;
          };
          var comp = Data_Ord.compare(dictOrd);
          var down = function ($copy_ctx) {
              return function ($copy_m) {
                  var $tco_var_ctx = $copy_ctx;
                  var $tco_done3 = false;
                  var $tco_result;
                  function $tco_loop(ctx, m) {
                      if (m instanceof Leaf) {
                          $tco_done3 = true;
                          return Data_Maybe.Nothing.value;
                      };
                      if (m instanceof Two) {
                          var v = comp(k)(m.value1);
                          if (m.value3 instanceof Leaf && v instanceof Data_Ordering.EQ) {
                              $tco_done3 = true;
                              return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value2, up(ctx)(Leaf.value)));
                          };
                          if (v instanceof Data_Ordering.EQ) {
                              var max = maxNode(m.value0);
                              $tco_done3 = true;
                              return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value2, removeMaxNode(new Data_List_Types.Cons(new TwoLeft(max.key, max.value, m.value3), ctx))(m.value0)));
                          };
                          if (v instanceof Data_Ordering.LT) {
                              $tco_var_ctx = new Data_List_Types.Cons(new TwoLeft(m.value1, m.value2, m.value3), ctx);
                              $copy_m = m.value0;
                              return;
                          };
                          $tco_var_ctx = new Data_List_Types.Cons(new TwoRight(m.value0, m.value1, m.value2), ctx);
                          $copy_m = m.value3;
                          return;
                      };
                      if (m instanceof Three) {
                          var leaves = (function () {
                              if (m.value0 instanceof Leaf && (m.value3 instanceof Leaf && m.value6 instanceof Leaf)) {
                                  return true;
                              };
                              return false;
                          })();
                          var v = comp(k)(m.value4);
                          var v3 = comp(k)(m.value1);
                          if (leaves && v3 instanceof Data_Ordering.EQ) {
                              $tco_done3 = true;
                              return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value2, fromZipper(dictOrd)(ctx)(new Two(Leaf.value, m.value4, m.value5, Leaf.value))));
                          };
                          if (leaves && v instanceof Data_Ordering.EQ) {
                              $tco_done3 = true;
                              return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value5, fromZipper(dictOrd)(ctx)(new Two(Leaf.value, m.value1, m.value2, Leaf.value))));
                          };
                          if (v3 instanceof Data_Ordering.EQ) {
                              var max = maxNode(m.value0);
                              $tco_done3 = true;
                              return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value2, removeMaxNode(new Data_List_Types.Cons(new ThreeLeft(max.key, max.value, m.value3, m.value4, m.value5, m.value6), ctx))(m.value0)));
                          };
                          if (v instanceof Data_Ordering.EQ) {
                              var max = maxNode(m.value3);
                              $tco_done3 = true;
                              return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value5, removeMaxNode(new Data_List_Types.Cons(new ThreeMiddle(m.value0, m.value1, m.value2, max.key, max.value, m.value6), ctx))(m.value3)));
                          };
                          if (v3 instanceof Data_Ordering.LT) {
                              $tco_var_ctx = new Data_List_Types.Cons(new ThreeLeft(m.value1, m.value2, m.value3, m.value4, m.value5, m.value6), ctx);
                              $copy_m = m.value0;
                              return;
                          };
                          if (v3 instanceof Data_Ordering.GT && v instanceof Data_Ordering.LT) {
                              $tco_var_ctx = new Data_List_Types.Cons(new ThreeMiddle(m.value0, m.value1, m.value2, m.value4, m.value5, m.value6), ctx);
                              $copy_m = m.value3;
                              return;
                          };
                          $tco_var_ctx = new Data_List_Types.Cons(new ThreeRight(m.value0, m.value1, m.value2, m.value3, m.value4, m.value5), ctx);
                          $copy_m = m.value6;
                          return;
                      };
                      throw new Error("Failed pattern match at Data.Map.Internal (line 495, column 34 - line 518, column 80): " + [ m.constructor.name ]);
                  };
                  while (!$tco_done3) {
                      $tco_result = $tco_loop($tco_var_ctx, $copy_m);
                  };
                  return $tco_result;
              };
          };
          return down(Data_List_Types.Nil.value);
      };
  };
  var foldableMap = {
      foldl: function (f) {
          return function (z) {
              return function (m) {
                  return Data_Foldable.foldl(Data_List_Types.foldableList)(f)(z)(values(m));
              };
          };
      },
      foldr: function (f) {
          return function (z) {
              return function (m) {
                  return Data_Foldable.foldr(Data_List_Types.foldableList)(f)(z)(values(m));
              };
          };
      },
      foldMap: function (dictMonoid) {
          return function (f) {
              return function (m) {
                  return Data_Foldable.foldMap(Data_List_Types.foldableList)(dictMonoid)(f)(values(m));
              };
          };
      }
  };
  var traversableMap = {
      traverse: function (dictApplicative) {
          return function (v) {
              return function (v1) {
                  if (v1 instanceof Leaf) {
                      return Control_Applicative.pure(dictApplicative)(Leaf.value);
                  };
                  if (v1 instanceof Two) {
                      return Control_Apply.apply(dictApplicative.Apply0())(Control_Apply.apply(dictApplicative.Apply0())(Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map((dictApplicative.Apply0()).Functor0())(Two.create)(Data_Traversable.traverse(traversableMap)(dictApplicative)(v)(v1.value0)))(Control_Applicative.pure(dictApplicative)(v1.value1)))(v(v1.value2)))(Data_Traversable.traverse(traversableMap)(dictApplicative)(v)(v1.value3));
                  };
                  if (v1 instanceof Three) {
                      return Control_Apply.apply(dictApplicative.Apply0())(Control_Apply.apply(dictApplicative.Apply0())(Control_Apply.apply(dictApplicative.Apply0())(Control_Apply.apply(dictApplicative.Apply0())(Control_Apply.apply(dictApplicative.Apply0())(Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map((dictApplicative.Apply0()).Functor0())(Three.create)(Data_Traversable.traverse(traversableMap)(dictApplicative)(v)(v1.value0)))(Control_Applicative.pure(dictApplicative)(v1.value1)))(v(v1.value2)))(Data_Traversable.traverse(traversableMap)(dictApplicative)(v)(v1.value3)))(Control_Applicative.pure(dictApplicative)(v1.value4)))(v(v1.value5)))(Data_Traversable.traverse(traversableMap)(dictApplicative)(v)(v1.value6));
                  };
                  throw new Error("Failed pattern match at Data.Map.Internal (line 127, column 1 - line 142, column 31): " + [ v.constructor.name, v1.constructor.name ]);
              };
          };
      },
      sequence: function (dictApplicative) {
          return Data_Traversable.traverse(traversableMap)(dictApplicative)(Control_Category.identity(Control_Category.categoryFn));
      },
      Functor0: function () {
          return functorMap;
      },
      Foldable1: function () {
          return foldableMap;
      }
  };
  var eqMap = function (dictEq) {
      return function (dictEq1) {
          return {
              eq: function (m1) {
                  return function (m2) {
                      return Data_Eq.eq(Data_Eq.eqArray(Data_Tuple.eqTuple(dictEq)(dictEq1)))(toAscArray(m1))(toAscArray(m2));
                  };
              }
          };
      };
  };
  var ordMap = function (dictOrd) {
      return function (dictOrd1) {
          return {
              compare: function (m1) {
                  return function (m2) {
                      return Data_Ord.compare(Data_Ord.ordArray(Data_Tuple.ordTuple(dictOrd)(dictOrd1)))(toAscArray(m1))(toAscArray(m2));
                  };
              },
              Eq0: function () {
                  return eqMap(dictOrd.Eq0())(dictOrd1.Eq0());
              }
          };
      };
  };
  var empty = Leaf.value;
  var fromFoldable = function (dictOrd) {
      return function (dictFoldable) {
          return Data_Foldable.foldl(dictFoldable)(function (m) {
              return function (v) {
                  return insert(dictOrd)(v.value0)(v.value1)(m);
              };
          })(empty);
      };
  };
  var filterWithKey = function (dictOrd) {
      return function (predicate) {
          var $751 = fromFoldable(dictOrd)(Data_List_Lazy_Types.foldableList);
          var $752 = Data_List_Lazy.filter(Data_Tuple.uncurry(predicate));
          var $753 = toUnfoldable(Data_List_Lazy_Types.unfoldableList);
          return function ($754) {
              return $751($752($753($754)));
          };
      };
  };
  var filter = function (dictOrd) {
      return function (predicate) {
          return filterWithKey(dictOrd)(Data_Function["const"](predicate));
      };
  };
  var filterKeys = function (dictOrd) {
      return function (predicate) {
          return filterWithKey(dictOrd)(function ($755) {
              return Data_Function["const"](predicate($755));
          });
      };
  };
  var $$delete = function (dictOrd) {
      return function (k) {
          return function (m) {
              return Data_Maybe.maybe(m)(Data_Tuple.snd)(pop(dictOrd)(k)(m));
          };
      };
  };
  var difference = function (dictOrd) {
      return function (m1) {
          return function (m2) {
              return Data_Foldable.foldl(Data_List_Types.foldableList)(Data_Function.flip($$delete(dictOrd)))(m1)(keys(m2));
          };
      };
  };
  var asList = Control_Category.identity(Control_Category.categoryFn);
  var foldableWithIndexMap = {
      foldlWithIndex: function (f) {
          return function (z) {
              return function (m) {
                  return Data_Foldable.foldl(Data_List_Types.foldableList)((function () {
                      var $756 = Data_Function.flip(f);
                      return function ($757) {
                          return Data_Tuple.uncurry($756($757));
                      };
                  })())(z)(asList(toUnfoldable(Data_List_Types.unfoldableList)(m)));
              };
          };
      },
      foldrWithIndex: function (f) {
          return function (z) {
              return function (m) {
                  return Data_Foldable.foldr(Data_List_Types.foldableList)(Data_Tuple.uncurry(f))(z)(asList(toUnfoldable(Data_List_Types.unfoldableList)(m)));
              };
          };
      },
      foldMapWithIndex: function (dictMonoid) {
          return function (f) {
              return function (m) {
                  return Data_Foldable.foldMap(Data_List_Types.foldableList)(dictMonoid)(Data_Tuple.uncurry(f))(asList(toUnfoldable(Data_List_Types.unfoldableList)(m)));
              };
          };
      },
      Foldable0: function () {
          return foldableMap;
      }
  };
  var alter = function (dictOrd) {
      return function (f) {
          return function (k) {
              return function (m) {
                  var v = f(lookup(dictOrd)(k)(m));
                  if (v instanceof Data_Maybe.Nothing) {
                      return $$delete(dictOrd)(k)(m);
                  };
                  if (v instanceof Data_Maybe.Just) {
                      return insert(dictOrd)(k)(v.value0)(m);
                  };
                  throw new Error("Failed pattern match at Data.Map.Internal (line 563, column 15 - line 565, column 25): " + [ v.constructor.name ]);
              };
          };
      };
  };
  var unionWith = function (dictOrd) {
      return function (f) {
          return function (m1) {
              return function (m2) {
                  var go = function (m) {
                      return function (v) {
                          return alter(dictOrd)((function () {
                              var $764 = Data_Maybe.maybe(v.value1)(f(v.value1));
                              return function ($765) {
                                  return Data_Maybe.Just.create($764($765));
                              };
                          })())(v.value0)(m);
                      };
                  };
                  return Data_Foldable.foldl(Data_List_Types.foldableList)(go)(m2)(toUnfoldable(Data_List_Types.unfoldableList)(m1));
              };
          };
      };
  };
  var union = function (dictOrd) {
      return unionWith(dictOrd)(Data_Function["const"]);
  };
  var unions = function (dictOrd) {
      return function (dictFoldable) {
          return Data_Foldable.foldl(dictFoldable)(union(dictOrd))(empty);
      };
  };
  var update = function (dictOrd) {
      return function (f) {
          return function (k) {
              return function (m) {
                  return alter(dictOrd)(Data_Maybe.maybe(Data_Maybe.Nothing.value)(f))(k)(m);
              };
          };
      };
  };
  exports["empty"] = empty;
  exports["isEmpty"] = isEmpty;
  exports["singleton"] = singleton;
  exports["insert"] = insert;
  exports["lookup"] = lookup;
  exports["fromFoldable"] = fromFoldable;
  exports["toUnfoldable"] = toUnfoldable;
  exports["delete"] = $$delete;
  exports["member"] = member;
  exports["alter"] = alter;
  exports["update"] = update;
  exports["keys"] = keys;
  exports["values"] = values;
  exports["union"] = union;
  exports["unionWith"] = unionWith;
  exports["unions"] = unions;
  exports["difference"] = difference;
  exports["isSubmap"] = isSubmap;
  exports["size"] = size;
  exports["filterKeys"] = filterKeys;
  exports["filter"] = filter;
  exports["eqMap"] = eqMap;
  exports["ordMap"] = ordMap;
  exports["showMap"] = showMap;
  exports["functorMap"] = functorMap;
  exports["foldableMap"] = foldableMap;
  exports["foldableWithIndexMap"] = foldableWithIndexMap;
  exports["traversableMap"] = traversableMap;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Data.Log.Tag"] = $PS["Data.Log.Tag"] || {};
  var exports = $PS["Data.Log.Tag"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Map_Internal = $PS["Data.Map.Internal"];
  var Data_Ord = $PS["Data.Ord"];                
  var StringTag = (function () {
      function StringTag(value0) {
          this.value0 = value0;
      };
      StringTag.create = function (value0) {
          return new StringTag(value0);
      };
      return StringTag;
  })();
  var NumberTag = (function () {
      function NumberTag(value0) {
          this.value0 = value0;
      };
      NumberTag.create = function (value0) {
          return new NumberTag(value0);
      };
      return NumberTag;
  })();
  var IntTag = (function () {
      function IntTag(value0) {
          this.value0 = value0;
      };
      IntTag.create = function (value0) {
          return new IntTag(value0);
      };
      return IntTag;
  })();
  var BooleanTag = (function () {
      function BooleanTag(value0) {
          this.value0 = value0;
      };
      BooleanTag.create = function (value0) {
          return new BooleanTag(value0);
      };
      return BooleanTag;
  })();
  var JSDateTag = (function () {
      function JSDateTag(value0) {
          this.value0 = value0;
      };
      JSDateTag.create = function (value0) {
          return new JSDateTag(value0);
      };
      return JSDateTag;
  })();
  var TagSetTag = (function () {
      function TagSetTag(value0) {
          this.value0 = value0;
      };
      TagSetTag.create = function (value0) {
          return new TagSetTag(value0);
      };
      return TagSetTag;
  })();
  var mkTagType = function (tagger) {
      return function (name) {
          var $0 = Data_Map_Internal.singleton(name);
          return function ($1) {
              return $0(tagger($1));
          };
      };
  };                                          
  var tag = mkTagType(StringTag.create);
  var fromArray = Data_Map_Internal.unions(Data_Ord.ordString)(Data_Foldable.foldableArray);
  exports["StringTag"] = StringTag;
  exports["NumberTag"] = NumberTag;
  exports["IntTag"] = IntTag;
  exports["BooleanTag"] = BooleanTag;
  exports["JSDateTag"] = JSDateTag;
  exports["TagSetTag"] = TagSetTag;
  exports["tag"] = tag;
  exports["fromArray"] = fromArray;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Data.Log.Formatter.Pretty"] = $PS["Data.Log.Formatter.Pretty"] || {};
  var exports = $PS["Data.Log.Formatter.Pretty"];
  var Ansi_Codes = $PS["Ansi.Codes"];
  var Ansi_Output = $PS["Ansi.Output"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Plus = $PS["Control.Plus"];
  var Data_Array = $PS["Data.Array"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_JSDate = $PS["Data.JSDate"];
  var Data_Log_Level = $PS["Data.Log.Level"];
  var Data_Log_Tag = $PS["Data.Log.Tag"];
  var Data_Map_Internal = $PS["Data.Map.Internal"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Show = $PS["Data.Show"];
  var Data_String_Common = $PS["Data.String.Common"];
  var Data_Traversable = $PS["Data.Traversable"];
  var Data_Unfoldable = $PS["Data.Unfoldable"];
  var Effect = $PS["Effect"];
  var Effect_Class = $PS["Effect.Class"];                
  var showBasic = function (dictApplicative) {
      return function (value) {
          return function (label) {
              return Control_Applicative.pure(dictApplicative)(Data_Array.singleton(label + value));
          };
      };
  };
  var indentEachLine = function (dictFunctor) {
      return Data_Functor.map(dictFunctor)(Data_Semigroup.append(Data_Semigroup.semigroupString)("   "));
  };
  var color = function ($35) {
      return Ansi_Output.withGraphics(Ansi_Output.foreground($35));
  };
  var showLevel = function (v) {
      if (v instanceof Data_Log_Level.Trace) {
          return color(Ansi_Codes.Cyan.value)("[TRACE]");
      };
      if (v instanceof Data_Log_Level.Debug) {
          return color(Ansi_Codes.Blue.value)("[DEBUG]");
      };
      if (v instanceof Data_Log_Level.Info) {
          return color(Ansi_Codes.White.value)("[INFO]");
      };
      if (v instanceof Data_Log_Level.Warn) {
          return color(Ansi_Codes.Yellow.value)("[WARN]");
      };
      if (v instanceof Data_Log_Level["Error"]) {
          return color(Ansi_Codes.Red.value)("[ERROR]");
      };
      throw new Error("Failed pattern match at Data.Log.Formatter.Pretty (line 38, column 1 - line 38, column 32): " + [ v.constructor.name ]);
  };
  var showMainLine = function (dictMonadEffect) {
      return function (v) {
          return Effect_Class.liftEffect(dictMonadEffect)(Data_Functor.mapFlipped(Effect.functorEffect)(Data_JSDate.toISOString(v.timestamp))(function (ts) {
              return Data_String_Common.joinWith(" ")([ showLevel(v.level), color(Ansi_Codes.BrightBlack.value)(ts), color(Ansi_Codes.Cyan.value)(v.message) ]);
          }));
      };
  };
  var showSpecial = function (dictApplicative) {
      var $36 = showBasic(dictApplicative);
      var $37 = color(Ansi_Codes.Yellow.value);
      return function ($38) {
          return $36($37($38));
      };
  };
  var showJsDate = function (dictMonadEffect) {
      return function (value) {
          return function (label) {
              return Effect_Class.liftEffect(dictMonadEffect)(Control_Bind.bind(Effect.bindEffect)(Data_JSDate.toISOString(value))(Data_Function.flip(showSpecial(Effect.applicativeEffect))(label)));
          };
      };
  };
  var bold$prime = Ansi_Output.withGraphics(Ansi_Output.bold);
  var tagLines = function (dictMonadEffect) {
      return function (tags) {
          if (Data_Map_Internal.isEmpty(tags)) {
              return Control_Plus.empty(Data_Maybe.plusMaybe);
          };
          if (Data_Boolean.otherwise) {
              return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(Data_Functor.map((((dictMonadEffect.Monad0()).Bind1()).Apply0()).Functor0())(Data_Functor.map(Data_Functor.functorFn)(indentEachLine(Data_Functor.functorArray))(Data_Array.concat))(lineify(dictMonadEffect)(tags)));
          };
          throw new Error("Failed pattern match at Data.Log.Formatter.Pretty (line 50, column 1 - line 50, column 74): " + [ tags.constructor.name ]);
      };
  };
  var showTag = function (dictMonadEffect) {
      return function (v) {
          if (v instanceof Data_Log_Tag.StringTag) {
              return showBasic((dictMonadEffect.Monad0()).Applicative0())(v.value0);
          };
          if (v instanceof Data_Log_Tag.IntTag) {
              return showSpecial((dictMonadEffect.Monad0()).Applicative0())(Data_Show.show(Data_Show.showInt)(v.value0));
          };
          if (v instanceof Data_Log_Tag.NumberTag) {
              return showSpecial((dictMonadEffect.Monad0()).Applicative0())(Data_Show.show(Data_Show.showNumber)(v.value0));
          };
          if (v instanceof Data_Log_Tag.BooleanTag) {
              return showSpecial((dictMonadEffect.Monad0()).Applicative0())(Data_Show.show(Data_Show.showBoolean)(v.value0));
          };
          if (v instanceof Data_Log_Tag.TagSetTag) {
              return showSubTags(dictMonadEffect)(v.value0);
          };
          if (v instanceof Data_Log_Tag.JSDateTag) {
              return showJsDate(dictMonadEffect)(v.value0);
          };
          throw new Error("Failed pattern match at Data.Log.Formatter.Pretty (line 61, column 1 - line 61, column 72): " + [ v.constructor.name ]);
      };
  };
  var showSubTags = function (dictMonadEffect) {
      return function (value) {
          return function (label) {
              return Data_Functor.map((((dictMonadEffect.Monad0()).Bind1()).Apply0()).Functor0())(Data_Array.cons(label))(Data_Maybe.fromMaybe(Control_Applicative.pure((dictMonadEffect.Monad0()).Applicative0())([  ]))(tagLines(dictMonadEffect)(value)));
          };
      };
  };
  var showField = function (dictMonadEffect) {
      return function (v) {
          return showTag(dictMonadEffect)(v.value1)(bold$prime(v.value0) + bold$prime(": "));
      };
  };
  var lineify = function (dictMonadEffect) {
      return function (tags) {
          return Data_Traversable.sequence(Data_Traversable.traversableArray)((dictMonadEffect.Monad0()).Applicative0())(Data_Functor.map(Data_Functor.functorArray)(showField(dictMonadEffect))(Data_Map_Internal.toUnfoldable(Data_Unfoldable.unfoldableArray)(tags)));
      };
  };
  var showTags = function (dictMonadEffect) {
      var $39 = tagLines(dictMonadEffect);
      return function ($40) {
          return (function (v) {
              if (v instanceof Data_Maybe.Nothing) {
                  return Control_Applicative.pure((dictMonadEffect.Monad0()).Applicative0())("");
              };
              if (v instanceof Data_Maybe.Just) {
                  return Data_Functor.mapFlipped((((dictMonadEffect.Monad0()).Bind1()).Apply0()).Functor0())(v.value0)((function () {
                      var $41 = Data_Semigroup.append(Data_Semigroup.semigroupString)("\x0a");
                      var $42 = Data_String_Common.joinWith("\x0a");
                      return function ($43) {
                          return $41($42($43));
                      };
                  })());
              };
              throw new Error("Failed pattern match at Data.Log.Formatter.Pretty (line 46, column 25 - line 48, column 56): " + [ v.constructor.name ]);
          })($39($40));
      };
  };
  var prettyFormatter = function (dictMonadEffect) {
      return function (message) {
          return Control_Apply.apply(((dictMonadEffect.Monad0()).Bind1()).Apply0())(Data_Functor.map((((dictMonadEffect.Monad0()).Bind1()).Apply0()).Functor0())(Data_Semigroup.append(Data_Semigroup.semigroupString))(showMainLine(dictMonadEffect)(message)))(showTags(dictMonadEffect)(message.tags));
      };
  };
  exports["prettyFormatter"] = prettyFormatter;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Data.Maybe.Last"] = $PS["Data.Maybe.Last"] || {};
  var exports = $PS["Data.Maybe.Last"];
  var Data_Maybe = $PS["Data.Maybe"];              
  var Last = function (x) {
      return x;
  };
  var semigroupLast = {
      append: function (v) {
          return function (v1) {
              if (v1 instanceof Data_Maybe.Just) {
                  return v1;
              };
              if (v1 instanceof Data_Maybe.Nothing) {
                  return v;
              };
              throw new Error("Failed pattern match at Data.Maybe.Last (line 52, column 1 - line 54, column 36): " + [ v.constructor.name, v1.constructor.name ]);
          };
      }
  };
  exports["Last"] = Last;
  exports["semigroupLast"] = semigroupLast;
})(PS);
(function(exports) {
  "use strict";

  exports.log = function (s) {
    return function () {
      console.log(s);
    };
  };
})(PS["Effect.Console"] = PS["Effect.Console"] || {});
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Effect.Console"] = $PS["Effect.Console"] || {};
  var exports = $PS["Effect.Console"];
  var $foreign = $PS["Effect.Console"];
  exports["log"] = $foreign.log;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Effect.Class.Console"] = $PS["Effect.Class.Console"] || {};
  var exports = $PS["Effect.Class.Console"];
  var Effect_Class = $PS["Effect.Class"];
  var Effect_Console = $PS["Effect.Console"];
  var log = function (dictMonadEffect) {
      var $30 = Effect_Class.liftEffect(dictMonadEffect);
      return function ($31) {
          return $30(Effect_Console.log($31));
      };
  };
  exports["log"] = log;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Ctl.Internal.Helpers"] = $PS["Ctl.Internal.Helpers"] || {};
  var exports = $PS["Ctl.Internal.Helpers"];
  var Aeson = $PS["Aeson"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_Error_Class = $PS["Control.Monad.Error.Class"];
  var Data_Array = $PS["Data.Array"];
  var Data_Bifunctor = $PS["Data.Bifunctor"];
  var Data_Bitraversable = $PS["Data.Bitraversable"];
  var Data_Either = $PS["Data.Either"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_JSDate = $PS["Data.JSDate"];
  var Data_List_Lazy = $PS["Data.List.Lazy"];
  var Data_List_Lazy_Types = $PS["Data.List.Lazy.Types"];
  var Data_Log_Formatter_Pretty = $PS["Data.Log.Formatter.Pretty"];
  var Data_Log_Level = $PS["Data.Log.Level"];
  var Data_Map_Internal = $PS["Data.Map.Internal"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Maybe_First = $PS["Data.Maybe.First"];
  var Data_Maybe_Last = $PS["Data.Maybe.Last"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Show = $PS["Data.Show"];
  var Data_String_CodeUnits = $PS["Data.String.CodeUnits"];
  var Data_String_Common = $PS["Data.String.Common"];
  var Data_Traversable = $PS["Data.Traversable"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unfoldable = $PS["Data.Unfoldable"];
  var Effect = $PS["Effect"];
  var Effect_Class = $PS["Effect.Class"];
  var Effect_Class_Console = $PS["Effect.Class.Console"];
  var Effect_Exception = $PS["Effect.Exception"];
  var Foreign_Object = $PS["Foreign.Object"];
  var showWithParens = function (dictShow) {
      return function (ctorName) {
          return function (x) {
              return "(" + (ctorName + (" (" + (Data_Show.show(dictShow)(x) + "))")));
          };
      };
  };
  var maybeArrayMerge = function (dictEq) {
      return function (v) {
          return function (v1) {
              if (v instanceof Data_Maybe.Nothing) {
                  return v1;
              };
              if (v1 instanceof Data_Maybe.Nothing) {
                  return v;
              };
              if (v instanceof Data_Maybe.Just && v1 instanceof Data_Maybe.Just) {
                  return new Data_Maybe.Just(Data_Array.union(dictEq)(v.value0)(v1.value0));
              };
              throw new Error("Failed pattern match at Ctl.Internal.Helpers (line 131, column 1 - line 136, column 21): " + [ v.constructor.name, v1.constructor.name ]);
          };
      };
  };
  var logWithLevel = function (dictMonadEffect) {
      return function (lvl) {
          return function (msg) {
              return Control_Applicative.when((dictMonadEffect.Monad0()).Applicative0())(Data_Ord.greaterThanOrEq(Data_Log_Level.ordLogLevel)(msg.level)(lvl))(Control_Bind.bindFlipped((dictMonadEffect.Monad0()).Bind1())(Effect_Class_Console.log(dictMonadEffect))(Data_Log_Formatter_Pretty.prettyFormatter(dictMonadEffect)(msg)));
          };
      };
  };
  var logString = function (cfgLevel) {
      return function (level) {
          return function (message) {
              return function __do() {
                  var timestamp = Data_JSDate.now();
                  return logWithLevel(Effect_Class.monadEffectEffect)(cfgLevel)({
                      timestamp: timestamp,
                      message: message,
                      level: level,
                      tags: Data_Map_Internal.empty
                  })();
              };
          };
      };
  };
  var liftEither = function (dictMonadError) {
      return Data_Either.either(Control_Monad_Error_Class.throwError(dictMonadError.MonadThrow0()))(Control_Applicative.pure(((dictMonadError.MonadThrow0()).Monad0()).Applicative0()));
  };
  var liftM = function (dictMonadError) {
      return function (err) {
          var $37 = liftEither(dictMonadError);
          var $38 = Data_Maybe.maybe(Control_Monad_Error_Class.throwError(Control_Monad_Error_Class.monadThrowEither)(err))(Data_Either.Right.create);
          return function ($39) {
              return $37($38($39));
          };
      };
  };
  var liftedM = function (dictMonadError) {
      return function (err) {
          return function (mma) {
              return Control_Bind.bind(((dictMonadError.MonadThrow0()).Monad0()).Bind1())(mma)((function () {
                  var $44 = liftEither(dictMonadError);
                  var $45 = Data_Maybe.maybe(Control_Monad_Error_Class.throwError(Control_Monad_Error_Class.monadThrowEither)(err))(Data_Either.Right.create);
                  return function ($46) {
                      return $44($45($46));
                  };
              })());
          };
      };
  };
  var fromMaybeFlipped = Data_Function.flip(Data_Maybe.fromMaybe);
  var fromJustEff = function (e) {
      return function (v) {
          if (v instanceof Data_Maybe.Nothing) {
              return Effect_Exception["throw"](e);
          };
          if (v instanceof Data_Maybe.Just) {
              return Control_Applicative.pure(Effect.applicativeEffect)(v.value0);
          };
          throw new Error("Failed pattern match at Ctl.Internal.Helpers (line 74, column 17 - line 76, column 19): " + [ v.constructor.name ]);
      };
  };
  var filterMapWithKeyM = function (dictOrd) {
      return function (dictMonad) {
          return function (p) {
              var $49 = Data_Functor.map(((dictMonad.Bind1()).Apply0()).Functor0())(Data_Map_Internal.fromFoldable(dictOrd)(Data_List_Lazy_Types.foldableList));
              var $50 = Data_List_Lazy.filterM(dictMonad)(Data_Tuple.uncurry(p));
              var $51 = Data_Map_Internal.toUnfoldable(Data_List_Lazy_Types.unfoldableList);
              return function ($52) {
                  return $49($50($51($52)));
              };
          };
      };
  };
  var encodeMap = function (dictEncodeAeson) {
      return function (dictEncodeAeson1) {
          return function (m) {
              var pairs = Data_Functor.map(Data_Functor.functorArray)(Data_Bifunctor.bimap(Data_Bifunctor.bifunctorTuple)(Aeson.encodeAeson(dictEncodeAeson))(Aeson.encodeAeson(dictEncodeAeson1)))(Data_Map_Internal.toUnfoldable(Data_Unfoldable.unfoldableArray)(m));
              var v = Data_Traversable.traverse(Data_Traversable.traversableArray)(Data_Maybe.applicativeMaybe)(Data_Bitraversable.ltraverse(Data_Bitraversable.bitraversableTuple)(Data_Maybe.applicativeMaybe)(Aeson.toString))(pairs);
              if (v instanceof Data_Maybe.Just) {
                  return Aeson.encodeAeson(Aeson.encodeAesonObject(Aeson.encodeAesonAeson))(Foreign_Object.fromFoldable(Data_Foldable.foldableArray)(v.value0));
              };
              if (v instanceof Data_Maybe.Nothing) {
                  return Aeson.encodeAeson(Aeson.encodeAesonArray(Aeson.encodeAesonTuple(Aeson.encodeTupleAuxTuple(Aeson.encodeAesonAeson)(Aeson.encodeAesonAeson))))(pairs);
              };
              throw new Error("Failed pattern match at Ctl.Internal.Helpers (line 248, column 3 - line 250, column 33): " + [ v.constructor.name ]);
          };
      };
  };
  var concatPaths = function (a) {
      return function (b) {
          var right = Data_Maybe.fromMaybe(b)(Data_String_CodeUnits.stripPrefix("/")(b));
          var left = Data_Maybe.fromMaybe(a)(Data_String_CodeUnits.stripSuffix("/")(a));
          var $32 = Data_String_Common["null"](right);
          if ($32) {
              return left;
          };
          return left + ("/" + right);
      };
  };
  var appendRightMap = function (dictOrd) {
      return Data_Map_Internal.unionWith(dictOrd)(Data_Function.flip(Data_Function["const"]));
  };
  var appendMap = function (dictOrd) {
      return function (dictSemigroup) {
          return Data_Map_Internal.unionWith(dictOrd)(Data_Semigroup.append(dictSemigroup));
      };
  };
  var appendLastMaybe = function (m) {
      return function (m$prime) {
          return (function (v) {
              return v;
          })(Data_Function.on(Data_Semigroup.append(Data_Maybe_Last.semigroupLast))(Data_Maybe_Last.Last)(m)(m$prime));
      };
  };
  var appendFirstMaybe = function (m) {
      return function (m$prime) {
          return (function (v) {
              return v;
          })(Data_Function.on(Data_Semigroup.append(Data_Maybe_First.semigroupFirst))(Data_Maybe_First.First)(m)(m$prime));
      };
  };
  exports["appendFirstMaybe"] = appendFirstMaybe;
  exports["appendLastMaybe"] = appendLastMaybe;
  exports["appendMap"] = appendMap;
  exports["appendRightMap"] = appendRightMap;
  exports["concatPaths"] = concatPaths;
  exports["encodeMap"] = encodeMap;
  exports["filterMapWithKeyM"] = filterMapWithKeyM;
  exports["fromJustEff"] = fromJustEff;
  exports["fromMaybeFlipped"] = fromMaybeFlipped;
  exports["liftEither"] = liftEither;
  exports["liftM"] = liftM;
  exports["liftedM"] = liftedM;
  exports["logString"] = logString;
  exports["logWithLevel"] = logWithLevel;
  exports["maybeArrayMerge"] = maybeArrayMerge;
  exports["showWithParens"] = showWithParens;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Ctl.Internal.ServerConfig"] = $PS["Ctl.Internal.ServerConfig"] || {};
  var exports = $PS["Ctl.Internal.ServerConfig"];
  var Ctl_Internal_Helpers = $PS["Ctl.Internal.Helpers"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_UInt = $PS["Data.UInt"];                
  var mkServerUrl = function (protocol) {
      return function (cfg) {
          return (function () {
              if (cfg.secure) {
                  return protocol + "s";
              };
              return protocol;
          })() + ("://" + (cfg.host + (":" + Ctl_Internal_Helpers.concatPaths(Data_UInt.toString(cfg.port))(Data_Maybe.fromMaybe("")(cfg.path)))));
      };
  };
  var mkWsUrl = mkServerUrl("ws");
  var mkHttpUrl = mkServerUrl("http");
  var defaultOgmiosWsConfig = {
      port: Data_UInt.fromInt(1337),
      host: "localhost",
      secure: false,
      path: Data_Maybe.Nothing.value
  };
  var defaultKupoServerConfig = {
      port: Data_UInt.fromInt(4008),
      host: "localhost",
      secure: false,
      path: new Data_Maybe.Just("kupo")
  };
  exports["defaultKupoServerConfig"] = defaultKupoServerConfig;
  exports["defaultOgmiosWsConfig"] = defaultOgmiosWsConfig;
  exports["mkHttpUrl"] = mkHttpUrl;
  exports["mkWsUrl"] = mkWsUrl;
})(PS);
(function(exports) {
  /* global BROWSER_RUNTIME */

  const getIsWalletAvailableTagName = wallet => {
    const strs = {
      nami: "NamiWallet",
      gerowallet: "GeroWallet",
      flint: "FlintWallet",
      LodeWallet: "LodeWallet",
      eternl: "EternlWallet",
    };

    return strs[wallet] || "is?WalletAvailable";
  };

  const nodeEnvError = new Error(
    "`window` is not an object. Are you trying to run a Contract with" +
      " connected light wallet in NodeJS environment?")
   ;

  const checkNotNode = () => {
    if (typeof window != "object") {
      throw nodeEnvError;
    }
  };

  const enableWallet = wallet => () => {
    if (isWalletAvailable(wallet)()) {
      return window.cardano[wallet].enable().catch(e => {
        throw new Error(
          "enableWallet failed: " +
            (typeof e.info == "string" ? e.info : e.toString()))
         ;
      });
    } else {
      throw new Error(
        "Wallet is not available. Use `isWalletAvailable " +
          getIsWalletAvailableTagName(wallet) +
          "` before connecting.")
       ;
    }
  };

  exports._enableWallet = enableWallet;

  const isWalletAvailable = walletName => () => {
    checkNotNode();
    return (
      typeof window.cardano != "undefined" &&
      typeof window.cardano[walletName] != "undefined" &&
      typeof window.cardano[walletName].enable == "function"
    );
  };

  exports._isWalletAvailable = isWalletAvailable;

  exports._name = walletName => () => {
    if (isWalletAvailable(walletName)()) {
      return window.cardano[walletName].name;
    } else {
      throw new Error("Wallet `" + walletName + "` is not available");
    }
  };
})(PS["Ctl.Internal.Wallet"] = PS["Ctl.Internal.Wallet"] || {});
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Ctl.Internal.Types.Natural"] = $PS["Ctl.Internal.Types.Natural"] || {};
  var exports = $PS["Ctl.Internal.Types.Natural"];
  var Aeson = $PS["Aeson"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Category = $PS["Control.Category"];
  var Data_Argonaut_Decode_Error = $PS["Data.Argonaut.Decode.Error"];
  var Data_BigInt = $PS["Data.BigInt"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Either = $PS["Data.Either"];
  var Data_Function = $PS["Data.Function"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Ring = $PS["Data.Ring"];
  var Data_Semiring = $PS["Data.Semiring"];
  var Data_Show = $PS["Data.Show"];
  var showNatural = {
      show: function (v) {
          return "(fromBigInt' (BigInt." + (Data_Show.show(Data_BigInt.showBigInt)(v) + "))");
      }
  };
  var semiringNatural = Data_BigInt.semiringBigInt;
  var ordNatural = Data_BigInt.ordBigInt;                                         
  var eqNatural = Data_BigInt.eqBigInt;
  var toBigInt = function (v) {
      return v;
  };
  var fromSemiringType$prime = function (dictSemiring) {
      return function (dictOrd) {
          return function (f) {
              return function (n) {
                  if (Data_Ord.greaterThanOrEq(dictOrd)(n)(Data_Semiring.zero(dictSemiring))) {
                      return f(n);
                  };
                  if (Data_Boolean.otherwise) {
                      return Data_Ring.negate(Data_BigInt.ringBigInt)(f(n));
                  };
                  throw new Error("Failed pattern match at Ctl.Internal.Types.Natural (line 67, column 1 - line 68, column 78): " + [ f.constructor.name, n.constructor.name ]);
              };
          };
      };
  };
  var fromSemiringType = function (dictSemiring) {
      return function (dictOrd) {
          return function (f) {
              return function (n) {
                  if (Data_Ord.greaterThanOrEq(dictOrd)(n)(Data_Semiring.zero(dictSemiring))) {
                      return new Data_Maybe.Just(f(n));
                  };
                  if (Data_Boolean.otherwise) {
                      return Data_Maybe.Nothing.value;
                  };
                  throw new Error("Failed pattern match at Ctl.Internal.Types.Natural (line 59, column 1 - line 60, column 79): " + [ f.constructor.name, n.constructor.name ]);
              };
          };
      };
  };
  var fromInt$prime = fromSemiringType$prime(Data_Semiring.semiringInt)(Data_Ord.ordInt)(Data_BigInt.fromInt);
  var fromInt = fromSemiringType(Data_Semiring.semiringInt)(Data_Ord.ordInt)(Data_BigInt.fromInt);
  var fromBigInt$prime = fromSemiringType$prime(Data_BigInt.semiringBigInt)(Data_BigInt.ordBigInt)(Control_Category.identity(Control_Category.categoryFn));
  var fromBigInt = fromSemiringType(Data_BigInt.semiringBigInt)(Data_BigInt.ordBigInt)(Control_Category.identity(Control_Category.categoryFn));
  var fromString = Control_Bind.composeKleisliFlipped(Data_Maybe.bindMaybe)(fromBigInt)(Data_BigInt.fromString);
  var decodeAesonNatural = {
      decodeAeson: Aeson.caseAesonBigInt(new Data_Either.Left(new Data_Argonaut_Decode_Error.TypeMismatch("Expected BigInt from Aeson decoding")))(function (bi) {
          return Data_Either.note(new Data_Argonaut_Decode_Error.TypeMismatch("Invalid Natural number: " + Data_Show.show(Data_BigInt.showBigInt)(bi)))(fromBigInt(bi));
      })
  };
  var binaryOnBigInt = function (bin) {
      return function (n) {
          var $26 = Data_Function.on(bin)(toBigInt)(n);
          return function ($27) {
              return fromBigInt($26($27));
          };
      };
  };
  var minus = function (n) {
      var $28 = Data_Maybe.fromMaybe(Data_Semiring.zero(semiringNatural));
      var $29 = binaryOnBigInt(Data_Ring.sub(Data_BigInt.ringBigInt))(n);
      return function ($30) {
          return $28($29($30));
      };
  };
  exports["fromBigInt'"] = fromBigInt$prime;
  exports["fromInt'"] = fromInt$prime;
  exports["fromString"] = fromString;
  exports["minus"] = minus;
  exports["toBigInt"] = toBigInt;
  exports["eqNatural"] = eqNatural;
  exports["ordNatural"] = ordNatural;
  exports["semiringNatural"] = semiringNatural;
  exports["showNatural"] = showNatural;
  exports["decodeAesonNatural"] = decodeAesonNatural;
})(PS);
(function(exports) {
  /* global BROWSER_RUNTIME */

  exports._getNetworkId = conn => () => conn.getNetworkId();

  exports._getUtxos = maybe => conn => () =>
    conn.getUtxos().then(res => (res === null ? maybe.nothing : maybe.just(res)));

  exports._getCollateral = maybe => conn => () =>
    conn.experimental.
       getCollateral()
      .then(utxos =>
        utxos !== null && utxos.length ? maybe.just(utxos) : maybe.nothing
      );

  exports._getBalance = conn => () => conn.getBalance();

  exports._getAddresses = conn => conn.getUsedAddresses;

  exports._getUnusedAddresses = conn => () => conn.getUnusedAddresses();

  exports._getChangeAddress = conn => () => conn.getChangeAddress();

  exports._getRewardAddresses = conn => () => conn.getRewardAddresses();

  exports._signTx = txHex => conn => () =>
    conn.signTx(txHex, true).catch(e => {
      throw JSON.stringify(e);
    });

  exports._signData = address => payload => conn => () =>
    conn.signData(address, payload).catch(e => {
      throw JSON.stringify(e);
    });
})(PS["Ctl.Internal.Wallet.Cip30"] = PS["Ctl.Internal.Wallet.Cip30"] || {});
(function(exports) {
  // module Control.Promise

  exports.promise = function (f) {
    return function () {
      return new Promise(function (success, error) {
        var succF = function (s) { return function() { return success(s); } };
        var failF = function (s) { return function() { return error(s); } };

        // This indicates the aff was wrong?
        try { f(succF)(failF)(); }
        catch (e) {
          error(e);
        }
      });
    };
  };

  exports.thenImpl = function(promise) {
    return function(errCB) {
      return function(succCB) {
        return function() {
          promise.then(succCB, errCB);
        };
      };
    };
  };
})(PS["Control.Promise"] = PS["Control.Promise"] || {});
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Control.Promise"] = $PS["Control.Promise"] || {};
  var exports = $PS["Control.Promise"];
  var $foreign = $PS["Control.Promise"];
  var Control_Alt = $PS["Control.Alt"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Category = $PS["Control.Category"];
  var Control_Monad_Except = $PS["Control.Monad.Except"];
  var Control_Monad_Except_Trans = $PS["Control.Monad.Except.Trans"];
  var Data_Either = $PS["Data.Either"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Identity = $PS["Data.Identity"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Effect = $PS["Effect"];
  var Effect_Aff = $PS["Effect.Aff"];
  var Effect_Class = $PS["Effect.Class"];
  var Effect_Exception = $PS["Effect.Exception"];
  var Foreign = $PS["Foreign"];                
  var toAff$prime = function (customCoerce) {
      return function (p) {
          return Effect_Aff.makeAff(function (cb) {
              return Data_Functor.voidRight(Effect.functorEffect)(Data_Monoid.mempty(Effect_Aff.monoidCanceler))($foreign.thenImpl(p)(function ($1) {
                  return cb(Data_Either.Left.create(customCoerce($1)))();
              })(function ($2) {
                  return cb(Data_Either.Right.create($2))();
              }));
          });
      };
  };
  var fromAff = function (aff) {
      return $foreign.promise(function (succ) {
          return function (err) {
              return Effect_Aff.runAff_(Data_Either.either(err)(succ))(aff);
          };
      });
  };
  var coerce = function (fn) {
      return Data_Either.either(function (v) {
          return Effect_Exception.error("Promise failed, couldn't extract JS Error or String");
      })(Control_Category.identity(Control_Category.categoryFn))(Control_Monad_Except.runExcept(Control_Alt.alt(Control_Monad_Except_Trans.altExceptT(Data_List_Types.semigroupNonEmptyList)(Data_Identity.monadIdentity))(Foreign.unsafeReadTagged(Data_Identity.monadIdentity)("Error")(fn))(Data_Functor.map(Control_Monad_Except_Trans.functorExceptT(Data_Identity.functorIdentity))(Effect_Exception.error)(Foreign.readString(Data_Identity.monadIdentity)(fn)))));
  };
  var toAff = toAff$prime(coerce);
  var toAffE = function (f) {
      return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(f))(toAff);
  };
  exports["fromAff"] = fromAff;
  exports["toAffE"] = toAffE;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Ctl.Internal.Cardano.Types.NativeScript"] = $PS["Ctl.Internal.Cardano.Types.NativeScript"] || {};
  var exports = $PS["Ctl.Internal.Cardano.Types.NativeScript"];
  var Ctl_Internal_Serialization_Address = $PS["Ctl.Internal.Serialization.Address"];
  var Ctl_Internal_Serialization_Hash = $PS["Ctl.Internal.Serialization.Hash"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Generic_Rep = $PS["Data.Generic.Rep"];
  var Data_Show = $PS["Data.Show"];
  var Data_Show_Generic = $PS["Data.Show.Generic"];                    
  var ScriptPubkey = (function () {
      function ScriptPubkey(value0) {
          this.value0 = value0;
      };
      ScriptPubkey.create = function (value0) {
          return new ScriptPubkey(value0);
      };
      return ScriptPubkey;
  })();
  var ScriptAll = (function () {
      function ScriptAll(value0) {
          this.value0 = value0;
      };
      ScriptAll.create = function (value0) {
          return new ScriptAll(value0);
      };
      return ScriptAll;
  })();
  var ScriptAny = (function () {
      function ScriptAny(value0) {
          this.value0 = value0;
      };
      ScriptAny.create = function (value0) {
          return new ScriptAny(value0);
      };
      return ScriptAny;
  })();
  var ScriptNOfK = (function () {
      function ScriptNOfK(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      ScriptNOfK.create = function (value0) {
          return function (value1) {
              return new ScriptNOfK(value0, value1);
          };
      };
      return ScriptNOfK;
  })();
  var TimelockStart = (function () {
      function TimelockStart(value0) {
          this.value0 = value0;
      };
      TimelockStart.create = function (value0) {
          return new TimelockStart(value0);
      };
      return TimelockStart;
  })();
  var TimelockExpiry = (function () {
      function TimelockExpiry(value0) {
          this.value0 = value0;
      };
      TimelockExpiry.create = function (value0) {
          return new TimelockExpiry(value0);
      };
      return TimelockExpiry;
  })();
  var genericNativeScript_ = {
      to: function (x) {
          if (x instanceof Data_Generic_Rep.Inl) {
              return new ScriptPubkey(x.value0);
          };
          if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inl) {
              return new ScriptAll(x.value0.value0);
          };
          if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0 instanceof Data_Generic_Rep.Inl)) {
              return new ScriptAny(x.value0.value0.value0);
          };
          if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0 instanceof Data_Generic_Rep.Inl))) {
              return new ScriptNOfK(x.value0.value0.value0.value0.value0, x.value0.value0.value0.value0.value1);
          };
          if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl)))) {
              return new TimelockStart(x.value0.value0.value0.value0.value0);
          };
          if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr)))) {
              return new TimelockExpiry(x.value0.value0.value0.value0.value0);
          };
          throw new Error("Failed pattern match at Ctl.Internal.Cardano.Types.NativeScript (line 48, column 1 - line 48, column 39): " + [ x.constructor.name ]);
      },
      from: function (x) {
          if (x instanceof ScriptPubkey) {
              return new Data_Generic_Rep.Inl(x.value0);
          };
          if (x instanceof ScriptAll) {
              return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0));
          };
          if (x instanceof ScriptAny) {
              return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0)));
          };
          if (x instanceof ScriptNOfK) {
              return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(new Data_Generic_Rep.Product(x.value0, x.value1)))));
          };
          if (x instanceof TimelockStart) {
              return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0)))));
          };
          if (x instanceof TimelockExpiry) {
              return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(x.value0)))));
          };
          throw new Error("Failed pattern match at Ctl.Internal.Cardano.Types.NativeScript (line 48, column 1 - line 48, column 39): " + [ x.constructor.name ]);
      }
  };
  var showNativeScript = {
      show: function (x) {
          return Data_Show_Generic.genericShow(genericNativeScript_)(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Ctl_Internal_Serialization_Hash.showEd25519KeyHash))({
              reflectSymbol: function () {
                  return "ScriptPubkey";
              }
          }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Data_Show.showArray(showNativeScript)))({
              reflectSymbol: function () {
                  return "ScriptAll";
              }
          }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Data_Show.showArray(showNativeScript)))({
              reflectSymbol: function () {
                  return "ScriptAny";
              }
          }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsProduct(Data_Show_Generic.genericShowArgsArgument(Data_Show.showInt))(Data_Show_Generic.genericShowArgsArgument(Data_Show.showArray(showNativeScript))))({
              reflectSymbol: function () {
                  return "ScriptNOfK";
              }
          }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Ctl_Internal_Serialization_Address.showSlot))({
              reflectSymbol: function () {
                  return "TimelockStart";
              }
          }))(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Ctl_Internal_Serialization_Address.showSlot))({
              reflectSymbol: function () {
                  return "TimelockExpiry";
              }
          })))))))(x);
      }
  };
  var eqNativeScript = {
      eq: function (x) {
          return function (y) {
              if (x instanceof ScriptPubkey && y instanceof ScriptPubkey) {
                  return Data_Eq.eq(Ctl_Internal_Serialization_Hash.eqEd25519KeyHash)(x.value0)(y.value0);
              };
              if (x instanceof ScriptAll && y instanceof ScriptAll) {
                  return Data_Eq.eq(Data_Eq.eqArray(eqNativeScript))(x.value0)(y.value0);
              };
              if (x instanceof ScriptAny && y instanceof ScriptAny) {
                  return Data_Eq.eq(Data_Eq.eqArray(eqNativeScript))(x.value0)(y.value0);
              };
              if (x instanceof ScriptNOfK && y instanceof ScriptNOfK) {
                  return x.value0 === y.value0 && Data_Eq.eq(Data_Eq.eqArray(eqNativeScript))(x.value1)(y.value1);
              };
              if (x instanceof TimelockStart && y instanceof TimelockStart) {
                  return Data_Eq.eq(Ctl_Internal_Serialization_Address.eqSlot)(x.value0)(y.value0);
              };
              if (x instanceof TimelockExpiry && y instanceof TimelockExpiry) {
                  return Data_Eq.eq(Ctl_Internal_Serialization_Address.eqSlot)(x.value0)(y.value0);
              };
              return false;
          };
      }
  };
  exports["ScriptPubkey"] = ScriptPubkey;
  exports["ScriptAll"] = ScriptAll;
  exports["ScriptAny"] = ScriptAny;
  exports["ScriptNOfK"] = ScriptNOfK;
  exports["TimelockStart"] = TimelockStart;
  exports["TimelockExpiry"] = TimelockExpiry;
  exports["eqNativeScript"] = eqNativeScript;
  exports["showNativeScript"] = showNativeScript;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Ctl.Internal.Types.Scripts"] = $PS["Ctl.Internal.Types.Scripts"] || {};
  var exports = $PS["Ctl.Internal.Types.Scripts"];
  var Ctl_Internal_Cardano_Types_NativeScript = $PS["Ctl.Internal.Cardano.Types.NativeScript"];
  var Ctl_Internal_Serialization_Hash = $PS["Ctl.Internal.Serialization.Hash"];
  var Ctl_Internal_Types_ByteArray = $PS["Ctl.Internal.Types.ByteArray"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Generic_Rep = $PS["Data.Generic.Rep"];
  var Data_Ordering = $PS["Data.Ordering"];
  var Data_Show_Generic = $PS["Data.Show.Generic"];
  var Data_Tuple = $PS["Data.Tuple"];                
  var ValidatorHash = function (x) {
      return x;
  };
  var MintingPolicyHash = function (x) {
      return x;
  };
  var PlutusV1 = (function () {
      function PlutusV1() {

      };
      PlutusV1.value = new PlutusV1();
      return PlutusV1;
  })();
  var PlutusV2 = (function () {
      function PlutusV2() {

      };
      PlutusV2.value = new PlutusV2();
      return PlutusV2;
  })();
  var PlutusScript = function (x) {
      return x;
  };
  var PlutusMintingPolicy = (function () {
      function PlutusMintingPolicy(value0) {
          this.value0 = value0;
      };
      PlutusMintingPolicy.create = function (value0) {
          return new PlutusMintingPolicy(value0);
      };
      return PlutusMintingPolicy;
  })();
  var NativeMintingPolicy = (function () {
      function NativeMintingPolicy(value0) {
          this.value0 = value0;
      };
      NativeMintingPolicy.create = function (value0) {
          return new NativeMintingPolicy(value0);
      };
      return NativeMintingPolicy;
  })();                                                                          
  var ordValidatorHash = Ctl_Internal_Serialization_Hash.ordScriptHash;     
  var ordMintingPolicyHash = Ctl_Internal_Serialization_Hash.ordScriptHash;
  var genericValidator_ = {
      to: function (x) {
          return x;
      },
      from: function (x) {
          return x;
      }
  };
  var genericValidatorHash_ = {
      to: function (x) {
          return x;
      },
      from: function (x) {
          return x;
      }
  };
  var showValidatorHash = {
      show: Data_Show_Generic.genericShow(genericValidatorHash_)(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Ctl_Internal_Serialization_Hash.showScriptHash))({
          reflectSymbol: function () {
              return "ValidatorHash";
          }
      }))
  };
  var genericStakeValidatorHash = {
      to: function (x) {
          return x;
      },
      from: function (x) {
          return x;
      }
  };
  var showStakeValidatorHash = {
      show: Data_Show_Generic.genericShow(genericStakeValidatorHash)(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Ctl_Internal_Serialization_Hash.showScriptHash))({
          reflectSymbol: function () {
              return "StakeValidatorHash";
          }
      }))
  };
  var genericPlutusScript_ = {
      to: function (x) {
          return x;
      },
      from: function (x) {
          return x;
      }
  };
  var genericPlutusScriptStakeV = {
      to: function (x) {
          return x;
      },
      from: function (x) {
          return x;
      }
  };
  var genericNativeScriptStakeV = {
      to: function (x) {
          return x;
      },
      from: function (x) {
          return x;
      }
  };
  var showNativeScriptStakeVali = {
      show: Data_Show_Generic.genericShow(genericNativeScriptStakeV)(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Ctl_Internal_Cardano_Types_NativeScript.showNativeScript))({
          reflectSymbol: function () {
              return "NativeScriptStakeValidator";
          }
      }))
  };
  var genericMintingPolicy_ = {
      to: function (x) {
          if (x instanceof Data_Generic_Rep.Inl) {
              return new PlutusMintingPolicy(x.value0);
          };
          if (x instanceof Data_Generic_Rep.Inr) {
              return new NativeMintingPolicy(x.value0);
          };
          throw new Error("Failed pattern match at Ctl.Internal.Types.Scripts (line 110, column 1 - line 110, column 40): " + [ x.constructor.name ]);
      },
      from: function (x) {
          if (x instanceof PlutusMintingPolicy) {
              return new Data_Generic_Rep.Inl(x.value0);
          };
          if (x instanceof NativeMintingPolicy) {
              return new Data_Generic_Rep.Inr(x.value0);
          };
          throw new Error("Failed pattern match at Ctl.Internal.Types.Scripts (line 110, column 1 - line 110, column 40): " + [ x.constructor.name ]);
      }
  };
  var genericMintingPolicyHash_ = {
      to: function (x) {
          return x;
      },
      from: function (x) {
          return x;
      }
  };
  var showMintingPolicyHash = {
      show: Data_Show_Generic.genericShow(genericMintingPolicyHash_)(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Ctl_Internal_Serialization_Hash.showScriptHash))({
          reflectSymbol: function () {
              return "MintingPolicyHash";
          }
      }))
  };
  var genericLanguage_ = {
      to: function (x) {
          if (x instanceof Data_Generic_Rep.Inl) {
              return PlutusV1.value;
          };
          if (x instanceof Data_Generic_Rep.Inr) {
              return PlutusV2.value;
          };
          throw new Error("Failed pattern match at Ctl.Internal.Types.Scripts (line 52, column 1 - line 52, column 35): " + [ x.constructor.name ]);
      },
      from: function (x) {
          if (x instanceof PlutusV1) {
              return new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value);
          };
          if (x instanceof PlutusV2) {
              return new Data_Generic_Rep.Inr(Data_Generic_Rep.NoArguments.value);
          };
          throw new Error("Failed pattern match at Ctl.Internal.Types.Scripts (line 52, column 1 - line 52, column 35): " + [ x.constructor.name ]);
      }
  };
  var showLanguage = {
      show: Data_Show_Generic.genericShow(genericLanguage_)(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsNoArguments)({
          reflectSymbol: function () {
              return "PlutusV1";
          }
      }))(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsNoArguments)({
          reflectSymbol: function () {
              return "PlutusV2";
          }
      })))
  };
  var showPlutusScript = {
      show: Data_Show_Generic.genericShow(genericPlutusScript_)(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Data_Tuple.showTuple(Ctl_Internal_Types_ByteArray.showByteArray)(showLanguage)))({
          reflectSymbol: function () {
              return "PlutusScript";
          }
      }))
  };
  var showMintingPolicy = {
      show: Data_Show_Generic.genericShow(genericMintingPolicy_)(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(showPlutusScript))({
          reflectSymbol: function () {
              return "PlutusMintingPolicy";
          }
      }))(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Ctl_Internal_Cardano_Types_NativeScript.showNativeScript))({
          reflectSymbol: function () {
              return "NativeMintingPolicy";
          }
      })))
  };
  var showPlutusScriptStakeVali = {
      show: Data_Show_Generic.genericShow(genericPlutusScriptStakeV)(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(showPlutusScript))({
          reflectSymbol: function () {
              return "PlutusScriptStakeValidator";
          }
      }))
  };
  var showValidator = {
      show: Data_Show_Generic.genericShow(genericValidator_)(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(showPlutusScript))({
          reflectSymbol: function () {
              return "Validator";
          }
      }))
  };                                                                     
  var eqLanguage = {
      eq: function (x) {
          return function (y) {
              if (x instanceof PlutusV1 && y instanceof PlutusV1) {
                  return true;
              };
              if (x instanceof PlutusV2 && y instanceof PlutusV2) {
                  return true;
              };
              return false;
          };
      }
  };
  var eqPlutusScript = Data_Tuple.eqTuple(Ctl_Internal_Types_ByteArray.eqByteArray)(eqLanguage);
  var eqMintingPolicy = {
      eq: function (x) {
          return function (y) {
              if (x instanceof PlutusMintingPolicy && y instanceof PlutusMintingPolicy) {
                  return Data_Eq.eq(eqPlutusScript)(x.value0)(y.value0);
              };
              if (x instanceof NativeMintingPolicy && y instanceof NativeMintingPolicy) {
                  return Data_Eq.eq(Ctl_Internal_Cardano_Types_NativeScript.eqNativeScript)(x.value0)(y.value0);
              };
              return false;
          };
      }
  };
  var eqValidator = eqPlutusScript;
  var ordLanguage = {
      compare: function (x) {
          return function (y) {
              if (x instanceof PlutusV1 && y instanceof PlutusV1) {
                  return Data_Ordering.EQ.value;
              };
              if (x instanceof PlutusV1) {
                  return Data_Ordering.LT.value;
              };
              if (y instanceof PlutusV1) {
                  return Data_Ordering.GT.value;
              };
              if (x instanceof PlutusV2 && y instanceof PlutusV2) {
                  return Data_Ordering.EQ.value;
              };
              throw new Error("Failed pattern match at Ctl.Internal.Types.Scripts (line 51, column 1 - line 51, column 29): " + [ x.constructor.name, y.constructor.name ]);
          };
      },
      Eq0: function () {
          return eqLanguage;
      }
  };   
  var plutusV2Script = function (ba) {
      return new Data_Tuple.Tuple(ba, PlutusV2.value);
  };
  var plutusV1Script = function (ba) {
      return new Data_Tuple.Tuple(ba, PlutusV1.value);
  };
  exports["PlutusMintingPolicy"] = PlutusMintingPolicy;
  exports["NativeMintingPolicy"] = NativeMintingPolicy;
  exports["MintingPolicyHash"] = MintingPolicyHash;
  exports["PlutusScript"] = PlutusScript;
  exports["ValidatorHash"] = ValidatorHash;
  exports["PlutusV1"] = PlutusV1;
  exports["PlutusV2"] = PlutusV2;
  exports["plutusV1Script"] = plutusV1Script;
  exports["plutusV2Script"] = plutusV2Script;
  exports["ordLanguage"] = ordLanguage;
  exports["showLanguage"] = showLanguage;
  exports["eqPlutusScript"] = eqPlutusScript;
  exports["showPlutusScript"] = showPlutusScript;
  exports["eqMintingPolicy"] = eqMintingPolicy;
  exports["showMintingPolicy"] = showMintingPolicy;
  exports["eqValidator"] = eqValidator;
  exports["showValidator"] = showValidator;
  exports["showNativeScriptStakeVali"] = showNativeScriptStakeVali;
  exports["showPlutusScriptStakeVali"] = showPlutusScriptStakeVali;
  exports["ordMintingPolicyHash"] = ordMintingPolicyHash;
  exports["showMintingPolicyHash"] = showMintingPolicyHash;
  exports["ordValidatorHash"] = ordValidatorHash;
  exports["showValidatorHash"] = showValidatorHash;
  exports["showStakeValidatorHash"] = showStakeValidatorHash;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Ctl.Internal.Cardano.Types.ScriptRef"] = $PS["Ctl.Internal.Cardano.Types.ScriptRef"] || {};
  var exports = $PS["Ctl.Internal.Cardano.Types.ScriptRef"];
  var Ctl_Internal_Cardano_Types_NativeScript = $PS["Ctl.Internal.Cardano.Types.NativeScript"];
  var Ctl_Internal_Types_Scripts = $PS["Ctl.Internal.Types.Scripts"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Generic_Rep = $PS["Data.Generic.Rep"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Show_Generic = $PS["Data.Show.Generic"];                
  var NativeScriptRef = (function () {
      function NativeScriptRef(value0) {
          this.value0 = value0;
      };
      NativeScriptRef.create = function (value0) {
          return new NativeScriptRef(value0);
      };
      return NativeScriptRef;
  })();
  var PlutusScriptRef = (function () {
      function PlutusScriptRef(value0) {
          this.value0 = value0;
      };
      PlutusScriptRef.create = function (value0) {
          return new PlutusScriptRef(value0);
      };
      return PlutusScriptRef;
  })();
  var genericScriptRef_ = {
      to: function (x) {
          if (x instanceof Data_Generic_Rep.Inl) {
              return new NativeScriptRef(x.value0);
          };
          if (x instanceof Data_Generic_Rep.Inr) {
              return new PlutusScriptRef(x.value0);
          };
          throw new Error("Failed pattern match at Ctl.Internal.Cardano.Types.ScriptRef (line 38, column 1 - line 38, column 36): " + [ x.constructor.name ]);
      },
      from: function (x) {
          if (x instanceof NativeScriptRef) {
              return new Data_Generic_Rep.Inl(x.value0);
          };
          if (x instanceof PlutusScriptRef) {
              return new Data_Generic_Rep.Inr(x.value0);
          };
          throw new Error("Failed pattern match at Ctl.Internal.Cardano.Types.ScriptRef (line 38, column 1 - line 38, column 36): " + [ x.constructor.name ]);
      }
  };
  var showScriptRef = {
      show: Data_Show_Generic.genericShow(genericScriptRef_)(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Ctl_Internal_Cardano_Types_NativeScript.showNativeScript))({
          reflectSymbol: function () {
              return "NativeScriptRef";
          }
      }))(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Ctl_Internal_Types_Scripts.showPlutusScript))({
          reflectSymbol: function () {
              return "PlutusScriptRef";
          }
      })))
  };
  var eqScriptRef = {
      eq: function (x) {
          return function (y) {
              if (x instanceof NativeScriptRef && y instanceof NativeScriptRef) {
                  return Data_Eq.eq(Ctl_Internal_Cardano_Types_NativeScript.eqNativeScript)(x.value0)(y.value0);
              };
              if (x instanceof PlutusScriptRef && y instanceof PlutusScriptRef) {
                  return Data_Eq.eq(Ctl_Internal_Types_Scripts.eqPlutusScript)(x.value0)(y.value0);
              };
              return false;
          };
      }
  };
  var getPlutusScript = function (v) {
      if (v instanceof PlutusScriptRef) {
          return new Data_Maybe.Just(v.value0);
      };
      return Data_Maybe.Nothing.value;
  };
  exports["NativeScriptRef"] = NativeScriptRef;
  exports["PlutusScriptRef"] = PlutusScriptRef;
  exports["getPlutusScript"] = getPlutusScript;
  exports["eqScriptRef"] = eqScriptRef;
  exports["showScriptRef"] = showScriptRef;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Control.Alternative"] = $PS["Control.Alternative"] || {};
  var exports = $PS["Control.Alternative"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Plus = $PS["Control.Plus"];
  var Data_Unit = $PS["Data.Unit"];                
  var guard = function (dictAlternative) {
      return function (v) {
          if (v) {
              return Control_Applicative.pure(dictAlternative.Applicative0())(Data_Unit.unit);
          };
          if (!v) {
              return Control_Plus.empty(dictAlternative.Plus1());
          };
          throw new Error("Failed pattern match at Control.Alternative (line 48, column 1 - line 48, column 54): " + [ v.constructor.name ]);
      };
  };
  exports["guard"] = guard;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Data.Array.NonEmpty.Internal"] = $PS["Data.Array.NonEmpty.Internal"] || {};
  var exports = $PS["Data.Array.NonEmpty.Internal"];
  var Control_Bind = $PS["Control.Bind"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Traversable = $PS["Data.Traversable"];                
  var NonEmptyArray = function (x) {
      return x;
  };                                                                                          
  var traversableNonEmptyArray = Data_Traversable.traversableArray;               
  var functorNonEmptyArray = Data_Functor.functorArray;                              
  var foldableNonEmptyArray = Data_Foldable.foldableArray;
  var bindNonEmptyArray = Control_Bind.bindArray;
  exports["NonEmptyArray"] = NonEmptyArray;
  exports["functorNonEmptyArray"] = functorNonEmptyArray;
  exports["foldableNonEmptyArray"] = foldableNonEmptyArray;
  exports["traversableNonEmptyArray"] = traversableNonEmptyArray;
  exports["bindNonEmptyArray"] = bindNonEmptyArray;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Data.Array.NonEmpty"] = $PS["Data.Array.NonEmpty"] || {};
  var exports = $PS["Data.Array.NonEmpty"];
  var Data_Array = $PS["Data.Array"];
  var Data_Array_NonEmpty_Internal = $PS["Data.Array.NonEmpty.Internal"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Semigroup = $PS["Data.Semigroup"];       
  var unsafeFromArray = Data_Array_NonEmpty_Internal.NonEmptyArray;
  var toArray = function (v) {
      return v;
  };
  var zip = function (xs) {
      return function (ys) {
          return unsafeFromArray(Data_Array.zip(toArray(xs))(toArray(ys)));
      };
  };
  var zipWith = function (f) {
      return function (xs) {
          return function (ys) {
              return unsafeFromArray(Data_Array.zipWith(f)(toArray(xs))(toArray(ys)));
          };
      };
  };
  var singleton = function ($56) {
      return unsafeFromArray(Data_Array.singleton($56));
  };
  var replicate = function (i) {
      return function (x) {
          return unsafeFromArray(Data_Array.replicate(Data_Ord.max(Data_Ord.ordInt)(1)(i))(x));
      };
  };
  var range = function (x) {
      return function (y) {
          return unsafeFromArray(Data_Array.range(x)(y));
      };
  };
  var fromArray = function (xs) {
      if (Data_Array.length(xs) > 0) {
          return new Data_Maybe.Just(unsafeFromArray(xs));
      };
      if (Data_Boolean.otherwise) {
          return Data_Maybe.Nothing.value;
      };
      throw new Error("Failed pattern match at Data.Array.NonEmpty (line 159, column 1 - line 159, column 58): " + [ xs.constructor.name ]);
  };
  var cons$prime = function (x) {
      return function (xs) {
          return unsafeFromArray(Data_Array.cons(x)(xs));
      };
  };   
  var appendArray = function (xs) {
      return function (ys) {
          return unsafeFromArray(Data_Semigroup.append(Data_Semigroup.semigroupArray)(toArray(xs))(ys));
      };
  };
  var adaptMaybe = function (f) {
      var $71 = Data_Maybe.fromJust();
      return function ($72) {
          return $71(f(toArray($72)));
      };
  };                                     
  var uncons = adaptMaybe(Data_Array.uncons);
  var adaptAny = function (f) {
      return function ($74) {
          return f(toArray($74));
      };
  };                                     
  var length = adaptAny(Data_Array.length);
  var unsafeAdapt = function (f) {
      var $75 = adaptAny(f);
      return function ($76) {
          return unsafeFromArray($75($76));
      };
  };
  var cons = function (x) {
      return unsafeAdapt(Data_Array.cons(x));
  };
  var sortBy = function (f) {
      return unsafeAdapt(Data_Array.sortBy(f));
  };
  var sortWith = function (dictOrd) {
      return function (f) {
          return unsafeAdapt(Data_Array.sortWith(dictOrd)(f));
      };
  };
  exports["fromArray"] = fromArray;
  exports["toArray"] = toArray;
  exports["singleton"] = singleton;
  exports["range"] = range;
  exports["replicate"] = replicate;
  exports["cons'"] = cons$prime;
  exports["appendArray"] = appendArray;
  exports["uncons"] = uncons;
  exports["sortBy"] = sortBy;
  exports["sortWith"] = sortWith;
  exports["zipWith"] = zipWith;
  exports["zip"] = zip;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Ctl.Internal.Partition"] = $PS["Ctl.Internal.Partition"] || {};
  var exports = $PS["Ctl.Internal.Partition"];
  var Data_Array = $PS["Data.Array"];
  var Data_Array_NonEmpty = $PS["Data.Array.NonEmpty"];
  var Data_Array_NonEmpty_Internal = $PS["Data.Array.NonEmpty.Internal"];
  var Data_BigInt = $PS["Data.BigInt"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_EuclideanRing = $PS["Data.EuclideanRing"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_HeytingAlgebra = $PS["Data.HeytingAlgebra"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Ordering = $PS["Data.Ordering"];
  var Data_Ring = $PS["Data.Ring"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Semiring = $PS["Data.Semiring"];
  var Data_Tuple = $PS["Data.Tuple"];                
  var QuotRem = function (x) {
      return x;
  };
  var eqQuotRem = function (dictEq) {
      return Data_Tuple.eqTuple(dictEq)(dictEq);
  };
  var ordQuotRem = function (dictOrd) {
      return {
          compare: function (v) {
              return function (v1) {
                  var v2 = Data_Ord.compare(dictOrd)(v.value1)(v1.value1);
                  if (v2 instanceof Data_Ordering.EQ) {
                      return Data_Ord.compare(dictOrd)(v.value0)(v1.value0);
                  };
                  return v2;
              };
          },
          Eq0: function () {
              return eqQuotRem(dictOrd.Eq0());
          }
      };
  };
  var toIntUnsafe = (function () {
      var $31 = Data_Maybe.fromJust();
      return function ($32) {
          return $31(Data_BigInt.toInt($32));
      };
  })();
  var quotRem = function (dictEuclideanRing) {
      return function (a) {
          return function (b) {
              return new Data_Tuple.Tuple(Data_EuclideanRing.div(dictEuclideanRing)(a)(b), Data_EuclideanRing.mod(dictEuclideanRing)(a)(b));
          };
      };
  };
  var equipartitionBigInt = {
      equipartition: function (bi) {
          return function (numParts) {
              if (numParts <= 1) {
                  return Data_Array_NonEmpty.singleton(bi);
              };
              if (Data_Boolean.otherwise) {
                  var v = Data_Functor.map(Data_Tuple.functorTuple)(toIntUnsafe)(quotRem(Data_BigInt.euclideanRingBigInt)(bi)(Data_BigInt.fromInt(numParts)));
                  return Data_Array_NonEmpty.appendArray(Data_Array_NonEmpty.replicate(numParts - v.value1 | 0)(v.value0))(Data_Array.replicate(v.value1)(Data_Semiring.add(Data_BigInt.semiringBigInt)(v.value0)(Data_Semiring.one(Data_BigInt.semiringBigInt))));
              };
              throw new Error("Failed pattern match at Ctl.Internal.Partition (line 102, column 1 - line 111, column 61): " + [ bi.constructor.name, numParts.constructor.name ]);
          };
      }
  };
  var partition = function (dict) {
      return dict.partition;
  };
  var fromArrayUnsafe = (function () {
      var $33 = Data_Maybe.fromJust();
      return function ($34) {
          return $33(Data_Array_NonEmpty.fromArray($34));
      };
  })();
  var partitionBigInt = {
      partition: function (target) {
          return function (weights) {
              if (Data_Foldable.any(Data_Array_NonEmpty_Internal.foldableNonEmptyArray)(Data_HeytingAlgebra.heytingAlgebraBoolean)(function (v) {
                  return Data_Ord.lessThan(Data_BigInt.ordBigInt)(v)(Data_Semiring.zero(Data_BigInt.semiringBigInt));
              })(weights)) {
                  return Data_Maybe.Nothing.value;
              };
              if (Data_Eq.eq(Data_BigInt.eqBigInt)(Data_Foldable.sum(Data_Array_NonEmpty_Internal.foldableNonEmptyArray)(Data_BigInt.semiringBigInt)(weights))(Data_Semiring.zero(Data_BigInt.semiringBigInt))) {
                  return Data_Maybe.Nothing.value;
              };
              if (Data_Boolean.otherwise) {
                  var sumWeights = Data_Foldable.sum(Data_Array_NonEmpty_Internal.foldableNonEmptyArray)(Data_BigInt.semiringBigInt)(weights);
                  var portionsUnrounded = Data_Functor.mapFlipped(Data_Array_NonEmpty_Internal.functorNonEmptyArray)(weights)(function (w) {
                      return quotRem(Data_BigInt.euclideanRingBigInt)(Data_Semiring.mul(Data_BigInt.semiringBigInt)(target)(w))(sumWeights);
                  });
                  var shortfall = toIntUnsafe(Data_Ring.sub(Data_BigInt.ringBigInt)(target)(Data_Foldable.sum(Data_Array_NonEmpty_Internal.foldableNonEmptyArray)(Data_BigInt.semiringBigInt)(Data_Functor.map(Data_Array_NonEmpty_Internal.functorNonEmptyArray)(Data_Tuple.fst)(portionsUnrounded))));
                  var round = function (portions) {
                      return Data_Array_NonEmpty.zipWith(Data_Semiring.add(Data_Tuple.semiringTuple(Data_Semiring.semiringInt)(Data_BigInt.semiringBigInt)))(Data_Functor.map(Data_Array_NonEmpty_Internal.functorNonEmptyArray)(Data_Functor.map(Data_Tuple.functorTuple)((function () {
                          var $35 = Data_Newtype.unwrap();
                          return function ($36) {
                              return Data_Tuple.fst($35($36));
                          };
                      })()))(portions))(fromArrayUnsafe(Data_Semigroup.append(Data_Semigroup.semigroupArray)(Data_Array.replicate(shortfall)(Data_Semiring.one(Data_Tuple.semiringTuple(Data_Semiring.semiringInt)(Data_BigInt.semiringBigInt))))(Data_Array.replicate(Data_Foldable.length(Data_Array_NonEmpty_Internal.foldableNonEmptyArray)(Data_Semiring.semiringInt)(portions) - shortfall | 0)(Data_Semiring.zero(Data_Tuple.semiringTuple(Data_Semiring.semiringInt)(Data_BigInt.semiringBigInt))))));
                  };
                  var portionsRounded = Data_Functor.map(Data_Array_NonEmpty_Internal.functorNonEmptyArray)(Data_Tuple.snd)(Data_Array_NonEmpty.sortBy(Data_Ord.comparing(Data_Ord.ordInt)(Data_Tuple.fst))(round(Data_Array_NonEmpty.sortBy(Data_Function.on(function (x) {
                      var $37 = Data_Ord.compare(ordQuotRem(Data_BigInt.ordBigInt))(x);
                      return function ($38) {
                          return Data_Ordering.invert($37($38));
                      };
                  })(Data_Tuple.snd))(Data_Array_NonEmpty.zip(Data_Array_NonEmpty.range(1)(Data_Foldable.length(Data_Array_NonEmpty_Internal.foldableNonEmptyArray)(Data_Semiring.semiringInt)(portionsUnrounded)))(Data_Functor.map(Data_Array_NonEmpty_Internal.functorNonEmptyArray)(QuotRem)(portionsUnrounded))))));
                  return new Data_Maybe.Just(portionsRounded);
              };
              throw new Error("Failed pattern match at Ctl.Internal.Partition (line 42, column 1 - line 91, column 33): " + [ target.constructor.name, weights.constructor.name ]);
          };
      }
  };
  var equipartition = function (dict) {
      return dict.equipartition;
  };
  exports["equipartition"] = equipartition;
  exports["partition"] = partition;
  exports["partitionBigInt"] = partitionBigInt;
  exports["equipartitionBigInt"] = equipartitionBigInt;
})(PS);
(function(exports) {
  /* global BROWSER_RUNTIME */

  // `TextDecoder` is not available in `node`, use polyfill in that case
  let OurTextDecoder;
  if (typeof BROWSER_RUNTIME == "undefined" || !BROWSER_RUNTIME) {
    OurTextDecoder = require("util").TextDecoder;
  } else {
    OurTextDecoder = TextDecoder;
  } 

  // FIXME: https://github.com/Plutonomicon/cardano-transaction-lib/issues/548
  const call = property => object => object[property]();
  exports.assetNameName = call("name");
})(PS["Ctl.Internal.Types.TokenName"] = PS["Ctl.Internal.Types.TokenName"] || {});
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Ctl.Internal.Types.PlutusData"] = $PS["Ctl.Internal.Types.PlutusData"] || {};
  var exports = $PS["Ctl.Internal.Types.PlutusData"];
  var Ctl_Internal_Types_BigNum = $PS["Ctl.Internal.Types.BigNum"];
  var Ctl_Internal_Types_ByteArray = $PS["Ctl.Internal.Types.ByteArray"];
  var Data_BigInt = $PS["Data.BigInt"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Generic_Rep = $PS["Data.Generic.Rep"];
  var Data_Show = $PS["Data.Show"];
  var Data_Show_Generic = $PS["Data.Show.Generic"];
  var Data_Tuple = $PS["Data.Tuple"];                
  var Constr = (function () {
      function Constr(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Constr.create = function (value0) {
          return function (value1) {
              return new Constr(value0, value1);
          };
      };
      return Constr;
  })();
  var $$Map = (function () {
      function $$Map(value0) {
          this.value0 = value0;
      };
      $$Map.create = function (value0) {
          return new $$Map(value0);
      };
      return $$Map;
  })();
  var List = (function () {
      function List(value0) {
          this.value0 = value0;
      };
      List.create = function (value0) {
          return new List(value0);
      };
      return List;
  })();
  var Integer = (function () {
      function Integer(value0) {
          this.value0 = value0;
      };
      Integer.create = function (value0) {
          return new Integer(value0);
      };
      return Integer;
  })();
  var Bytes = (function () {
      function Bytes(value0) {
          this.value0 = value0;
      };
      Bytes.create = function (value0) {
          return new Bytes(value0);
      };
      return Bytes;
  })();
  var genericPlutusData_ = {
      to: function (x) {
          if (x instanceof Data_Generic_Rep.Inl) {
              return new Constr(x.value0.value0, x.value0.value1);
          };
          if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inl) {
              return new $$Map(x.value0.value0);
          };
          if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0 instanceof Data_Generic_Rep.Inl)) {
              return new List(x.value0.value0.value0);
          };
          if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0 instanceof Data_Generic_Rep.Inl))) {
              return new Integer(x.value0.value0.value0.value0);
          };
          if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0 instanceof Data_Generic_Rep.Inr))) {
              return new Bytes(x.value0.value0.value0.value0);
          };
          throw new Error("Failed pattern match at Ctl.Internal.Types.PlutusData (line 44, column 1 - line 44, column 37): " + [ x.constructor.name ]);
      },
      from: function (x) {
          if (x instanceof Constr) {
              return new Data_Generic_Rep.Inl(new Data_Generic_Rep.Product(x.value0, x.value1));
          };
          if (x instanceof $$Map) {
              return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0));
          };
          if (x instanceof List) {
              return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0)));
          };
          if (x instanceof Integer) {
              return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0))));
          };
          if (x instanceof Bytes) {
              return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(x.value0))));
          };
          throw new Error("Failed pattern match at Ctl.Internal.Types.PlutusData (line 44, column 1 - line 44, column 37): " + [ x.constructor.name ]);
      }
  };
  var showPlutusData = {
      show: function (x) {
          return Data_Show_Generic.genericShow(genericPlutusData_)(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsProduct(Data_Show_Generic.genericShowArgsArgument(Ctl_Internal_Types_BigNum.showBigNum))(Data_Show_Generic.genericShowArgsArgument(Data_Show.showArray(showPlutusData))))({
              reflectSymbol: function () {
                  return "Constr";
              }
          }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Data_Show.showArray(Data_Tuple.showTuple(showPlutusData)(showPlutusData))))({
              reflectSymbol: function () {
                  return "Map";
              }
          }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Data_Show.showArray(showPlutusData)))({
              reflectSymbol: function () {
                  return "List";
              }
          }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Data_BigInt.showBigInt))({
              reflectSymbol: function () {
                  return "Integer";
              }
          }))(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Ctl_Internal_Types_ByteArray.showByteArray))({
              reflectSymbol: function () {
                  return "Bytes";
              }
          }))))))(x);
      }
  };
  var eqPlutusData = {
      eq: function (x) {
          return function (y) {
              if (x instanceof Constr && y instanceof Constr) {
                  return Data_Eq.eq(Ctl_Internal_Types_BigNum.eqBigNum)(x.value0)(y.value0) && Data_Eq.eq(Data_Eq.eqArray(eqPlutusData))(x.value1)(y.value1);
              };
              if (x instanceof $$Map && y instanceof $$Map) {
                  return Data_Eq.eq(Data_Eq.eqArray(Data_Tuple.eqTuple(eqPlutusData)(eqPlutusData)))(x.value0)(y.value0);
              };
              if (x instanceof List && y instanceof List) {
                  return Data_Eq.eq(Data_Eq.eqArray(eqPlutusData))(x.value0)(y.value0);
              };
              if (x instanceof Integer && y instanceof Integer) {
                  return Data_Eq.eq(Data_BigInt.eqBigInt)(x.value0)(y.value0);
              };
              if (x instanceof Bytes && y instanceof Bytes) {
                  return Data_Eq.eq(Ctl_Internal_Types_ByteArray.eqByteArray)(x.value0)(y.value0);
              };
              return false;
          };
      }
  };
  exports["Constr"] = Constr;
  exports["Map"] = $$Map;
  exports["List"] = List;
  exports["Integer"] = Integer;
  exports["Bytes"] = Bytes;
  exports["eqPlutusData"] = eqPlutusData;
  exports["showPlutusData"] = showPlutusData;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Data.Void"] = $PS["Data.Void"] || {};
  var exports = $PS["Data.Void"];
  var absurd = function (a) {
      var spin = function ($copy_v) {
          var $tco_result;
          function $tco_loop(v) {
              $copy_v = v;
              return;
          };
          while (!false) {
              $tco_result = $tco_loop($copy_v);
          };
          return $tco_result;
      };
      return spin(a);
  };
  exports["absurd"] = absurd;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Ctl.Internal.ToData"] = $PS["Ctl.Internal.ToData"] || {};
  var exports = $PS["Ctl.Internal.ToData"];
  var Ctl_Internal_Types_BigNum = $PS["Ctl.Internal.Types.BigNum"];
  var Ctl_Internal_Types_PlutusData = $PS["Ctl.Internal.Types.PlutusData"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Void = $PS["Data.Void"];                  
  var toDataVoid = {
      toData: Data_Void.absurd
  };
  var toDataUnit = {
      toData: function (v) {
          return new Ctl_Internal_Types_PlutusData.Constr(Ctl_Internal_Types_BigNum.zero, [  ]);
      }
  };
  var toDataRawBytes = {
      toData: (function () {
          var $122 = Data_Newtype.unwrap();
          return function ($123) {
              return Ctl_Internal_Types_PlutusData.Bytes.create($122($123));
          };
      })()
  };
  var toData = function (dict) {
      return dict.toData;
  };
  exports["toData"] = toData;
  exports["toDataVoid"] = toDataVoid;
  exports["toDataUnit"] = toDataUnit;
  exports["toDataRawBytes"] = toDataRawBytes;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Ctl.Internal.Types.TokenName"] = $PS["Ctl.Internal.Types.TokenName"] || {};
  var exports = $PS["Ctl.Internal.Types.TokenName"];
  var $foreign = $PS["Ctl.Internal.Types.TokenName"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Ctl_Internal_ToData = $PS["Ctl.Internal.ToData"];
  var Ctl_Internal_Types_ByteArray = $PS["Ctl.Internal.Types.ByteArray"];
  var Ctl_Internal_Types_RawBytes = $PS["Ctl.Internal.Types.RawBytes"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Show = $PS["Data.Show"];                                        
  var toDataTokenName = Ctl_Internal_ToData.toDataRawBytes;
  var showTokenName = {
      show: function (v) {
          return "(TokenName " + (Data_Show.show(Ctl_Internal_Types_RawBytes.showRawBytes)(v) + ")");
      }
  };
  var ordTokenName = Ctl_Internal_Types_RawBytes.ordRawBytes;    
  var eqTokenName = Ctl_Internal_Types_RawBytes.eqRawBytes;
  var mkTokenName = function (byteArr) {
      if (Ctl_Internal_Types_ByteArray.byteLength(byteArr) <= 32) {
          return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(Data_Newtype.wrap()(byteArr));
      };
      if (Data_Boolean.otherwise) {
          return Data_Maybe.Nothing.value;
      };
      throw new Error("Failed pattern match at Ctl.Internal.Types.TokenName (line 106, column 1 - line 106, column 44): " + [ byteArr.constructor.name ]);
  };
  var getTokenName = function (v) {
      return Data_Newtype.unwrap()(v);
  };
  var adaToken = Data_Monoid.mempty(Ctl_Internal_Types_RawBytes.monoidRawBytes);
  exports["adaToken"] = adaToken;
  exports["getTokenName"] = getTokenName;
  exports["mkTokenName"] = mkTokenName;
  exports["eqTokenName"] = eqTokenName;
  exports["ordTokenName"] = ordTokenName;
  exports["toDataTokenName"] = toDataTokenName;
  exports["showTokenName"] = showTokenName;
  exports["assetNameName"] = $foreign.assetNameName;
})(PS);
(function(exports) {
  "use strict";

  exports.mapWithIndexArray = function (f) {
    return function (xs) {
      var l = xs.length;
      var result = Array(l);
      for (var i = 0; i < l; i++) {
        result[i] = f(i)(xs[i]);
      }
      return result;
    };
  };
})(PS["Data.FunctorWithIndex"] = PS["Data.FunctorWithIndex"] || {});
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Data.FunctorWithIndex"] = $PS["Data.FunctorWithIndex"] || {};
  var exports = $PS["Data.FunctorWithIndex"];
  var $foreign = $PS["Data.FunctorWithIndex"];
  var Data_Functor = $PS["Data.Functor"];          
  var mapWithIndex = function (dict) {
      return dict.mapWithIndex;
  };
  var functorWithIndexArray = {
      mapWithIndex: $foreign.mapWithIndexArray,
      Functor0: function () {
          return Data_Functor.functorArray;
      }
  };
  exports["mapWithIndex"] = mapWithIndex;
  exports["functorWithIndexArray"] = functorWithIndexArray;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Data.FoldableWithIndex"] = $PS["Data.FoldableWithIndex"] || {};
  var exports = $PS["Data.FoldableWithIndex"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_FunctorWithIndex = $PS["Data.FunctorWithIndex"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unit = $PS["Data.Unit"];                
  var foldrWithIndex = function (dict) {
      return dict.foldrWithIndex;
  };
  var traverseWithIndex_ = function (dictApplicative) {
      return function (dictFoldableWithIndex) {
          return function (f) {
              return foldrWithIndex(dictFoldableWithIndex)(function (i) {
                  var $164 = Control_Apply.applySecond(dictApplicative.Apply0());
                  var $165 = f(i);
                  return function ($166) {
                      return $164($165($166));
                  };
              })(Control_Applicative.pure(dictApplicative)(Data_Unit.unit));
          };
      };
  };
  var forWithIndex_ = function (dictApplicative) {
      return function (dictFoldableWithIndex) {
          return Data_Function.flip(traverseWithIndex_(dictApplicative)(dictFoldableWithIndex));
      };
  };
  var foldMapWithIndexDefaultR = function (dictFoldableWithIndex) {
      return function (dictMonoid) {
          return function (f) {
              return foldrWithIndex(dictFoldableWithIndex)(function (i) {
                  return function (x) {
                      return function (acc) {
                          return Data_Semigroup.append(dictMonoid.Semigroup0())(f(i)(x))(acc);
                      };
                  };
              })(Data_Monoid.mempty(dictMonoid));
          };
      };
  };
  var foldableWithIndexArray = {
      foldrWithIndex: function (f) {
          return function (z) {
              var $167 = Data_Foldable.foldr(Data_Foldable.foldableArray)(function (v) {
                  return function (y) {
                      return f(v.value0)(v.value1)(y);
                  };
              })(z);
              var $168 = Data_FunctorWithIndex.mapWithIndex(Data_FunctorWithIndex.functorWithIndexArray)(Data_Tuple.Tuple.create);
              return function ($169) {
                  return $167($168($169));
              };
          };
      },
      foldlWithIndex: function (f) {
          return function (z) {
              var $170 = Data_Foldable.foldl(Data_Foldable.foldableArray)(function (y) {
                  return function (v) {
                      return f(v.value0)(y)(v.value1);
                  };
              })(z);
              var $171 = Data_FunctorWithIndex.mapWithIndex(Data_FunctorWithIndex.functorWithIndexArray)(Data_Tuple.Tuple.create);
              return function ($172) {
                  return $170($171($172));
              };
          };
      },
      foldMapWithIndex: function (dictMonoid) {
          return foldMapWithIndexDefaultR(foldableWithIndexArray)(dictMonoid);
      },
      Foldable0: function () {
          return Data_Foldable.foldableArray;
      }
  };
  var foldMapWithIndex = function (dict) {
      return dict.foldMapWithIndex;
  };
  exports["foldrWithIndex"] = foldrWithIndex;
  exports["foldMapWithIndex"] = foldMapWithIndex;
  exports["forWithIndex_"] = forWithIndex_;
  exports["foldableWithIndexArray"] = foldableWithIndexArray;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Data.Lattice"] = $PS["Data.Lattice"] || {};
  var exports = $PS["Data.Lattice"];
  var join = function (dict) {
      return dict.join;
  };
  exports["join"] = join;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Data.These"] = $PS["Data.These"] || {};
  var exports = $PS["Data.These"];                   
  var This = (function () {
      function This(value0) {
          this.value0 = value0;
      };
      This.create = function (value0) {
          return new This(value0);
      };
      return This;
  })();
  var That = (function () {
      function That(value0) {
          this.value0 = value0;
      };
      That.create = function (value0) {
          return new That(value0);
      };
      return That;
  })();
  var Both = (function () {
      function Both(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Both.create = function (value0) {
          return function (value1) {
              return new Both(value0, value1);
          };
      };
      return Both;
  })();
  var these = function (v) {
      return function (v1) {
          return function (v2) {
              return function (v3) {
                  if (v3 instanceof This) {
                      return v(v3.value0);
                  };
                  if (v3 instanceof That) {
                      return v1(v3.value0);
                  };
                  if (v3 instanceof Both) {
                      return v2(v3.value0)(v3.value1);
                  };
                  throw new Error("Failed pattern match at Data.These (line 105, column 1 - line 105, column 79): " + [ v.constructor.name, v1.constructor.name, v2.constructor.name, v3.constructor.name ]);
              };
          };
      };
  };
  exports["This"] = This;
  exports["That"] = That;
  exports["Both"] = Both;
  exports["these"] = these;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Ctl.Internal.Cardano.Types.Value"] = $PS["Ctl.Internal.Cardano.Types.Value"] || {};
  var exports = $PS["Ctl.Internal.Cardano.Types.Value"];
  var Aeson = $PS["Aeson"];
  var Control_Alternative = $PS["Control.Alternative"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Ctl_Internal_Helpers = $PS["Ctl.Internal.Helpers"];
  var Ctl_Internal_Partition = $PS["Ctl.Internal.Partition"];
  var Ctl_Internal_Serialization_Hash = $PS["Ctl.Internal.Serialization.Hash"];
  var Ctl_Internal_Types_ByteArray = $PS["Ctl.Internal.Types.ByteArray"];
  var Ctl_Internal_Types_TokenName = $PS["Ctl.Internal.Types.TokenName"];
  var Data_Array = $PS["Data.Array"];
  var Data_Array_NonEmpty = $PS["Data.Array.NonEmpty"];
  var Data_Array_NonEmpty_Internal = $PS["Data.Array.NonEmpty.Internal"];
  var Data_Bifunctor = $PS["Data.Bifunctor"];
  var Data_BigInt = $PS["Data.BigInt"];
  var Data_Bitraversable = $PS["Data.Bitraversable"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_FoldableWithIndex = $PS["Data.FoldableWithIndex"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Generic_Rep = $PS["Data.Generic.Rep"];
  var Data_HeytingAlgebra = $PS["Data.HeytingAlgebra"];
  var Data_Int = $PS["Data.Int"];
  var Data_Lattice = $PS["Data.Lattice"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Map_Internal = $PS["Data.Map.Internal"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Ordering = $PS["Data.Ordering"];
  var Data_Ring = $PS["Data.Ring"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Semiring = $PS["Data.Semiring"];
  var Data_Show = $PS["Data.Show"];
  var Data_Show_Generic = $PS["Data.Show.Generic"];
  var Data_These = $PS["Data.These"];
  var Data_Traversable = $PS["Data.Traversable"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unfoldable = $PS["Data.Unfoldable"];
  var NonAdaAsset = function (x) {
      return x;
  };
  var Coin = function (x) {
      return x;
  };
  var Value = (function () {
      function Value(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Value.create = function (value0) {
          return function (value1) {
              return new Value(value0, value1);
          };
      };
      return Value;
  })();
  var AssetClass = (function () {
      function AssetClass(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      AssetClass.create = function (value0) {
          return function (value1) {
              return new AssetClass(value0, value1);
          };
      };
      return AssetClass;
  })();                                                          
  var splitCoin = {
      split: function (v) {
          var $166 = Data_Ord.lessThanOrEq(Data_BigInt.ordBigInt)(v)(Data_Semiring.zero(Data_BigInt.semiringBigInt));
          if ($166) {
              return new Data_Tuple.Tuple(Data_Ring.negate(Data_BigInt.ringBigInt)(v), Data_Semiring.zero(Data_BigInt.semiringBigInt));
          };
          return new Data_Tuple.Tuple(Data_Semiring.zero(Data_BigInt.semiringBigInt), v);
      }
  };
  var showCurrencySymbol = {
      show: function (v) {
          return "(CurrencySymbol " + (Data_Show.show(Ctl_Internal_Types_ByteArray.showByteArray)(v) + ")");
      }
  };
  var showNonAdaAsset = {
      show: function (v) {
          return "(NonAdaAsset " + (Data_Show.show(Data_Map_Internal.showMap(showCurrencySymbol)(Data_Map_Internal.showMap(Ctl_Internal_Types_TokenName.showTokenName)(Data_BigInt.showBigInt)))(v) + ")");
      }
  };
  var showCoin = {
      show: function (v) {
          return Ctl_Internal_Helpers.showWithParens(Data_BigInt.showBigInt)("Coin")(v);
      }
  };
  var semigroupCoin = {
      append: function (v) {
          return function (v1) {
              return Data_Semiring.add(Data_BigInt.semiringBigInt)(v)(v1);
          };
      }
  };
  var ordCurrencySymbol = Ctl_Internal_Types_ByteArray.ordByteArray;
  var negateCoin = {
      negation: (function () {
          var $419 = Data_Newtype.wrap();
          var $420 = Data_Ring.negate(Data_BigInt.ringBigInt);
          var $421 = Data_Newtype.unwrap();
          return function ($422) {
              return $419($420($421($422)));
          };
      })()
  };
  var monoidCoin = {
      mempty: Data_Semiring.zero(Data_BigInt.semiringBigInt),
      Semigroup0: function () {
          return semigroupCoin;
      }
  };
  var joinSemilatticeCoin = {
      join: function (v) {
          return function (v1) {
              return Data_Ord.max(Data_BigInt.ordBigInt)(v)(v1);
          };
      }
  };
  var genericValue_ = {
      to: function (x) {
          return new Value(x.value0, x.value1);
      },
      from: function (x) {
          return new Data_Generic_Rep.Product(x.value0, x.value1);
      }
  };
  var showValue = {
      show: Data_Show_Generic.genericShow(genericValue_)(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsProduct(Data_Show_Generic.genericShowArgsArgument(showCoin))(Data_Show_Generic.genericShowArgsArgument(showNonAdaAsset)))({
          reflectSymbol: function () {
              return "Value";
          }
      }))
  };                                                                   
  var equipartitionCoin = Ctl_Internal_Partition.equipartitionBigInt;
  var eqCurrencySymbol = Ctl_Internal_Types_ByteArray.eqByteArray;
  var eqNonAdaAsset = Data_Map_Internal.eqMap(eqCurrencySymbol)(Data_Map_Internal.eqMap(Ctl_Internal_Types_TokenName.eqTokenName)(Data_BigInt.eqBigInt));
  var eqCoin = Data_BigInt.eqBigInt;
  var eqValue = {
      eq: function (x) {
          return function (y) {
              return Data_Eq.eq(eqCoin)(x.value0)(y.value0) && Data_Eq.eq(eqNonAdaAsset)(x.value1)(y.value1);
          };
      }
  };
  var eqAssetClass = {
      eq: function (x) {
          return function (y) {
              return Data_Eq.eq(eqCurrencySymbol)(x.value0)(y.value0) && Data_Eq.eq(Ctl_Internal_Types_TokenName.eqTokenName)(x.value1)(y.value1);
          };
      }
  };
  var ordAssetClass = {
      compare: function (x) {
          return function (y) {
              var v = Data_Ord.compare(ordCurrencySymbol)(x.value0)(y.value0);
              if (v instanceof Data_Ordering.LT) {
                  return Data_Ordering.LT.value;
              };
              if (v instanceof Data_Ordering.GT) {
                  return Data_Ordering.GT.value;
              };
              return Data_Ord.compare(Ctl_Internal_Types_TokenName.ordTokenName)(x.value1)(y.value1);
          };
      },
      Eq0: function () {
          return eqAssetClass;
      }
  };
  var decodeAesonCoin = Aeson.decodeAesonBigInt;
  var unwrapNonAdaAsset = function (v) {
      return v;
  };
  var negateNonAdaAsset = {
      negation: (function () {
          var $424 = Data_Functor.map(Data_Map_Internal.functorMap)(Data_Functor.map(Data_Map_Internal.functorMap)(Data_Ring.negate(Data_BigInt.ringBigInt)));
          return function ($425) {
              return NonAdaAsset($424(unwrapNonAdaAsset($425)));
          };
      })()
  };
  var unsafeAdaSymbol = Data_Monoid.mempty(Ctl_Internal_Types_ByteArray.monoidByteArray);
  var unsafeIsAda = function (curSymbol) {
      return function (tokenName) {
          return Data_Eq.eq(eqCurrencySymbol)(curSymbol)(unsafeAdaSymbol) && Data_Eq.eq(Ctl_Internal_Types_TokenName.eqTokenName)(tokenName)(Ctl_Internal_Types_TokenName.adaToken);
      };
  };
  var valueOf = function (v) {
      return function (curSymbol) {
          return function (tokenName) {
              var v1 = unsafeIsAda(curSymbol)(tokenName);
              if (!v1) {
                  var v2 = Data_Map_Internal.lookup(ordCurrencySymbol)(curSymbol)(v.value1);
                  if (v2 instanceof Data_Maybe.Nothing) {
                      return Data_Semiring.zero(Data_BigInt.semiringBigInt);
                  };
                  if (v2 instanceof Data_Maybe.Just) {
                      var v3 = Data_Map_Internal.lookup(Ctl_Internal_Types_TokenName.ordTokenName)(tokenName)(v2.value0);
                      if (v3 instanceof Data_Maybe.Nothing) {
                          return Data_Semiring.zero(Data_BigInt.semiringBigInt);
                      };
                      if (v3 instanceof Data_Maybe.Just) {
                          return v3.value0;
                      };
                      throw new Error("Failed pattern match at Ctl.Internal.Cardano.Types.Value (line 777, column 19 - line 779, column 22): " + [ v3.constructor.name ]);
                  };
                  throw new Error("Failed pattern match at Ctl.Internal.Cardano.Types.Value (line 775, column 7 - line 779, column 22): " + [ v2.constructor.name ]);
              };
              if (v1) {
                  return v.value0;
              };
              throw new Error("Failed pattern match at Ctl.Internal.Cardano.Types.Value (line 773, column 3 - line 780, column 22): " + [ v1.constructor.name ]);
          };
      };
  };
  var valueToCoin$prime = function (v) {
      return valueOf(v)(unsafeAdaSymbol)(Ctl_Internal_Types_TokenName.adaToken);
  };
  var valueToCoin = function ($427) {
      return Coin(valueToCoin$prime($427));
  };
  var union = function (dictOrd) {
      return function (l) {
          return function (r) {
              var rs = Data_Map_Internal.toUnfoldable(Data_Unfoldable.unfoldableArray)(r);
              var ls = Data_Map_Internal.toUnfoldable(Data_Unfoldable.unfoldableArray)(l);
              var rs$prime = Data_Array.filter(function (v) {
                  return !Data_Foldable.any(Data_Foldable.foldableArray)(Data_HeytingAlgebra.heytingAlgebraBoolean)(function (v1) {
                      return Data_Eq.eq(dictOrd.Eq0())(v1.value0)(v.value0);
                  })(ls);
              })(rs);
              var rs$prime$prime = Data_Functor.map(Data_Functor.functorArray)(Data_Functor.map(Data_Tuple.functorTuple)(Data_These.That.create))(rs$prime);
              var f = function (a) {
                  return function (b$prime) {
                      if (b$prime instanceof Data_Maybe.Nothing) {
                          return new Data_These.This(a);
                      };
                      if (b$prime instanceof Data_Maybe.Just) {
                          return new Data_These.Both(a, b$prime.value0);
                      };
                      throw new Error("Failed pattern match at Ctl.Internal.Cardano.Types.Value (line 584, column 14 - line 586, column 25): " + [ b$prime.constructor.name ]);
                  };
              };
              var ls$prime = Data_Functor.map(Data_Functor.functorArray)(function (v) {
                  return new Data_Tuple.Tuple(v.value0, f(v.value1)(Data_Map_Internal.lookup(dictOrd)(v.value0)(Data_Map_Internal.fromFoldable(dictOrd)(Data_Foldable.foldableArray)(rs))));
              })(ls);
              return Data_Map_Internal.fromFoldable(dictOrd)(Data_Foldable.foldableArray)(Data_Semigroup.append(Data_Semigroup.semigroupArray)(ls$prime)(rs$prime$prime));
          };
      };
  };
  var unionNonAda = function (v) {
      return function (v1) {
          var unBoth = function (k) {
              if (k instanceof Data_These.This) {
                  return Data_Functor.map(Data_Map_Internal.functorMap)(Data_These.This.create)(k.value0);
              };
              if (k instanceof Data_These.That) {
                  return Data_Functor.map(Data_Map_Internal.functorMap)(Data_These.That.create)(k.value0);
              };
              if (k instanceof Data_These.Both) {
                  return union(Ctl_Internal_Types_TokenName.ordTokenName)(k.value0)(k.value1);
              };
              throw new Error("Failed pattern match at Ctl.Internal.Cardano.Types.Value (line 615, column 16 - line 618, column 28): " + [ k.constructor.name ]);
          };
          var combined = union(ordCurrencySymbol)(v)(v1);
          return Data_Functor.map(Data_Map_Internal.functorMap)(unBoth)(combined);
      };
  };   
  var split = function (dict) {
      return dict.split;
  };   
  var negation = function (dict) {
      return dict.negation;
  };
  var negateValue = {
      negation: function (v) {
          return new Value(negation(negateCoin)(v.value0), negation(negateNonAdaAsset)(v.value1));
      }
  };
  var mkValue = Value.create;
  var mkCurrencySymbol = function (byteArr) {
      return Control_Apply.applySecond(Data_Maybe.applyMaybe)(Ctl_Internal_Serialization_Hash.scriptHashFromBytes(byteArr))(Control_Applicative.pure(Data_Maybe.applicativeMaybe)(byteArr));
  };
  var mkNonAdaAssetsFromTokenMap$prime = function (dictTraversable) {
      var $437 = Data_Functor.map(Data_Maybe.functorMaybe)(Data_Map_Internal.fromFoldable(ordCurrencySymbol)(dictTraversable.Foldable1()));
      var $438 = Data_Traversable.traverse(dictTraversable)(Data_Maybe.applicativeMaybe)(Data_Bitraversable.ltraverse(Data_Bitraversable.bitraversableTuple)(Data_Maybe.applicativeMaybe)(mkCurrencySymbol));
      return function ($439) {
          return $437($438($439));
      };
  };
  var mpsSymbol = function (v) {
      return mkCurrencySymbol(Data_Newtype.unwrap()(Ctl_Internal_Serialization_Hash.scriptHashToBytes(v)));
  };
  var mapThese = function (dictOrd) {
      return function (f) {
          return function (mps) {
              var mps$prime = Data_Functor.map(Data_Map_Internal.functorMap)(f)(mps);
              var f$prime = function (k) {
                  return function (v) {
                      return function (v1) {
                          if (v instanceof Data_These.This) {
                              return new Data_Tuple.Tuple(Data_Array.cons(new Data_Tuple.Tuple(k, v.value0))(v1.value0), v1.value1);
                          };
                          if (v instanceof Data_These.That) {
                              return new Data_Tuple.Tuple(v1.value0, Data_Array.cons(new Data_Tuple.Tuple(k, v.value0))(v1.value1));
                          };
                          if (v instanceof Data_These.Both) {
                              return new Data_Tuple.Tuple(Data_Array.cons(new Data_Tuple.Tuple(k, v.value0))(v1.value0), Data_Array.cons(new Data_Tuple.Tuple(k, v.value1))(v1.value1));
                          };
                          throw new Error("Failed pattern match at Ctl.Internal.Cardano.Types.Value (line 879, column 23 - line 882, column 57): " + [ v.constructor.name ]);
                      };
                  };
              };
              return Data_Bifunctor.bimap(Data_Bifunctor.bifunctorTuple)(Data_Map_Internal.fromFoldable(dictOrd)(Data_Foldable.foldableArray))(Data_Map_Internal.fromFoldable(dictOrd)(Data_Foldable.foldableArray))(Data_FoldableWithIndex.foldrWithIndex(Data_Map_Internal.foldableWithIndexMap)(f$prime)(new Data_Tuple.Tuple([  ], [  ]))(mps$prime));
          };
      };
  };
  var splitNonAdaAsset = {
      split: function (v) {
          var splitIntl = function (mp$prime) {
              var v1 = mapThese(Ctl_Internal_Types_TokenName.ordTokenName)(function (i) {
                  var $265 = Data_Ord.lessThanOrEq(Data_BigInt.ordBigInt)(i)(Data_Semiring.zero(Data_BigInt.semiringBigInt));
                  if ($265) {
                      return new Data_These.This(Data_Ring.negate(Data_BigInt.ringBigInt)(i));
                  };
                  return new Data_These.That(i);
              })(mp$prime);
              return new Data_These.Both(v1.value0, v1.value1);
          };
          var v1 = mapThese(ordCurrencySymbol)(splitIntl)(v);
          return new Data_Tuple.Tuple(v1.value0, v1.value1);
      }
  };
  var isZero = function (v) {
      return Data_Foldable.all(Data_Map_Internal.foldableMap)(Data_HeytingAlgebra.heytingAlgebraBoolean)(Data_Foldable.all(Data_Map_Internal.foldableMap)(Data_HeytingAlgebra.heytingAlgebraBoolean)(Data_Eq.eq(Data_BigInt.eqBigInt)(Data_Semiring.zero(Data_BigInt.semiringBigInt))))(v.value1) && Data_Eq.eq(eqCoin)(v.value0)(Data_Monoid.mempty(monoidCoin));
  };
  var getNonAdaAsset$prime = function (v) {
      return v.value1;
  };
  var getNonAdaAsset = function (v) {
      return v.value1;
  };
  var getLovelace = function (v) {
      return v;
  };
  var getCurrencySymbol = function (v) {
      return v;
  };
  var getAssetQuantity = function (v) {
      return function (value) {
          return valueOf(value)(v.value0)(v.value1);
      };
  };
  var flattenNonAdaValue = function (v) {
      return Control_Bind.bind(Data_List_Types.bindList)(Data_Map_Internal.toUnfoldable(Data_List_Types.unfoldableList)(v))(function (v1) {
          return Control_Bind.bind(Data_List_Types.bindList)(Data_Map_Internal.toUnfoldable(Data_List_Types.unfoldableList)(v1.value1))(function (v2) {
              return Control_Bind.discard(Control_Bind.discardUnit)(Data_List_Types.bindList)(Control_Alternative.guard(Data_List_Types.alternativeList)(Data_Eq.notEq(Data_BigInt.eqBigInt)(v2.value1)(Data_Semiring.zero(Data_BigInt.semiringBigInt))))(function () {
                  return Control_Applicative.pure(Data_List_Types.applicativeList)(new Data_Tuple.Tuple(v1.value0, new Data_Tuple.Tuple(v2.value0, v2.value1)));
              });
          });
      });
  };
  var unsafeFlattenValue = function (v) {
      var flattenedNonAda = flattenNonAdaValue(v.value1);
      var v1 = Data_Eq.eq(eqCoin)(v.value0)(Data_Monoid.mempty(monoidCoin));
      if (v1) {
          return flattenedNonAda;
      };
      if (!v1) {
          return new Data_List_Types.Cons(new Data_Tuple.Tuple(unsafeAdaSymbol, new Data_Tuple.Tuple(Ctl_Internal_Types_TokenName.adaToken, v.value0)), flattenedNonAda);
      };
      throw new Error("Failed pattern match at Ctl.Internal.Cardano.Types.Value (line 670, column 5 - line 672, column 76): " + [ v1.constructor.name ]);
  };   
  var valueAssets = function (v) {
      return Data_Functor.mapFlipped(Data_Functor.functorArray)(Data_Array.fromFoldable(Data_List_Types.foldableList)(flattenNonAdaValue(v.value1)))(function (v1) {
          return new Data_Tuple.Tuple(new AssetClass(v1.value0, v1.value1.value0), v1.value1.value1);
      });
  };
  var valueAssetClasses = (function () {
      var $449 = Data_Functor.map(Data_Functor.functorArray)(Data_Tuple.fst);
      return function ($450) {
          return $449(valueAssets($450));
      };
  })();
  var filterNonAdaAsset = function (p) {
      return function (v) {
          return Data_Map_Internal.filter(ordCurrencySymbol)(Data_HeytingAlgebra.not(Data_HeytingAlgebra.heytingAlgebraFunction(Data_HeytingAlgebra.heytingAlgebraBoolean))(Data_Map_Internal.isEmpty))(Data_Functor.map(Data_Map_Internal.functorMap)(Data_Map_Internal.filter(Ctl_Internal_Types_TokenName.ordTokenName)(p))(v));
      };
  };
  var normalizeNonAdaAsset = filterNonAdaAsset(Data_Eq.notEq(Data_BigInt.eqBigInt)(Data_Semiring.zero(Data_BigInt.semiringBigInt)));
  var mkNonAdaAsset = function ($451) {
      return normalizeNonAdaAsset(NonAdaAsset($451));
  };
  var mkNonAdaAssetsFromTokenMap = function (dictTraversable) {
      return function (xs) {
          return Data_Functor.mapFlipped(Data_Maybe.functorMaybe)(mkNonAdaAssetsFromTokenMap$prime(dictTraversable)(xs))(mkNonAdaAsset);
      };
  };
  var unionWithNonAda = function (f) {
      return function (ls) {
          return function (rs) {
              var unBoth = function (k$prime) {
                  if (k$prime instanceof Data_These.This) {
                      return f(k$prime.value0)(Data_Semiring.zero(Data_BigInt.semiringBigInt));
                  };
                  if (k$prime instanceof Data_These.That) {
                      return f(Data_Semiring.zero(Data_BigInt.semiringBigInt))(k$prime.value0);
                  };
                  if (k$prime instanceof Data_These.Both) {
                      return f(k$prime.value0)(k$prime.value1);
                  };
                  throw new Error("Failed pattern match at Ctl.Internal.Cardano.Types.Value (line 635, column 17 - line 638, column 24): " + [ k$prime.constructor.name ]);
              };
              var combined = unionNonAda(ls)(rs);
              return normalizeNonAdaAsset(Data_Functor.map(Data_Map_Internal.functorMap)(Data_Functor.map(Data_Map_Internal.functorMap)(unBoth))(combined));
          };
      };
  };
  var joinSemilatticeNonAdaAsse = {
      join: unionWithNonAda(Data_Ord.max(Data_BigInt.ordBigInt))
  };
  var joinSemilatticeValue = {
      join: function (v) {
          return function (v1) {
              return new Value(Data_Lattice.join(joinSemilatticeCoin)(v.value0)(v1.value0), Data_Lattice.join(joinSemilatticeNonAdaAsse)(v.value1)(v1.value1));
          };
      }
  };
  var semigroupNonAdaAsset = {
      append: unionWithNonAda(Data_Semiring.add(Data_BigInt.semiringBigInt))
  };
  var monoidNonAdaAsset = {
      mempty: Data_Map_Internal.empty,
      Semigroup0: function () {
          return semigroupNonAdaAsset;
      }
  };
  var lovelaceValueOf = Data_Function.flip(function ($452) {
      return Value.create(Coin($452));
  })(Data_Monoid.mempty(monoidNonAdaAsset));
  var mkSingletonNonAdaAsset = function (curSymbol) {
      return function (tokenName) {
          return function (amount) {
              if (Data_Eq.eq(Data_BigInt.eqBigInt)(amount)(Data_Semiring.zero(Data_BigInt.semiringBigInt))) {
                  return Data_Monoid.mempty(monoidNonAdaAsset);
              };
              if (Data_Boolean.otherwise) {
                  return Data_Map_Internal.singleton(curSymbol)(Data_Map_Internal.singleton(tokenName)(amount));
              };
              throw new Error("Failed pattern match at Ctl.Internal.Cardano.Types.Value (line 372, column 1 - line 376, column 17): " + [ curSymbol.constructor.name, tokenName.constructor.name, amount.constructor.name ]);
          };
      };
  };
  var mkSingletonValue$prime = function (curSymbol) {
      return function (tokenName) {
          return function (amount) {
              var isAdaCs = Data_Eq.eq(eqCurrencySymbol)(curSymbol)(unsafeAdaSymbol);
              return Control_Bind.discard(Control_Bind.discardUnit)(Data_Maybe.bindMaybe)(Control_Alternative.guard(Data_Maybe.alternativeMaybe)(!isAdaCs || isAdaCs && Data_Eq.eq(Ctl_Internal_Types_TokenName.eqTokenName)(tokenName)(Ctl_Internal_Types_TokenName.adaToken)))(function () {
                  return Control_Applicative.pure(Data_Maybe.applicativeMaybe)((function () {
                      if (isAdaCs) {
                          return new Value(amount, Data_Monoid.mempty(monoidNonAdaAsset));
                      };
                      return new Value(Data_Monoid.mempty(monoidCoin), mkSingletonNonAdaAsset(curSymbol)(tokenName)(amount));
                  })());
              });
          };
      };
  };
  var unflattenValue = function (v) {
      return mkSingletonValue$prime(v.value0)(v.value1.value0)(v.value1.value1);
  };
  var equipartitionNonAdaAsset = {
      equipartition: function (nonAdaAssets) {
          return function (numParts) {
              var accumulate = function (xs) {
                  return function (v) {
                      return Data_Array_NonEmpty.zipWith(Data_Semigroup.append(semigroupNonAdaAsset))(xs)(Data_Functor.map(Data_Array_NonEmpty_Internal.functorNonEmptyArray)(mkSingletonNonAdaAsset(v.value0)(v.value1.value0))(Ctl_Internal_Partition.equipartition(Ctl_Internal_Partition.equipartitionBigInt)(v.value1.value1)(numParts)));
                  };
              };
              return Data_Foldable.foldl(Data_List_Types.foldableList)(accumulate)(Data_Array_NonEmpty.replicate(numParts)(Data_Monoid.mempty(monoidNonAdaAsset)))(flattenNonAdaValue(nonAdaAssets));
          };
      }
  };
  var semigroupValue = {
      append: function (v) {
          return function (v1) {
              return new Value(Data_Semigroup.append(semigroupCoin)(v.value0)(v1.value0), Data_Semigroup.append(semigroupNonAdaAsset)(v.value1)(v1.value1));
          };
      }
  };
  var monoidValue = {
      mempty: new Value(Data_Monoid.mempty(monoidCoin), Data_Monoid.mempty(monoidNonAdaAsset)),
      Semigroup0: function () {
          return semigroupValue;
      }
  };
  var minus = function (lhs) {
      return function (rhs) {
          var negativeValues = Data_Functor.mapFlipped(Data_List_Types.functorList)(unsafeFlattenValue(rhs))(function (v) {
              return new Data_Tuple.Tuple(v.value0, new Data_Tuple.Tuple(v.value1.value0, Data_Ring.negate(Data_BigInt.ringBigInt)(v.value1.value1)));
          });
          return Data_Semigroup.append(semigroupValue)(lhs)(Data_Foldable.fold(Data_List_Types.foldableList)(monoidValue)(Data_Maybe.fromJust()(Data_Traversable.traverse(Data_List_Types.traversableList)(Data_Maybe.applicativeMaybe)(unflattenValue)(negativeValues))));
      };
  };
  var splitValue = {
      split: function (v) {
          return Data_Semigroup.append(Data_Tuple.semigroupTuple(semigroupValue)(semigroupValue))(Data_Bifunctor.bimap(Data_Bifunctor.bifunctorTuple)(Data_Function.flip(Value.create)(Data_Monoid.mempty(monoidNonAdaAsset)))(Data_Function.flip(Value.create)(Data_Monoid.mempty(monoidNonAdaAsset)))(split(splitCoin)(v.value0)))(Data_Bifunctor.bimap(Data_Bifunctor.bifunctorTuple)(Value.create(Data_Monoid.mempty(monoidCoin)))(Value.create(Data_Monoid.mempty(monoidCoin)))(split(splitNonAdaAsset)(v.value1)));
      }
  };
  var posNonAdaAsset = filterNonAdaAsset(function (x) {
      return Data_Ord.greaterThan(Data_BigInt.ordBigInt)(x)(Data_Semiring.zero(Data_BigInt.semiringBigInt));
  });
  var equipartitionAssetsWithTokenQuantityUpperBound = function (nonAdaAssets) {
      return function (maxTokenQuantity) {
          var tokenQuantity = function (v) {
              return v.value1.value1;
          };
          var currentMaxTokenQuantity = Data_Foldable.foldl(Data_List_Types.foldableList)(function (quantity) {
              return function (tn) {
                  return Data_Ord.max(Data_BigInt.ordBigInt)(quantity)(tokenQuantity(tn));
              };
          })(Data_Semiring.zero(Data_BigInt.semiringBigInt))(flattenNonAdaValue(nonAdaAssets));
          var numParts = Data_Int.ceil(Data_BigInt.toNumber(currentMaxTokenQuantity) / Data_BigInt.toNumber(maxTokenQuantity));
          var v = Data_Ord.lessThanOrEq(Data_BigInt.ordBigInt)(maxTokenQuantity)(Data_Semiring.zero(Data_BigInt.semiringBigInt)) || Data_Ord.lessThanOrEq(Data_BigInt.ordBigInt)(currentMaxTokenQuantity)(maxTokenQuantity);
          if (v) {
              return new Data_Tuple.Tuple(Data_Array_NonEmpty.singleton(nonAdaAssets), 1);
          };
          if (!v) {
              return new Data_Tuple.Tuple(Ctl_Internal_Partition.equipartition(equipartitionNonAdaAsset)(nonAdaAssets)(numParts), numParts);
          };
          throw new Error("Failed pattern match at Ctl.Internal.Cardano.Types.Value (line 346, column 3 - line 352, column 54): " + [ v.constructor.name ]);
      };
  };
  var equipartitionValueWithTokenQuantityUpperBound = function (maxTokenQuantity) {
      return function (value) {
          var v = equipartitionAssetsWithTokenQuantityUpperBound(value.value1)(maxTokenQuantity);
          return Data_Array_NonEmpty.zipWith(mkValue)(Ctl_Internal_Partition.equipartition(equipartitionCoin)(value.value0)(v.value1))(v.value0);
      };
  };
  var coinToValue = function (v) {
      return lovelaceValueOf(v);
  };
  var checkPred = function (f) {
      return function (v) {
          return function (v1) {
              var inner = Data_Foldable.all(Data_Map_Internal.foldableMap)(Data_HeytingAlgebra.heytingAlgebraBoolean)(f);
              return f(new Data_These.Both(v.value0, v1.value0)) && Data_Foldable.all(Data_Map_Internal.foldableMap)(Data_HeytingAlgebra.heytingAlgebraBoolean)(inner)(unionNonAda(v.value1)(v1.value1));
          };
      };
  };
  var checkBinRel = function (f) {
      return function (l) {
          return function (r) {
              var unThese = function (k$prime) {
                  if (k$prime instanceof Data_These.This) {
                      return f(k$prime.value0)(Data_Semiring.zero(Data_BigInt.semiringBigInt));
                  };
                  if (k$prime instanceof Data_These.That) {
                      return f(Data_Semiring.zero(Data_BigInt.semiringBigInt))(k$prime.value0);
                  };
                  if (k$prime instanceof Data_These.Both) {
                      return f(k$prime.value0)(k$prime.value1);
                  };
                  throw new Error("Failed pattern match at Ctl.Internal.Cardano.Types.Value (line 727, column 18 - line 730, column 24): " + [ k$prime.constructor.name ]);
              };
              return checkPred(unThese)(l)(r);
          };
      };
  };
  var eq = checkBinRel(Data_Eq.eq(Data_BigInt.eqBigInt));
  var geq = checkBinRel(Data_Ord.greaterThanOrEq(Data_BigInt.ordBigInt));
  var leq = checkBinRel(Data_Ord.lessThanOrEq(Data_BigInt.ordBigInt));
  var assetToValue = function (v) {
      return function (quantity) {
          return mkValue(Data_Monoid.mempty(monoidCoin))(mkSingletonNonAdaAsset(v.value0)(v.value1)(quantity));
      };
  };
  exports["Coin"] = Coin;
  exports["assetToValue"] = assetToValue;
  exports["coinToValue"] = coinToValue;
  exports["equipartitionValueWithTokenQuantityUpperBound"] = equipartitionValueWithTokenQuantityUpperBound;
  exports["flattenNonAdaValue"] = flattenNonAdaValue;
  exports["geq"] = geq;
  exports["getAssetQuantity"] = getAssetQuantity;
  exports["getCurrencySymbol"] = getCurrencySymbol;
  exports["getLovelace"] = getLovelace;
  exports["getNonAdaAsset"] = getNonAdaAsset;
  exports["getNonAdaAsset'"] = getNonAdaAsset$prime;
  exports["isZero"] = isZero;
  exports["leq"] = leq;
  exports["lovelaceValueOf"] = lovelaceValueOf;
  exports["minus"] = minus;
  exports["mkCurrencySymbol"] = mkCurrencySymbol;
  exports["mkNonAdaAsset"] = mkNonAdaAsset;
  exports["mkNonAdaAssetsFromTokenMap"] = mkNonAdaAssetsFromTokenMap;
  exports["mkSingletonNonAdaAsset"] = mkSingletonNonAdaAsset;
  exports["mkSingletonValue'"] = mkSingletonValue$prime;
  exports["mkValue"] = mkValue;
  exports["mpsSymbol"] = mpsSymbol;
  exports["negation"] = negation;
  exports["posNonAdaAsset"] = posNonAdaAsset;
  exports["split"] = split;
  exports["unwrapNonAdaAsset"] = unwrapNonAdaAsset;
  exports["valueAssetClasses"] = valueAssetClasses;
  exports["valueAssets"] = valueAssets;
  exports["valueToCoin"] = valueToCoin;
  exports["valueToCoin'"] = valueToCoin$prime;
  exports["eqCoin"] = eqCoin;
  exports["decodeAesonCoin"] = decodeAesonCoin;
  exports["showCoin"] = showCoin;
  exports["semigroupCoin"] = semigroupCoin;
  exports["monoidCoin"] = monoidCoin;
  exports["ordCurrencySymbol"] = ordCurrencySymbol;
  exports["showCurrencySymbol"] = showCurrencySymbol;
  exports["eqNonAdaAsset"] = eqNonAdaAsset;
  exports["showNonAdaAsset"] = showNonAdaAsset;
  exports["semigroupNonAdaAsset"] = semigroupNonAdaAsset;
  exports["monoidNonAdaAsset"] = monoidNonAdaAsset;
  exports["eqValue"] = eqValue;
  exports["showValue"] = showValue;
  exports["semigroupValue"] = semigroupValue;
  exports["monoidValue"] = monoidValue;
  exports["joinSemilatticeValue"] = joinSemilatticeValue;
  exports["negateValue"] = negateValue;
  exports["splitValue"] = splitValue;
  exports["eqAssetClass"] = eqAssetClass;
  exports["ordAssetClass"] = ordAssetClass;
})(PS);
(function(exports) {
  /* global BROWSER_RUNTIME */

  let lib;
  if (typeof BROWSER_RUNTIME != "undefined" && BROWSER_RUNTIME) {
    lib = require("@emurgo/cardano-serialization-lib-browser");
  } else {
    lib = require("@emurgo/cardano-serialization-lib-nodejs");
  }
  lib = require("@mlabs-haskell/csl-gc-wrapper")(lib);

  exports._fromBytes = helper => name => bytes => {
    try {
      return helper.valid(lib[name].from_bytes(bytes));
    } catch (e) {
      return helper.error(name + ".from_bytes() raised " + e);
    }
  };
})(PS["Ctl.Internal.Deserialization.FromBytes"] = PS["Ctl.Internal.Deserialization.FromBytes"] || {});
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Data.Variant"] = $PS["Data.Variant"] || {};
  var exports = $PS["Data.Variant"];
  var Data_Symbol = $PS["Data.Symbol"];
  var inj = function () {
      return function (dictIsSymbol) {
          return function (p) {
              return function (value) {
                  return {
                      type: Data_Symbol.reflectSymbol(dictIsSymbol)(p),
                      value: value
                  };
              };
          };
      };
  };
  exports["inj"] = inj;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Ctl.Internal.Deserialization.Error"] = $PS["Ctl.Internal.Deserialization.Error"] || {};
  var exports = $PS["Ctl.Internal.Deserialization.Error"];
  var Ctl_Internal_FfiHelpers = $PS["Ctl.Internal.FfiHelpers"];
  var Data_Variant = $PS["Data.Variant"];
  var Type_Proxy = $PS["Type.Proxy"];
  var _fromBytesError = Type_Proxy["Proxy"].value;
  var fromBytesErrorHelper = Ctl_Internal_FfiHelpers.errorHelper(Data_Variant.inj()({
      reflectSymbol: function () {
          return "fromBytesError";
      }
  })(_fromBytesError));
  exports["fromBytesErrorHelper"] = fromBytesErrorHelper;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Ctl.Internal.Deserialization.FromBytes"] = $PS["Ctl.Internal.Deserialization.FromBytes"] || {};
  var exports = $PS["Ctl.Internal.Deserialization.FromBytes"];
  var $foreign = $PS["Ctl.Internal.Deserialization.FromBytes"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Ctl_Internal_Deserialization_Error = $PS["Ctl.Internal.Deserialization.Error"];
  var Data_Either = $PS["Data.Either"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Effect = $PS["Effect"];
  var Effect_Exception = $PS["Effect.Exception"];                
  var fromBytesImpl = $foreign["_fromBytes"](Ctl_Internal_Deserialization_Error.fromBytesErrorHelper);
  var fromBytesAddress = {
      "fromBytes'": fromBytesImpl("Address")
  };
  var fromBytesAuxiliaryDataHas = {
      "fromBytes'": fromBytesImpl("AuxiliaryDataHash")
  };
  var fromBytesDataHash = {
      "fromBytes'": fromBytesImpl("DataHash")
  };
  var fromBytesEd25519Signature = {
      "fromBytes'": fromBytesImpl("Ed25519Signature")
  };
  var fromBytesGeneralTransacti = {
      "fromBytes'": fromBytesImpl("GeneralTransactionMetadata")
  };
  var fromBytesGenesisDelegateH = {
      "fromBytes'": fromBytesImpl("GenesisDelegateHash")
  };
  var fromBytesGenesisHash = {
      "fromBytes'": fromBytesImpl("GenesisHash")
  };
  var fromBytesNativeScript = {
      "fromBytes'": fromBytesImpl("NativeScript")
  };
  var fromBytesPlutusData = {
      "fromBytes'": fromBytesImpl("PlutusData")
  };
  var fromBytesPoolMetadataHash = {
      "fromBytes'": fromBytesImpl("PoolMetadataHash")
  };
  var fromBytesPublicKey = {
      "fromBytes'": fromBytesImpl("PublicKey")
  };
  var fromBytesScriptDataHash = {
      "fromBytes'": fromBytesImpl("ScriptDataHash")
  };
  var fromBytesTransactionHash = {
      "fromBytes'": fromBytesImpl("TransactionHash")
  };
  var fromBytesTransactionUnspe = {
      "fromBytes'": fromBytesImpl("TransactionUnspentOutput")
  };
  var fromBytesTransactionWitne = {
      "fromBytes'": fromBytesImpl("TransactionWitnessSet")
  };
  var fromBytesVRFKeyHash = {
      "fromBytes'": fromBytesImpl("VRFKeyHash")
  };
  var fromBytesValue = {
      "fromBytes'": fromBytesImpl("Value")
  };
  var fromBytes$prime = function (dict) {
      return dict["fromBytes'"];
  };
  var fromBytes = function (dictFromBytes) {
      var $33 = fromBytes$prime(dictFromBytes);
      var $34 = Data_Newtype.unwrap();
      return function ($35) {
          return Data_Either.hush($33($34($35)));
      };
  };
  var fromBytesEffect = function (dictFromBytes) {
      return function (bytes) {
          var v = fromBytes(dictFromBytes)(bytes);
          if (v instanceof Data_Maybe.Nothing) {
              return Effect_Exception["throw"]("from_bytes() call failed");
          };
          if (v instanceof Data_Maybe.Just) {
              return Control_Applicative.pure(Effect.applicativeEffect)(v.value0);
          };
          throw new Error("Failed pattern match at Ctl.Internal.Deserialization.FromBytes (line 142, column 3 - line 144, column 21): " + [ v.constructor.name ]);
      };
  };
  exports["fromBytes"] = fromBytes;
  exports["fromBytesEffect"] = fromBytesEffect;
  exports["fromBytesAddress"] = fromBytesAddress;
  exports["fromBytesAuxiliaryDataHas"] = fromBytesAuxiliaryDataHas;
  exports["fromBytesDataHash"] = fromBytesDataHash;
  exports["fromBytesEd25519Signature"] = fromBytesEd25519Signature;
  exports["fromBytesGeneralTransacti"] = fromBytesGeneralTransacti;
  exports["fromBytesGenesisDelegateH"] = fromBytesGenesisDelegateH;
  exports["fromBytesGenesisHash"] = fromBytesGenesisHash;
  exports["fromBytesNativeScript"] = fromBytesNativeScript;
  exports["fromBytesPlutusData"] = fromBytesPlutusData;
  exports["fromBytesPoolMetadataHash"] = fromBytesPoolMetadataHash;
  exports["fromBytesPublicKey"] = fromBytesPublicKey;
  exports["fromBytesScriptDataHash"] = fromBytesScriptDataHash;
  exports["fromBytesTransactionHash"] = fromBytesTransactionHash;
  exports["fromBytesTransactionUnspe"] = fromBytesTransactionUnspe;
  exports["fromBytesTransactionWitne"] = fromBytesTransactionWitne;
  exports["fromBytesValue"] = fromBytesValue;
  exports["fromBytesVRFKeyHash"] = fromBytesVRFKeyHash;
})(PS);
(function(exports) {
  /* global BROWSER_RUNTIME */

  let lib;
  if (typeof BROWSER_RUNTIME != "undefined" && BROWSER_RUNTIME) {
    lib = require("@emurgo/cardano-serialization-lib-browser");
  } else {
    lib = require("@emurgo/cardano-serialization-lib-nodejs");
  }
  lib = require("@mlabs-haskell/csl-gc-wrapper")(lib);

  exports._publicKeyFromBech32 = maybe => bech32 => {
    try {
      return maybe.just(lib.PublicKey.from_bech32(bech32));
    } catch (_) {
      return maybe.nothing;
    }
  };

  exports._ed25519SignatureFromBech32 = maybe => bech32 => {
    try {
      return maybe.just(lib.Ed25519Signature.from_bech32(bech32));
    } catch (_) {
      return maybe.nothing;
    }
  };

  exports._privateKeyFromBytes = maybe => bytes => {
    try {
      return maybe.just(lib.PrivateKey.from_normal_bytes(bytes));
    } catch (_) {
      return maybe.nothing;
    }
  };
})(PS["Ctl.Internal.Deserialization.Keys"] = PS["Ctl.Internal.Deserialization.Keys"] || {});
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Ctl.Internal.Deserialization.Keys"] = $PS["Ctl.Internal.Deserialization.Keys"] || {};
  var exports = $PS["Ctl.Internal.Deserialization.Keys"];
  var $foreign = $PS["Ctl.Internal.Deserialization.Keys"];
  var Ctl_Internal_FfiHelpers = $PS["Ctl.Internal.FfiHelpers"];                
  var publicKeyFromBech32 = $foreign["_publicKeyFromBech32"](Ctl_Internal_FfiHelpers.maybeFfiHelper);
  var privateKeyFromBytes = $foreign["_privateKeyFromBytes"](Ctl_Internal_FfiHelpers.maybeFfiHelper);  
  var ed25519SignatureFromBech32 = $foreign["_ed25519SignatureFromBech32"](Ctl_Internal_FfiHelpers.maybeFfiHelper);
  exports["publicKeyFromBech32"] = publicKeyFromBech32;
  exports["privateKeyFromBytes"] = privateKeyFromBytes;
  exports["ed25519SignatureFromBech32"] = ed25519SignatureFromBech32;
})(PS);
(function(exports) {
  /* global BROWSER_RUNTIME */

  const bytesFromKey = key => key.as_bytes();

  exports.bytesFromPublicKey = bytesFromKey; 

  exports.publicKeyFromPrivateKey = private_key => private_key.to_public();

  const bech32FromX = key => key.to_bech32();

  exports.bech32FromPublicKey = bech32FromX; 
  exports.bech32FromEd25519Signature = bech32FromX;
})(PS["Ctl.Internal.Serialization.Keys"] = PS["Ctl.Internal.Serialization.Keys"] || {});
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Ctl.Internal.Serialization.Keys"] = $PS["Ctl.Internal.Serialization.Keys"] || {};
  var exports = $PS["Ctl.Internal.Serialization.Keys"];
  var $foreign = $PS["Ctl.Internal.Serialization.Keys"];
  exports["bytesFromPublicKey"] = $foreign.bytesFromPublicKey;
  exports["bech32FromPublicKey"] = $foreign.bech32FromPublicKey;
  exports["bech32FromEd25519Signature"] = $foreign.bech32FromEd25519Signature;
  exports["publicKeyFromPrivateKey"] = $foreign.publicKeyFromPrivateKey;
})(PS);
(function(exports) {
  exports._toBytes = sth => sth.to_bytes();
})(PS["Ctl.Internal.Serialization.ToBytes"] = PS["Ctl.Internal.Serialization.ToBytes"] || {});
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Ctl.Internal.Serialization.ToBytes"] = $PS["Ctl.Internal.Serialization.ToBytes"] || {};
  var exports = $PS["Ctl.Internal.Serialization.ToBytes"];
  var $foreign = $PS["Ctl.Internal.Serialization.ToBytes"];
  var Ctl_Internal_Types_CborBytes = $PS["Ctl.Internal.Types.CborBytes"];                
  var toBytes = function () {
      return function ($0) {
          return Ctl_Internal_Types_CborBytes.CborBytes($foreign["_toBytes"]($0));
      };
  };
  exports["toBytes"] = toBytes;
})(PS);
(function(exports) {
  /* global BROWSER_RUNTIME */

  let lib;
  if (typeof BROWSER_RUNTIME != "undefined" && BROWSER_RUNTIME) {
    lib = require("@emurgo/cardano-serialization-lib-browser");
  } else {
    lib = require("@emurgo/cardano-serialization-lib-nodejs");
  }
  lib = require("@mlabs-haskell/csl-gc-wrapper")(lib);

  exports.newPositive = lib.Int.new;
  exports.newNegative = lib.Int.new_negative;
  exports._intToStr = n => n.to_str();
})(PS["Ctl.Internal.Types.Int"] = PS["Ctl.Internal.Types.Int"] || {});
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Ctl.Internal.Types.Int"] = $PS["Ctl.Internal.Types.Int"] || {};
  var exports = $PS["Ctl.Internal.Types.Int"];
  var $foreign = $PS["Ctl.Internal.Types.Int"];
  var Aeson = $PS["Aeson"];
  var Control_Alt = $PS["Control.Alt"];
  var Control_Bind = $PS["Control.Bind"];
  var Ctl_Internal_Types_BigNum = $PS["Ctl.Internal.Types.BigNum"];
  var Data_Argonaut_Decode_Error = $PS["Data.Argonaut.Decode.Error"];
  var Data_BigInt = $PS["Data.BigInt"];
  var Data_Either = $PS["Data.Either"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Ring = $PS["Data.Ring"];                
  var showInt = {
      show: $foreign["_intToStr"]
  };
  var eqInt = {
      eq: Data_Function.on(Data_Eq.eq(Data_Eq.eqString))($foreign["_intToStr"])
  };
  var toBigInt = function ($$int) {
      return Data_Maybe.fromJust()(Data_BigInt.fromString($foreign["_intToStr"]($$int)));
  };
  var ordInt = {
      compare: Data_Function.on(Data_Ord.compare(Data_BigInt.ordBigInt))(toBigInt),
      Eq0: function () {
          return eqInt;
      }
  };
  var fromBigInt = function (bi) {
      return Control_Alt.alt(Data_Maybe.altMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)($foreign.newPositive)(Ctl_Internal_Types_BigNum.fromBigInt(bi)))(Data_Functor.map(Data_Maybe.functorMaybe)($foreign.newNegative)(Ctl_Internal_Types_BigNum.fromBigInt(Data_Ring.negate(Data_BigInt.ringBigInt)(bi))));
  };
  var fromString = Control_Bind.composeKleisliFlipped(Data_Maybe.bindMaybe)(fromBigInt)(Data_BigInt.fromString);
  var decodeAesonInt = {
      decodeAeson: function (aeson) {
          return Control_Bind.bind(Data_Either.bindEither)(Aeson.decodeAeson(Aeson.decodeAesonBigInt)(aeson))((function () {
              var $9 = Data_Either.note(new Data_Argonaut_Decode_Error.TypeMismatch("Int"));
              return function ($10) {
                  return $9(fromBigInt($10));
              };
          })());
      }
  };
  exports["eqInt"] = eqInt;
  exports["ordInt"] = ordInt;
  exports["showInt"] = showInt;
  exports["decodeAesonInt"] = decodeAesonInt;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Ctl.Internal.FromData"] = $PS["Ctl.Internal.FromData"] || {};
  var exports = $PS["Ctl.Internal.FromData"];
  var Ctl_Internal_Types_BigNum = $PS["Ctl.Internal.Types.BigNum"];
  var Ctl_Internal_Types_PlutusData = $PS["Ctl.Internal.Types.PlutusData"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Unit = $PS["Data.Unit"];
  var fromDataVoid = {
      fromData: function (v) {
          return Data_Maybe.Nothing.value;
      }
  };
  var fromDataUnit = {
      fromData: function (v) {
          if (v instanceof Ctl_Internal_Types_PlutusData.Constr && (v.value1.length === 0 && Data_Eq.eq(Ctl_Internal_Types_BigNum.eqBigNum)(v.value0)(Ctl_Internal_Types_BigNum.zero))) {
              return new Data_Maybe.Just(Data_Unit.unit);
          };
          return Data_Maybe.Nothing.value;
      }
  };
  var fromDataPlutusData = {
      fromData: Data_Maybe.Just.create
  };
  var fromData = function (dict) {
      return dict.fromData;
  };
  exports["fromData"] = fromData;
  exports["fromDataVoid"] = fromDataVoid;
  exports["fromDataUnit"] = fromDataUnit;
  exports["fromDataPlutusData"] = fromDataPlutusData;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Ctl.Internal.Types.Datum"] = $PS["Ctl.Internal.Types.Datum"] || {};
  var exports = $PS["Ctl.Internal.Types.Datum"];
  var Ctl_Internal_FromData = $PS["Ctl.Internal.FromData"];
  var Ctl_Internal_ToData = $PS["Ctl.Internal.ToData"];
  var Ctl_Internal_Types_PlutusData = $PS["Ctl.Internal.Types.PlutusData"];
  var Data_Show_Generic = $PS["Data.Show.Generic"];
  var Data_Unit = $PS["Data.Unit"];
  var genericDatum_ = {
      to: function (x) {
          return x;
      },
      from: function (x) {
          return x;
      }
  };
  var showDatum = {
      show: Data_Show_Generic.genericShow(genericDatum_)(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Ctl_Internal_Types_PlutusData.showPlutusData))({
          reflectSymbol: function () {
              return "Datum";
          }
      }))
  };
  var fromDataDatum = Ctl_Internal_FromData.fromDataPlutusData;
  var eqDatum = Ctl_Internal_Types_PlutusData.eqPlutusData;
  var unitDatum = Ctl_Internal_ToData.toData(Ctl_Internal_ToData.toDataUnit)(Data_Unit.unit);
  exports["unitDatum"] = unitDatum;
  exports["eqDatum"] = eqDatum;
  exports["fromDataDatum"] = fromDataDatum;
  exports["showDatum"] = showDatum;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Ctl.Internal.Types.Transaction"] = $PS["Ctl.Internal.Types.Transaction"] || {};
  var exports = $PS["Ctl.Internal.Types.Transaction"];
  var Ctl_Internal_Types_ByteArray = $PS["Ctl.Internal.Types.ByteArray"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Ordering = $PS["Data.Ordering"];
  var Data_Show = $PS["Data.Show"];
  var Data_Show_Generic = $PS["Data.Show.Generic"];
  var Data_UInt = $PS["Data.UInt"];
  var DataHash = function (x) {
      return x;
  };                                                       
  var ordDataHash = Ctl_Internal_Types_ByteArray.ordByteArray;
  var genericTransactionInput_ = {
      to: function (x) {
          return x;
      },
      from: function (x) {
          return x;
      }
  };
  var genericTransactionHash_ = {
      to: function (x) {
          return x;
      },
      from: function (x) {
          return x;
      }
  };
  var showTransactionHash = {
      show: Data_Show_Generic.genericShow(genericTransactionHash_)(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Ctl_Internal_Types_ByteArray.showByteArray))({
          reflectSymbol: function () {
              return "TransactionHash";
          }
      }))
  };
  var showTransactionInput = {
      show: Data_Show_Generic.genericShow(genericTransactionInput_)(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "index";
          }
      })(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "transactionId";
          }
      })(Data_Show.showRecordFieldsNil)(showTransactionHash))(Data_UInt.uintShowInstance))))({
          reflectSymbol: function () {
              return "TransactionInput";
          }
      }))
  };
  var genericDataHash_ = {
      to: function (x) {
          return x;
      },
      from: function (x) {
          return x;
      }
  };
  var showDataHash = {
      show: Data_Show_Generic.genericShow(genericDataHash_)(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Ctl_Internal_Types_ByteArray.showByteArray))({
          reflectSymbol: function () {
              return "DataHash";
          }
      }))
  };                                                             
  var eqTransactionHash = Ctl_Internal_Types_ByteArray.eqByteArray;
  var eqTransactionInput = Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
      reflectSymbol: function () {
          return "transactionId";
      }
  })(eqTransactionHash))()({
      reflectSymbol: function () {
          return "index";
      }
  })(Data_UInt.uintEqInstance));
  var ordTransactionHash = {
      compare: function (v) {
          return function (v1) {
              return Data_Ord.compare(Data_Ord.ordString)(Ctl_Internal_Types_ByteArray.byteArrayToHex(v))(Ctl_Internal_Types_ByteArray.byteArrayToHex(v1));
          };
      },
      Eq0: function () {
          return eqTransactionHash;
      }
  };
  var ordTransactionInput = {
      compare: function (v) {
          return function (v1) {
              var v2 = Data_Ord.compare(ordTransactionHash)(v.transactionId)(v1.transactionId);
              if (v2 instanceof Data_Ordering.EQ) {
                  return Data_Ord.compare(Data_UInt.uintOrd)(v.index)(v1.index);
              };
              return v2;
          };
      },
      Eq0: function () {
          return eqTransactionInput;
      }
  };
  var eqDataHash = Ctl_Internal_Types_ByteArray.eqByteArray;                  
  var decodeAesonTransactionHas = Ctl_Internal_Types_ByteArray.decodeAesonByteArray;
  var decodeAesonDataHash = Ctl_Internal_Types_ByteArray.decodeAesonByteArray;
  exports["DataHash"] = DataHash;
  exports["eqTransactionInput"] = eqTransactionInput;
  exports["ordTransactionInput"] = ordTransactionInput;
  exports["showTransactionInput"] = showTransactionInput;
  exports["eqTransactionHash"] = eqTransactionHash;
  exports["decodeAesonTransactionHas"] = decodeAesonTransactionHas;
  exports["ordTransactionHash"] = ordTransactionHash;
  exports["showTransactionHash"] = showTransactionHash;
  exports["eqDataHash"] = eqDataHash;
  exports["ordDataHash"] = ordDataHash;
  exports["decodeAesonDataHash"] = decodeAesonDataHash;
  exports["showDataHash"] = showDataHash;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Ctl.Internal.Types.OutputDatum"] = $PS["Ctl.Internal.Types.OutputDatum"] || {};
  var exports = $PS["Ctl.Internal.Types.OutputDatum"];
  var Ctl_Internal_Types_Datum = $PS["Ctl.Internal.Types.Datum"];
  var Ctl_Internal_Types_Transaction = $PS["Ctl.Internal.Types.Transaction"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Generic_Rep = $PS["Data.Generic.Rep"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Show_Generic = $PS["Data.Show.Generic"];                
  var NoOutputDatum = (function () {
      function NoOutputDatum() {

      };
      NoOutputDatum.value = new NoOutputDatum();
      return NoOutputDatum;
  })();
  var OutputDatumHash = (function () {
      function OutputDatumHash(value0) {
          this.value0 = value0;
      };
      OutputDatumHash.create = function (value0) {
          return new OutputDatumHash(value0);
      };
      return OutputDatumHash;
  })();
  var OutputDatum = (function () {
      function OutputDatum(value0) {
          this.value0 = value0;
      };
      OutputDatum.create = function (value0) {
          return new OutputDatum(value0);
      };
      return OutputDatum;
  })();                              
  var genericOutputDatum_ = {
      to: function (x) {
          if (x instanceof Data_Generic_Rep.Inl) {
              return NoOutputDatum.value;
          };
          if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inl) {
              return new OutputDatumHash(x.value0.value0);
          };
          if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inr) {
              return new OutputDatum(x.value0.value0);
          };
          throw new Error("Failed pattern match at Ctl.Internal.Types.OutputDatum (line 38, column 1 - line 38, column 38): " + [ x.constructor.name ]);
      },
      from: function (x) {
          if (x instanceof NoOutputDatum) {
              return new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value);
          };
          if (x instanceof OutputDatumHash) {
              return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0));
          };
          if (x instanceof OutputDatum) {
              return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(x.value0));
          };
          throw new Error("Failed pattern match at Ctl.Internal.Types.OutputDatum (line 38, column 1 - line 38, column 38): " + [ x.constructor.name ]);
      }
  };
  var showOutputDatum = {
      show: Data_Show_Generic.genericShow(genericOutputDatum_)(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsNoArguments)({
          reflectSymbol: function () {
              return "NoOutputDatum";
          }
      }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Ctl_Internal_Types_Transaction.showDataHash))({
          reflectSymbol: function () {
              return "OutputDatumHash";
          }
      }))(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Ctl_Internal_Types_Datum.showDatum))({
          reflectSymbol: function () {
              return "OutputDatum";
          }
      }))))
  };
  var eqOutputDatum = {
      eq: function (x) {
          return function (y) {
              if (x instanceof NoOutputDatum && y instanceof NoOutputDatum) {
                  return true;
              };
              if (x instanceof OutputDatumHash && y instanceof OutputDatumHash) {
                  return Data_Eq.eq(Ctl_Internal_Types_Transaction.eqDataHash)(x.value0)(y.value0);
              };
              if (x instanceof OutputDatum && y instanceof OutputDatum) {
                  return Data_Eq.eq(Ctl_Internal_Types_Datum.eqDatum)(x.value0)(y.value0);
              };
              return false;
          };
      }
  };
  var outputDatumDatum = function (v) {
      if (v instanceof OutputDatum) {
          return new Data_Maybe.Just(v.value0);
      };
      return Data_Maybe.Nothing.value;
  };
  var outputDatumDataHash = function (v) {
      if (v instanceof OutputDatumHash) {
          return new Data_Maybe.Just(v.value0);
      };
      return Data_Maybe.Nothing.value;
  };
  exports["NoOutputDatum"] = NoOutputDatum;
  exports["OutputDatumHash"] = OutputDatumHash;
  exports["OutputDatum"] = OutputDatum;
  exports["outputDatumDataHash"] = outputDatumDataHash;
  exports["outputDatumDatum"] = outputDatumDatum;
  exports["eqOutputDatum"] = eqOutputDatum;
  exports["showOutputDatum"] = showOutputDatum;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Ctl.Internal.Types.PubKeyHash"] = $PS["Ctl.Internal.Types.PubKeyHash"] || {};
  var exports = $PS["Ctl.Internal.Types.PubKeyHash"];
  var Ctl_Internal_Serialization_Address = $PS["Ctl.Internal.Serialization.Address"];
  var Ctl_Internal_Serialization_Hash = $PS["Ctl.Internal.Serialization.Hash"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Show_Generic = $PS["Data.Show.Generic"];
  var ordPubKeyHash = Ctl_Internal_Serialization_Hash.ordEd25519KeyHash;
  var ordPaymentPubKeyHash = ordPubKeyHash;
  var genericStakePubKeyHash_ = {
      to: function (x) {
          return x;
      },
      from: function (x) {
          return x;
      }
  };
  var genericPubKeyHash_ = {
      to: function (x) {
          return x;
      },
      from: function (x) {
          return x;
      }
  };
  var showPubKeyHash = {
      show: Data_Show_Generic.genericShow(genericPubKeyHash_)(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Ctl_Internal_Serialization_Hash.showEd25519KeyHash))({
          reflectSymbol: function () {
              return "PubKeyHash";
          }
      }))
  };
  var showStakePubKeyHash = {
      show: Data_Show_Generic.genericShow(genericStakePubKeyHash_)(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(showPubKeyHash))({
          reflectSymbol: function () {
              return "StakePubKeyHash";
          }
      }))
  };
  var genericPaymentPubKeyHash_ = {
      to: function (x) {
          return x;
      },
      from: function (x) {
          return x;
      }
  };
  var showPaymentPubKeyHash = {
      show: Data_Show_Generic.genericShow(genericPaymentPubKeyHash_)(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(showPubKeyHash))({
          reflectSymbol: function () {
              return "PaymentPubKeyHash";
          }
      }))
  };                                                 
  var eqPubKeyHash = Ctl_Internal_Serialization_Hash.eqEd25519KeyHash;
  var eqPaymentPubKeyHash = eqPubKeyHash;
  var pubKeyHashBaseAddress = function (networkId) {
      return function (pkh) {
          return function (skh) {
              return Ctl_Internal_Serialization_Address.baseAddressToAddress(Ctl_Internal_Serialization_Address.paymentKeyHashStakeKeyHashAddress(networkId)(Data_Newtype.unwrap()(pkh))(Data_Newtype.unwrap()(Data_Newtype.unwrap()(skh))));
          };
      };
  };
  var payPubKeyHashBaseAddress = function (networkId) {
      return function (v) {
          return function (skh) {
              return pubKeyHashBaseAddress(networkId)(v)(skh);
          };
      };
  };
  var ed25519RewardAddress = function () {
      return function (network) {
          return function (skh) {
              return Ctl_Internal_Serialization_Address.rewardAddress({
                  network: network,
                  paymentCred: Ctl_Internal_Serialization_Address.keyHashCredential(Data_Newtype.unwrap()(skh))
              });
          };
      };
  };
  var stakePubKeyHashRewardAddress = function (networkId) {
      var $54 = ed25519RewardAddress()(networkId);
      var $55 = Data_Newtype.unwrap();
      return function ($56) {
          return Ctl_Internal_Serialization_Address.rewardAddressToAddress($54($55($56)));
      };
  };
  var ed25519EnterpriseAddress = function () {
      return function (network) {
          return function (pkh) {
              return Ctl_Internal_Serialization_Address.enterpriseAddress({
                  network: network,
                  paymentCred: Ctl_Internal_Serialization_Address.keyHashCredential(Data_Newtype.unwrap()(pkh))
              });
          };
      };
  };
  var pubKeyHashEnterpriseAddress = function (networkId) {
      var $57 = ed25519EnterpriseAddress()(networkId);
      return function ($58) {
          return Ctl_Internal_Serialization_Address.enterpriseAddressToAddress($57($58));
      };
  };
  var payPubKeyHashEnterpriseAddress = function (networkId) {
      return function (v) {
          return pubKeyHashEnterpriseAddress(networkId)(v);
      };
  };
  exports["payPubKeyHashBaseAddress"] = payPubKeyHashBaseAddress;
  exports["payPubKeyHashEnterpriseAddress"] = payPubKeyHashEnterpriseAddress;
  exports["stakePubKeyHashRewardAddress"] = stakePubKeyHashRewardAddress;
  exports["showPubKeyHash"] = showPubKeyHash;
  exports["eqPaymentPubKeyHash"] = eqPaymentPubKeyHash;
  exports["ordPaymentPubKeyHash"] = ordPaymentPubKeyHash;
  exports["showPaymentPubKeyHash"] = showPaymentPubKeyHash;
  exports["showStakePubKeyHash"] = showStakePubKeyHash;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Ctl.Internal.Types.RedeemerTag"] = $PS["Ctl.Internal.Types.RedeemerTag"] || {};
  var exports = $PS["Ctl.Internal.Types.RedeemerTag"];
  var Data_Generic_Rep = $PS["Data.Generic.Rep"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ordering = $PS["Data.Ordering"];
  var Data_Show_Generic = $PS["Data.Show.Generic"];                
  var Spend = (function () {
      function Spend() {

      };
      Spend.value = new Spend();
      return Spend;
  })();
  var Mint = (function () {
      function Mint() {

      };
      Mint.value = new Mint();
      return Mint;
  })();
  var Cert = (function () {
      function Cert() {

      };
      Cert.value = new Cert();
      return Cert;
  })();
  var Reward = (function () {
      function Reward() {

      };
      Reward.value = new Reward();
      return Reward;
  })();
  var genericRedeemerTag_ = {
      to: function (x) {
          if (x instanceof Data_Generic_Rep.Inl) {
              return Spend.value;
          };
          if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inl) {
              return Mint.value;
          };
          if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0 instanceof Data_Generic_Rep.Inl)) {
              return Cert.value;
          };
          if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0 instanceof Data_Generic_Rep.Inr)) {
              return Reward.value;
          };
          throw new Error("Failed pattern match at Ctl.Internal.Types.RedeemerTag (line 25, column 1 - line 25, column 38): " + [ x.constructor.name ]);
      },
      from: function (x) {
          if (x instanceof Spend) {
              return new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value);
          };
          if (x instanceof Mint) {
              return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value));
          };
          if (x instanceof Cert) {
              return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value)));
          };
          if (x instanceof Reward) {
              return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(Data_Generic_Rep.NoArguments.value)));
          };
          throw new Error("Failed pattern match at Ctl.Internal.Types.RedeemerTag (line 25, column 1 - line 25, column 38): " + [ x.constructor.name ]);
      }
  };
  var showRedeemerTag = {
      show: Data_Show_Generic.genericShow(genericRedeemerTag_)(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsNoArguments)({
          reflectSymbol: function () {
              return "Spend";
          }
      }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsNoArguments)({
          reflectSymbol: function () {
              return "Mint";
          }
      }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsNoArguments)({
          reflectSymbol: function () {
              return "Cert";
          }
      }))(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsNoArguments)({
          reflectSymbol: function () {
              return "Reward";
          }
      })))))
  };
  var eqRedeemerTag = {
      eq: function (x) {
          return function (y) {
              if (x instanceof Spend && y instanceof Spend) {
                  return true;
              };
              if (x instanceof Mint && y instanceof Mint) {
                  return true;
              };
              if (x instanceof Cert && y instanceof Cert) {
                  return true;
              };
              if (x instanceof Reward && y instanceof Reward) {
                  return true;
              };
              return false;
          };
      }
  };
  var ordRedeemerTag = {
      compare: function (x) {
          return function (y) {
              if (x instanceof Spend && y instanceof Spend) {
                  return Data_Ordering.EQ.value;
              };
              if (x instanceof Spend) {
                  return Data_Ordering.LT.value;
              };
              if (y instanceof Spend) {
                  return Data_Ordering.GT.value;
              };
              if (x instanceof Mint && y instanceof Mint) {
                  return Data_Ordering.EQ.value;
              };
              if (x instanceof Mint) {
                  return Data_Ordering.LT.value;
              };
              if (y instanceof Mint) {
                  return Data_Ordering.GT.value;
              };
              if (x instanceof Cert && y instanceof Cert) {
                  return Data_Ordering.EQ.value;
              };
              if (x instanceof Cert) {
                  return Data_Ordering.LT.value;
              };
              if (y instanceof Cert) {
                  return Data_Ordering.GT.value;
              };
              if (x instanceof Reward && y instanceof Reward) {
                  return Data_Ordering.EQ.value;
              };
              throw new Error("Failed pattern match at Ctl.Internal.Types.RedeemerTag (line 27, column 1 - line 27, column 32): " + [ x.constructor.name, y.constructor.name ]);
          };
      },
      Eq0: function () {
          return eqRedeemerTag;
      }
  };
  var fromString = function (v) {
      if (v === "spend") {
          return new Data_Maybe.Just(Spend.value);
      };
      if (v === "mint") {
          return new Data_Maybe.Just(Mint.value);
      };
      if (v === "certificate") {
          return new Data_Maybe.Just(Cert.value);
      };
      if (v === "withdrawal") {
          return new Data_Maybe.Just(Reward.value);
      };
      return Data_Maybe.Nothing.value;
  };
  exports["Spend"] = Spend;
  exports["Mint"] = Mint;
  exports["Cert"] = Cert;
  exports["Reward"] = Reward;
  exports["fromString"] = fromString;
  exports["eqRedeemerTag"] = eqRedeemerTag;
  exports["ordRedeemerTag"] = ordRedeemerTag;
  exports["showRedeemerTag"] = showRedeemerTag;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Ctl.Internal.Types.RewardAddress"] = $PS["Ctl.Internal.Types.RewardAddress"] || {};
  var exports = $PS["Ctl.Internal.Types.RewardAddress"];
  var Ctl_Internal_Serialization_Address = $PS["Ctl.Internal.Serialization.Address"];
  var Data_Newtype = $PS["Data.Newtype"];                                          
  var showRewardAddress = Ctl_Internal_Serialization_Address.showRewardAddress;
  var ordRewardAddress = Ctl_Internal_Serialization_Address.ordRewardAddress;          
  var eqRewardAddress = Ctl_Internal_Serialization_Address.eqRewardAddress;                  
  var decodeAesonRewardAddress = Ctl_Internal_Serialization_Address.decodeAesonRewardAddress;
  var unRewardAddress = function (v) {
      return v;
  };
  var stakeValidatorHashRewardAddress = function (networkId) {
      return function (sh) {
          return Ctl_Internal_Serialization_Address.rewardAddress({
              network: networkId,
              paymentCred: Ctl_Internal_Serialization_Address.scriptHashCredential(Data_Newtype.unwrap()(sh))
          });
      };
  };
  var stakePubKeyHashRewardAddress = function (networkId) {
      return function (pkh) {
          return Ctl_Internal_Serialization_Address.rewardAddress({
              network: networkId,
              paymentCred: Ctl_Internal_Serialization_Address.keyHashCredential(Data_Newtype.unwrap()(Data_Newtype.unwrap()(pkh)))
          });
      };
  };
  var rewardAddressToBech32 = function ($10) {
      return Ctl_Internal_Serialization_Address.rewardAddressBech32(unRewardAddress($10));
  };
  exports["rewardAddressToBech32"] = rewardAddressToBech32;
  exports["stakePubKeyHashRewardAddress"] = stakePubKeyHashRewardAddress;
  exports["stakeValidatorHashRewardAddress"] = stakeValidatorHashRewardAddress;
  exports["unRewardAddress"] = unRewardAddress;
  exports["eqRewardAddress"] = eqRewardAddress;
  exports["ordRewardAddress"] = ordRewardAddress;
  exports["showRewardAddress"] = showRewardAddress;
  exports["decodeAesonRewardAddress"] = decodeAesonRewardAddress;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Ctl.Internal.Types.TransactionMetadata"] = $PS["Ctl.Internal.Types.TransactionMetadata"] || {};
  var exports = $PS["Ctl.Internal.Types.TransactionMetadata"];
  var Ctl_Internal_Helpers = $PS["Ctl.Internal.Helpers"];
  var Ctl_Internal_Types_ByteArray = $PS["Ctl.Internal.Types.ByteArray"];
  var Ctl_Internal_Types_Int = $PS["Ctl.Internal.Types.Int"];
  var Data_BigInt = $PS["Data.BigInt"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Generic_Rep = $PS["Data.Generic.Rep"];
  var Data_Map_Internal = $PS["Data.Map.Internal"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Ordering = $PS["Data.Ordering"];
  var Data_Show = $PS["Data.Show"];
  var Data_Show_Generic = $PS["Data.Show.Generic"];                
  var TransactionMetadatumLabel = function (x) {
      return x;
  };
  var MetadataMap = (function () {
      function MetadataMap(value0) {
          this.value0 = value0;
      };
      MetadataMap.create = function (value0) {
          return new MetadataMap(value0);
      };
      return MetadataMap;
  })();
  var MetadataList = (function () {
      function MetadataList(value0) {
          this.value0 = value0;
      };
      MetadataList.create = function (value0) {
          return new MetadataList(value0);
      };
      return MetadataList;
  })();
  var Int = (function () {
      function Int(value0) {
          this.value0 = value0;
      };
      Int.create = function (value0) {
          return new Int(value0);
      };
      return Int;
  })();
  var Bytes = (function () {
      function Bytes(value0) {
          this.value0 = value0;
      };
      Bytes.create = function (value0) {
          return new Bytes(value0);
      };
      return Bytes;
  })();
  var Text = (function () {
      function Text(value0) {
          this.value0 = value0;
      };
      Text.create = function (value0) {
          return new Text(value0);
      };
      return Text;
  })();
  var showTransactionMetadatumL = {
      show: function (v) {
          return Ctl_Internal_Helpers.showWithParens(Data_BigInt.showBigInt)("TransactionMetadatumLabel")(v);
      }
  };
  var ordTransactionMetadatumLa = Data_BigInt.ordBigInt;
  var semigroupGeneralTransacti = {
      append: function (v) {
          return function (v1) {
              return Ctl_Internal_Helpers.appendRightMap(ordTransactionMetadatumLa)(v)(v1);
          };
      }
  };
  var genericTransactionMetadat = {
      to: function (x) {
          if (x instanceof Data_Generic_Rep.Inl) {
              return new MetadataMap(x.value0);
          };
          if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inl) {
              return new MetadataList(x.value0.value0);
          };
          if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0 instanceof Data_Generic_Rep.Inl)) {
              return new Int(x.value0.value0.value0);
          };
          if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0 instanceof Data_Generic_Rep.Inl))) {
              return new Bytes(x.value0.value0.value0.value0);
          };
          if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0 instanceof Data_Generic_Rep.Inr))) {
              return new Text(x.value0.value0.value0.value0);
          };
          throw new Error("Failed pattern match at Ctl.Internal.Types.TransactionMetadata (line 79, column 1 - line 79, column 47): " + [ x.constructor.name ]);
      },
      from: function (x) {
          if (x instanceof MetadataMap) {
              return new Data_Generic_Rep.Inl(x.value0);
          };
          if (x instanceof MetadataList) {
              return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0));
          };
          if (x instanceof Int) {
              return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0)));
          };
          if (x instanceof Bytes) {
              return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0))));
          };
          if (x instanceof Text) {
              return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(x.value0))));
          };
          throw new Error("Failed pattern match at Ctl.Internal.Types.TransactionMetadata (line 79, column 1 - line 79, column 47): " + [ x.constructor.name ]);
      }
  };
  var showTransactionMetadatum = {
      show: function (x) {
          return Data_Show_Generic.genericShow(genericTransactionMetadat)(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Data_Map_Internal.showMap(showTransactionMetadatum)(showTransactionMetadatum)))({
              reflectSymbol: function () {
                  return "MetadataMap";
              }
          }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Data_Show.showArray(showTransactionMetadatum)))({
              reflectSymbol: function () {
                  return "MetadataList";
              }
          }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Ctl_Internal_Types_Int.showInt))({
              reflectSymbol: function () {
                  return "Int";
              }
          }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Ctl_Internal_Types_ByteArray.showByteArray))({
              reflectSymbol: function () {
                  return "Bytes";
              }
          }))(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Data_Show.showString))({
              reflectSymbol: function () {
                  return "Text";
              }
          }))))))(x);
      }
  };
  var genericGeneralTransaction = {
      to: function (x) {
          return x;
      },
      from: function (x) {
          return x;
      }
  };
  var showGeneralTransactionMet = {
      show: Data_Show_Generic.genericShow(genericGeneralTransaction)(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Data_Map_Internal.showMap(showTransactionMetadatumL)(showTransactionMetadatum)))({
          reflectSymbol: function () {
              return "GeneralTransactionMetadata";
          }
      }))
  };                                                   
  var eqTransactionMetadatum = {
      eq: function (x) {
          return function (y) {
              if (x instanceof MetadataMap && y instanceof MetadataMap) {
                  return Data_Eq.eq(Data_Map_Internal.eqMap(eqTransactionMetadatum)(eqTransactionMetadatum))(x.value0)(y.value0);
              };
              if (x instanceof MetadataList && y instanceof MetadataList) {
                  return Data_Eq.eq(Data_Eq.eqArray(eqTransactionMetadatum))(x.value0)(y.value0);
              };
              if (x instanceof Int && y instanceof Int) {
                  return Data_Eq.eq(Ctl_Internal_Types_Int.eqInt)(x.value0)(y.value0);
              };
              if (x instanceof Bytes && y instanceof Bytes) {
                  return Data_Eq.eq(Ctl_Internal_Types_ByteArray.eqByteArray)(x.value0)(y.value0);
              };
              if (x instanceof Text && y instanceof Text) {
                  return x.value0 === y.value0;
              };
              return false;
          };
      }
  };
  var ordTransactionMetadatum = {
      compare: function (x) {
          return function (y) {
              if (x instanceof MetadataMap && y instanceof MetadataMap) {
                  return Data_Ord.compare(Data_Map_Internal.ordMap(ordTransactionMetadatum)(ordTransactionMetadatum))(x.value0)(y.value0);
              };
              if (x instanceof MetadataMap) {
                  return Data_Ordering.LT.value;
              };
              if (y instanceof MetadataMap) {
                  return Data_Ordering.GT.value;
              };
              if (x instanceof MetadataList && y instanceof MetadataList) {
                  return Data_Ord.compare(Data_Ord.ordArray(ordTransactionMetadatum))(x.value0)(y.value0);
              };
              if (x instanceof MetadataList) {
                  return Data_Ordering.LT.value;
              };
              if (y instanceof MetadataList) {
                  return Data_Ordering.GT.value;
              };
              if (x instanceof Int && y instanceof Int) {
                  return Data_Ord.compare(Ctl_Internal_Types_Int.ordInt)(x.value0)(y.value0);
              };
              if (x instanceof Int) {
                  return Data_Ordering.LT.value;
              };
              if (y instanceof Int) {
                  return Data_Ordering.GT.value;
              };
              if (x instanceof Bytes && y instanceof Bytes) {
                  return Data_Ord.compare(Ctl_Internal_Types_ByteArray.ordByteArray)(x.value0)(y.value0);
              };
              if (x instanceof Bytes) {
                  return Data_Ordering.LT.value;
              };
              if (y instanceof Bytes) {
                  return Data_Ordering.GT.value;
              };
              if (x instanceof Text && y instanceof Text) {
                  return Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);
              };
              throw new Error("Failed pattern match at Ctl.Internal.Types.TransactionMetadata (line 78, column 1 - line 78, column 41): " + [ x.constructor.name, y.constructor.name ]);
          };
      },
      Eq0: function () {
          return eqTransactionMetadatum;
      }
  };
  exports["MetadataMap"] = MetadataMap;
  exports["MetadataList"] = MetadataList;
  exports["Int"] = Int;
  exports["Bytes"] = Bytes;
  exports["Text"] = Text;
  exports["TransactionMetadatumLabel"] = TransactionMetadatumLabel;
  exports["showGeneralTransactionMet"] = showGeneralTransactionMet;
  exports["semigroupGeneralTransacti"] = semigroupGeneralTransacti;
  exports["ordTransactionMetadatumLa"] = ordTransactionMetadatumLa;
  exports["ordTransactionMetadatum"] = ordTransactionMetadatum;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Ctl.Internal.Types.VRFKeyHash"] = $PS["Ctl.Internal.Types.VRFKeyHash"] || {};
  var exports = $PS["Ctl.Internal.Types.VRFKeyHash"];
  var Ctl_Internal_Serialization_ToBytes = $PS["Ctl.Internal.Serialization.ToBytes"];
  var Ctl_Internal_Types_ByteArray = $PS["Ctl.Internal.Types.ByteArray"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Function = $PS["Data.Function"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Show = $PS["Data.Show"];                
  var VRFKeyHash = function (x) {
      return x;
  };
  var showVRFKeyHash = {
      show: function (v) {
          return "(VRFKeyHash " + (Data_Show.show(Data_Show.showString)(Ctl_Internal_Types_ByteArray.byteArrayToHex(Data_Newtype.unwrap()(Ctl_Internal_Serialization_ToBytes.toBytes()(v)))) + ")");
      }
  };
  var vrfKeyHashToBytes = function (v) {
      return Data_Newtype.unwrap()(Ctl_Internal_Serialization_ToBytes.toBytes()(v));
  };
  var eqVRFKeyHash = {
      eq: Data_Function.on(Data_Eq.eq(Ctl_Internal_Types_ByteArray.eqByteArray))(vrfKeyHashToBytes)
  };   
  var unVRFKeyHash = function (v) {
      return v;
  };
  exports["VRFKeyHash"] = VRFKeyHash;
  exports["unVRFKeyHash"] = unVRFKeyHash;
  exports["showVRFKeyHash"] = showVRFKeyHash;
  exports["eqVRFKeyHash"] = eqVRFKeyHash;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Data.Profunctor"] = $PS["Data.Profunctor"] || {};
  var exports = $PS["Data.Profunctor"];                  
  var profunctorFn = {
      dimap: function (a2b) {
          return function (c2d) {
              return function (b2c) {
                  return function ($8) {
                      return c2d(b2c(a2b($8)));
                  };
              };
          };
      }
  };
  var dimap = function (dict) {
      return dict.dimap;
  };
  exports["dimap"] = dimap;
  exports["profunctorFn"] = profunctorFn;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Data.Lens.Iso"] = $PS["Data.Lens.Iso"] || {};
  var exports = $PS["Data.Lens.Iso"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Profunctor = $PS["Data.Profunctor"];
  var iso = function (f) {
      return function (g) {
          return function (dictProfunctor) {
              return function (pab) {
                  return Data_Profunctor.dimap(dictProfunctor)(f)(g)(pab);
              };
          };
      };
  };
  var non = function (dictEq) {
      return function (def) {
          return function (dictProfunctor) {
              var g = function (a) {
                  if (Data_Eq.eq(dictEq)(a)(def)) {
                      return Data_Maybe.Nothing.value;
                  };
                  if (Data_Boolean.otherwise) {
                      return new Data_Maybe.Just(a);
                  };
                  throw new Error("Failed pattern match at Data.Lens.Iso (line 45, column 9 - line 46, column 33): " + [ a.constructor.name ]);
              };
              return iso(Data_Maybe.fromMaybe(def))(g)(dictProfunctor);
          };
      };
  };
  exports["iso"] = iso;
  exports["non"] = non;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Data.Lens.Iso.Newtype"] = $PS["Data.Lens.Iso.Newtype"] || {};
  var exports = $PS["Data.Lens.Iso.Newtype"];
  var Data_Lens_Iso = $PS["Data.Lens.Iso"];
  var Data_Newtype = $PS["Data.Newtype"];                
  var _Newtype = function () {
      return function () {
          return function (dictProfunctor) {
              return Data_Lens_Iso.iso(Data_Newtype.unwrap())(Data_Newtype.wrap())(dictProfunctor);
          };
      };
  };
  exports["_Newtype"] = _Newtype;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Data.Profunctor.Strong"] = $PS["Data.Profunctor.Strong"] || {};
  var exports = $PS["Data.Profunctor.Strong"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Profunctor = $PS["Data.Profunctor"];
  var Data_Tuple = $PS["Data.Tuple"];                
  var strongFn = {
      first: function (a2b) {
          return function (v) {
              return new Data_Tuple.Tuple(a2b(v.value0), v.value1);
          };
      },
      second: Data_Functor.map(Data_Tuple.functorTuple),
      Profunctor0: function () {
          return Data_Profunctor.profunctorFn;
      }
  };
  var first = function (dict) {
      return dict.first;
  };
  exports["first"] = first;
  exports["strongFn"] = strongFn;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Data.Lens.Lens"] = $PS["Data.Lens.Lens"] || {};
  var exports = $PS["Data.Lens.Lens"];
  var Data_Profunctor = $PS["Data.Profunctor"];
  var Data_Profunctor_Strong = $PS["Data.Profunctor.Strong"];
  var Data_Tuple = $PS["Data.Tuple"];
  var lens$prime = function (to) {
      return function (dictStrong) {
          return function (pab) {
              return Data_Profunctor.dimap(dictStrong.Profunctor0())(to)(function (v) {
                  return v.value1(v.value0);
              })(Data_Profunctor_Strong.first(dictStrong)(pab));
          };
      };
  };
  var lens = function (get) {
      return function (set) {
          return function (dictStrong) {
              return lens$prime(function (s) {
                  return new Data_Tuple.Tuple(get(s), function (b) {
                      return set(s)(b);
                  });
              })(dictStrong);
          };
      };
  };
  exports["lens"] = lens;
  exports["lens'"] = lens$prime;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Data.Lens.Record"] = $PS["Data.Lens.Record"] || {};
  var exports = $PS["Data.Lens.Record"];
  var Data_Function = $PS["Data.Function"];
  var Data_Lens_Lens = $PS["Data.Lens.Lens"];
  var Record = $PS["Record"];                
  var prop = function (dictIsSymbol) {
      return function () {
          return function () {
              return function (l) {
                  return function (dictStrong) {
                      return Data_Lens_Lens.lens(Record.get(dictIsSymbol)()(l))(Data_Function.flip(Record.set(dictIsSymbol)()()(l)))(dictStrong);
                  };
              };
          };
      };
  };
  exports["prop"] = prop;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Data.List"] = $PS["Data.List"] || {};
  var exports = $PS["Data.List"];
  var Control_Alt = $PS["Control.Alt"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Lazy = $PS["Control.Lazy"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Ordering = $PS["Data.Ordering"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unfoldable = $PS["Data.Unfoldable"];                                  
  var uncons = function (v) {
      if (v instanceof Data_List_Types.Nil) {
          return Data_Maybe.Nothing.value;
      };
      if (v instanceof Data_List_Types.Cons) {
          return new Data_Maybe.Just({
              head: v.value0,
              tail: v.value1
          });
      };
      throw new Error("Failed pattern match at Data.List (line 263, column 1 - line 263, column 66): " + [ v.constructor.name ]);
  };
  var toUnfoldable = function (dictUnfoldable) {
      return Data_Unfoldable.unfoldr(dictUnfoldable)(function (xs) {
          return Data_Functor.map(Data_Maybe.functorMaybe)(function (rec) {
              return new Data_Tuple.Tuple(rec.head, rec.tail);
          })(uncons(xs));
      });
  };
  var tail = function (v) {
      if (v instanceof Data_List_Types.Nil) {
          return Data_Maybe.Nothing.value;
      };
      if (v instanceof Data_List_Types.Cons) {
          return new Data_Maybe.Just(v.value1);
      };
      throw new Error("Failed pattern match at Data.List (line 249, column 1 - line 249, column 43): " + [ v.constructor.name ]);
  };
  var singleton = function (a) {
      return new Data_List_Types.Cons(a, Data_List_Types.Nil.value);
  };
  var sortBy = function (cmp) {
      var merge = function (v) {
          return function (v1) {
              if (v instanceof Data_List_Types.Cons && v1 instanceof Data_List_Types.Cons) {
                  if (Data_Eq.eq(Data_Ordering.eqOrdering)(cmp(v.value0)(v1.value0))(Data_Ordering.GT.value)) {
                      return new Data_List_Types.Cons(v1.value0, merge(v)(v1.value1));
                  };
                  if (Data_Boolean.otherwise) {
                      return new Data_List_Types.Cons(v.value0, merge(v.value1)(v1));
                  };
              };
              if (v instanceof Data_List_Types.Nil) {
                  return v1;
              };
              if (v1 instanceof Data_List_Types.Nil) {
                  return v;
              };
              throw new Error("Failed pattern match at Data.List (line 477, column 3 - line 477, column 38): " + [ v.constructor.name, v1.constructor.name ]);
          };
      };
      var mergePairs = function (v) {
          if (v instanceof Data_List_Types.Cons && v.value1 instanceof Data_List_Types.Cons) {
              return new Data_List_Types.Cons(merge(v.value0)(v.value1.value0), mergePairs(v.value1.value1));
          };
          return v;
      };
      var mergeAll = function ($copy_v) {
          var $tco_done = false;
          var $tco_result;
          function $tco_loop(v) {
              if (v instanceof Data_List_Types.Cons && v.value1 instanceof Data_List_Types.Nil) {
                  $tco_done = true;
                  return v.value0;
              };
              $copy_v = mergePairs(v);
              return;
          };
          while (!$tco_done) {
              $tco_result = $tco_loop($copy_v);
          };
          return $tco_result;
      };
      var sequences = function (v) {
          if (v instanceof Data_List_Types.Cons && v.value1 instanceof Data_List_Types.Cons) {
              if (Data_Eq.eq(Data_Ordering.eqOrdering)(cmp(v.value0)(v.value1.value0))(Data_Ordering.GT.value)) {
                  return descending(v.value1.value0)(singleton(v.value0))(v.value1.value1);
              };
              if (Data_Boolean.otherwise) {
                  return ascending(v.value1.value0)(function (v1) {
                      return new Data_List_Types.Cons(v.value0, v1);
                  })(v.value1.value1);
              };
          };
          return singleton(v);
      };
      var descending = function ($copy_a) {
          return function ($copy_as) {
              return function ($copy_v) {
                  var $tco_var_a = $copy_a;
                  var $tco_var_as = $copy_as;
                  var $tco_done1 = false;
                  var $tco_result;
                  function $tco_loop(a, as, v) {
                      if (v instanceof Data_List_Types.Cons && Data_Eq.eq(Data_Ordering.eqOrdering)(cmp(a)(v.value0))(Data_Ordering.GT.value)) {
                          $tco_var_a = v.value0;
                          $tco_var_as = new Data_List_Types.Cons(a, as);
                          $copy_v = v.value1;
                          return;
                      };
                      $tco_done1 = true;
                      return new Data_List_Types.Cons(new Data_List_Types.Cons(a, as), sequences(v));
                  };
                  while (!$tco_done1) {
                      $tco_result = $tco_loop($tco_var_a, $tco_var_as, $copy_v);
                  };
                  return $tco_result;
              };
          };
      };
      var ascending = function ($copy_a) {
          return function ($copy_as) {
              return function ($copy_v) {
                  var $tco_var_a = $copy_a;
                  var $tco_var_as = $copy_as;
                  var $tco_done2 = false;
                  var $tco_result;
                  function $tco_loop(a, as, v) {
                      if (v instanceof Data_List_Types.Cons && Data_Eq.notEq(Data_Ordering.eqOrdering)(cmp(a)(v.value0))(Data_Ordering.GT.value)) {
                          $tco_var_a = v.value0;
                          $tco_var_as = function (ys) {
                              return as(new Data_List_Types.Cons(a, ys));
                          };
                          $copy_v = v.value1;
                          return;
                      };
                      $tco_done2 = true;
                      return new Data_List_Types.Cons(as(singleton(a)), sequences(v));
                  };
                  while (!$tco_done2) {
                      $tco_result = $tco_loop($tco_var_a, $tco_var_as, $copy_v);
                  };
                  return $tco_result;
              };
          };
      };
      return function ($344) {
          return mergeAll(sequences($344));
      };
  };
  var sort = function (dictOrd) {
      return function (xs) {
          return sortBy(Data_Ord.compare(dictOrd))(xs);
      };
  };
  var reverse = (function () {
      var go = function ($copy_acc) {
          return function ($copy_v) {
              var $tco_var_acc = $copy_acc;
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(acc, v) {
                  if (v instanceof Data_List_Types.Nil) {
                      $tco_done = true;
                      return acc;
                  };
                  if (v instanceof Data_List_Types.Cons) {
                      $tco_var_acc = new Data_List_Types.Cons(v.value0, acc);
                      $copy_v = v.value1;
                      return;
                  };
                  throw new Error("Failed pattern match at Data.List (line 372, column 3 - line 372, column 19): " + [ acc.constructor.name, v.constructor.name ]);
              };
              while (!$tco_done) {
                  $tco_result = $tco_loop($tco_var_acc, $copy_v);
              };
              return $tco_result;
          };
      };
      return go(Data_List_Types.Nil.value);
  })();
  var take = (function () {
      var go = function ($copy_acc) {
          return function ($copy_v) {
              return function ($copy_v1) {
                  var $tco_var_acc = $copy_acc;
                  var $tco_var_v = $copy_v;
                  var $tco_done = false;
                  var $tco_result;
                  function $tco_loop(acc, v, v1) {
                      if (v < 1) {
                          $tco_done = true;
                          return reverse(acc);
                      };
                      if (v1 instanceof Data_List_Types.Nil) {
                          $tco_done = true;
                          return reverse(acc);
                      };
                      if (v1 instanceof Data_List_Types.Cons) {
                          $tco_var_acc = new Data_List_Types.Cons(v1.value0, acc);
                          $tco_var_v = v - 1 | 0;
                          $copy_v1 = v1.value1;
                          return;
                      };
                      throw new Error("Failed pattern match at Data.List (line 524, column 3 - line 524, column 35): " + [ acc.constructor.name, v.constructor.name, v1.constructor.name ]);
                  };
                  while (!$tco_done) {
                      $tco_result = $tco_loop($tco_var_acc, $tco_var_v, $copy_v1);
                  };
                  return $tco_result;
              };
          };
      };
      return go(Data_List_Types.Nil.value);
  })();
  var $$null = function (v) {
      if (v instanceof Data_List_Types.Nil) {
          return true;
      };
      return false;
  };                                                                                          
  var mapMaybe = function (f) {
      var go = function ($copy_acc) {
          return function ($copy_v) {
              var $tco_var_acc = $copy_acc;
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(acc, v) {
                  if (v instanceof Data_List_Types.Nil) {
                      $tco_done = true;
                      return reverse(acc);
                  };
                  if (v instanceof Data_List_Types.Cons) {
                      var v1 = f(v.value0);
                      if (v1 instanceof Data_Maybe.Nothing) {
                          $tco_var_acc = acc;
                          $copy_v = v.value1;
                          return;
                      };
                      if (v1 instanceof Data_Maybe.Just) {
                          $tco_var_acc = new Data_List_Types.Cons(v1.value0, acc);
                          $copy_v = v.value1;
                          return;
                      };
                      throw new Error("Failed pattern match at Data.List (line 423, column 5 - line 425, column 32): " + [ v1.constructor.name ]);
                  };
                  throw new Error("Failed pattern match at Data.List (line 421, column 3 - line 421, column 27): " + [ acc.constructor.name, v.constructor.name ]);
              };
              while (!$tco_done) {
                  $tco_result = $tco_loop($tco_var_acc, $copy_v);
              };
              return $tco_result;
          };
      };
      return go(Data_List_Types.Nil.value);
  };
  var some = function (dictAlternative) {
      return function (dictLazy) {
          return function (v) {
              return Control_Apply.apply((dictAlternative.Applicative0()).Apply0())(Data_Functor.map(((dictAlternative.Plus1()).Alt0()).Functor0())(Data_List_Types.Cons.create)(v))(Control_Lazy.defer(dictLazy)(function (v1) {
                  return many(dictAlternative)(dictLazy)(v);
              }));
          };
      };
  };
  var many = function (dictAlternative) {
      return function (dictLazy) {
          return function (v) {
              return Control_Alt.alt((dictAlternative.Plus1()).Alt0())(some(dictAlternative)(dictLazy)(v))(Control_Applicative.pure(dictAlternative.Applicative0())(Data_List_Types.Nil.value));
          };
      };
  };
  var length = Data_Foldable.foldl(Data_List_Types.foldableList)(function (acc) {
      return function (v) {
          return acc + 1 | 0;
      };
  })(0);
  var head = function (v) {
      if (v instanceof Data_List_Types.Nil) {
          return Data_Maybe.Nothing.value;
      };
      if (v instanceof Data_List_Types.Cons) {
          return new Data_Maybe.Just(v.value0);
      };
      throw new Error("Failed pattern match at Data.List (line 234, column 1 - line 234, column 22): " + [ v.constructor.name ]);
  };
  var fromFoldable = function (dictFoldable) {
      return Data_Foldable.foldr(dictFoldable)(Data_List_Types.Cons.create)(Data_List_Types.Nil.value);
  };
  var filter = function (p) {
      var go = function ($copy_acc) {
          return function ($copy_v) {
              var $tco_var_acc = $copy_acc;
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(acc, v) {
                  if (v instanceof Data_List_Types.Nil) {
                      $tco_done = true;
                      return reverse(acc);
                  };
                  if (v instanceof Data_List_Types.Cons) {
                      if (p(v.value0)) {
                          $tco_var_acc = new Data_List_Types.Cons(v.value0, acc);
                          $copy_v = v.value1;
                          return;
                      };
                      if (Data_Boolean.otherwise) {
                          $tco_var_acc = acc;
                          $copy_v = v.value1;
                          return;
                      };
                  };
                  throw new Error("Failed pattern match at Data.List (line 394, column 3 - line 394, column 27): " + [ acc.constructor.name, v.constructor.name ]);
              };
              while (!$tco_done) {
                  $tco_result = $tco_loop($tco_var_acc, $copy_v);
              };
              return $tco_result;
          };
      };
      return go(Data_List_Types.Nil.value);
  };
  exports["toUnfoldable"] = toUnfoldable;
  exports["fromFoldable"] = fromFoldable;
  exports["some"] = some;
  exports["null"] = $$null;
  exports["length"] = length;
  exports["head"] = head;
  exports["reverse"] = reverse;
  exports["filter"] = filter;
  exports["mapMaybe"] = mapMaybe;
  exports["sort"] = sort;
  exports["sortBy"] = sortBy;
  exports["take"] = take;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Data.Set"] = $PS["Data.Set"] || {};
  var exports = $PS["Data.Set"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_Rec_Class = $PS["Control.Monad.Rec.Class"];
  var Control_Monad_ST_Internal = $PS["Control.Monad.ST.Internal"];
  var Data_Array = $PS["Data.Array"];
  var Data_Array_ST = $PS["Data.Array.ST"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_List = $PS["Data.List"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Map_Internal = $PS["Data.Map.Internal"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Ordering = $PS["Data.Ordering"];
  var Data_Show = $PS["Data.Show"];
  var Data_Unfoldable = $PS["Data.Unfoldable"];
  var Data_Unit = $PS["Data.Unit"];                
  var $$Set = function (x) {
      return x;
  };
  var union = function (dictOrd) {
      return function (v) {
          return function (v1) {
              return Data_Map_Internal.union(dictOrd)(v)(v1);
          };
      };
  };
  var toList = function (v) {
      return Data_Map_Internal.keys(v);
  };
  var toUnfoldable = function (dictUnfoldable) {
      var $70 = Data_List.toUnfoldable(dictUnfoldable);
      return function ($71) {
          return $70(toList($71));
      };
  };
  var size = function (v) {
      return Data_Map_Internal.size(v);
  };
  var singleton = function (a) {
      return Data_Map_Internal.singleton(a)(Data_Unit.unit);
  };
  var showSet = function (dictShow) {
      return {
          show: function (s) {
              return "(fromFoldable " + (Data_Show.show(Data_Show.showArray(dictShow))(toUnfoldable(Data_Unfoldable.unfoldableArray)(s)) + ")");
          }
      };
  };
  var semigroupSet = function (dictOrd) {
      return {
          append: union(dictOrd)
      };
  };
  var member = function (dictOrd) {
      return function (a) {
          return function (v) {
              return Data_Map_Internal.member(dictOrd)(a)(v);
          };
      };
  };
  var isEmpty = function (v) {
      return Data_Map_Internal.isEmpty(v);
  };
  var insert = function (dictOrd) {
      return function (a) {
          return function (v) {
              return Data_Map_Internal.insert(dictOrd)(a)(Data_Unit.unit)(v);
          };
      };
  };
  var fromMap = $$Set;
  var foldableSet = {
      foldMap: function (dictMonoid) {
          return function (f) {
              var $72 = Data_Foldable.foldMap(Data_List_Types.foldableList)(dictMonoid)(f);
              return function ($73) {
                  return $72(toList($73));
              };
          };
      },
      foldl: function (f) {
          return function (x) {
              var $74 = Data_Foldable.foldl(Data_List_Types.foldableList)(f)(x);
              return function ($75) {
                  return $74(toList($75));
              };
          };
      },
      foldr: function (f) {
          return function (x) {
              var $76 = Data_Foldable.foldr(Data_List_Types.foldableList)(f)(x);
              return function ($77) {
                  return $76(toList($77));
              };
          };
      }
  };
  var eqSet = function (dictEq) {
      return {
          eq: function (v) {
              return function (v1) {
                  return Data_Eq.eq(Data_Map_Internal.eqMap(dictEq)(Data_Eq.eqUnit))(v)(v1);
              };
          }
      };
  };
  var ordSet = function (dictOrd) {
      return {
          compare: function (s1) {
              return function (s2) {
                  return Data_Ord.compare(Data_List_Types.ordList(dictOrd))(toList(s1))(toList(s2));
              };
          },
          Eq0: function () {
              return eqSet(dictOrd.Eq0());
          }
      };
  };
  var empty = Data_Map_Internal.empty;
  var fromFoldable = function (dictFoldable) {
      return function (dictOrd) {
          return Data_Foldable.foldl(dictFoldable)(function (m) {
              return function (a) {
                  return insert(dictOrd)(a)(m);
              };
          })(empty);
      };
  };
  var intersection = function (dictOrd) {
      return function (s1) {
          return function (s2) {
              var toArray = (function () {
                  var $78 = Data_Array.fromFoldable(Data_List_Types.foldableList);
                  return function ($79) {
                      return $78(toList($79));
                  };
              })();
              var rs = toArray(s2);
              var rl = Data_Array.length(rs);
              var ls = toArray(s1);
              var ll = Data_Array.length(ls);
              var intersect = function (acc) {
                  var go = function (l) {
                      return function (r) {
                          var $65 = l < ll && r < rl;
                          if ($65) {
                              var v = Data_Ord.compare(dictOrd)(ls[l])(rs[r]);
                              if (v instanceof Data_Ordering.EQ) {
                                  return function __do() {
                                      Data_Array_ST.push(ls[l])(acc)();
                                      return new Control_Monad_Rec_Class.Loop({
                                          a: l + 1 | 0,
                                          b: r + 1 | 0
                                      });
                                  };
                              };
                              if (v instanceof Data_Ordering.LT) {
                                  return Control_Applicative.pure(Control_Monad_ST_Internal.applicativeST)(new Control_Monad_Rec_Class.Loop({
                                      a: l + 1 | 0,
                                      b: r
                                  }));
                              };
                              if (v instanceof Data_Ordering.GT) {
                                  return Control_Applicative.pure(Control_Monad_ST_Internal.applicativeST)(new Control_Monad_Rec_Class.Loop({
                                      a: l,
                                      b: r + 1 | 0
                                  }));
                              };
                              throw new Error("Failed pattern match at Data.Set (line 184, column 12 - line 189, column 43): " + [ v.constructor.name ]);
                          };
                          return Control_Applicative.pure(Control_Monad_ST_Internal.applicativeST)(new Control_Monad_Rec_Class.Done(acc));
                      };
                  };
                  return Control_Monad_Rec_Class.tailRecM2(Control_Monad_ST_Internal.monadRecST)(go)(0)(0);
              };
              return fromFoldable(Data_Foldable.foldableArray)(dictOrd)(Control_Bind.bind(Control_Monad_ST_Internal.bindST)(Control_Bind.bind(Control_Monad_ST_Internal.bindST)(Data_Array_ST["new"])(intersect))(Data_Array_ST.unsafeFreeze)());
          };
      };
  };
  var mapMaybe = function (dictOrd) {
      return function (f) {
          return Data_Foldable.foldr(foldableSet)(function (a) {
              return function (acc) {
                  return Data_Maybe.maybe(acc)(function (b) {
                      return insert(dictOrd)(b)(acc);
                  })(f(a));
              };
          })(empty);
      };
  };
  var monoidSet = function (dictOrd) {
      return {
          mempty: empty,
          Semigroup0: function () {
              return semigroupSet(dictOrd);
          }
      };
  };
  var $$delete = function (dictOrd) {
      return function (a) {
          return function (v) {
              return Data_Map_Internal["delete"](dictOrd)(a)(v);
          };
      };
  };
  var difference = function (dictOrd) {
      return function (s1) {
          return function (s2) {
              return Data_Foldable.foldl(Data_List_Types.foldableList)(Data_Function.flip($$delete(dictOrd)))(s1)(toList(s2));
          };
      };
  };
  exports["fromFoldable"] = fromFoldable;
  exports["toUnfoldable"] = toUnfoldable;
  exports["empty"] = empty;
  exports["isEmpty"] = isEmpty;
  exports["singleton"] = singleton;
  exports["insert"] = insert;
  exports["member"] = member;
  exports["size"] = size;
  exports["union"] = union;
  exports["difference"] = difference;
  exports["intersection"] = intersection;
  exports["mapMaybe"] = mapMaybe;
  exports["fromMap"] = fromMap;
  exports["showSet"] = showSet;
  exports["ordSet"] = ordSet;
  exports["monoidSet"] = monoidSet;
  exports["semigroupSet"] = semigroupSet;
  exports["foldableSet"] = foldableSet;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Ctl.Internal.Cardano.Types.Transaction"] = $PS["Ctl.Internal.Cardano.Types.Transaction"] || {};
  var exports = $PS["Ctl.Internal.Cardano.Types.Transaction"];
  var Aeson = $PS["Aeson"];
  var Control_Alt = $PS["Control.Alt"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Ctl_Internal_Cardano_Types_NativeScript = $PS["Ctl.Internal.Cardano.Types.NativeScript"];
  var Ctl_Internal_Cardano_Types_ScriptRef = $PS["Ctl.Internal.Cardano.Types.ScriptRef"];
  var Ctl_Internal_Cardano_Types_Value = $PS["Ctl.Internal.Cardano.Types.Value"];
  var Ctl_Internal_Deserialization_FromBytes = $PS["Ctl.Internal.Deserialization.FromBytes"];
  var Ctl_Internal_Deserialization_Keys = $PS["Ctl.Internal.Deserialization.Keys"];
  var Ctl_Internal_Helpers = $PS["Ctl.Internal.Helpers"];
  var Ctl_Internal_Serialization_Address = $PS["Ctl.Internal.Serialization.Address"];
  var Ctl_Internal_Serialization_Hash = $PS["Ctl.Internal.Serialization.Hash"];
  var Ctl_Internal_Serialization_Keys = $PS["Ctl.Internal.Serialization.Keys"];
  var Ctl_Internal_Serialization_ToBytes = $PS["Ctl.Internal.Serialization.ToBytes"];
  var Ctl_Internal_Types_BigNum = $PS["Ctl.Internal.Types.BigNum"];
  var Ctl_Internal_Types_ByteArray = $PS["Ctl.Internal.Types.ByteArray"];
  var Ctl_Internal_Types_Int = $PS["Ctl.Internal.Types.Int"];
  var Ctl_Internal_Types_OutputDatum = $PS["Ctl.Internal.Types.OutputDatum"];
  var Ctl_Internal_Types_PlutusData = $PS["Ctl.Internal.Types.PlutusData"];
  var Ctl_Internal_Types_PubKeyHash = $PS["Ctl.Internal.Types.PubKeyHash"];
  var Ctl_Internal_Types_RawBytes = $PS["Ctl.Internal.Types.RawBytes"];
  var Ctl_Internal_Types_RedeemerTag = $PS["Ctl.Internal.Types.RedeemerTag"];
  var Ctl_Internal_Types_RewardAddress = $PS["Ctl.Internal.Types.RewardAddress"];
  var Ctl_Internal_Types_Scripts = $PS["Ctl.Internal.Types.Scripts"];
  var Ctl_Internal_Types_Transaction = $PS["Ctl.Internal.Types.Transaction"];
  var Ctl_Internal_Types_TransactionMetadata = $PS["Ctl.Internal.Types.TransactionMetadata"];
  var Ctl_Internal_Types_VRFKeyHash = $PS["Ctl.Internal.Types.VRFKeyHash"];
  var Data_Argonaut_Decode_Error = $PS["Data.Argonaut.Decode.Error"];
  var Data_Array = $PS["Data.Array"];
  var Data_BigInt = $PS["Data.BigInt"];
  var Data_Either = $PS["Data.Either"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Generic_Rep = $PS["Data.Generic.Rep"];
  var Data_Lens_Iso_Newtype = $PS["Data.Lens.Iso.Newtype"];
  var Data_Lens_Lens = $PS["Data.Lens.Lens"];
  var Data_Lens_Record = $PS["Data.Lens.Record"];
  var Data_Map_Internal = $PS["Data.Map.Internal"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Set = $PS["Data.Set"];
  var Data_Show = $PS["Data.Show"];
  var Data_Show_Generic = $PS["Data.Show.Generic"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_UInt = $PS["Data.UInt"];                
  var URL = function (x) {
      return x;
  };
  var ScriptDataHash = function (x) {
      return x;
  };
  var PublicKey = function (x) {
      return x;
  };
  var Vkey = function (x) {
      return x;
  };
  var PoolPubKeyHash = function (x) {
      return x;
  };
  var PoolMetadataHash = function (x) {
      return x;
  };
  var ToOtherPot = (function () {
      function ToOtherPot(value0) {
          this.value0 = value0;
      };
      ToOtherPot.create = function (value0) {
          return new ToOtherPot(value0);
      };
      return ToOtherPot;
  })();
  var ToStakeCreds = (function () {
      function ToStakeCreds(value0) {
          this.value0 = value0;
      };
      ToStakeCreds.create = function (value0) {
          return new ToStakeCreds(value0);
      };
      return ToStakeCreds;
  })();
  var Ipv6 = function (x) {
      return x;
  };
  var Ipv4 = function (x) {
      return x;
  };
  var SingleHostAddr = (function () {
      function SingleHostAddr(value0) {
          this.value0 = value0;
      };
      SingleHostAddr.create = function (value0) {
          return new SingleHostAddr(value0);
      };
      return SingleHostAddr;
  })();
  var SingleHostName = (function () {
      function SingleHostName(value0) {
          this.value0 = value0;
      };
      SingleHostName.create = function (value0) {
          return new SingleHostName(value0);
      };
      return SingleHostName;
  })();
  var MultiHostName = (function () {
      function MultiHostName(value0) {
          this.value0 = value0;
      };
      MultiHostName.create = function (value0) {
          return new MultiHostName(value0);
      };
      return MultiHostName;
  })();
  var Ed25519Signature = function (x) {
      return x;
  };
  var Costmdls = function (x) {
      return x;
  };
  var StakeRegistration = (function () {
      function StakeRegistration(value0) {
          this.value0 = value0;
      };
      StakeRegistration.create = function (value0) {
          return new StakeRegistration(value0);
      };
      return StakeRegistration;
  })();
  var StakeDeregistration = (function () {
      function StakeDeregistration(value0) {
          this.value0 = value0;
      };
      StakeDeregistration.create = function (value0) {
          return new StakeDeregistration(value0);
      };
      return StakeDeregistration;
  })();
  var StakeDelegation = (function () {
      function StakeDelegation(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      StakeDelegation.create = function (value0) {
          return function (value1) {
              return new StakeDelegation(value0, value1);
          };
      };
      return StakeDelegation;
  })();
  var PoolRegistration = (function () {
      function PoolRegistration(value0) {
          this.value0 = value0;
      };
      PoolRegistration.create = function (value0) {
          return new PoolRegistration(value0);
      };
      return PoolRegistration;
  })();
  var PoolRetirement = (function () {
      function PoolRetirement(value0) {
          this.value0 = value0;
      };
      PoolRetirement.create = function (value0) {
          return new PoolRetirement(value0);
      };
      return PoolRetirement;
  })();
  var GenesisKeyDelegation = (function () {
      function GenesisKeyDelegation(value0) {
          this.value0 = value0;
      };
      GenesisKeyDelegation.create = function (value0) {
          return new GenesisKeyDelegation(value0);
      };
      return GenesisKeyDelegation;
  })();
  var MoveInstantaneousRewardsCert = (function () {
      function MoveInstantaneousRewardsCert(value0) {
          this.value0 = value0;
      };
      MoveInstantaneousRewardsCert.create = function (value0) {
          return new MoveInstantaneousRewardsCert(value0);
      };
      return MoveInstantaneousRewardsCert;
  })();
  var TransactionWitnessSet = function (x) {
      return x;
  };
  var TxBody = function (x) {
      return x;
  };
  var Transaction = function (x) {
      return x;
  };
  var showPoolPubKeyHash = {
      show: function (v) {
          return "(PoolPubKeyHash (Ed25519KeyHash (unsafePartial $ fromJust $ ed25519KeyHashFromBech32 " + (Data_Show.show(Data_Maybe.showMaybe(Data_Show.showString))(Ctl_Internal_Serialization_Hash.ed25519KeyHashToBech32("pool")(v)) + ")))");
      }
  };
  var semigroupMint = Ctl_Internal_Cardano_Types_Value.semigroupNonAdaAsset;
  var semigroupAuxiliaryData = {
      append: function (v) {
          return function (v1) {
              return {
                  metadata: Data_Semigroup.append(Data_Maybe.semigroupMaybe(Ctl_Internal_Types_TransactionMetadata.semigroupGeneralTransacti))(v.metadata)(v1.metadata),
                  nativeScripts: Control_Apply.lift2(Data_Maybe.applyMaybe)(Data_Array.union(Ctl_Internal_Cardano_Types_NativeScript.eqNativeScript))(v.nativeScripts)(v1.nativeScripts),
                  plutusScripts: Control_Apply.lift2(Data_Maybe.applyMaybe)(Data_Array.union(Ctl_Internal_Types_Scripts.eqPlutusScript))(v.plutusScripts)(v1.plutusScripts)
              };
          };
      }
  };
  var genericVkeywitness_ = {
      to: function (x) {
          return x;
      },
      from: function (x) {
          return x;
      }
  };
  var genericVkey_ = {
      to: function (x) {
          return x;
      },
      from: function (x) {
          return x;
      }
  };
  var genericURL_ = {
      to: function (x) {
          return x;
      },
      from: function (x) {
          return x;
      }
  };
  var showURL = {
      show: Data_Show_Generic.genericShow(genericURL_)(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Data_Show.showString))({
          reflectSymbol: function () {
              return "URL";
          }
      }))
  };
  var genericTxBody_ = {
      to: function (x) {
          return x;
      },
      from: function (x) {
          return x;
      }
  };
  var genericTransaction_ = {
      to: function (x) {
          return x;
      },
      from: function (x) {
          return x;
      }
  };
  var genericTransactionWitness = {
      to: function (x) {
          return x;
      },
      from: function (x) {
          return x;
      }
  };
  var genericTransactionOutput_ = {
      to: function (x) {
          return x;
      },
      from: function (x) {
          return x;
      }
  };
  var showTransactionOutput = {
      show: Data_Show_Generic.genericShow(genericTransactionOutput_)(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "address";
          }
      })(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "amount";
          }
      })(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "datum";
          }
      })(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "scriptRef";
          }
      })(Data_Show.showRecordFieldsNil)(Data_Maybe.showMaybe(Ctl_Internal_Cardano_Types_ScriptRef.showScriptRef)))(Ctl_Internal_Types_OutputDatum.showOutputDatum))(Ctl_Internal_Cardano_Types_Value.showValue))(Ctl_Internal_Serialization_Address.showAddress))))({
          reflectSymbol: function () {
              return "TransactionOutput";
          }
      }))
  };
  var genericScriptDataHash_ = {
      to: function (x) {
          return x;
      },
      from: function (x) {
          return x;
      }
  };
  var showScriptDataHash = {
      show: Data_Show_Generic.genericShow(genericScriptDataHash_)(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Ctl_Internal_Types_ByteArray.showByteArray))({
          reflectSymbol: function () {
              return "ScriptDataHash";
          }
      }))
  };
  var genericRequiredSigner_ = {
      to: function (x) {
          return x;
      },
      from: function (x) {
          return x;
      }
  };
  var showRequiredSigner = {
      show: Data_Show_Generic.genericShow(genericRequiredSigner_)(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Ctl_Internal_Serialization_Hash.showEd25519KeyHash))({
          reflectSymbol: function () {
              return "RequiredSigner";
          }
      }))
  };
  var genericRelay_ = {
      to: function (x) {
          if (x instanceof Data_Generic_Rep.Inl) {
              return new SingleHostAddr(x.value0);
          };
          if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inl) {
              return new SingleHostName(x.value0.value0);
          };
          if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inr) {
              return new MultiHostName(x.value0.value0);
          };
          throw new Error("Failed pattern match at Ctl.Internal.Cardano.Types.Transaction (line 516, column 1 - line 516, column 32): " + [ x.constructor.name ]);
      },
      from: function (x) {
          if (x instanceof SingleHostAddr) {
              return new Data_Generic_Rep.Inl(x.value0);
          };
          if (x instanceof SingleHostName) {
              return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0));
          };
          if (x instanceof MultiHostName) {
              return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(x.value0));
          };
          throw new Error("Failed pattern match at Ctl.Internal.Cardano.Types.Transaction (line 516, column 1 - line 516, column 32): " + [ x.constructor.name ]);
      }
  };
  var genericRedeemer_ = {
      to: function (x) {
          return x;
      },
      from: function (x) {
          return x;
      }
  };
  var showRedeemer = {
      show: Data_Show_Generic.genericShow(genericRedeemer_)(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "data";
          }
      })(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "exUnits";
          }
      })(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "index";
          }
      })(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "tag";
          }
      })(Data_Show.showRecordFieldsNil)(Ctl_Internal_Types_RedeemerTag.showRedeemerTag))(Data_BigInt.showBigInt))(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "mem";
          }
      })(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "steps";
          }
      })(Data_Show.showRecordFieldsNil)(Data_BigInt.showBigInt))(Data_BigInt.showBigInt))))(Ctl_Internal_Types_PlutusData.showPlutusData))))({
          reflectSymbol: function () {
              return "Redeemer";
          }
      }))
  };
  var genericProposedProtocolPa = {
      to: function (x) {
          return x;
      },
      from: function (x) {
          return x;
      }
  };
  var genericPoolMetadata_ = {
      to: function (x) {
          return x;
      },
      from: function (x) {
          return x;
      }
  };
  var genericPoolMetadataHash_ = {
      to: function (x) {
          return x;
      },
      from: function (x) {
          return x;
      }
  };
  var showPoolMetadataHash = {
      show: Data_Show_Generic.genericShow(genericPoolMetadataHash_)(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Ctl_Internal_Types_ByteArray.showByteArray))({
          reflectSymbol: function () {
              return "PoolMetadataHash";
          }
      }))
  };
  var showPoolMetadata = {
      show: Data_Show_Generic.genericShow(genericPoolMetadata_)(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "hash";
          }
      })(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "url";
          }
      })(Data_Show.showRecordFieldsNil)(showURL))(showPoolMetadataHash))))({
          reflectSymbol: function () {
              return "PoolMetadata";
          }
      }))
  };
  var genericMoveInstantaneousR = {
      to: function (x) {
          if (x instanceof Data_Generic_Rep.Inl) {
              return new ToOtherPot(x.value0);
          };
          if (x instanceof Data_Generic_Rep.Inr) {
              return new ToStakeCreds(x.value0);
          };
          throw new Error("Failed pattern match at Ctl.Internal.Cardano.Types.Transaction (line 591, column 1 - line 591, column 50): " + [ x.constructor.name ]);
      },
      from: function (x) {
          if (x instanceof ToOtherPot) {
              return new Data_Generic_Rep.Inl(x.value0);
          };
          if (x instanceof ToStakeCreds) {
              return new Data_Generic_Rep.Inr(x.value0);
          };
          throw new Error("Failed pattern match at Ctl.Internal.Cardano.Types.Transaction (line 591, column 1 - line 591, column 50): " + [ x.constructor.name ]);
      }
  };
  var genericMint_ = {
      to: function (x) {
          return x;
      },
      from: function (x) {
          return x;
      }
  };
  var showMint = {
      show: Data_Show_Generic.genericShow(genericMint_)(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Ctl_Internal_Cardano_Types_Value.showNonAdaAsset))({
          reflectSymbol: function () {
              return "Mint";
          }
      }))
  };
  var genericMIRToStakeCredenti = {
      to: function (x) {
          return x;
      },
      from: function (x) {
          return x;
      }
  };
  var showMIRToStakeCredentials = {
      show: Data_Show_Generic.genericShow(genericMIRToStakeCredenti)(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Data_Map_Internal.showMap(Ctl_Internal_Serialization_Address.showStakeCredential)(Ctl_Internal_Types_Int.showInt)))({
          reflectSymbol: function () {
              return "MIRToStakeCredentials";
          }
      }))
  };
  var showMoveInstantaneousRewa = {
      show: Data_Show_Generic.genericShow(genericMoveInstantaneousR)(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "amount";
          }
      })(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "pot";
          }
      })(Data_Show.showRecordFieldsNil)(Data_Show.showNumber))(Ctl_Internal_Types_BigNum.showBigNum))))({
          reflectSymbol: function () {
              return "ToOtherPot";
          }
      }))(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "amounts";
          }
      })(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "pot";
          }
      })(Data_Show.showRecordFieldsNil)(Data_Show.showNumber))(showMIRToStakeCredentials))))({
          reflectSymbol: function () {
              return "ToStakeCreds";
          }
      })))
  };
  var genericIpv6_ = {
      to: function (x) {
          return x;
      },
      from: function (x) {
          return x;
      }
  };
  var showIpv6 = {
      show: Data_Show_Generic.genericShow(genericIpv6_)(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Ctl_Internal_Types_ByteArray.showByteArray))({
          reflectSymbol: function () {
              return "Ipv6";
          }
      }))
  };
  var genericIpv4_ = {
      to: function (x) {
          return x;
      },
      from: function (x) {
          return x;
      }
  };
  var showIpv4 = {
      show: Data_Show_Generic.genericShow(genericIpv4_)(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Ctl_Internal_Types_ByteArray.showByteArray))({
          reflectSymbol: function () {
              return "Ipv4";
          }
      }))
  };
  var showRelay = {
      show: Data_Show_Generic.genericShow(genericRelay_)(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "ipv4";
          }
      })(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "ipv6";
          }
      })(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "port";
          }
      })(Data_Show.showRecordFieldsNil)(Data_Maybe.showMaybe(Data_Show.showInt)))(Data_Maybe.showMaybe(showIpv6)))(Data_Maybe.showMaybe(showIpv4)))))({
          reflectSymbol: function () {
              return "SingleHostAddr";
          }
      }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "dnsName";
          }
      })(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "port";
          }
      })(Data_Show.showRecordFieldsNil)(Data_Maybe.showMaybe(Data_Show.showInt)))(Data_Show.showString))))({
          reflectSymbol: function () {
              return "SingleHostName";
          }
      }))(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "dnsName";
          }
      })(Data_Show.showRecordFieldsNil)(Data_Show.showString))))({
          reflectSymbol: function () {
              return "MultiHostName";
          }
      }))))
  };
  var genericGenesisHash_ = {
      to: function (x) {
          return x;
      },
      from: function (x) {
          return x;
      }
  };
  var showGenesisHash = {
      show: Data_Show_Generic.genericShow(genericGenesisHash_)(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Ctl_Internal_Types_ByteArray.showByteArray))({
          reflectSymbol: function () {
              return "GenesisHash";
          }
      }))
  };
  var genericGenesisDelegateHas = {
      to: function (x) {
          return x;
      },
      from: function (x) {
          return x;
      }
  };
  var showGenesisDelegateHash = {
      show: Data_Show_Generic.genericShow(genericGenesisDelegateHas)(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Ctl_Internal_Types_ByteArray.showByteArray))({
          reflectSymbol: function () {
              return "GenesisDelegateHash";
          }
      }))
  };
  var genericEpoch_ = {
      to: function (x) {
          return x;
      },
      from: function (x) {
          return x;
      }
  };
  var showEpoch = {
      show: Data_Show_Generic.genericShow(genericEpoch_)(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Data_UInt.uintShowInstance))({
          reflectSymbol: function () {
              return "Epoch";
          }
      }))
  };
  var genericCostmdls_ = {
      to: function (x) {
          return x;
      },
      from: function (x) {
          return x;
      }
  };
  var genericCostModel_ = {
      to: function (x) {
          return x;
      },
      from: function (x) {
          return x;
      }
  };
  var showCostModel = {
      show: Data_Show_Generic.genericShow(genericCostModel_)(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Data_Show.showArray(Ctl_Internal_Types_Int.showInt)))({
          reflectSymbol: function () {
              return "CostModel";
          }
      }))
  };
  var showCostmdls = {
      show: Data_Show_Generic.genericShow(genericCostmdls_)(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Data_Map_Internal.showMap(Ctl_Internal_Types_Scripts.showLanguage)(showCostModel)))({
          reflectSymbol: function () {
              return "Costmdls";
          }
      }))
  };
  var showProposedProtocolParam = {
      show: Data_Show_Generic.genericShow(genericProposedProtocolPa)(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Data_Map_Internal.showMap(showGenesisHash)(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "adaPerUtxoByte";
          }
      })(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "collateralPercentage";
          }
      })(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "costModels";
          }
      })(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "executionCosts";
          }
      })(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "expansionRate";
          }
      })(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "keyDeposit";
          }
      })(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "maxBlockBodySize";
          }
      })(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "maxBlockExUnits";
          }
      })(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "maxBlockHeaderSize";
          }
      })(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "maxCollateralInputs";
          }
      })(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "maxEpoch";
          }
      })(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "maxTxExUnits";
          }
      })(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "maxTxSize";
          }
      })(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "maxValueSize";
          }
      })(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "minPoolCost";
          }
      })(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "minfeeA";
          }
      })(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "minfeeB";
          }
      })(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "nOpt";
          }
      })(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "poolDeposit";
          }
      })(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "poolPledgeInfluence";
          }
      })(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "protocolVersion";
          }
      })(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "treasuryGrowthRate";
          }
      })(Data_Show.showRecordFieldsNil)(Data_Maybe.showMaybe(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "denominator";
          }
      })(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "numerator";
          }
      })(Data_Show.showRecordFieldsNil)(Ctl_Internal_Types_BigNum.showBigNum))(Ctl_Internal_Types_BigNum.showBigNum)))))(Data_Maybe.showMaybe(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "major";
          }
      })(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "minor";
          }
      })(Data_Show.showRecordFieldsNil)(Data_UInt.uintShowInstance))(Data_UInt.uintShowInstance)))))(Data_Maybe.showMaybe(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "denominator";
          }
      })(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "numerator";
          }
      })(Data_Show.showRecordFieldsNil)(Ctl_Internal_Types_BigNum.showBigNum))(Ctl_Internal_Types_BigNum.showBigNum)))))(Data_Maybe.showMaybe(Ctl_Internal_Cardano_Types_Value.showCoin)))(Data_Maybe.showMaybe(Data_UInt.uintShowInstance)))(Data_Maybe.showMaybe(Ctl_Internal_Cardano_Types_Value.showCoin)))(Data_Maybe.showMaybe(Ctl_Internal_Cardano_Types_Value.showCoin)))(Data_Maybe.showMaybe(Ctl_Internal_Types_BigNum.showBigNum)))(Data_Maybe.showMaybe(Data_UInt.uintShowInstance)))(Data_Maybe.showMaybe(Data_UInt.uintShowInstance)))(Data_Maybe.showMaybe(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "mem";
          }
      })(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "steps";
          }
      })(Data_Show.showRecordFieldsNil)(Data_BigInt.showBigInt))(Data_BigInt.showBigInt)))))(Data_Maybe.showMaybe(showEpoch)))(Data_Maybe.showMaybe(Data_UInt.uintShowInstance)))(Data_Maybe.showMaybe(Data_UInt.uintShowInstance)))(Data_Maybe.showMaybe(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "mem";
          }
      })(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "steps";
          }
      })(Data_Show.showRecordFieldsNil)(Data_BigInt.showBigInt))(Data_BigInt.showBigInt)))))(Data_Maybe.showMaybe(Data_UInt.uintShowInstance)))(Data_Maybe.showMaybe(Ctl_Internal_Cardano_Types_Value.showCoin)))(Data_Maybe.showMaybe(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "denominator";
          }
      })(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "numerator";
          }
      })(Data_Show.showRecordFieldsNil)(Ctl_Internal_Types_BigNum.showBigNum))(Ctl_Internal_Types_BigNum.showBigNum)))))(Data_Maybe.showMaybe(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "memPrice";
          }
      })(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "stepPrice";
          }
      })(Data_Show.showRecordFieldsNil)(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "denominator";
          }
      })(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "numerator";
          }
      })(Data_Show.showRecordFieldsNil)(Ctl_Internal_Types_BigNum.showBigNum))(Ctl_Internal_Types_BigNum.showBigNum))))(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "denominator";
          }
      })(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "numerator";
          }
      })(Data_Show.showRecordFieldsNil)(Ctl_Internal_Types_BigNum.showBigNum))(Ctl_Internal_Types_BigNum.showBigNum)))))))(Data_Maybe.showMaybe(showCostmdls)))(Data_Maybe.showMaybe(Data_UInt.uintShowInstance)))(Data_Maybe.showMaybe(Ctl_Internal_Types_BigNum.showBigNum))))))({
          reflectSymbol: function () {
              return "ProposedProtocolParameterUpdates";
          }
      }))
  };
  var genericCertificate_ = {
      to: function (x) {
          if (x instanceof Data_Generic_Rep.Inl) {
              return new StakeRegistration(x.value0);
          };
          if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inl) {
              return new StakeDeregistration(x.value0.value0);
          };
          if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0 instanceof Data_Generic_Rep.Inl)) {
              return new StakeDelegation(x.value0.value0.value0.value0, x.value0.value0.value0.value1);
          };
          if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0 instanceof Data_Generic_Rep.Inl))) {
              return new PoolRegistration(x.value0.value0.value0.value0);
          };
          if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl)))) {
              return new PoolRetirement(x.value0.value0.value0.value0.value0);
          };
          if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl))))) {
              return new GenesisKeyDelegation(x.value0.value0.value0.value0.value0.value0);
          };
          if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr))))) {
              return new MoveInstantaneousRewardsCert(x.value0.value0.value0.value0.value0.value0);
          };
          throw new Error("Failed pattern match at Ctl.Internal.Cardano.Types.Transaction (line 668, column 1 - line 668, column 38): " + [ x.constructor.name ]);
      },
      from: function (x) {
          if (x instanceof StakeRegistration) {
              return new Data_Generic_Rep.Inl(x.value0);
          };
          if (x instanceof StakeDeregistration) {
              return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0));
          };
          if (x instanceof StakeDelegation) {
              return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(new Data_Generic_Rep.Product(x.value0, x.value1))));
          };
          if (x instanceof PoolRegistration) {
              return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0))));
          };
          if (x instanceof PoolRetirement) {
              return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0)))));
          };
          if (x instanceof GenesisKeyDelegation) {
              return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0))))));
          };
          if (x instanceof MoveInstantaneousRewardsCert) {
              return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(x.value0))))));
          };
          throw new Error("Failed pattern match at Ctl.Internal.Cardano.Types.Transaction (line 668, column 1 - line 668, column 38): " + [ x.constructor.name ]);
      }
  };
  var showCertificate = {
      show: Data_Show_Generic.genericShow(genericCertificate_)(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Ctl_Internal_Serialization_Address.showStakeCredential))({
          reflectSymbol: function () {
              return "StakeRegistration";
          }
      }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Ctl_Internal_Serialization_Address.showStakeCredential))({
          reflectSymbol: function () {
              return "StakeDeregistration";
          }
      }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsProduct(Data_Show_Generic.genericShowArgsArgument(Ctl_Internal_Serialization_Address.showStakeCredential))(Data_Show_Generic.genericShowArgsArgument(showPoolPubKeyHash)))({
          reflectSymbol: function () {
              return "StakeDelegation";
          }
      }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "cost";
          }
      })(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "margin";
          }
      })(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "operator";
          }
      })(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "pledge";
          }
      })(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "poolMetadata";
          }
      })(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "poolOwners";
          }
      })(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "relays";
          }
      })(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "rewardAccount";
          }
      })(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "vrfKeyhash";
          }
      })(Data_Show.showRecordFieldsNil)(Ctl_Internal_Types_VRFKeyHash.showVRFKeyHash))(Ctl_Internal_Types_RewardAddress.showRewardAddress))(Data_Show.showArray(showRelay)))(Data_Show.showArray(Ctl_Internal_Types_PubKeyHash.showPaymentPubKeyHash)))(Data_Maybe.showMaybe(showPoolMetadata)))(Ctl_Internal_Types_BigNum.showBigNum))(showPoolPubKeyHash))(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "denominator";
          }
      })(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "numerator";
          }
      })(Data_Show.showRecordFieldsNil)(Ctl_Internal_Types_BigNum.showBigNum))(Ctl_Internal_Types_BigNum.showBigNum))))(Ctl_Internal_Types_BigNum.showBigNum))))({
          reflectSymbol: function () {
              return "PoolRegistration";
          }
      }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "epoch";
          }
      })(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "poolKeyHash";
          }
      })(Data_Show.showRecordFieldsNil)(showPoolPubKeyHash))(showEpoch))))({
          reflectSymbol: function () {
              return "PoolRetirement";
          }
      }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "genesisDelegateHash";
          }
      })(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "genesisHash";
          }
      })(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "vrfKeyhash";
          }
      })(Data_Show.showRecordFieldsNil)(Ctl_Internal_Types_VRFKeyHash.showVRFKeyHash))(showGenesisHash))(showGenesisDelegateHash))))({
          reflectSymbol: function () {
              return "GenesisKeyDelegation";
          }
      }))(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(showMoveInstantaneousRewa))({
          reflectSymbol: function () {
              return "MoveInstantaneousRewardsCert";
          }
      }))))))))
  };
  var genericAuxiliaryData_ = {
      to: function (x) {
          return x;
      },
      from: function (x) {
          return x;
      }
  };
  var showAuxiliaryData = {
      show: Data_Show_Generic.genericShow(genericAuxiliaryData_)(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "metadata";
          }
      })(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "nativeScripts";
          }
      })(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "plutusScripts";
          }
      })(Data_Show.showRecordFieldsNil)(Data_Maybe.showMaybe(Data_Show.showArray(Ctl_Internal_Types_Scripts.showPlutusScript))))(Data_Maybe.showMaybe(Data_Show.showArray(Ctl_Internal_Cardano_Types_NativeScript.showNativeScript))))(Data_Maybe.showMaybe(Ctl_Internal_Types_TransactionMetadata.showGeneralTransactionMet)))))({
          reflectSymbol: function () {
              return "AuxiliaryData";
          }
      }))
  };
  var genericAuxiliaryDataHash_ = {
      to: function (x) {
          return x;
      },
      from: function (x) {
          return x;
      }
  };
  var showAuxiliaryDataHash = {
      show: Data_Show_Generic.genericShow(genericAuxiliaryDataHash_)(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Ctl_Internal_Types_ByteArray.showByteArray))({
          reflectSymbol: function () {
              return "AuxiliaryDataHash";
          }
      }))
  };
  var showTxBody = {
      show: Data_Show_Generic.genericShow(genericTxBody_)(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "auxiliaryDataHash";
          }
      })(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "certs";
          }
      })(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "collateral";
          }
      })(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "collateralReturn";
          }
      })(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "fee";
          }
      })(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "inputs";
          }
      })(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "mint";
          }
      })(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "networkId";
          }
      })(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "outputs";
          }
      })(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "referenceInputs";
          }
      })(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "requiredSigners";
          }
      })(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "scriptDataHash";
          }
      })(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "totalCollateral";
          }
      })(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "ttl";
          }
      })(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "update";
          }
      })(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "validityStartInterval";
          }
      })(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "withdrawals";
          }
      })(Data_Show.showRecordFieldsNil)(Data_Maybe.showMaybe(Data_Map_Internal.showMap(Ctl_Internal_Types_RewardAddress.showRewardAddress)(Ctl_Internal_Cardano_Types_Value.showCoin))))(Data_Maybe.showMaybe(Ctl_Internal_Serialization_Address.showSlot)))(Data_Maybe.showMaybe(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "epoch";
          }
      })(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "proposedProtocolParameterUpdates";
          }
      })(Data_Show.showRecordFieldsNil)(showProposedProtocolParam))(showEpoch)))))(Data_Maybe.showMaybe(Ctl_Internal_Serialization_Address.showSlot)))(Data_Maybe.showMaybe(Ctl_Internal_Cardano_Types_Value.showCoin)))(Data_Maybe.showMaybe(showScriptDataHash)))(Data_Maybe.showMaybe(Data_Show.showArray(showRequiredSigner))))(Data_Set.showSet(Ctl_Internal_Types_Transaction.showTransactionInput)))(Data_Show.showArray(showTransactionOutput)))(Data_Maybe.showMaybe(Ctl_Internal_Serialization_Address.showNetworkId)))(Data_Maybe.showMaybe(showMint)))(Data_Set.showSet(Ctl_Internal_Types_Transaction.showTransactionInput)))(Ctl_Internal_Cardano_Types_Value.showCoin))(Data_Maybe.showMaybe(showTransactionOutput)))(Data_Maybe.showMaybe(Data_Show.showArray(Ctl_Internal_Types_Transaction.showTransactionInput))))(Data_Maybe.showMaybe(Data_Show.showArray(showCertificate))))(Data_Maybe.showMaybe(showAuxiliaryDataHash)))))({
          reflectSymbol: function () {
              return "TxBody";
          }
      }))
  };
  var eqURL = {
      eq: function (x) {
          return function (y) {
              return x === y;
          };
      }
  };
  var eqTransactionOutput = Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
      reflectSymbol: function () {
          return "scriptRef";
      }
  })(Data_Maybe.eqMaybe(Ctl_Internal_Cardano_Types_ScriptRef.eqScriptRef)))()({
      reflectSymbol: function () {
          return "datum";
      }
  })(Ctl_Internal_Types_OutputDatum.eqOutputDatum))()({
      reflectSymbol: function () {
          return "amount";
      }
  })(Ctl_Internal_Cardano_Types_Value.eqValue))()({
      reflectSymbol: function () {
          return "address";
      }
  })(Ctl_Internal_Serialization_Address.eqAddress));              
  var eqRequiredSigner = Ctl_Internal_Serialization_Hash.eqEd25519KeyHash;
  var eqRedeemer = Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
      reflectSymbol: function () {
          return "tag";
      }
  })(Ctl_Internal_Types_RedeemerTag.eqRedeemerTag))()({
      reflectSymbol: function () {
          return "index";
      }
  })(Data_BigInt.eqBigInt))()({
      reflectSymbol: function () {
          return "exUnits";
      }
  })(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
      reflectSymbol: function () {
          return "steps";
      }
  })(Data_BigInt.eqBigInt))()({
      reflectSymbol: function () {
          return "mem";
      }
  })(Data_BigInt.eqBigInt))))()({
      reflectSymbol: function () {
          return "data";
      }
  })(Ctl_Internal_Types_PlutusData.eqPlutusData));
  var eqPublicKey = Ctl_Internal_Types_RawBytes.eqRawBytes;
  var eqVkey = eqPublicKey;
  var eqPoolPubKeyHash = {
      eq: function (x) {
          return function (y) {
              return Data_Eq.eq(Ctl_Internal_Serialization_Hash.eqEd25519KeyHash)(x)(y);
          };
      }
  };
  var eqPoolMetadataHash = {
      eq: function (x) {
          return function (y) {
              return Data_Eq.eq(Ctl_Internal_Types_ByteArray.eqByteArray)(x)(y);
          };
      }
  };
  var eqPoolMetadata = {
      eq: function (x) {
          return function (y) {
              return Data_Eq.eq(eqPoolMetadataHash)(x.hash)(y.hash) && Data_Eq.eq(eqURL)(x.url)(y.url);
          };
      }
  };                                                          
  var eqMIRToStakeCredentials = {
      eq: function (x) {
          return function (y) {
              return Data_Eq.eq(Data_Map_Internal.eqMap(Ctl_Internal_Serialization_Address.eqStakeCredential)(Ctl_Internal_Types_Int.eqInt))(x)(y);
          };
      }
  };
  var eqMoveInstantaneousReward = {
      eq: function (x) {
          return function (y) {
              if (x instanceof ToOtherPot && y instanceof ToOtherPot) {
                  return Data_Eq.eq(Ctl_Internal_Types_BigNum.eqBigNum)(x.value0.amount)(y.value0.amount) && x.value0.pot === y.value0.pot;
              };
              if (x instanceof ToStakeCreds && y instanceof ToStakeCreds) {
                  return Data_Eq.eq(eqMIRToStakeCredentials)(x.value0.amounts)(y.value0.amounts) && x.value0.pot === y.value0.pot;
              };
              return false;
          };
      }
  };
  var eqIpv6 = {
      eq: function (x) {
          return function (y) {
              return Data_Eq.eq(Ctl_Internal_Types_ByteArray.eqByteArray)(x)(y);
          };
      }
  };
  var eqIpv4 = {
      eq: function (x) {
          return function (y) {
              return Data_Eq.eq(Ctl_Internal_Types_ByteArray.eqByteArray)(x)(y);
          };
      }
  };
  var eqRelay = {
      eq: function (x) {
          return function (y) {
              if (x instanceof SingleHostAddr && y instanceof SingleHostAddr) {
                  return Data_Eq.eq(Data_Maybe.eqMaybe(eqIpv4))(x.value0.ipv4)(y.value0.ipv4) && Data_Eq.eq(Data_Maybe.eqMaybe(eqIpv6))(x.value0.ipv6)(y.value0.ipv6) && Data_Eq.eq(Data_Maybe.eqMaybe(Data_Eq.eqInt))(x.value0.port)(y.value0.port);
              };
              if (x instanceof SingleHostName && y instanceof SingleHostName) {
                  return x.value0.dnsName === y.value0.dnsName && Data_Eq.eq(Data_Maybe.eqMaybe(Data_Eq.eqInt))(x.value0.port)(y.value0.port);
              };
              if (x instanceof MultiHostName && y instanceof MultiHostName) {
                  return x.value0.dnsName === y.value0.dnsName;
              };
              return false;
          };
      }
  };
  var eqGenesisHash = Ctl_Internal_Types_ByteArray.eqByteArray;
  var eqGenesisDelegateHash = {
      eq: function (x) {
          return function (y) {
              return Data_Eq.eq(Ctl_Internal_Types_ByteArray.eqByteArray)(x)(y);
          };
      }
  };
  var eqEpoch = Data_UInt.uintEqInstance;
  var eqEd25519Signature = Ctl_Internal_Types_RawBytes.eqRawBytes;
  var eqVkeywitness = Data_Tuple.eqTuple(eqVkey)(eqEd25519Signature);
  var semigroupTransactionWitne = {
      append: function (v) {
          return function (v1) {
              return {
                  vkeys: Ctl_Internal_Helpers.maybeArrayMerge(eqVkeywitness)(v.vkeys)(v1.vkeys),
                  nativeScripts: Ctl_Internal_Helpers.maybeArrayMerge(Ctl_Internal_Cardano_Types_NativeScript.eqNativeScript)(v.nativeScripts)(v1.nativeScripts),
                  bootstraps: Ctl_Internal_Helpers.maybeArrayMerge(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
                      reflectSymbol: function () {
                          return "vkey";
                      }
                  })(eqVkey))()({
                      reflectSymbol: function () {
                          return "signature";
                      }
                  })(eqEd25519Signature))()({
                      reflectSymbol: function () {
                          return "chainCode";
                      }
                  })(Ctl_Internal_Types_ByteArray.eqByteArray))()({
                      reflectSymbol: function () {
                          return "attributes";
                      }
                  })(Ctl_Internal_Types_ByteArray.eqByteArray)))(v.bootstraps)(v1.bootstraps),
                  plutusScripts: Ctl_Internal_Helpers.maybeArrayMerge(Ctl_Internal_Types_Scripts.eqPlutusScript)(v.plutusScripts)(v1.plutusScripts),
                  plutusData: Ctl_Internal_Helpers.maybeArrayMerge(Ctl_Internal_Types_PlutusData.eqPlutusData)(v.plutusData)(v1.plutusData),
                  redeemers: Ctl_Internal_Helpers.maybeArrayMerge(eqRedeemer)(v.redeemers)(v1.redeemers)
              };
          };
      }
  };
  var monoidTransactionWitnessS = {
      mempty: {
          vkeys: Data_Maybe.Nothing.value,
          nativeScripts: Data_Maybe.Nothing.value,
          bootstraps: Data_Maybe.Nothing.value,
          plutusScripts: Data_Maybe.Nothing.value,
          plutusData: Data_Maybe.Nothing.value,
          redeemers: Data_Maybe.Nothing.value
      },
      Semigroup0: function () {
          return semigroupTransactionWitne;
      }
  };                                                           
  var eqCertificate = {
      eq: function (x) {
          return function (y) {
              if (x instanceof StakeRegistration && y instanceof StakeRegistration) {
                  return Data_Eq.eq(Ctl_Internal_Serialization_Address.eqStakeCredential)(x.value0)(y.value0);
              };
              if (x instanceof StakeDeregistration && y instanceof StakeDeregistration) {
                  return Data_Eq.eq(Ctl_Internal_Serialization_Address.eqStakeCredential)(x.value0)(y.value0);
              };
              if (x instanceof StakeDelegation && y instanceof StakeDelegation) {
                  return Data_Eq.eq(Ctl_Internal_Serialization_Address.eqStakeCredential)(x.value0)(y.value0) && Data_Eq.eq(eqPoolPubKeyHash)(x.value1)(y.value1);
              };
              if (x instanceof PoolRegistration && y instanceof PoolRegistration) {
                  return Data_Eq.eq(Ctl_Internal_Types_BigNum.eqBigNum)(x.value0.cost)(y.value0.cost) && (Data_Eq.eq(Ctl_Internal_Types_BigNum.eqBigNum)(x.value0.margin.denominator)(y.value0.margin.denominator) && Data_Eq.eq(Ctl_Internal_Types_BigNum.eqBigNum)(x.value0.margin.numerator)(y.value0.margin.numerator)) && Data_Eq.eq(eqPoolPubKeyHash)(x.value0.operator)(y.value0.operator) && Data_Eq.eq(Ctl_Internal_Types_BigNum.eqBigNum)(x.value0.pledge)(y.value0.pledge) && Data_Eq.eq(Data_Maybe.eqMaybe(eqPoolMetadata))(x.value0.poolMetadata)(y.value0.poolMetadata) && Data_Eq.eq(Data_Eq.eqArray(Ctl_Internal_Types_PubKeyHash.eqPaymentPubKeyHash))(x.value0.poolOwners)(y.value0.poolOwners) && Data_Eq.eq(Data_Eq.eqArray(eqRelay))(x.value0.relays)(y.value0.relays) && Data_Eq.eq(Ctl_Internal_Types_RewardAddress.eqRewardAddress)(x.value0.rewardAccount)(y.value0.rewardAccount) && Data_Eq.eq(Ctl_Internal_Types_VRFKeyHash.eqVRFKeyHash)(x.value0.vrfKeyhash)(y.value0.vrfKeyhash);
              };
              if (x instanceof PoolRetirement && y instanceof PoolRetirement) {
                  return Data_Eq.eq(eqEpoch)(x.value0.epoch)(y.value0.epoch) && Data_Eq.eq(eqPoolPubKeyHash)(x.value0.poolKeyHash)(y.value0.poolKeyHash);
              };
              if (x instanceof GenesisKeyDelegation && y instanceof GenesisKeyDelegation) {
                  return Data_Eq.eq(eqGenesisDelegateHash)(x.value0.genesisDelegateHash)(y.value0.genesisDelegateHash) && Data_Eq.eq(eqGenesisHash)(x.value0.genesisHash)(y.value0.genesisHash) && Data_Eq.eq(Ctl_Internal_Types_VRFKeyHash.eqVRFKeyHash)(x.value0.vrfKeyhash)(y.value0.vrfKeyhash);
              };
              if (x instanceof MoveInstantaneousRewardsCert && y instanceof MoveInstantaneousRewardsCert) {
                  return Data_Eq.eq(eqMoveInstantaneousReward)(x.value0)(y.value0);
              };
              return false;
          };
      }
  };
  var semigroupTxBody = {
      append: function (v) {
          return function (v1) {
              var lowerbound = function (v2) {
                  return function (v3) {
                      return Data_Ord.min(Ctl_Internal_Types_BigNum.ordBigNum)(v2)(v3);
                  };
              };
              return {
                  inputs: Data_Set.union(Ctl_Internal_Types_Transaction.ordTransactionInput)(v.inputs)(v1.inputs),
                  outputs: Data_Array.union(eqTransactionOutput)(v.outputs)(v1.outputs),
                  fee: Data_Semigroup.append(Ctl_Internal_Cardano_Types_Value.semigroupCoin)(v.fee)(v1.fee),
                  ttl: Control_Apply.lift2(Data_Maybe.applyMaybe)(lowerbound)(v.ttl)(v1.ttl),
                  certs: Control_Apply.lift2(Data_Maybe.applyMaybe)(Data_Array.union(eqCertificate))(v.certs)(v1.certs),
                  withdrawals: Control_Apply.lift2(Data_Maybe.applyMaybe)(Ctl_Internal_Helpers.appendMap(Ctl_Internal_Types_RewardAddress.ordRewardAddress)(Ctl_Internal_Cardano_Types_Value.semigroupCoin))(v.withdrawals)(v1.withdrawals),
                  update: Ctl_Internal_Helpers.appendLastMaybe(v.update)(v1.update),
                  auxiliaryDataHash: Ctl_Internal_Helpers.appendLastMaybe(v.auxiliaryDataHash)(v1.auxiliaryDataHash),
                  validityStartInterval: Control_Apply.lift2(Data_Maybe.applyMaybe)(lowerbound)(v.validityStartInterval)(v1.validityStartInterval),
                  mint: Data_Semigroup.append(Data_Maybe.semigroupMaybe(semigroupMint))(v.mint)(v1.mint),
                  referenceInputs: Data_Semigroup.append(Data_Set.semigroupSet(Ctl_Internal_Types_Transaction.ordTransactionInput))(v.referenceInputs)(v1.referenceInputs),
                  scriptDataHash: Ctl_Internal_Helpers.appendLastMaybe(v.scriptDataHash)(v1.scriptDataHash),
                  collateral: Control_Apply.lift2(Data_Maybe.applyMaybe)(Data_Array.union(Ctl_Internal_Types_Transaction.eqTransactionInput))(v.collateral)(v1.collateral),
                  requiredSigners: Control_Apply.lift2(Data_Maybe.applyMaybe)(Data_Array.union(eqRequiredSigner))(v.requiredSigners)(v1.requiredSigners),
                  networkId: Ctl_Internal_Helpers.appendLastMaybe(v.networkId)(v1.networkId),
                  collateralReturn: Control_Alt.alt(Data_Maybe.altMaybe)(v.collateralReturn)(v.collateralReturn),
                  totalCollateral: Control_Alt.alt(Data_Maybe.altMaybe)(v.totalCollateral)(v.totalCollateral)
              };
          };
      }
  };
  var monoidTxBody = {
      mempty: {
          inputs: Data_Monoid.mempty(Data_Set.monoidSet(Ctl_Internal_Types_Transaction.ordTransactionInput)),
          outputs: Data_Monoid.mempty(Data_Monoid.monoidArray),
          fee: Data_Monoid.mempty(Ctl_Internal_Cardano_Types_Value.monoidCoin),
          ttl: Data_Maybe.Nothing.value,
          certs: Data_Maybe.Nothing.value,
          withdrawals: Data_Maybe.Nothing.value,
          update: Data_Maybe.Nothing.value,
          auxiliaryDataHash: Data_Maybe.Nothing.value,
          validityStartInterval: Data_Maybe.Nothing.value,
          mint: Data_Maybe.Nothing.value,
          scriptDataHash: Data_Maybe.Nothing.value,
          collateral: Data_Maybe.Nothing.value,
          requiredSigners: Data_Maybe.Nothing.value,
          networkId: Data_Maybe.Nothing.value,
          collateralReturn: Data_Maybe.Nothing.value,
          totalCollateral: Data_Maybe.Nothing.value,
          referenceInputs: Data_Monoid.mempty(Data_Set.monoidSet(Ctl_Internal_Types_Transaction.ordTransactionInput))
      },
      Semigroup0: function () {
          return semigroupTxBody;
      }
  };
  var semigroupTransaction = {
      append: function (v) {
          return function (v1) {
              var txCheck$prime = function (dictMonoid) {
                  return Data_Monoid.guard(dictMonoid)(v1.isValid);
              };
              var txCheck = function (dictMonoid) {
                  return Data_Monoid.guard(dictMonoid)(v.isValid);
              };
              return {
                  body: Data_Semigroup.append(semigroupTxBody)(txCheck(monoidTxBody)(v.body))(txCheck$prime(monoidTxBody)(v1.body)),
                  witnessSet: Data_Semigroup.append(semigroupTransactionWitne)(txCheck(monoidTransactionWitnessS)(v.witnessSet))(txCheck$prime(monoidTransactionWitnessS)(v1.witnessSet)),
                  isValid: v.isValid && v1.isValid,
                  auxiliaryData: Data_Semigroup.append(Data_Maybe.semigroupMaybe(semigroupAuxiliaryData))(txCheck(Data_Maybe.monoidMaybe(semigroupAuxiliaryData))(v.auxiliaryData))(txCheck$prime(Data_Maybe.monoidMaybe(semigroupAuxiliaryData))(v1.auxiliaryData))
              };
          };
      }
  };
  var monoidTransaction = {
      mempty: {
          body: Data_Monoid.mempty(monoidTxBody),
          witnessSet: Data_Monoid.mempty(monoidTransactionWitnessS),
          isValid: true,
          auxiliaryData: Data_Maybe.Nothing.value
      },
      Semigroup0: function () {
          return semigroupTransaction;
      }
  };      
  var decodeAesonPoolPubKeyHash = {
      decodeAeson: function (aeson) {
          return Control_Bind.bind(Data_Either.bindEither)(Aeson.decodeAeson(Aeson.decodeAesonString)(aeson))(function (str) {
              return Data_Functor.map(Data_Either.functorEither)(PoolPubKeyHash)(Data_Either.note(new Data_Argonaut_Decode_Error.TypeMismatch("PoolPubKeyHash"))(Ctl_Internal_Serialization_Hash.ed25519KeyHashFromBech32(str)));
          });
      }
  };
  var poolPubKeyHashToBech32 = (function () {
      var $611 = Ctl_Internal_Serialization_Hash.ed25519KeyHashToBech32Unsafe("pool");
      var $612 = Data_Newtype.unwrap();
      return function ($613) {
          return $611($612($613));
      };
  })();
  var mkPublicKey = (function () {
      var $614 = Data_Functor.map(Data_Maybe.functorMaybe)(function ($616) {
          return PublicKey(Ctl_Internal_Serialization_Keys.bytesFromPublicKey($616));
      });
      return function ($615) {
          return $614(Ctl_Internal_Deserialization_Keys.publicKeyFromBech32($615));
      };
  })();
  var mkFromCslPubKey = function ($617) {
      return PublicKey(Ctl_Internal_Serialization_Keys.bytesFromPublicKey($617));
  };
  var mkFromCslEd25519Signature = (function () {
      var $621 = Data_Newtype.wrap();
      var $622 = Data_Newtype.unwrap();
      var $623 = Ctl_Internal_Serialization_ToBytes.toBytes();
      return function ($624) {
          return Ed25519Signature($621($622($623($624))));
      };
  })();
  var mkEd25519Signature = (function () {
      var $625 = Data_Functor.map(Data_Maybe.functorMaybe)((function () {
          var $627 = Data_Newtype.wrap();
          var $628 = Data_Newtype.unwrap();
          var $629 = Ctl_Internal_Serialization_ToBytes.toBytes();
          return function ($630) {
              return Ed25519Signature($627($628($629($630))));
          };
      })());
      return function ($626) {
          return $625(Ctl_Internal_Deserialization_Keys.ed25519SignatureFromBech32($626));
      };
  })();
  var convertPubKey = function (v) {
      return Data_Maybe.fromJust()(Ctl_Internal_Deserialization_FromBytes.fromBytes(Ctl_Internal_Deserialization_FromBytes.fromBytesPublicKey)(Data_Newtype.wrap()(Data_Newtype.unwrap()(v))));
  };
  var showPublicKey = {
      show: function (pk) {
          return "(PublicKey " + (Ctl_Internal_Serialization_Keys.bech32FromPublicKey(convertPubKey(pk)) + ")");
      }
  };
  var showVkey = {
      show: Data_Show_Generic.genericShow(genericVkey_)(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(showPublicKey))({
          reflectSymbol: function () {
              return "Vkey";
          }
      }))
  };
  var convertEd25519Signature = function (v) {
      return Data_Maybe.fromJust()(Ctl_Internal_Deserialization_FromBytes.fromBytes(Ctl_Internal_Deserialization_FromBytes.fromBytesEd25519Signature)(Data_Newtype.wrap()(Data_Newtype.unwrap()(v))));
  };
  var showEd25519Signature = {
      show: function (sig) {
          return "(Ed25519Signature " + (Ctl_Internal_Serialization_Keys.bech32FromEd25519Signature(convertEd25519Signature(sig)) + ")");
      }
  };
  var showVkeywitness = {
      show: Data_Show_Generic.genericShow(genericVkeywitness_)(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Data_Tuple.showTuple(showVkey)(showEd25519Signature)))({
          reflectSymbol: function () {
              return "Vkeywitness";
          }
      }))
  };
  var showTransactionWitnessSet = {
      show: Data_Show_Generic.genericShow(genericTransactionWitness)(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "bootstraps";
          }
      })(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "nativeScripts";
          }
      })(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "plutusData";
          }
      })(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "plutusScripts";
          }
      })(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "redeemers";
          }
      })(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "vkeys";
          }
      })(Data_Show.showRecordFieldsNil)(Data_Maybe.showMaybe(Data_Show.showArray(showVkeywitness))))(Data_Maybe.showMaybe(Data_Show.showArray(showRedeemer))))(Data_Maybe.showMaybe(Data_Show.showArray(Ctl_Internal_Types_Scripts.showPlutusScript))))(Data_Maybe.showMaybe(Data_Show.showArray(Ctl_Internal_Types_PlutusData.showPlutusData))))(Data_Maybe.showMaybe(Data_Show.showArray(Ctl_Internal_Cardano_Types_NativeScript.showNativeScript))))(Data_Maybe.showMaybe(Data_Show.showArray(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "attributes";
          }
      })(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "chainCode";
          }
      })(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "signature";
          }
      })(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "vkey";
          }
      })(Data_Show.showRecordFieldsNil)(showVkey))(showEd25519Signature))(Ctl_Internal_Types_ByteArray.showByteArray))(Ctl_Internal_Types_ByteArray.showByteArray))))))))({
          reflectSymbol: function () {
              return "TransactionWitnessSet";
          }
      }))
  };
  var showTransaction = {
      show: Data_Show_Generic.genericShow(genericTransaction_)(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "auxiliaryData";
          }
      })(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "body";
          }
      })(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "isValid";
          }
      })(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "witnessSet";
          }
      })(Data_Show.showRecordFieldsNil)(showTransactionWitnessSet))(Data_Show.showBoolean))(showTxBody))(Data_Maybe.showMaybe(showAuxiliaryData)))))({
          reflectSymbol: function () {
              return "Transaction";
          }
      }))
  };
  var _witnessSet = function (dictStrong) {
      return Data_Lens_Lens["lens'"](function (v) {
          return new Data_Tuple.Tuple(v.witnessSet, function (ws) {
              return {
                  body: v.body,
                  witnessSet: ws,
                  isValid: v.isValid,
                  auxiliaryData: v.auxiliaryData
              };
          });
      })(dictStrong);
  };
  var _withdrawals = function (dictStrong) {
      var $631 = Data_Lens_Iso_Newtype["_Newtype"]()()(dictStrong.Profunctor0());
      var $632 = Data_Lens_Record.prop({
          reflectSymbol: function () {
              return "withdrawals";
          }
      })()()(Data_Symbol.SProxy.value)(dictStrong);
      return function ($633) {
          return $631($632($633));
      };
  };
  var _vkeys = function (dictStrong) {
      return Data_Lens_Lens["lens'"](function (v) {
          return new Data_Tuple.Tuple(v.vkeys, function (vk) {
              return {
                  vkeys: vk,
                  nativeScripts: v.nativeScripts,
                  bootstraps: v.bootstraps,
                  plutusScripts: v.plutusScripts,
                  plutusData: v.plutusData,
                  redeemers: v.redeemers
              };
          });
      })(dictStrong);
  };
  var _totalCollateral = function (dictStrong) {
      var $643 = Data_Lens_Iso_Newtype["_Newtype"]()()(dictStrong.Profunctor0());
      var $644 = Data_Lens_Record.prop({
          reflectSymbol: function () {
              return "totalCollateral";
          }
      })()()(Data_Symbol.SProxy.value)(dictStrong);
      return function ($645) {
          return $643($644($645));
      };
  };
  var _scriptDataHash = function (dictStrong) {
      var $646 = Data_Lens_Iso_Newtype["_Newtype"]()()(dictStrong.Profunctor0());
      var $647 = Data_Lens_Record.prop({
          reflectSymbol: function () {
              return "scriptDataHash";
          }
      })()()(Data_Symbol.SProxy.value)(dictStrong);
      return function ($648) {
          return $646($647($648));
      };
  };
  var _requiredSigners = function (dictStrong) {
      var $649 = Data_Lens_Iso_Newtype["_Newtype"]()()(dictStrong.Profunctor0());
      var $650 = Data_Lens_Record.prop({
          reflectSymbol: function () {
              return "requiredSigners";
          }
      })()()(Data_Symbol.SProxy.value)(dictStrong);
      return function ($651) {
          return $649($650($651));
      };
  };
  var _referenceInputs = function (dictStrong) {
      var $652 = Data_Lens_Iso_Newtype["_Newtype"]()()(dictStrong.Profunctor0());
      var $653 = Data_Lens_Record.prop({
          reflectSymbol: function () {
              return "referenceInputs";
          }
      })()()(Data_Symbol.SProxy.value)(dictStrong);
      return function ($654) {
          return $652($653($654));
      };
  };
  var _redeemers = function (dictStrong) {
      return Data_Lens_Lens["lens'"](function (v) {
          return new Data_Tuple.Tuple(v.redeemers, function (red) {
              return {
                  vkeys: v.vkeys,
                  nativeScripts: v.nativeScripts,
                  bootstraps: v.bootstraps,
                  plutusScripts: v.plutusScripts,
                  plutusData: v.plutusData,
                  redeemers: red
              };
          });
      })(dictStrong);
  };
  var _plutusScripts = function (dictStrong) {
      return Data_Lens_Lens["lens'"](function (v) {
          return new Data_Tuple.Tuple(v.plutusScripts, function (ps) {
              return {
                  vkeys: v.vkeys,
                  nativeScripts: v.nativeScripts,
                  bootstraps: v.bootstraps,
                  plutusScripts: ps,
                  plutusData: v.plutusData,
                  redeemers: v.redeemers
              };
          });
      })(dictStrong);
  };
  var _plutusData = function (dictStrong) {
      return Data_Lens_Lens["lens'"](function (v) {
          return new Data_Tuple.Tuple(v.plutusData, function (pd) {
              return {
                  vkeys: v.vkeys,
                  nativeScripts: v.nativeScripts,
                  bootstraps: v.bootstraps,
                  plutusScripts: v.plutusScripts,
                  plutusData: pd,
                  redeemers: v.redeemers
              };
          });
      })(dictStrong);
  };
  var _outputs = function (dictStrong) {
      var $655 = Data_Lens_Iso_Newtype["_Newtype"]()()(dictStrong.Profunctor0());
      var $656 = Data_Lens_Record.prop({
          reflectSymbol: function () {
              return "outputs";
          }
      })()()(Data_Symbol.SProxy.value)(dictStrong);
      return function ($657) {
          return $655($656($657));
      };
  };
  var _networkId = function (dictStrong) {
      var $658 = Data_Lens_Iso_Newtype["_Newtype"]()()(dictStrong.Profunctor0());
      var $659 = Data_Lens_Record.prop({
          reflectSymbol: function () {
              return "networkId";
          }
      })()()(Data_Symbol.SProxy.value)(dictStrong);
      return function ($660) {
          return $658($659($660));
      };
  };
  var _mint = function (dictStrong) {
      var $661 = Data_Lens_Iso_Newtype["_Newtype"]()()(dictStrong.Profunctor0());
      var $662 = Data_Lens_Record.prop({
          reflectSymbol: function () {
              return "mint";
          }
      })()()(Data_Symbol.SProxy.value)(dictStrong);
      return function ($663) {
          return $661($662($663));
      };
  };
  var _isValid = function (dictStrong) {
      return Data_Lens_Lens["lens'"](function (v) {
          return new Data_Tuple.Tuple(v.isValid, function (iv) {
              return {
                  body: v.body,
                  witnessSet: v.witnessSet,
                  isValid: iv,
                  auxiliaryData: v.auxiliaryData
              };
          });
      })(dictStrong);
  };
  var _inputs = function (dictStrong) {
      var $664 = Data_Lens_Iso_Newtype["_Newtype"]()()(dictStrong.Profunctor0());
      var $665 = Data_Lens_Record.prop({
          reflectSymbol: function () {
              return "inputs";
          }
      })()()(Data_Symbol.SProxy.value)(dictStrong);
      return function ($666) {
          return $664($665($666));
      };
  };
  var _fee = function (dictStrong) {
      var $667 = Data_Lens_Iso_Newtype["_Newtype"]()()(dictStrong.Profunctor0());
      var $668 = Data_Lens_Record.prop({
          reflectSymbol: function () {
              return "fee";
          }
      })()()(Data_Symbol.SProxy.value)(dictStrong);
      return function ($669) {
          return $667($668($669));
      };
  };
  var _collateralReturn = function (dictStrong) {
      var $670 = Data_Lens_Iso_Newtype["_Newtype"]()()(dictStrong.Profunctor0());
      var $671 = Data_Lens_Record.prop({
          reflectSymbol: function () {
              return "collateralReturn";
          }
      })()()(Data_Symbol.SProxy.value)(dictStrong);
      return function ($672) {
          return $670($671($672));
      };
  };
  var _collateral = function (dictStrong) {
      var $673 = Data_Lens_Iso_Newtype["_Newtype"]()()(dictStrong.Profunctor0());
      var $674 = Data_Lens_Record.prop({
          reflectSymbol: function () {
              return "collateral";
          }
      })()()(Data_Symbol.SProxy.value)(dictStrong);
      return function ($675) {
          return $673($674($675));
      };
  };
  var _certs = function (dictStrong) {
      var $676 = Data_Lens_Iso_Newtype["_Newtype"]()()(dictStrong.Profunctor0());
      var $677 = Data_Lens_Record.prop({
          reflectSymbol: function () {
              return "certs";
          }
      })()()(Data_Symbol.SProxy.value)(dictStrong);
      return function ($678) {
          return $676($677($678));
      };
  };
  var _body = function (dictStrong) {
      return Data_Lens_Lens["lens'"](function (v) {
          return new Data_Tuple.Tuple(v.body, function (bod) {
              return {
                  body: bod,
                  witnessSet: v.witnessSet,
                  isValid: v.isValid,
                  auxiliaryData: v.auxiliaryData
              };
          });
      })(dictStrong);
  };
  exports["StakeRegistration"] = StakeRegistration;
  exports["StakeDeregistration"] = StakeDeregistration;
  exports["StakeDelegation"] = StakeDelegation;
  exports["PoolRegistration"] = PoolRegistration;
  exports["PoolRetirement"] = PoolRetirement;
  exports["GenesisKeyDelegation"] = GenesisKeyDelegation;
  exports["MoveInstantaneousRewardsCert"] = MoveInstantaneousRewardsCert;
  exports["Costmdls"] = Costmdls;
  exports["mkEd25519Signature"] = mkEd25519Signature;
  exports["mkFromCslEd25519Signature"] = mkFromCslEd25519Signature;
  exports["convertEd25519Signature"] = convertEd25519Signature;
  exports["Ipv4"] = Ipv4;
  exports["Ipv6"] = Ipv6;
  exports["ToOtherPot"] = ToOtherPot;
  exports["ToStakeCreds"] = ToStakeCreds;
  exports["PoolMetadataHash"] = PoolMetadataHash;
  exports["poolPubKeyHashToBech32"] = poolPubKeyHashToBech32;
  exports["mkPublicKey"] = mkPublicKey;
  exports["mkFromCslPubKey"] = mkFromCslPubKey;
  exports["convertPubKey"] = convertPubKey;
  exports["SingleHostAddr"] = SingleHostAddr;
  exports["SingleHostName"] = SingleHostName;
  exports["MultiHostName"] = MultiHostName;
  exports["ScriptDataHash"] = ScriptDataHash;
  exports["Transaction"] = Transaction;
  exports["TransactionWitnessSet"] = TransactionWitnessSet;
  exports["TxBody"] = TxBody;
  exports["URL"] = URL;
  exports["Vkey"] = Vkey;
  exports["_body"] = _body;
  exports["_certs"] = _certs;
  exports["_collateral"] = _collateral;
  exports["_collateralReturn"] = _collateralReturn;
  exports["_fee"] = _fee;
  exports["_inputs"] = _inputs;
  exports["_isValid"] = _isValid;
  exports["_mint"] = _mint;
  exports["_networkId"] = _networkId;
  exports["_outputs"] = _outputs;
  exports["_plutusData"] = _plutusData;
  exports["_plutusScripts"] = _plutusScripts;
  exports["_redeemers"] = _redeemers;
  exports["_referenceInputs"] = _referenceInputs;
  exports["_requiredSigners"] = _requiredSigners;
  exports["_scriptDataHash"] = _scriptDataHash;
  exports["_totalCollateral"] = _totalCollateral;
  exports["_vkeys"] = _vkeys;
  exports["_withdrawals"] = _withdrawals;
  exports["_witnessSet"] = _witnessSet;
  exports["showTransaction"] = showTransaction;
  exports["monoidTransaction"] = monoidTransaction;
  exports["semigroupMint"] = semigroupMint;
  exports["decodeAesonPoolPubKeyHash"] = decodeAesonPoolPubKeyHash;
  exports["showPoolPubKeyHash"] = showPoolPubKeyHash;
  exports["eqCertificate"] = eqCertificate;
  exports["semigroupTransactionWitne"] = semigroupTransactionWitne;
  exports["monoidTransactionWitnessS"] = monoidTransactionWitnessS;
  exports["showRedeemer"] = showRedeemer;
  exports["eqTransactionOutput"] = eqTransactionOutput;
  exports["showTransactionOutput"] = showTransactionOutput;
})(PS);
(function(exports) {
  /* global BROWSER_RUNTIME */

  let lib;
  if (typeof BROWSER_RUNTIME != "undefined" && BROWSER_RUNTIME) {
    lib = require("@emurgo/cardano-serialization-lib-browser");
  } else {
    lib = require("@emurgo/cardano-serialization-lib-nodejs");
  }
  lib = require("@mlabs-haskell/csl-gc-wrapper")(lib);

  const call = property => object => object[property]();
  const callMaybe = property => maybe => object => {
    const res = object[property]();
    return res != null ? maybe.just(res) : maybe.nothing;
  };

  // Classes like TransactionInputs are just monomorphic containers with `len`
  // and `get()` methods. This function abstracts away converting them to Array
  // of something.
  const containerExtractor = obj => {
    const res = [];

    for (let i = 0; i < obj.len(); i++) {
      res.push(obj.get(i));
    }

    return res;
  };

  // Dictionary wrappers share the same interface (with functions keys() and
  // get(k)).
  const extractDict = tuple => dict => {
    const keys = containerExtractor(dict.keys());
    const res = [];
    for (let key of keys) {
      // We assume that something that is in keys() is always present in the
      // structure as well.
      res.push(tuple(key)(dict.get(key)));
    }
    return res;
  };

  exports.getInput = call("input");
  exports.getOutput = call("output");
  exports.getTransactionHash = call("transaction_id");
  exports.getTransactionIndex = call("index");
  exports.getAddress = call("address");
  exports.getPlutusData = callMaybe("plutus_data");
  exports.getScriptRef = callMaybe("script_ref");
  exports.withScriptRef = ccNativeScript => ccPlutusScript => scriptRef => {
    if (scriptRef.is_native_script()) {
      return ccNativeScript(scriptRef.native_script());
    } else if (scriptRef.is_plutus_script()) {
      return ccPlutusScript(scriptRef.plutus_script());
    } else {
      throw "Impossible happened: withScriptRef: not a script";
    }
  };

  exports.getAmount = call("amount");
  exports.getCoin = call("coin");
  exports.getMultiAsset = callMaybe("multiasset");
  exports.extractMultiAsset = extractDict;
  exports.extractAssets = extractDict;
  exports.getDataHash = callMaybe("data_hash");
})(PS["Ctl.Internal.Deserialization.UnspentOutput"] = PS["Ctl.Internal.Deserialization.UnspentOutput"] || {});
(function(exports) {
  /* global BROWSER_RUNTIME */

  let lib;
  if (typeof BROWSER_RUNTIME != "undefined" && BROWSER_RUNTIME) {
    lib = require("@emurgo/cardano-serialization-lib-browser");
  } else {
    lib = require("@emurgo/cardano-serialization-lib-nodejs");
  }
  lib = require("@mlabs-haskell/csl-gc-wrapper")(lib);

  exports._convertNativeScript = handler => ns => {
    switch (ns.kind()) {
      case lib.NativeScriptKind.ScriptPubkey:
        return handler.scriptPubkey(ns.as_script_pubkey());
      case lib.NativeScriptKind.ScriptAll:
        return handler.scriptAll(ns.as_script_all());
      case lib.NativeScriptKind.ScriptAny:
        return handler.scriptAny(ns.as_script_any());
      case lib.NativeScriptKind.ScriptNOfK:
        return handler.scriptNOfK(ns.as_script_n_of_k());
      case lib.NativeScriptKind.TimelockStart:
        return handler.timelockStart(ns.as_timelock_start());
      case lib.NativeScriptKind.TimelockExpiry:
        return handler.timelockExpiry(ns.as_timelock_expiry());
      default:
        throw "Impossible native script kind: " + ns.kind();
    }
  };

  const call = property => object => object[property]();

  exports.scriptPubkey_addr_keyhash = call("addr_keyhash");
  exports.scriptAllScripts = helper =>
    helper.unpackFromProperty("native_scripts");
  exports.scriptAnyScripts = helper =>
    helper.unpackFromProperty("native_scripts");
  exports.scriptNOfKScripts = helper =>
    helper.unpackFromProperty("native_scripts");
  exports.scriptNOfK_n = call("n");
  exports.timelockStart_slot = call("slot_bignum");
  exports.timelockExpiry_slot = call("slot_bignum");
})(PS["Ctl.Internal.Deserialization.NativeScript"] = PS["Ctl.Internal.Deserialization.NativeScript"] || {});
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Ctl.Internal.Deserialization.NativeScript"] = $PS["Ctl.Internal.Deserialization.NativeScript"] || {};
  var exports = $PS["Ctl.Internal.Deserialization.NativeScript"];
  var $foreign = $PS["Ctl.Internal.Deserialization.NativeScript"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Ctl_Internal_Cardano_Types_NativeScript = $PS["Ctl.Internal.Cardano.Types.NativeScript"];
  var Ctl_Internal_Deserialization_FromBytes = $PS["Ctl.Internal.Deserialization.FromBytes"];
  var Ctl_Internal_FfiHelpers = $PS["Ctl.Internal.FfiHelpers"];
  var Ctl_Internal_Serialization_Address = $PS["Ctl.Internal.Serialization.Address"];
  var Data_Argonaut_Decode_Error = $PS["Data.Argonaut.Decode.Error"];
  var Data_Either = $PS["Data.Either"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Newtype = $PS["Data.Newtype"];                
  var convertNativeScript = function (ns) {
      return $foreign["_convertNativeScript"]({
          scriptPubkey: function ($0) {
              return Ctl_Internal_Cardano_Types_NativeScript.ScriptPubkey.create($foreign.scriptPubkey_addr_keyhash($0));
          },
          scriptAll: (function () {
              var $1 = Data_Functor.map(Data_Functor.functorArray)(convertNativeScript);
              var $2 = $foreign.scriptAllScripts(Ctl_Internal_FfiHelpers.containerHelper);
              return function ($3) {
                  return Ctl_Internal_Cardano_Types_NativeScript.ScriptAll.create($1($2($3)));
              };
          })(),
          scriptAny: (function () {
              var $4 = Data_Functor.map(Data_Functor.functorArray)(convertNativeScript);
              var $5 = $foreign.scriptAnyScripts(Ctl_Internal_FfiHelpers.containerHelper);
              return function ($6) {
                  return Ctl_Internal_Cardano_Types_NativeScript.ScriptAny.create($4($5($6)));
              };
          })(),
          scriptNOfK: Control_Apply.apply(Control_Apply.applyFn)(Data_Functor.map(Data_Functor.functorFn)(Ctl_Internal_Cardano_Types_NativeScript.ScriptNOfK.create)($foreign.scriptNOfK_n))((function () {
              var $7 = Data_Functor.map(Data_Functor.functorArray)(convertNativeScript);
              var $8 = $foreign.scriptNOfKScripts(Ctl_Internal_FfiHelpers.containerHelper);
              return function ($9) {
                  return $7($8($9));
              };
          })()),
          timelockStart: function ($10) {
              return Ctl_Internal_Cardano_Types_NativeScript.TimelockStart.create(Ctl_Internal_Serialization_Address.Slot($foreign.timelockStart_slot($10)));
          },
          timelockExpiry: function ($11) {
              return Ctl_Internal_Cardano_Types_NativeScript.TimelockExpiry.create(Ctl_Internal_Serialization_Address.Slot($foreign.timelockExpiry_slot($11)));
          }
      })(ns);
  };
  var decodeNativeScript = function (scriptBytes) {
      return Control_Bind.bind(Data_Either.bindEither)(Data_Function.flip(Data_Either.note)(Ctl_Internal_Deserialization_FromBytes.fromBytes(Ctl_Internal_Deserialization_FromBytes.fromBytesNativeScript)(Data_Newtype.wrap()(scriptBytes)))(new Data_Argonaut_Decode_Error.TypeMismatch("decodeNativeScript: from_bytes() call failed")))(function (nativeScript) {
          return Control_Applicative.pure(Data_Either.applicativeEither)(convertNativeScript(nativeScript));
      });
  };
  exports["convertNativeScript"] = convertNativeScript;
  exports["decodeNativeScript"] = decodeNativeScript;
})(PS);
(function(exports) {
  /* global BROWSER_RUNTIME */

  let lib;
  if (typeof BROWSER_RUNTIME != "undefined" && BROWSER_RUNTIME) {
    lib = require("@emurgo/cardano-serialization-lib-browser");
  } else {
    lib = require("@emurgo/cardano-serialization-lib-nodejs");
  }
  lib = require("@mlabs-haskell/csl-gc-wrapper")(lib);

  exports._convertPlutusData = handle => pd => {
    switch (pd.kind()) {
      case lib.PlutusDataKind.ConstrPlutusData:
        return handle.constr(pd.as_constr_plutus_data());
      case lib.PlutusDataKind.Map:
        return handle.map(pd.as_map());
      case lib.PlutusDataKind.List:
        return handle.list(pd.as_list());
      case lib.PlutusDataKind.Integer:
        return handle.integer(pd.as_integer());
      case lib.PlutusDataKind.Bytes:
        return handle.bytes(pd.as_bytes());
      default:
        throw "Impossible PlutusData kind: " + pd.kind();
    }
  };

  exports._unpackPlutusList = containerHelper => containerHelper.unpack;
  exports._ConstrPlutusData_alternative = x => x.alternative();
  exports._ConstrPlutusData_data = x => x.data();

  exports._unpackPlutusMap = containerHelper => tuple => plutusMap => {
    const keys = containerHelper.unpack(plutusMap.keys());
    const res = [];
    for (let key of keys) {
      // Assuming that `PlutusMap.get()` never fails on elements from result of
      // its `.keys()` call.
      res.push(tuple(key)(plutusMap.get(key)));
    }
    return res;
  };
})(PS["Ctl.Internal.Deserialization.PlutusData"] = PS["Ctl.Internal.Deserialization.PlutusData"] || {});
(function(exports) {
  exports._BigInt_to_str = x => x.to_str();
})(PS["Ctl.Internal.Deserialization.BigInt"] = PS["Ctl.Internal.Deserialization.BigInt"] || {});
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Ctl.Internal.Deserialization.BigInt"] = $PS["Ctl.Internal.Deserialization.BigInt"] || {};
  var exports = $PS["Ctl.Internal.Deserialization.BigInt"];
  var $foreign = $PS["Ctl.Internal.Deserialization.BigInt"];
  var Data_BigInt = $PS["Data.BigInt"];                
  var convertBigInt = function ($0) {
      return Data_BigInt.fromString($foreign["_BigInt_to_str"]($0));
  };
  exports["convertBigInt"] = convertBigInt;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Ctl.Internal.Deserialization.PlutusData"] = $PS["Ctl.Internal.Deserialization.PlutusData"] || {};
  var exports = $PS["Ctl.Internal.Deserialization.PlutusData"];
  var $foreign = $PS["Ctl.Internal.Deserialization.PlutusData"];
  var Control_Bind = $PS["Control.Bind"];
  var Ctl_Internal_Deserialization_BigInt = $PS["Ctl.Internal.Deserialization.BigInt"];
  var Ctl_Internal_Deserialization_FromBytes = $PS["Ctl.Internal.Deserialization.FromBytes"];
  var Ctl_Internal_FfiHelpers = $PS["Ctl.Internal.FfiHelpers"];
  var Ctl_Internal_FromData = $PS["Ctl.Internal.FromData"];
  var Ctl_Internal_Types_PlutusData = $PS["Ctl.Internal.Types.PlutusData"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Tuple = $PS["Data.Tuple"];                
  var convertPlutusInteger = function (i) {
      return new Ctl_Internal_Types_PlutusData.Integer(Data_Maybe.fromJust()(Ctl_Internal_Deserialization_BigInt.convertBigInt(i)));
  };
  var convertPlutusBytes = Ctl_Internal_Types_PlutusData.Bytes.create;
  var convertPlutusMap = (function () {
      var $5 = Data_Functor.map(Data_Functor.functorArray)(function (v) {
          return new Data_Tuple.Tuple(convertPlutusData(v.value0), convertPlutusData(v.value1));
      });
      var $6 = $foreign["_unpackPlutusMap"](Ctl_Internal_FfiHelpers.containerHelper)(Data_Tuple.Tuple.create);
      return function ($7) {
          return Ctl_Internal_Types_PlutusData["Map"].create($5($6($7)));
      };
  })();
  var convertPlutusList = (function () {
      var $8 = Data_Functor.map(Data_Functor.functorArray)(function (d) {
          return convertPlutusData(d);
      });
      var $9 = $foreign["_unpackPlutusList"](Ctl_Internal_FfiHelpers.containerHelper);
      return function ($10) {
          return Ctl_Internal_Types_PlutusData.List.create($8($9($10)));
      };
  })();
  var convertPlutusData = function (pd) {
      return $foreign["_convertPlutusData"]({
          constr: convertPlutusConstr,
          map: convertPlutusMap,
          list: convertPlutusList,
          integer: convertPlutusInteger,
          bytes: convertPlutusBytes
      })(pd);
  };
  var convertPlutusConstr = function (constr) {
      var data$prime = Data_Functor.map(Data_Functor.functorArray)(convertPlutusData)($foreign["_unpackPlutusList"](Ctl_Internal_FfiHelpers.containerHelper)($foreign["_ConstrPlutusData_data"](constr)));
      var alt = $foreign["_ConstrPlutusData_alternative"](constr);
      return new Ctl_Internal_Types_PlutusData.Constr(alt, data$prime);
  };
  var deserializeData = function (dictFromData) {
      return Control_Bind.composeKleisliFlipped(Data_Maybe.bindMaybe)((function () {
          var $11 = Ctl_Internal_FromData.fromData(dictFromData);
          return function ($12) {
              return $11(convertPlutusData($12));
          };
      })())(Ctl_Internal_Deserialization_FromBytes.fromBytes(Ctl_Internal_Deserialization_FromBytes.fromBytesPlutusData));
  };
  exports["convertPlutusData"] = convertPlutusData;
  exports["deserializeData"] = deserializeData;
})(PS);
(function(exports) {
  const call = property => object => object[property]();

  const callMaybe = property => maybe => object => {
    const res = object[property]();
    return res != null ? maybe.just(res) : maybe.nothing;
  };

  // Classes like TransactionInputs are just monomorphic containers with `len`
  // and `get()` methods. This function abstracts away converting them to Array
  // of something.
  const containerExtractor = obj => {
    const res = [];

    for (let i = 0; i < obj.len(); i++) {
      res.push(obj.get(i));
    }

    return res;
  };

  exports.getVkeywitnesses = callMaybe("vkeys");
  exports.extractWitnesses = containerExtractor;
  exports.getVkey = call("vkey");
  exports.getSignature = call("signature");
  exports.vkeyPublicKey = call("public_key");   
  exports.getNativeScripts = callMaybe("native_scripts");
  exports.extractNativeScripts = containerExtractor;     
  exports.getBootstraps = callMaybe("bootstraps");
  exports.extractBootstraps = containerExtractor;
  exports.getBootstrapVkey = call("vkey");
  exports.getBootstrapSignature = call("signature");
  exports.getBootstrapChainCode = call("chain_code");
  exports.getBootstrapAttributes = call("attributes");
  exports.getPlutusScripts = callMaybe("plutus_scripts");
  exports.extractPlutusScripts = containerExtractor;
  exports.plutusScriptBytes = call("bytes");
  exports.plutusScriptVersion = call("language_version");
  exports.getWitnessSetPlutusData = callMaybe("plutus_data");
  exports.extractPlutusData = containerExtractor;
  exports.getRedeemers = callMaybe("redeemers");
  exports.getRedeemerTag = call("tag");
  exports.getRedeemerIndex = call("index");
  exports.extractRedeemers = containerExtractor;
  exports.getRedeemerTagKind = call("kind");
  exports.getRedeemerPlutusData = call("data");
  exports.getExUnits = call("ex_units");
  exports.getExUnitsMem = call("mem");
  exports.getExUnitsSteps = call("steps");
})(PS["Ctl.Internal.Deserialization.WitnessSet"] = PS["Ctl.Internal.Deserialization.WitnessSet"] || {});
(function(exports) {
  /* global BROWSER_RUNTIME */

  let lib;
  if (typeof BROWSER_RUNTIME != "undefined" && BROWSER_RUNTIME) {
    lib = require("@emurgo/cardano-serialization-lib-browser");
  } else {
    lib = require("@emurgo/cardano-serialization-lib-nodejs");
  }
  lib = require("@mlabs-haskell/csl-gc-wrapper")(lib);

  exports._convertLanguage = langCtors => cslLang => {
    if (cslLang.kind() == lib.LanguageKind.PlutusV1) {
      return langCtors.plutusV1;
    } else if (cslLang.kind() == lib.LanguageKind.PlutusV2) {
      return langCtors.plutusV2;
    } else {
      throw "_convertLanguage: Unsupported language kind: " + cslLang.kind();
    }
  };
})(PS["Ctl.Internal.Deserialization.Language"] = PS["Ctl.Internal.Deserialization.Language"] || {});
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Ctl.Internal.Deserialization.Language"] = $PS["Ctl.Internal.Deserialization.Language"] || {};
  var exports = $PS["Ctl.Internal.Deserialization.Language"];
  var $foreign = $PS["Ctl.Internal.Deserialization.Language"];
  var Ctl_Internal_Types_Scripts = $PS["Ctl.Internal.Types.Scripts"];                
  var convertLanguage = $foreign["_convertLanguage"]({
      plutusV1: Ctl_Internal_Types_Scripts.PlutusV1.value,
      plutusV2: Ctl_Internal_Types_Scripts.PlutusV2.value
  });
  exports["convertLanguage"] = convertLanguage;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Ctl.Internal.Deserialization.WitnessSet"] = $PS["Ctl.Internal.Deserialization.WitnessSet"] || {};
  var exports = $PS["Ctl.Internal.Deserialization.WitnessSet"];
  var $foreign = $PS["Ctl.Internal.Deserialization.WitnessSet"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Ctl_Internal_Cardano_Types_Transaction = $PS["Ctl.Internal.Cardano.Types.Transaction"];
  var Ctl_Internal_Deserialization_Language = $PS["Ctl.Internal.Deserialization.Language"];
  var Ctl_Internal_Deserialization_NativeScript = $PS["Ctl.Internal.Deserialization.NativeScript"];
  var Ctl_Internal_Deserialization_PlutusData = $PS["Ctl.Internal.Deserialization.PlutusData"];
  var Ctl_Internal_FfiHelpers = $PS["Ctl.Internal.FfiHelpers"];
  var Ctl_Internal_Types_BigNum = $PS["Ctl.Internal.Types.BigNum"];
  var Ctl_Internal_Types_RedeemerTag = $PS["Ctl.Internal.Types.RedeemerTag"];
  var Ctl_Internal_Types_Scripts = $PS["Ctl.Internal.Types.Scripts"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Traversable = $PS["Data.Traversable"];
  var Data_Tuple = $PS["Data.Tuple"];                
  var convertVkey = function ($2) {
      return Ctl_Internal_Cardano_Types_Transaction.Vkey(Ctl_Internal_Cardano_Types_Transaction.mkFromCslPubKey($foreign.vkeyPublicKey($2)));
  };
  var convertVkeyWitness = function (witness) {
      var vkey = $foreign.getVkey(witness);
      var signature = Ctl_Internal_Cardano_Types_Transaction.mkFromCslEd25519Signature($foreign.getSignature(witness));
      var publicKey = convertVkey(vkey);
      return new Data_Tuple.Tuple(publicKey, signature);
  };
  var convertVkeyWitnesses = (function () {
      var $3 = Data_Functor.map(Data_Functor.functorArray)(convertVkeyWitness);
      return function ($4) {
          return $3($foreign.extractWitnesses($4));
      };
  })();
  var convertRedeemerTag = function (tag) {
      var v = $foreign.getRedeemerTagKind(tag);
      if (v === 0) {
          return new Data_Maybe.Just(Ctl_Internal_Types_RedeemerTag.Spend.value);
      };
      if (v === 1) {
          return new Data_Maybe.Just(Ctl_Internal_Types_RedeemerTag.Mint.value);
      };
      if (v === 2) {
          return new Data_Maybe.Just(Ctl_Internal_Types_RedeemerTag.Cert.value);
      };
      if (v === 3) {
          return new Data_Maybe.Just(Ctl_Internal_Types_RedeemerTag.Reward.value);
      };
      return Data_Maybe.Nothing.value;
  };
  var convertPlutusScript = function (plutusScript) {
      var language = Ctl_Internal_Deserialization_Language.convertLanguage($foreign.plutusScriptVersion(plutusScript));
      return Data_Tuple.curry(Ctl_Internal_Types_Scripts.PlutusScript)($foreign.plutusScriptBytes(plutusScript))(language);
  };
  var convertPlutusScripts = function (plutusScripts) {
      return Data_Functor.mapFlipped(Data_Functor.functorArray)($foreign.extractPlutusScripts(plutusScripts))(convertPlutusScript);
  };
  var convertPlutusList = (function () {
      var $5 = Data_Functor.map(Data_Functor.functorArray)(Ctl_Internal_Deserialization_PlutusData.convertPlutusData);
      return function ($6) {
          return $5($foreign.extractPlutusData($6));
      };
  })();
  var convertNativeScripts = function (nativeScripts) {
      return Data_Functor.mapFlipped(Data_Functor.functorArray)($foreign.extractNativeScripts(nativeScripts))(Ctl_Internal_Deserialization_NativeScript.convertNativeScript);
  };
  var convertExUnits = function (eu) {
      var steps = Ctl_Internal_Types_BigNum.toBigInt($foreign.getExUnitsSteps(eu));
      var mem = Ctl_Internal_Types_BigNum.toBigInt($foreign.getExUnitsMem(eu));
      return {
          mem: mem,
          steps: steps
      };
  };
  var convertRedeemer = function (redeemer) {
      return Control_Bind.bind(Data_Maybe.bindMaybe)(convertRedeemerTag($foreign.getRedeemerTag(redeemer)))(function (tag) {
          var index = Ctl_Internal_Types_BigNum.toBigInt($foreign.getRedeemerIndex(redeemer));
          var exUnits = convertExUnits($foreign.getExUnits(redeemer));
          var data_ = Ctl_Internal_Deserialization_PlutusData.convertPlutusData($foreign.getRedeemerPlutusData(redeemer));
          return Control_Applicative.pure(Data_Maybe.applicativeMaybe)({
              tag: tag,
              index: index,
              data: data_,
              exUnits: exUnits
          });
      });
  };
  var convertRedeemers = (function () {
      var $7 = Data_Traversable.traverse(Data_Traversable.traversableArray)(Data_Maybe.applicativeMaybe)(convertRedeemer);
      return function ($8) {
          return $7($foreign.extractRedeemers($8));
      };
  })();
  var convertBootstraps = (function () {
      var $9 = Data_Functor.map(Data_Functor.functorArray)(function (bootstrap) {
          return {
              vkey: convertVkey($foreign.getBootstrapVkey(bootstrap)),
              signature: Ctl_Internal_Cardano_Types_Transaction.mkFromCslEd25519Signature($foreign.getBootstrapSignature(bootstrap)),
              chainCode: $foreign.getBootstrapChainCode(bootstrap),
              attributes: $foreign.getBootstrapAttributes(bootstrap)
          };
      });
      return function ($10) {
          return $9($foreign.extractBootstraps($10));
      };
  })();
  var convertWitnessSet = function (ws) {
      var plutusScripts = Data_Functor.mapFlipped(Data_Maybe.functorMaybe)($foreign.getPlutusScripts(Ctl_Internal_FfiHelpers.maybeFfiHelper)(ws))(convertPlutusScripts);
      var plutusData = Data_Functor.mapFlipped(Data_Maybe.functorMaybe)($foreign.getWitnessSetPlutusData(Ctl_Internal_FfiHelpers.maybeFfiHelper)(ws))(convertPlutusList);
      var nativeScripts = Data_Functor.mapFlipped(Data_Maybe.functorMaybe)($foreign.getNativeScripts(Ctl_Internal_FfiHelpers.maybeFfiHelper)(ws))(convertNativeScripts);
      return Control_Bind.bind(Data_Maybe.bindMaybe)(Data_Traversable["for"](Data_Maybe.applicativeMaybe)(Data_Traversable.traversableMaybe)($foreign.getRedeemers(Ctl_Internal_FfiHelpers.maybeFfiHelper)(ws))(convertRedeemers))(function (redeemers) {
          return Control_Applicative.pure(Data_Maybe.applicativeMaybe)({
              vkeys: Data_Functor.mapFlipped(Data_Maybe.functorMaybe)($foreign.getVkeywitnesses(Ctl_Internal_FfiHelpers.maybeFfiHelper)(ws))(convertVkeyWitnesses),
              nativeScripts: nativeScripts,
              bootstraps: Data_Functor.mapFlipped(Data_Maybe.functorMaybe)($foreign.getBootstraps(Ctl_Internal_FfiHelpers.maybeFfiHelper)(ws))(convertBootstraps),
              plutusScripts: plutusScripts,
              plutusData: plutusData,
              redeemers: redeemers
          });
      });
  };
  exports["convertPlutusScript"] = convertPlutusScript;
  exports["convertVkeyWitness"] = convertVkeyWitness;
  exports["convertWitnessSet"] = convertWitnessSet;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Ctl.Internal.Deserialization.UnspentOutput"] = $PS["Ctl.Internal.Deserialization.UnspentOutput"] || {};
  var exports = $PS["Ctl.Internal.Deserialization.UnspentOutput"];
  var $foreign = $PS["Ctl.Internal.Deserialization.UnspentOutput"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Ctl_Internal_Cardano_Types_ScriptRef = $PS["Ctl.Internal.Cardano.Types.ScriptRef"];
  var Ctl_Internal_Cardano_Types_Value = $PS["Ctl.Internal.Cardano.Types.Value"];
  var Ctl_Internal_Deserialization_NativeScript = $PS["Ctl.Internal.Deserialization.NativeScript"];
  var Ctl_Internal_Deserialization_PlutusData = $PS["Ctl.Internal.Deserialization.PlutusData"];
  var Ctl_Internal_Deserialization_WitnessSet = $PS["Ctl.Internal.Deserialization.WitnessSet"];
  var Ctl_Internal_FfiHelpers = $PS["Ctl.Internal.FfiHelpers"];
  var Ctl_Internal_Serialization_Hash = $PS["Ctl.Internal.Serialization.Hash"];
  var Ctl_Internal_Serialization_ToBytes = $PS["Ctl.Internal.Serialization.ToBytes"];
  var Ctl_Internal_Types_BigNum = $PS["Ctl.Internal.Types.BigNum"];
  var Ctl_Internal_Types_OutputDatum = $PS["Ctl.Internal.Types.OutputDatum"];
  var Ctl_Internal_Types_TokenName = $PS["Ctl.Internal.Types.TokenName"];
  var Ctl_Internal_Types_Transaction = $PS["Ctl.Internal.Types.Transaction"];
  var Data_Bitraversable = $PS["Data.Bitraversable"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Map_Internal = $PS["Data.Map.Internal"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Traversable = $PS["Data.Traversable"];
  var Data_Tuple = $PS["Data.Tuple"];                
  var convertValue = function (value) {
      var coin = Ctl_Internal_Types_BigNum.toBigInt($foreign.getCoin(value));
      return Control_Bind.bind(Data_Maybe.bindMaybe)(Data_Traversable["for"](Data_Maybe.applicativeMaybe)(Data_Traversable.traversableMaybe)($foreign.getMultiAsset(Ctl_Internal_FfiHelpers.maybeFfiHelper)(value))(function (multiasset) {
          var multiasset$prime = Data_Functor.map(Data_Functor.functorArray)(Data_Functor.map(Data_Tuple.functorTuple)($foreign.extractAssets(Data_Tuple.Tuple.create)))($foreign.extractMultiAsset(Data_Tuple.Tuple.create)(multiasset));
          return Control_Bind.bind(Data_Maybe.bindMaybe)((function () {
              var $8 = Data_Functor.map(Data_Maybe.functorMaybe)(Data_Map_Internal.fromFoldable(Ctl_Internal_Cardano_Types_Value.ordCurrencySymbol)(Data_Foldable.foldableArray));
              var $9 = (function () {
                  var $11 = Data_Functor.map(Data_Maybe.functorMaybe);
                  var $12 = Data_Functor.map(Data_Functor.functorArray);
                  return function ($13) {
                      return $11($12($13));
                  };
              })()(Data_Functor.map(Data_Tuple.functorTuple)(Data_Map_Internal.fromFoldable(Ctl_Internal_Types_TokenName.ordTokenName)(Data_Foldable.foldableArray)));
              return function ($10) {
                  return $8($9($10));
              };
          })()(Data_Traversable.traverse(Data_Traversable.traversableArray)(Data_Maybe.applicativeMaybe)(Data_Bitraversable.bitraverse(Data_Bitraversable.bitraversableTuple)(Data_Maybe.applicativeMaybe)((function () {
              var $14 = Data_Newtype.unwrap();
              return function ($15) {
                  return Ctl_Internal_Cardano_Types_Value.mkCurrencySymbol($14(Ctl_Internal_Serialization_Hash.scriptHashToBytes($15)));
              };
          })())(Data_Traversable.traverse(Data_Traversable.traversableArray)(Data_Maybe.applicativeMaybe)(Data_Bitraversable.ltraverse(Data_Bitraversable.bitraversableTuple)(Data_Maybe.applicativeMaybe)(function ($16) {
              return Ctl_Internal_Types_TokenName.mkTokenName(Ctl_Internal_Types_TokenName.assetNameName($16));
          }))))(multiasset$prime)))(function (v) {
              return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(Data_Functor.map(Data_Map_Internal.functorMap)(Data_Functor.map(Data_Map_Internal.functorMap)(Ctl_Internal_Types_BigNum.toBigInt))(v));
          });
      }))(function (multiasset) {
          return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(Ctl_Internal_Cardano_Types_Value.mkValue(coin)(Ctl_Internal_Cardano_Types_Value.mkNonAdaAsset(Data_Maybe.fromMaybe(Data_Map_Internal.empty)(multiasset))));
      });
  };
  var convertScriptRef = $foreign.withScriptRef(function ($17) {
      return Ctl_Internal_Cardano_Types_ScriptRef.NativeScriptRef.create(Ctl_Internal_Deserialization_NativeScript.convertNativeScript($17));
  })(function ($18) {
      return Ctl_Internal_Cardano_Types_ScriptRef.PlutusScriptRef.create(Ctl_Internal_Deserialization_WitnessSet.convertPlutusScript($18));
  });
  var convertOutput = function (output) {
      return Control_Bind.bind(Data_Maybe.bindMaybe)(convertValue($foreign.getAmount(output)))(function (amount) {
          var mbDatum = $foreign.getPlutusData(Ctl_Internal_FfiHelpers.maybeFfiHelper)(output);
          var mbDataHash = Data_Functor.mapFlipped(Data_Maybe.functorMaybe)($foreign.getDataHash(Ctl_Internal_FfiHelpers.maybeFfiHelper)(output))((function () {
              var $19 = Data_Newtype.unwrap();
              var $20 = Ctl_Internal_Serialization_ToBytes.toBytes();
              return function ($21) {
                  return Ctl_Internal_Types_Transaction.DataHash($19($20($21)));
              };
          })());
          var address = $foreign.getAddress(output);
          return Control_Bind.bind(Data_Maybe.bindMaybe)((function () {
              if (mbDatum instanceof Data_Maybe.Just && mbDataHash instanceof Data_Maybe.Just) {
                  return Data_Maybe.Nothing.value;
              };
              if (mbDatum instanceof Data_Maybe.Just && mbDataHash instanceof Data_Maybe.Nothing) {
                  return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(new Ctl_Internal_Types_OutputDatum.OutputDatum(Data_Newtype.wrap()(Ctl_Internal_Deserialization_PlutusData.convertPlutusData(mbDatum.value0))));
              };
              if (mbDatum instanceof Data_Maybe.Nothing && mbDataHash instanceof Data_Maybe.Just) {
                  return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(new Ctl_Internal_Types_OutputDatum.OutputDatumHash(mbDataHash.value0));
              };
              if (mbDatum instanceof Data_Maybe.Nothing && mbDataHash instanceof Data_Maybe.Nothing) {
                  return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(Ctl_Internal_Types_OutputDatum.NoOutputDatum.value);
              };
              throw new Error("Failed pattern match at Ctl.Internal.Deserialization.UnspentOutput (line 98, column 12 - line 103, column 43): " + [ mbDatum.constructor.name, mbDataHash.constructor.name ]);
          })())(function (datum) {
              var scriptRef = Data_Functor.mapFlipped(Data_Maybe.functorMaybe)($foreign.getScriptRef(Ctl_Internal_FfiHelpers.maybeFfiHelper)(output))(convertScriptRef);
              return Control_Applicative.pure(Data_Maybe.applicativeMaybe)({
                  address: address,
                  amount: amount,
                  datum: datum,
                  scriptRef: scriptRef
              });
          });
      });
  };
  var convertInput = function (input) {
      var index = $foreign.getTransactionIndex(input);
      return {
          transactionId: Data_Newtype.unwrap()(Ctl_Internal_Serialization_ToBytes.toBytes()($foreign.getTransactionHash(input))),
          index: index
      };
  };
  var convertUnspentOutput = function (tuo) {
      var input = convertInput($foreign.getInput(tuo));
      return Control_Bind.bind(Data_Maybe.bindMaybe)(convertOutput($foreign.getOutput(tuo)))(function (output) {
          return Control_Applicative.pure(Data_Maybe.applicativeMaybe)({
              input: input,
              output: output
          });
      });
  };
  exports["convertUnspentOutput"] = convertUnspentOutput;
  exports["convertValue"] = convertValue;
})(PS);
(function(exports) {
  /* global BROWSER_RUNTIME */

  let lib;
  if (typeof BROWSER_RUNTIME != "undefined" && BROWSER_RUNTIME) {
    lib = require("@emurgo/cardano-serialization-lib-browser");
  } else {
    lib = require("@emurgo/cardano-serialization-lib-nodejs");
  }
  lib = require("@mlabs-haskell/csl-gc-wrapper")(lib);

  const setter = prop => obj => value => () => obj["set_" + prop](value);

  exports.hashTransaction = body => () => lib.hash_transaction(body);

  exports.newValueFromAssets = multiasset => () =>
    lib.Value.new_from_assets(multiasset);

  exports.valueSetCoin = setter("coin");

  exports.newTransactionInput = transaction_id => index => () =>
    lib.TransactionInput.new(transaction_id, index);

  exports.newTransactionInputs = () => lib.TransactionInputs.new();

  exports.addTransactionInput = inputs => input => () => inputs.add(input);

  exports.newTransactionOutput = address => amount => () =>
    lib.TransactionOutput.new(address, amount);

  exports.newTransactionOutputs = () => lib.TransactionOutputs.new();

  exports.addTransactionOutput = outputs => output => () => outputs.add(output);

  exports.newTransactionBody = inputs => outputs => fee => () =>
    lib.TransactionBody.new_tx_body(inputs, outputs, fee);

  exports.setTxIsValid = tx => isValid => () => tx.set_is_valid(isValid);

  exports.newTransaction = body => witness_set => auxiliary_data => () =>
    lib.Transaction.new(body, witness_set, auxiliary_data);

  exports.newTransaction_ = body => witness_set => () =>
    lib.Transaction.new(body, witness_set);         

  exports.newMultiAsset = () => lib.MultiAsset.new();

  exports.insertMultiAsset = multiasset => key => value => () =>
    multiasset.insert(key, value);

  exports.newAssets = () => lib.Assets.new();

  exports.insertAssets = assets => key => value => () =>
    assets.insert(key, value);

  exports.newAssetName = name => () => lib.AssetName.new(name);

  exports.transactionOutputSetDataHash = setter("data_hash");

  exports.transactionOutputSetPlutusData = setter("plutus_data");

  exports.transactionOutputSetScriptRef = setter("script_ref");

  exports.scriptRefNewNativeScript = nativeScript =>
    lib.ScriptRef.new_native_script(nativeScript);

  exports.scriptRefNewPlutusScript = plutusScript =>
    lib.ScriptRef.new_plutus_script(plutusScript);         

  exports.makeVkeywitness = hash => key => () => lib.make_vkey_witness(hash, key);

  exports.publicKeyHash = pk => pk.hash();                

  exports.newCostmdls = () => lib.Costmdls.new();     

  exports.costmdlsSetCostModel = cms => lang => cm => () => cms.insert(lang, cm);

  exports.newCostModel = () => lib.CostModel.new();

  exports.costModelSetCost = cm => op => cost => () => cm.set(op, cost);

  exports.newPlutusV1 = () => lib.Language.new_plutus_v1();

  exports.newPlutusV2 = () => lib.Language.new_plutus_v2();

  exports._hashScriptData = rs => cms => ds => () => {
    const list = lib.PlutusList.new();
    ds.forEach(d => list.add(d));
    return lib.hash_script_data(rs, cms, list);
  };

  exports._hashScriptDataNoDatums = rs => cms => () =>
    lib.hash_script_data(rs, cms);

  exports.newRedeemers = () => lib.Redeemers.new();

  exports.addRedeemer = rs => r => () => rs.add(r);

  exports.setTxBodyReferenceInputs = txBody => referenceInputs => () =>
    txBody.set_reference_inputs(referenceInputs);

  exports.setTxBodyScriptDataHash = setter("script_data_hash");

  exports.setTxBodyMint = setter("mint");

  exports.newMint = () => lib.Mint.new();

  exports._bigIntToInt = maybe => bigInt => {
    try {
      const str = bigInt.to_str();
      if (str[0] == "-") {
        return maybe.just(
          lib.Int.new_negative(lib.BigNum.from_str(str.slice(1)))
        );
      } else {
        return maybe.just(lib.Int.new(lib.BigNum.from_str(str)));
      }
    } catch (_) {
      return maybe.nothing;
    }
  };

  exports.newMintAssets = lib.MintAssets.new;

  exports.insertMintAssets = mint => scriptHash => mintAssets => () =>
    mint.insert(scriptHash, mintAssets);

  exports.insertMintAsset = mintAssets => assetName => int => () =>
    mintAssets.insert(assetName, int);

  exports.networkIdTestnet = () => lib.NetworkId.testnet();

  exports.networkIdMainnet = () => lib.NetworkId.mainnet();

  exports.setTxBodyCollateralReturn = txBody => collateralReturn => () =>
    txBody.set_collateral_return(collateralReturn);

  exports.setTxBodyTotalCollateral = txBody => totalCollateral => () =>
    txBody.set_total_collateral(totalCollateral);

  exports.setTxBodyTtl = setter("ttl");

  exports.setTxBodyCerts = setter("certs");

  exports.newCertificates = () => lib.Certificates.new();

  exports.newStakeRegistrationCertificate = stakeCredential => () =>
    lib.Certificate.new_stake_registration(
      lib.StakeRegistration.new(stakeCredential)
    );

  exports.newStakeDeregistrationCertificate = stakeCredential => () =>
    lib.Certificate.new_stake_deregistration(
      lib.StakeDeregistration.new(stakeCredential)
    );

  exports.newStakeDelegationCertificate =
    stakeCredential => ed25519KeyHash => () =>
      lib.Certificate.new_stake_delegation(
        lib.StakeDelegation.new(stakeCredential, ed25519KeyHash)
      );

  exports.newPoolRegistrationCertificate =
    operator =>
    vrfKeyhash =>
    pledge =>
    cost =>
    margin =>
    reward_account =>
    poolOwners =>
    relays =>
    poolMetadata =>
    () =>
      lib.Certificate.new_pool_registration(
        lib.PoolRegistration.new(
          lib.PoolParams.new(
            operator,
            vrfKeyhash,
            pledge,
            cost,
            margin,
            reward_account,
            poolOwners,
            relays,
            poolMetadata
          )
        )
      );

  exports.newUnitInterval = numerator => denominator => () =>
    lib.UnitInterval.new(numerator, denominator);

  exports.newPoolRetirementCertificate = poolKeyHash => epoch => () =>
    lib.Certificate.new_pool_retirement(
      lib.PoolRetirement.new(poolKeyHash, epoch)
    );

  exports.newGenesisKeyDelegationCertificate =
    genesisHash => genesisDelegateHash => vrfKeyhash => () =>
      lib.Certificate.new_genesis_key_delegation(
        lib.GenesisKeyDelegation.new(genesisHash, genesisDelegateHash, vrfKeyhash)
      );

  exports.addCert = certificates => certificate => () =>
    certificates.add(certificate);

  exports.setTxBodyCollateral = setter("collateral");

  exports.setTxBodyNetworkId = setter("network_id");

  exports.transactionBodySetRequiredSigners =
    containerHelper => body => keyHashes => () =>
      body.set_required_signers(
        containerHelper.pack(lib.Ed25519KeyHashes, keyHashes)
      );

  exports.transactionBodySetValidityStartInterval = setter(
    "validity_start_interval_bignum"
  );

  exports.transactionBodySetAuxiliaryDataHash = txBody => hash => () =>
    txBody.set_auxiliary_data_hash(hash);

  exports.convertPoolOwners = containerHelper => keyHashes => () =>
    containerHelper.pack(lib.Ed25519KeyHashes, keyHashes);

  exports.packRelays = containerHelper => relays =>
    containerHelper.pack(lib.Relays, relays);

  exports.newIpv4 = data => () => lib.Ipv4.new(data);

  exports.newIpv6 = data => () => lib.Ipv6.new(data);

  exports.newSingleHostAddr = port => ipv4 => ipv6 => () =>
    lib.Relay.new_single_host_addr(lib.SingleHostAddr.new(port, ipv4, ipv6));

  exports.newSingleHostName = port => dnsName => () =>
    lib.Relay.new_single_host_name(
      lib.SingleHostName.new(port, lib.DNSRecordAorAAAA.new(dnsName))
    );

  exports.newMultiHostName = dnsName => () =>
    lib.Relay.new_multi_host_name(
      lib.MultiHostName.new(lib.DNSRecordSRV.new(dnsName))
    );

  exports.newPoolMetadata = url => hash => () =>
    lib.PoolMetadata.new(lib.URL.new(url), hash);

  exports.newMoveInstantaneousRewardToOtherPot = pot => amount => () =>
    lib.MoveInstantaneousReward.new_to_other_pot(pot, amount);

  exports.newMoveInstantaneousRewardToStakeCreds = pot => amounts => () =>
    lib.MoveInstantaneousReward.new_to_stake_creds(pot, amounts);

  exports.newMIRToStakeCredentials = containerHelper => entries => () =>
    containerHelper.packMap(lib.MIRToStakeCredentials, entries);

  exports.newMoveInstantaneousRewardsCertificate = mir => () =>
    lib.Certificate.new_move_instantaneous_rewards_cert(
      lib.MoveInstantaneousRewardsCert.new(mir)
    );

  exports.newWithdrawals = containerHelper => entries => () =>
    containerHelper.packMap(lib.Withdrawals, entries);

  exports.setTxBodyWithdrawals = setter("withdrawals");

  exports.setTxBodyUpdate = setter("update");

  exports.newUpdate = ppUpdates => epoch => () =>
    lib.Update.new(ppUpdates, epoch);

  exports.ppuSetMinfeeA = setter("minfee_a");

  exports.ppuSetMinfeeB = setter("minfee_b");

  exports.ppuSetMaxBlockBodySize = setter("max_block_body_size");

  exports.ppuSetMaxTxSize = setter("max_tx_size");

  exports.ppuSetMaxBlockHeaderSize = setter("max_block_header_size");

  exports.ppuSetKeyDeposit = setter("key_deposit");

  exports.ppuSetPoolDeposit = setter("pool_deposit");

  exports.ppuSetMaxEpoch = setter("max_epoch");

  exports.ppuSetNOpt = setter("n_opt");

  exports.ppuSetPoolPledgeInfluence = setter("pool_pledge_influence");

  exports.ppuSetExpansionRate = setter("expansion_rate");

  exports.ppuSetTreasuryGrowthRate = setter("treasury_growth_rate");

  exports.newProtocolVersion = major => minor => () =>
    lib.ProtocolVersion.new(major, minor);

  exports.ppuSetProtocolVersion = ppu => version => () =>
    ppu.set_protocol_version(version);

  exports.ppuSetMinPoolCost = setter("min_pool_cost");

  exports.ppuSetAdaPerUtxoByte = setter("ada_per_utxo_byte");

  exports.ppuSetCostModels = setter("cost_models");

  exports.newExUnitPrices = mem_price => step_price => () =>
    lib.ExUnitPrices.new(mem_price, step_price);

  exports.ppuSetExecutionCosts = setter("execution_costs");

  exports.ppuSetMaxTxExUnits = setter("max_tx_ex_units");

  exports.ppuSetMaxBlockExUnits = setter("max_block_ex_units");

  exports.ppuSetMaxValueSize = setter("max_value_size");

  exports.ppuSetCollateralPercentage = setter("collateral_percentage");

  exports.ppuSetMaxCollateralInputs = setter("max_collateral_inputs");

  exports.newProtocolParamUpdate = () => lib.ProtocolParamUpdate.new();

  exports.newProposedProtocolParameterUpdates = containerHelper => kvs => () =>
    containerHelper.packMap(lib.ProposedProtocolParameterUpdates, kvs);
})(PS["Ctl.Internal.Serialization"] = PS["Ctl.Internal.Serialization"] || {});
(function(exports) {
  /* global BROWSER_RUNTIME */

  let lib;
  if (typeof BROWSER_RUNTIME != "undefined" && BROWSER_RUNTIME) {
    lib = require("@emurgo/cardano-serialization-lib-browser");
  } else {
    lib = require("@emurgo/cardano-serialization-lib-nodejs");
  }
  lib = require("@mlabs-haskell/csl-gc-wrapper")(lib);

  const setter = prop => obj => value => () => obj["set_" + prop](value);

  exports.newAuxiliaryData = () => lib.AuxiliaryData.new();

  exports.setAuxiliaryDataNativeScripts = setter("native_scripts");

  exports.setAuxiliaryDataPlutusScripts = setter("plutus_scripts");

  exports.setAuxiliaryDataGeneralTransactionMetadata = setter("metadata");

  exports.newGeneralTransactionMetadata = containerHelper => entries => () =>
    containerHelper.packMap(lib.GeneralTransactionMetadata, entries);

  exports.newMetadataMap = containerHelper => entries => () =>
    lib.TransactionMetadatum.new_map(
      containerHelper.packMap(lib.MetadataMap, entries)
    );

  exports.newMetadataList = containerHelper => entries => () =>
    lib.TransactionMetadatum.new_list(
      containerHelper.pack(lib.MetadataList, entries)
    );

  exports.newMetadataInt = int => () => lib.TransactionMetadatum.new_int(int);

  exports.newMetadataBytes = bytes => () =>
    lib.TransactionMetadatum.new_bytes(bytes);

  exports.newMetadataText = text => () => lib.TransactionMetadatum.new_text(text);
})(PS["Ctl.Internal.Serialization.AuxiliaryData"] = PS["Ctl.Internal.Serialization.AuxiliaryData"] || {});
(function(exports) {
  /* global BROWSER_RUNTIME */

  let lib;
  if (typeof BROWSER_RUNTIME != "undefined" && BROWSER_RUNTIME) {
    lib = require("@emurgo/cardano-serialization-lib-browser");
  } else {
    lib = require("@emurgo/cardano-serialization-lib-nodejs");
  }
  lib = require("@mlabs-haskell/csl-gc-wrapper")(lib);

  const mkScript = prop => arg => lib.NativeScript[prop](arg);

  exports.mkScriptPubkey = keyHash => lib.ScriptPubkey.new(keyHash);
  exports.nativeScript_new_script_pubkey = mkScript("new_script_pubkey");
  exports.nativeScript_new_script_all = mkScript("new_script_all");
  exports.nativeScript_new_script_any = mkScript("new_script_any");
  exports.nativeScript_new_script_n_of_k = mkScript("new_script_n_of_k");
  exports.nativeScript_new_timelock_start = mkScript("new_timelock_start");
  exports.nativeScript_new_timelock_expiry = mkScript("new_timelock_expiry");
  exports._packNativeScripts = helper => nss =>
    helper.pack(lib.NativeScripts, nss);
  exports.mkScriptAll = nss => lib.ScriptAll.new(nss);
  exports.mkScriptAny = nss => lib.ScriptAny.new(nss);
  exports.mkScriptNOfK = n => nss => lib.ScriptNOfK.new(n, nss);
  exports.mkTimelockExpiry = n => lib.TimelockExpiry.new_timelockexpiry(n);
  exports.mkTimelockStart = n => lib.TimelockStart.new_timelockstart(n);
})(PS["Ctl.Internal.Serialization.NativeScript"] = PS["Ctl.Internal.Serialization.NativeScript"] || {});
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Ctl.Internal.Serialization.NativeScript"] = $PS["Ctl.Internal.Serialization.NativeScript"] || {};
  var exports = $PS["Ctl.Internal.Serialization.NativeScript"];
  var $foreign = $PS["Ctl.Internal.Serialization.NativeScript"];
  var Ctl_Internal_Cardano_Types_NativeScript = $PS["Ctl.Internal.Cardano.Types.NativeScript"];
  var Ctl_Internal_FfiHelpers = $PS["Ctl.Internal.FfiHelpers"];
  var Data_Functor = $PS["Data.Functor"];                
  var packNativeScripts = $foreign["_packNativeScripts"](Ctl_Internal_FfiHelpers.containerHelper);
  var convertTimelockStart = function (v) {
      return $foreign.nativeScript_new_timelock_start($foreign.mkTimelockStart(v));
  };
  var convertTimelockExpiry = function (v) {
      return $foreign.nativeScript_new_timelock_expiry($foreign.mkTimelockExpiry(v));
  };
  var convertScriptPubkey = function (hash) {
      return $foreign.nativeScript_new_script_pubkey($foreign.mkScriptPubkey(hash));
  };
  var convertScriptNOfK = function (n) {
      return function (nss) {
          return $foreign.nativeScript_new_script_n_of_k($foreign.mkScriptNOfK(n)(packNativeScripts(Data_Functor.map(Data_Functor.functorArray)(convertNativeScript)(nss))));
      };
  };
  var convertScriptAny = function (nss) {
      return $foreign.nativeScript_new_script_any($foreign.mkScriptAny(packNativeScripts(Data_Functor.map(Data_Functor.functorArray)(convertNativeScript)(nss))));
  };
  var convertScriptAll = function (nss) {
      return $foreign.nativeScript_new_script_all($foreign.mkScriptAll(packNativeScripts(Data_Functor.map(Data_Functor.functorArray)(convertNativeScript)(nss))));
  };
  var convertNativeScript = function (v) {
      if (v instanceof Ctl_Internal_Cardano_Types_NativeScript.ScriptPubkey) {
          return convertScriptPubkey(v.value0);
      };
      if (v instanceof Ctl_Internal_Cardano_Types_NativeScript.ScriptAll) {
          return convertScriptAll(v.value0);
      };
      if (v instanceof Ctl_Internal_Cardano_Types_NativeScript.ScriptAny) {
          return convertScriptAny(v.value0);
      };
      if (v instanceof Ctl_Internal_Cardano_Types_NativeScript.ScriptNOfK) {
          return convertScriptNOfK(v.value0)(v.value1);
      };
      if (v instanceof Ctl_Internal_Cardano_Types_NativeScript.TimelockStart) {
          return convertTimelockStart(v.value0);
      };
      if (v instanceof Ctl_Internal_Cardano_Types_NativeScript.TimelockExpiry) {
          return convertTimelockExpiry(v.value0);
      };
      throw new Error("Failed pattern match at Ctl.Internal.Serialization.NativeScript (line 38, column 23 - line 44, column 54): " + [ v.constructor.name ]);
  };
  var convertNativeScripts = (function () {
      var $13 = Data_Functor.map(Data_Functor.functorArray)(convertNativeScript);
      return function ($14) {
          return packNativeScripts($13($14));
      };
  })();
  exports["convertNativeScript"] = convertNativeScript;
  exports["convertNativeScripts"] = convertNativeScripts;
})(PS);
(function(exports) {
  /* global BROWSER_RUNTIME */

  let lib;
  if (typeof BROWSER_RUNTIME != "undefined" && BROWSER_RUNTIME) {
    lib = require("@emurgo/cardano-serialization-lib-browser");
  } else {
    lib = require("@emurgo/cardano-serialization-lib-nodejs");
  }
  lib = require("@mlabs-haskell/csl-gc-wrapper")(lib);

  exports.newPlutusV1Script = bytes => lib.PlutusScript.new(bytes);

  exports.newPlutusV2Script = bytes => lib.PlutusScript.new_v2(bytes);
})(PS["Ctl.Internal.Serialization.PlutusScript"] = PS["Ctl.Internal.Serialization.PlutusScript"] || {});
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Ctl.Internal.Serialization.PlutusScript"] = $PS["Ctl.Internal.Serialization.PlutusScript"] || {};
  var exports = $PS["Ctl.Internal.Serialization.PlutusScript"];
  var $foreign = $PS["Ctl.Internal.Serialization.PlutusScript"];
  var Ctl_Internal_Types_Scripts = $PS["Ctl.Internal.Types.Scripts"];                
  var convertPlutusScript = function (v) {
      return (function () {
          if (v.value1 instanceof Ctl_Internal_Types_Scripts.PlutusV1) {
              return $foreign.newPlutusV1Script;
          };
          if (v.value1 instanceof Ctl_Internal_Types_Scripts.PlutusV2) {
              return $foreign.newPlutusV2Script;
          };
          throw new Error("Failed pattern match at Ctl.Internal.Serialization.PlutusScript (line 24, column 11 - line 26, column 36): " + [ v.value1.constructor.name ]);
      })()(v.value0);
  };
  exports["convertPlutusScript"] = convertPlutusScript;
})(PS);
(function(exports) {
  /* global BROWSER_RUNTIME */

  let lib;
  if (typeof BROWSER_RUNTIME != "undefined" && BROWSER_RUNTIME) {
    lib = require("@emurgo/cardano-serialization-lib-browser");
  } else {
    lib = require("@emurgo/cardano-serialization-lib-nodejs");
  }
  lib = require("@mlabs-haskell/csl-gc-wrapper")(lib);

  exports.newTransactionWitnessSet = () => lib.TransactionWitnessSet.new();

  exports.newVkeyFromPublicKey = public_key => () => lib.Vkey.new(public_key);

  exports.newVkeywitnesses = () => lib.Vkeywitnesses.new();

  exports.newVkeywitness = vkey => signature => () =>
    lib.Vkeywitness.new(vkey, signature);

  exports.addVkeywitness = witnesses => witness => () => witnesses.add(witness);

  exports.newPlutusScripts = () => lib.PlutusScripts.new();

  exports.addPlutusScript = scripts => script => () => scripts.add(script);

  exports.transactionWitnessSetSetVkeys = ws => vkeys => () =>
    ws.set_vkeys(vkeys);

  exports.txWitnessSetSetPlutusScripts = ws => scripts => () =>
    ws.set_plutus_scripts(scripts);

  exports.transactionWitnessSetSetNativeScripts = ws => scripts => () =>
    ws.set_native_scripts(scripts);

  exports._wsSetBootstraps = helper => ws => bootstraps => () =>
    ws.set_bootstraps(helper.pack(lib.BootstrapWitnesses, bootstraps));

  exports.newBootstrapWitness =
    vkey => signature => chain_code => attributes => () => {
      lib.BootstrapWitness.new(vkey, signature, chain_code, attributes);
    };

  exports._wsSetPlutusData = helper => ws => plutus_data => () =>
    ws.set_plutus_data(helper.pack(lib.PlutusList, plutus_data));

  exports.newRedeemer = tag => index => data => ex_units => () =>
    lib.Redeemer.new(tag, index, data, ex_units);

  exports._newRedeemerTag = tag => () => lib.RedeemerTag["new_" + tag]();

  exports.newExUnits = mem => steps => lib.ExUnits.new(mem, steps);

  exports._wsSetRedeemers = helper => ws => redeemers => () =>
    ws.set_redeemers(helper.pack(lib.Redeemers, redeemers));

  exports._wsSetPlutusScripts = helper => ws => scripts => () =>
    ws.set_plutus_scripts(helper.pack(lib.PlutusScripts, scripts));
})(PS["Ctl.Internal.Serialization.WitnessSet"] = PS["Ctl.Internal.Serialization.WitnessSet"] || {});
(function(exports) {
  /* global BROWSER_RUNTIME */

  let lib;
  if (typeof BROWSER_RUNTIME != "undefined" && BROWSER_RUNTIME) {
    lib = require("@emurgo/cardano-serialization-lib-browser");
  } else {
    lib = require("@emurgo/cardano-serialization-lib-nodejs");
  }
  lib = require("@mlabs-haskell/csl-gc-wrapper")(lib);

  exports._mkPlutusData_bytes = bytes => lib.PlutusData.new_bytes(bytes);
  exports._mkPlutusData_list = list => lib.PlutusData.new_list(list);
  exports._mkPlutusData_map = list => lib.PlutusData.new_map(list);
  exports._mkPlutusData_integer = int => lib.PlutusData.new_integer(int);
  exports._mkPlutusData_constr = constr =>
    lib.PlutusData.new_constr_plutus_data(constr);

  exports._packPlutusList = containerHelper => elems =>
    containerHelper.pack(lib.PlutusList, elems);
  exports._mkConstrPlutusData = n => list => lib.ConstrPlutusData.new(n, list);

  exports._bigIntFromString = maybe => str => {
    try {
      return maybe.just(lib.BigInt.from_str(str));
    } catch (_) {
      return maybe.nothing;
    }
  };

  exports._packMap = first => second => kvs => {
    const res = lib.PlutusMap.new();
    for (let kv of kvs) {
      res.insert(first(kv), second(kv));
    }
    return res;
  };
})(PS["Ctl.Internal.Serialization.PlutusData"] = PS["Ctl.Internal.Serialization.PlutusData"] || {});
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Ctl.Internal.Serialization.PlutusData"] = $PS["Ctl.Internal.Serialization.PlutusData"] || {};
  var exports = $PS["Ctl.Internal.Serialization.PlutusData"];
  var $foreign = $PS["Ctl.Internal.Serialization.PlutusData"];
  var Ctl_Internal_FfiHelpers = $PS["Ctl.Internal.FfiHelpers"];
  var Ctl_Internal_Types_PlutusData = $PS["Ctl.Internal.Types.PlutusData"];
  var Data_BigInt = $PS["Data.BigInt"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Tuple = $PS["Data.Tuple"];                
  var convertBigInt = function (n) {
      return Data_Maybe.fromJust()($foreign["_bigIntFromString"](Ctl_Internal_FfiHelpers.maybeFfiHelper)(Data_BigInt.toString(n)));
  };
  var convertPlutusInteger = function (n) {
      return $foreign["_mkPlutusData_integer"](convertBigInt(n));
  };
  var convertPlutusMap = function (mp) {
      var entries = Data_Functor.mapFlipped(Data_Functor.functorArray)(mp)(function (v) {
          return new Data_Tuple.Tuple(convertPlutusData(v.value0), convertPlutusData(v.value1));
      });
      return $foreign["_mkPlutusData_map"]($foreign["_packMap"](Data_Tuple.fst)(Data_Tuple.snd)(entries));
  };
  var convertPlutusList = function (x) {
      return $foreign["_mkPlutusData_list"]($foreign["_packPlutusList"](Ctl_Internal_FfiHelpers.containerHelper)(Data_Functor.map(Data_Functor.functorArray)(convertPlutusData)(x)));
  };
  var convertPlutusData = function (x) {
      if (x instanceof Ctl_Internal_Types_PlutusData.Constr) {
          return convertConstr(x.value0)(x.value1);
      };
      if (x instanceof Ctl_Internal_Types_PlutusData["Map"]) {
          return convertPlutusMap(x.value0);
      };
      if (x instanceof Ctl_Internal_Types_PlutusData.List) {
          return convertPlutusList(x.value0);
      };
      if (x instanceof Ctl_Internal_Types_PlutusData.Integer) {
          return convertPlutusInteger(x.value0);
      };
      if (x instanceof Ctl_Internal_Types_PlutusData.Bytes) {
          return $foreign["_mkPlutusData_bytes"](x.value0);
      };
      throw new Error("Failed pattern match at Ctl.Internal.Serialization.PlutusData (line 31, column 23 - line 36, column 37): " + [ x.constructor.name ]);
  };
  var convertConstr = function (alt) {
      return function (list) {
          return $foreign["_mkPlutusData_constr"]($foreign["_mkConstrPlutusData"](alt)($foreign["_packPlutusList"](Ctl_Internal_FfiHelpers.containerHelper)(Data_Functor.map(Data_Functor.functorArray)(convertPlutusData)(list))));
      };
  };
  exports["convertPlutusData"] = convertPlutusData;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Ctl.Internal.Serialization.WitnessSet"] = $PS["Ctl.Internal.Serialization.WitnessSet"] || {};
  var exports = $PS["Ctl.Internal.Serialization.WitnessSet"];
  var $foreign = $PS["Ctl.Internal.Serialization.WitnessSet"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Ctl_Internal_Cardano_Types_Transaction = $PS["Ctl.Internal.Cardano.Types.Transaction"];
  var Ctl_Internal_FfiHelpers = $PS["Ctl.Internal.FfiHelpers"];
  var Ctl_Internal_Serialization_NativeScript = $PS["Ctl.Internal.Serialization.NativeScript"];
  var Ctl_Internal_Serialization_PlutusData = $PS["Ctl.Internal.Serialization.PlutusData"];
  var Ctl_Internal_Serialization_PlutusScript = $PS["Ctl.Internal.Serialization.PlutusScript"];
  var Ctl_Internal_Types_BigNum = $PS["Ctl.Internal.Types.BigNum"];
  var Ctl_Internal_Types_RedeemerTag = $PS["Ctl.Internal.Types.RedeemerTag"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Traversable = $PS["Data.Traversable"];
  var Effect = $PS["Effect"];
  var Effect_Exception = $PS["Effect.Exception"];                
  var setWitnesses = function (f) {
      return function (ws) {
          return f(Ctl_Internal_FfiHelpers.containerHelper)(ws);
      };
  };
  var setRedeemers = function (rs) {
      return function (ws) {
          return setWitnesses($foreign["_wsSetRedeemers"])(ws)(rs);
      };
  };
  var setPlutusScripts = function (ps) {
      return function (ws) {
          return setWitnesses($foreign["_wsSetPlutusScripts"])(ws)(ps);
      };
  };
  var setPlutusData = function (pd) {
      return function (ws) {
          return setWitnesses($foreign["_wsSetPlutusData"])(ws)(pd);
      };
  };
  var convertVkey = function (v) {
      return $foreign.newVkeyFromPublicKey(Ctl_Internal_Cardano_Types_Transaction.convertPubKey(v));
  };
  var convertVkeywitness = function (v) {
      return function __do() {
          var vkey$prime = convertVkey(v.value0)();
          var signature$prime = Ctl_Internal_Cardano_Types_Transaction.convertEd25519Signature(v.value1);
          return $foreign.newVkeywitness(vkey$prime)(signature$prime)();
      };
  };
  var convertVkeywitnesses = function (arr) {
      return function __do() {
          var witnesses = $foreign.newVkeywitnesses();
          Data_Foldable.traverse_(Effect.applicativeEffect)(Data_Foldable.foldableArray)(Control_Bind.composeKleisli(Effect.bindEffect)(convertVkeywitness)($foreign.addVkeywitness(witnesses)))(arr)();
          return witnesses;
      };
  };
  var convertRedeemerTag = function ($26) {
      return $foreign["_newRedeemerTag"]((function (v) {
          if (v instanceof Ctl_Internal_Types_RedeemerTag.Spend) {
              return "spend";
          };
          if (v instanceof Ctl_Internal_Types_RedeemerTag.Mint) {
              return "mint";
          };
          if (v instanceof Ctl_Internal_Types_RedeemerTag.Cert) {
              return "cert";
          };
          if (v instanceof Ctl_Internal_Types_RedeemerTag.Reward) {
              return "reward";
          };
          throw new Error("Failed pattern match at Ctl.Internal.Serialization.WitnessSet (line 130, column 42 - line 134, column 25): " + [ v.constructor.name ]);
      })($26));
  };
  var convertExUnits = function (v) {
      return Data_Maybe.maybe(Effect_Exception["throw"]("Failed to construct ExUnits"))(Control_Applicative.pure(Effect.applicativeEffect))(Control_Bind.bind(Data_Maybe.bindMaybe)(Ctl_Internal_Types_BigNum.fromBigInt(v.mem))(function (mem$prime) {
          return Control_Bind.bind(Data_Maybe.bindMaybe)(Ctl_Internal_Types_BigNum.fromBigInt(v.steps))(function (steps$prime) {
              return Control_Applicative.pure(Data_Maybe.applicativeMaybe)($foreign.newExUnits(mem$prime)(steps$prime));
          });
      }));
  };
  var convertRedeemer = function (v) {
      return function __do() {
          var tag$prime = convertRedeemerTag(v.tag)();
          var index$prime = Data_Maybe.maybe(Effect_Exception["throw"]("Failed to convert redeemer index"))(Control_Applicative.pure(Effect.applicativeEffect))(Ctl_Internal_Types_BigNum.fromBigInt(v.index))();
          var data$prime = Ctl_Internal_Serialization_PlutusData.convertPlutusData(v.data);
          var exUnits$prime = convertExUnits(v.exUnits)();
          return $foreign.newRedeemer(tag$prime)(index$prime)(data$prime)(exUnits$prime)();
      };
  };
  var convertBootstrap = function (v) {
      return function __do() {
          var vkey$prime = convertVkey(v.vkey)();
          var signature$prime = Ctl_Internal_Cardano_Types_Transaction.convertEd25519Signature(v.signature);
          return $foreign.newBootstrapWitness(vkey$prime)(signature$prime)(v.chainCode)(v.attributes)();
      };
  };
  var convertWitnessSet = function (v) {
      return function __do() {
          var ws = $foreign.newTransactionWitnessSet();
          Data_Foldable.for_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(v.vkeys)(Control_Bind.composeKleisli(Effect.bindEffect)(convertVkeywitnesses)($foreign.transactionWitnessSetSetVkeys(ws)))();
          Data_Foldable.for_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(v.nativeScripts)((function () {
              var $27 = $foreign.transactionWitnessSetSetNativeScripts(ws);
              return function ($28) {
                  return $27(Ctl_Internal_Serialization_NativeScript.convertNativeScripts($28));
              };
          })())();
          Data_Foldable.for_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(v.bootstraps)(Control_Bind.composeKleisli(Effect.bindEffect)(Data_Traversable.traverse(Data_Traversable.traversableArray)(Effect.applicativeEffect)(convertBootstrap))($foreign["_wsSetBootstraps"](Ctl_Internal_FfiHelpers.containerHelper)(ws)))();
          Data_Foldable.for_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(v.plutusScripts)(function (ps) {
              return function __do() {
                  var scripts = $foreign.newPlutusScripts();
                  Data_Foldable.for_(Effect.applicativeEffect)(Data_Foldable.foldableArray)(ps)((function () {
                      var $29 = $foreign.addPlutusScript(scripts);
                      return function ($30) {
                          return $29(Ctl_Internal_Serialization_PlutusScript.convertPlutusScript($30));
                      };
                  })())();
                  return $foreign.txWitnessSetSetPlutusScripts(ws)(scripts)();
              };
          })();
          Data_Foldable.for_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(v.plutusData)((function () {
              var $31 = $foreign["_wsSetPlutusData"](Ctl_Internal_FfiHelpers.containerHelper)(ws);
              var $32 = Data_Functor.map(Data_Functor.functorArray)(Ctl_Internal_Serialization_PlutusData.convertPlutusData);
              return function ($33) {
                  return $31($32($33));
              };
          })())();
          Data_Foldable.for_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(v.redeemers)(Control_Bind.composeKleisli(Effect.bindEffect)(Data_Traversable.traverse(Data_Traversable.traversableArray)(Effect.applicativeEffect)(convertRedeemer))($foreign["_wsSetRedeemers"](Ctl_Internal_FfiHelpers.containerHelper)(ws)))();
          return ws;
      };
  };
  exports["setPlutusData"] = setPlutusData;
  exports["setRedeemers"] = setRedeemers;
  exports["setPlutusScripts"] = setPlutusScripts;
  exports["convertWitnessSet"] = convertWitnessSet;
  exports["convertRedeemer"] = convertRedeemer;
  exports["convertExUnits"] = convertExUnits;
  exports["newPlutusScripts"] = $foreign.newPlutusScripts;
  exports["addPlutusScript"] = $foreign.addPlutusScript;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Ctl.Internal.Serialization.AuxiliaryData"] = $PS["Ctl.Internal.Serialization.AuxiliaryData"] || {};
  var exports = $PS["Ctl.Internal.Serialization.AuxiliaryData"];
  var $foreign = $PS["Ctl.Internal.Serialization.AuxiliaryData"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Ctl_Internal_FfiHelpers = $PS["Ctl.Internal.FfiHelpers"];
  var Ctl_Internal_Helpers = $PS["Ctl.Internal.Helpers"];
  var Ctl_Internal_Serialization_NativeScript = $PS["Ctl.Internal.Serialization.NativeScript"];
  var Ctl_Internal_Serialization_PlutusScript = $PS["Ctl.Internal.Serialization.PlutusScript"];
  var Ctl_Internal_Serialization_WitnessSet = $PS["Ctl.Internal.Serialization.WitnessSet"];
  var Ctl_Internal_Types_BigNum = $PS["Ctl.Internal.Types.BigNum"];
  var Ctl_Internal_Types_TransactionMetadata = $PS["Ctl.Internal.Types.TransactionMetadata"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Map_Internal = $PS["Data.Map.Internal"];
  var Data_Traversable = $PS["Data.Traversable"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unfoldable = $PS["Data.Unfoldable"];
  var Effect = $PS["Effect"];                
  var convertTransactionMetadatum = function (v) {
      if (v instanceof Ctl_Internal_Types_TransactionMetadata.MetadataMap) {
          return Control_Bind.bindFlipped(Effect.bindEffect)($foreign.newMetadataMap(Ctl_Internal_FfiHelpers.containerHelper))(Data_Traversable["for"](Effect.applicativeEffect)(Data_Traversable.traversableArray)(Data_Map_Internal.toUnfoldable(Data_Unfoldable.unfoldableArray)(v.value0))(function (v1) {
              return Control_Apply.apply(Effect.applyEffect)(Data_Functor.map(Effect.functorEffect)(Data_Tuple.Tuple.create)(convertTransactionMetadatum(v1.value0)))(convertTransactionMetadatum(v1.value1));
          }));
      };
      if (v instanceof Ctl_Internal_Types_TransactionMetadata.MetadataList) {
          return Control_Bind.bindFlipped(Effect.bindEffect)($foreign.newMetadataList(Ctl_Internal_FfiHelpers.containerHelper))(Data_Traversable.traverse(Data_Traversable.traversableArray)(Effect.applicativeEffect)(convertTransactionMetadatum)(v.value0));
      };
      if (v instanceof Ctl_Internal_Types_TransactionMetadata.Int) {
          return $foreign.newMetadataInt(v.value0);
      };
      if (v instanceof Ctl_Internal_Types_TransactionMetadata.Bytes) {
          return $foreign.newMetadataBytes(v.value0);
      };
      if (v instanceof Ctl_Internal_Types_TransactionMetadata.Text) {
          return $foreign.newMetadataText(v.value0);
      };
      throw new Error("Failed pattern match at Ctl.Internal.Serialization.AuxiliaryData (line 115, column 31 - line 124, column 38): " + [ v.constructor.name ]);
  };
  var convertGeneralTransactionMetadata = function (v) {
      return Control_Bind.bindFlipped(Effect.bindEffect)($foreign.newGeneralTransactionMetadata(Ctl_Internal_FfiHelpers.containerHelper))(Data_Traversable["for"](Effect.applicativeEffect)(Data_Traversable.traversableArray)(Data_Map_Internal.toUnfoldable(Data_Unfoldable.unfoldableArray)(v))(function (v1) {
          return function __do() {
              var label = Ctl_Internal_Helpers.fromJustEff("convertGeneralTransactionMetadata: failing to convert MetadataumLabel")(Ctl_Internal_Types_BigNum.fromBigInt(v1.value0))();
              var datum = convertTransactionMetadatum(v1.value1)();
              return new Data_Tuple.Tuple(label, datum);
          };
      }));
  };
  var convertAuxiliaryData = function (v) {
      return function __do() {
          var ad = $foreign.newAuxiliaryData();
          Data_Foldable.for_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(v.metadata)(Control_Bind.composeKleisli(Effect.bindEffect)(convertGeneralTransactionMetadata)($foreign.setAuxiliaryDataGeneralTransactionMetadata(ad)))();
          Data_Foldable.for_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(v.nativeScripts)((function () {
              var $22 = $foreign.setAuxiliaryDataNativeScripts(ad);
              return function ($23) {
                  return $22(Ctl_Internal_Serialization_NativeScript.convertNativeScripts($23));
              };
          })())();
          Data_Foldable.for_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(v.plutusScripts)(function (ps) {
              return function __do() {
                  var scripts = Ctl_Internal_Serialization_WitnessSet.newPlutusScripts();
                  Data_Foldable.for_(Effect.applicativeEffect)(Data_Foldable.foldableArray)(ps)((function () {
                      var $24 = Ctl_Internal_Serialization_WitnessSet.addPlutusScript(scripts);
                      return function ($25) {
                          return $24(Ctl_Internal_Serialization_PlutusScript.convertPlutusScript($25));
                      };
                  })())();
                  return $foreign.setAuxiliaryDataPlutusScripts(ad)(scripts)();
              };
          })();
          return ad;
      };
  };
  exports["convertAuxiliaryData"] = convertAuxiliaryData;
})(PS);
(function(exports) {
  /* global BROWSER_RUNTIME */

  let lib;
  if (typeof BROWSER_RUNTIME != "undefined" && BROWSER_RUNTIME) {
    lib = require("@emurgo/cardano-serialization-lib-browser");
  } else {
    lib = require("@emurgo/cardano-serialization-lib-nodejs");
  }
  lib = require("@mlabs-haskell/csl-gc-wrapper")(lib);

  exports._BigInt_from_str = helper => str => {
    try {
      return helper.just(lib.BigInt.from_str(str));
    } catch (_) {
      return helper.nothing;
    }
  };
})(PS["Ctl.Internal.Serialization.BigInt"] = PS["Ctl.Internal.Serialization.BigInt"] || {});
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Ctl.Internal.Serialization.BigInt"] = $PS["Ctl.Internal.Serialization.BigInt"] || {};
  var exports = $PS["Ctl.Internal.Serialization.BigInt"];
  var $foreign = $PS["Ctl.Internal.Serialization.BigInt"];
  var Ctl_Internal_FfiHelpers = $PS["Ctl.Internal.FfiHelpers"];
  var Data_BigInt = $PS["Data.BigInt"];                
  var convertBigInt = (function () {
      var $0 = $foreign["_BigInt_from_str"](Ctl_Internal_FfiHelpers.maybeFfiHelper);
      return function ($1) {
          return $0(Data_BigInt.toString($1));
      };
  })();
  exports["convertBigInt"] = convertBigInt;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Ctl.Internal.Serialization"] = $PS["Ctl.Internal.Serialization"] || {};
  var exports = $PS["Ctl.Internal.Serialization"];
  var $foreign = $PS["Ctl.Internal.Serialization"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Ctl_Internal_Cardano_Types_ScriptRef = $PS["Ctl.Internal.Cardano.Types.ScriptRef"];
  var Ctl_Internal_Cardano_Types_Transaction = $PS["Ctl.Internal.Cardano.Types.Transaction"];
  var Ctl_Internal_Cardano_Types_Value = $PS["Ctl.Internal.Cardano.Types.Value"];
  var Ctl_Internal_Deserialization_FromBytes = $PS["Ctl.Internal.Deserialization.FromBytes"];
  var Ctl_Internal_FfiHelpers = $PS["Ctl.Internal.FfiHelpers"];
  var Ctl_Internal_Helpers = $PS["Ctl.Internal.Helpers"];
  var Ctl_Internal_Serialization_Address = $PS["Ctl.Internal.Serialization.Address"];
  var Ctl_Internal_Serialization_AuxiliaryData = $PS["Ctl.Internal.Serialization.AuxiliaryData"];
  var Ctl_Internal_Serialization_BigInt = $PS["Ctl.Internal.Serialization.BigInt"];
  var Ctl_Internal_Serialization_Hash = $PS["Ctl.Internal.Serialization.Hash"];
  var Ctl_Internal_Serialization_NativeScript = $PS["Ctl.Internal.Serialization.NativeScript"];
  var Ctl_Internal_Serialization_PlutusData = $PS["Ctl.Internal.Serialization.PlutusData"];
  var Ctl_Internal_Serialization_PlutusScript = $PS["Ctl.Internal.Serialization.PlutusScript"];
  var Ctl_Internal_Serialization_WitnessSet = $PS["Ctl.Internal.Serialization.WitnessSet"];
  var Ctl_Internal_Types_BigNum = $PS["Ctl.Internal.Types.BigNum"];
  var Ctl_Internal_Types_OutputDatum = $PS["Ctl.Internal.Types.OutputDatum"];
  var Ctl_Internal_Types_RewardAddress = $PS["Ctl.Internal.Types.RewardAddress"];
  var Ctl_Internal_Types_Scripts = $PS["Ctl.Internal.Types.Scripts"];
  var Ctl_Internal_Types_TokenName = $PS["Ctl.Internal.Types.TokenName"];
  var Ctl_Internal_Types_VRFKeyHash = $PS["Ctl.Internal.Types.VRFKeyHash"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_FoldableWithIndex = $PS["Data.FoldableWithIndex"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Map_Internal = $PS["Data.Map.Internal"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Set = $PS["Data.Set"];
  var Data_Traversable = $PS["Data.Traversable"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_UInt = $PS["Data.UInt"];
  var Data_Unfoldable = $PS["Data.Unfoldable"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect = $PS["Effect"];
  var Untagged_Union = $PS["Untagged.Union"];
  var mkUnitInterval = function (x) {
      return $foreign.newUnitInterval(x.numerator)(x.denominator);
  };
  var convertWithdrawals = function (mp) {
      return Control_Bind.bindFlipped(Effect.bindEffect)($foreign.newWithdrawals(Ctl_Internal_FfiHelpers.containerHelper))(Data_Traversable["for"](Effect.applicativeEffect)(Data_Traversable.traversableArray)(Data_Map_Internal.toUnfoldable(Data_Unfoldable.unfoldableArray)(mp))(function (v) {
          return Data_Functor.map(Effect.functorEffect)(Data_Tuple.Tuple.create(Ctl_Internal_Types_RewardAddress.unRewardAddress(v.value0)))(Ctl_Internal_Helpers.fromJustEff("convertWithdrawals: Failed to convert BigNum")(Ctl_Internal_Types_BigNum.fromBigInt(v.value1)));
      }));
  };
  var convertValue = function (val) {
      var m = Ctl_Internal_Cardano_Types_Value["getNonAdaAsset'"](val);
      var lovelace = Ctl_Internal_Cardano_Types_Value["valueToCoin'"](val);
      return function __do() {
          var multiasset = $foreign.newMultiAsset();
          Data_FoldableWithIndex.forWithIndex_(Effect.applicativeEffect)(Data_Map_Internal.foldableWithIndexMap)(m)(function (scriptHashBytes$prime) {
              return function (values) {
                  var mScripthash = Ctl_Internal_Serialization_Hash.scriptHashFromBytes(Ctl_Internal_Cardano_Types_Value.getCurrencySymbol(scriptHashBytes$prime));
                  return function __do() {
                      var scripthash = Ctl_Internal_Helpers.fromJustEff("scriptHashFromBytes failed while converting value")(mScripthash)();
                      var assets = $foreign.newAssets();
                      Data_FoldableWithIndex.forWithIndex_(Effect.applicativeEffect)(Data_Map_Internal.foldableWithIndexMap)(values)(function (tokenName$prime) {
                          return function (bigIntValue) {
                              var tokenName = Ctl_Internal_Types_TokenName.getTokenName(tokenName$prime);
                              return function __do() {
                                  var assetName = $foreign.newAssetName(tokenName)();
                                  var value = Ctl_Internal_Helpers.fromJustEff("convertValue: number must not be negative")(Ctl_Internal_Types_BigNum.fromBigInt(bigIntValue))();
                                  return $foreign.insertAssets(assets)(assetName)(value)();
                              };
                          };
                      })();
                      return $foreign.insertMultiAsset(multiasset)(scripthash)(assets)();
                  };
              };
          })();
          var value = $foreign.newValueFromAssets(multiasset)();
          Control_Bind.bindFlipped(Effect.bindEffect)($foreign.valueSetCoin(value))(Ctl_Internal_Helpers.fromJustEff("convertValue: coin value must not be negative")(Ctl_Internal_Types_BigNum.fromBigInt(lovelace)))();
          return value;
      };
  };
  var convertTxInput = function (v) {
      return function __do() {
          var tx_hash = Ctl_Internal_Deserialization_FromBytes.fromBytesEffect(Ctl_Internal_Deserialization_FromBytes.fromBytesTransactionHash)(Data_Newtype.wrap()(Data_Newtype.unwrap()(v.transactionId)))();
          return $foreign.newTransactionInput(tx_hash)(v.index)();
      };
  };
  var convertTxInputs = function (dictFoldable) {
      return function (fInputs) {
          return function __do() {
              var inputs = $foreign.newTransactionInputs();
              Data_Foldable.traverse_(Effect.applicativeEffect)(dictFoldable)(Control_Bind.composeKleisli(Effect.bindEffect)(convertTxInput)($foreign.addTransactionInput(inputs)))(fInputs)();
              return inputs;
          };
      };
  };
  var convertScriptRef = function (v) {
      if (v instanceof Ctl_Internal_Cardano_Types_ScriptRef.NativeScriptRef) {
          return $foreign.scriptRefNewNativeScript(Ctl_Internal_Serialization_NativeScript.convertNativeScript(v.value0));
      };
      if (v instanceof Ctl_Internal_Cardano_Types_ScriptRef.PlutusScriptRef) {
          return $foreign.scriptRefNewPlutusScript(Ctl_Internal_Serialization_PlutusScript.convertPlutusScript(v.value0));
      };
      throw new Error("Failed pattern match at Ctl.Internal.Serialization (line 823, column 1 - line 823, column 45): " + [ v.constructor.name ]);
  };
  var convertTxOutput = function (v) {
      return function __do() {
          var value = convertValue(v.amount)();
          var txo = $foreign.newTransactionOutput(v.address)(value)();
          (function () {
              if (v.datum instanceof Ctl_Internal_Types_OutputDatum.NoOutputDatum) {
                  return Data_Unit.unit;
              };
              if (v.datum instanceof Ctl_Internal_Types_OutputDatum.OutputDatumHash) {
                  return Data_Foldable.for_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(Ctl_Internal_Deserialization_FromBytes.fromBytes(Ctl_Internal_Deserialization_FromBytes.fromBytesDataHash)(Data_Newtype.wrap()(Data_Newtype.unwrap()(v.datum.value0))))($foreign.transactionOutputSetDataHash(txo))();
              };
              if (v.datum instanceof Ctl_Internal_Types_OutputDatum.OutputDatum) {
                  return $foreign.transactionOutputSetPlutusData(txo)(Ctl_Internal_Serialization_PlutusData.convertPlutusData(Data_Newtype.unwrap()(v.datum.value0)))();
              };
              throw new Error("Failed pattern match at Ctl.Internal.Serialization (line 810, column 3 - line 818, column 28): " + [ v.datum.constructor.name ]);
          })();
          Data_Foldable.for_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(v.scriptRef)((function () {
              var $135 = $foreign.transactionOutputSetScriptRef(txo);
              return function ($136) {
                  return $135(convertScriptRef($136));
              };
          })())();
          return txo;
      };
  };
  var convertTxOutputs = function (arrOutputs) {
      return function __do() {
          var outputs = $foreign.newTransactionOutputs();
          Data_Foldable.traverse_(Effect.applicativeEffect)(Data_Foldable.foldableArray)(Control_Bind.composeKleisli(Effect.bindEffect)(convertTxOutput)($foreign.addTransactionOutput(outputs)))(arrOutputs)();
          return outputs;
      };
  };
  var convertRelays = function (relays) {
      return Data_Functor.map(Effect.functorEffect)($foreign.packRelays(Ctl_Internal_FfiHelpers.containerHelper))(Data_Traversable["for"](Effect.applicativeEffect)(Data_Traversable.traversableArray)(relays)(function (relay) {
          if (relay instanceof Ctl_Internal_Cardano_Types_Transaction.SingleHostAddr) {
              return function __do() {
                  var ipv4$prime = Data_Functor.map(Effect.functorEffect)(Untagged_Union.maybeToUor)(Data_Traversable["for"](Effect.applicativeEffect)(Data_Traversable.traversableMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Newtype.unwrap())(relay.value0.ipv4))($foreign.newIpv4))();
                  var ipv6$prime = Data_Functor.map(Effect.functorEffect)(Untagged_Union.maybeToUor)(Data_Traversable["for"](Effect.applicativeEffect)(Data_Traversable.traversableMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Newtype.unwrap())(relay.value0.ipv6))($foreign.newIpv6))();
                  return $foreign.newSingleHostAddr(Untagged_Union.maybeToUor(relay.value0.port))(ipv4$prime)(ipv6$prime)();
              };
          };
          if (relay instanceof Ctl_Internal_Cardano_Types_Transaction.SingleHostName) {
              return $foreign.newSingleHostName(Untagged_Union.maybeToUor(relay.value0.port))(relay.value0.dnsName);
          };
          if (relay instanceof Ctl_Internal_Cardano_Types_Transaction.MultiHostName) {
              return $foreign.newMultiHostName(relay.value0.dnsName);
          };
          throw new Error("Failed pattern match at Ctl.Internal.Serialization (line 746, column 55 - line 754, column 31): " + [ relay.constructor.name ]);
      }));
  };
  var convertPoolMetadata = function (v) {
      return Control_Bind.composeKleisli(Effect.bindEffect)((function () {
          var $137 = Ctl_Internal_Helpers.fromJustEff("Failed to convert script data hash");
          var $138 = Ctl_Internal_Deserialization_FromBytes.fromBytes(Ctl_Internal_Deserialization_FromBytes.fromBytesPoolMetadataHash);
          var $139 = Data_Newtype.wrap();
          return function ($140) {
              return $137($138($139($140)));
          };
      })())($foreign.newPoolMetadata(v.url))(v.hash);
  };
  var convertNetworkId = function (v) {
      if (v instanceof Ctl_Internal_Serialization_Address.TestnetId) {
          return $foreign.networkIdTestnet;
      };
      if (v instanceof Ctl_Internal_Serialization_Address.MainnetId) {
          return $foreign.networkIdMainnet;
      };
      throw new Error("Failed pattern match at Ctl.Internal.Serialization (line 757, column 20 - line 759, column 34): " + [ v.constructor.name ]);
  };
  var convertMint = function (v) {
      var m = Ctl_Internal_Cardano_Types_Value.unwrapNonAdaAsset(v);
      return function __do() {
          var mint = $foreign.newMint();
          Data_FoldableWithIndex.forWithIndex_(Effect.applicativeEffect)(Data_Map_Internal.foldableWithIndexMap)(m)(function (scriptHashBytes$prime) {
              return function (values) {
                  var mScripthash = Ctl_Internal_Serialization_Hash.scriptHashFromBytes(Ctl_Internal_Cardano_Types_Value.getCurrencySymbol(scriptHashBytes$prime));
                  return function __do() {
                      var scripthash = Ctl_Internal_Helpers.fromJustEff("scriptHashFromBytes failed while converting value")(mScripthash)();
                      var assets = $foreign.newMintAssets();
                      Data_FoldableWithIndex.forWithIndex_(Effect.applicativeEffect)(Data_Map_Internal.foldableWithIndexMap)(values)(function (tokenName$prime) {
                          return function (bigIntValue) {
                              var tokenName = Ctl_Internal_Types_TokenName.getTokenName(tokenName$prime);
                              return function __do() {
                                  var assetName = $foreign.newAssetName(tokenName)();
                                  var bigInt = Ctl_Internal_Helpers.fromJustEff("convertMint: failed to convert BigInt")(Ctl_Internal_Serialization_BigInt.convertBigInt(bigIntValue))();
                                  var $$int = Ctl_Internal_Helpers.fromJustEff("convertMint: numeric overflow or underflow")($foreign["_bigIntToInt"](Ctl_Internal_FfiHelpers.maybeFfiHelper)(bigInt))();
                                  return $foreign.insertMintAsset(assets)(assetName)($$int)();
                              };
                          };
                      })();
                      return $foreign.insertMintAssets(mint)(scripthash)(assets)();
                  };
              };
          })();
          return mint;
      };
  };
  var convertMIRToStakeCredentials = function (v) {
      return $foreign.newMIRToStakeCredentials(Ctl_Internal_FfiHelpers.containerHelper)(Data_Map_Internal.toUnfoldable(Data_Unfoldable.unfoldableArray)(v));
  };
  var convertMoveInstantaneousReward = function (v) {
      if (v instanceof Ctl_Internal_Cardano_Types_Transaction.ToOtherPot) {
          return $foreign.newMoveInstantaneousRewardToOtherPot(v.value0.pot)(v.value0.amount);
      };
      if (v instanceof Ctl_Internal_Cardano_Types_Transaction.ToStakeCreds) {
          return Control_Bind.bind(Effect.bindEffect)(convertMIRToStakeCredentials(v.value0.amounts))($foreign.newMoveInstantaneousRewardToStakeCreds(v.value0.pot));
      };
      throw new Error("Failed pattern match at Ctl.Internal.Serialization (line 729, column 1 - line 730, column 65): " + [ v.constructor.name ]);
  };
  var convertExUnitPrices = function (v) {
      return Control_Bind.join(Effect.bindEffect)(Control_Apply.apply(Effect.applyEffect)(Data_Functor.map(Effect.functorEffect)($foreign.newExUnitPrices)(mkUnitInterval(v.memPrice)))(mkUnitInterval(v.stepPrice)));
  };
  var convertCostModel = function (v) {
      return function __do() {
          var costModel = $foreign.newCostModel();
          Data_FoldableWithIndex.forWithIndex_(Effect.applicativeEffect)(Data_FoldableWithIndex.foldableWithIndexArray)(v)(function (operation) {
              return function (cost) {
                  return $foreign.costModelSetCost(costModel)(operation)(cost);
              };
          })();
          return costModel;
      };
  };
  var convertCostmdls = function (v) {
      return function __do() {
          var costmdls = $foreign.newCostmdls();
          Data_FoldableWithIndex.forWithIndex_(Effect.applicativeEffect)(Data_Map_Internal.foldableWithIndexMap)(v)(function (language) {
              return function (costModel) {
                  return function __do() {
                      var language$prime = (function () {
                          if (language instanceof Ctl_Internal_Types_Scripts.PlutusV1) {
                              return $foreign.newPlutusV1();
                          };
                          if (language instanceof Ctl_Internal_Types_Scripts.PlutusV2) {
                              return $foreign.newPlutusV2();
                          };
                          throw new Error("Failed pattern match at Ctl.Internal.Serialization (line 860, column 18 - line 862, column 32): " + [ language.constructor.name ]);
                      })();
                      var costModel$prime = convertCostModel(costModel)();
                      return $foreign.costmdlsSetCostModel(costmdls)(language$prime)(costModel$prime)();
                  };
              };
          })();
          return costmdls;
      };
  };
  var convertProtocolParamUpdate = function (v) {
      return function __do() {
          var ppu = $foreign.newProtocolParamUpdate();
          Data_Foldable.for_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(v.minfeeA)(Control_Bind.composeKleisliFlipped(Effect.bindEffect)($foreign.ppuSetMinfeeA(ppu))((function () {
              var $141 = Ctl_Internal_Helpers.fromJustEff("convertProtocolParamUpdate: min_fee_a must not be negative");
              var $142 = Data_Newtype.unwrap();
              return function ($143) {
                  return $141(Ctl_Internal_Types_BigNum.fromBigInt($142($143)));
              };
          })()))();
          Data_Foldable.for_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(v.minfeeB)(Control_Bind.composeKleisliFlipped(Effect.bindEffect)($foreign.ppuSetMinfeeB(ppu))((function () {
              var $144 = Ctl_Internal_Helpers.fromJustEff("convertProtocolParamUpdate: min_fee_b must not be negative");
              var $145 = Data_Newtype.unwrap();
              return function ($146) {
                  return $144(Ctl_Internal_Types_BigNum.fromBigInt($145($146)));
              };
          })()))();
          Data_Foldable.for_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(v.maxBlockBodySize)((function () {
              var $147 = $foreign.ppuSetMaxBlockBodySize(ppu);
              return function ($148) {
                  return $147(Data_UInt.toInt($148));
              };
          })())();
          Data_Foldable.for_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(v.maxTxSize)((function () {
              var $149 = $foreign.ppuSetMaxTxSize(ppu);
              return function ($150) {
                  return $149(Data_UInt.toInt($150));
              };
          })())();
          Data_Foldable.for_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(v.maxBlockHeaderSize)((function () {
              var $151 = $foreign.ppuSetMaxBlockHeaderSize(ppu);
              return function ($152) {
                  return $151(Data_UInt.toInt($152));
              };
          })())();
          Data_Foldable.for_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(v.keyDeposit)(Control_Bind.composeKleisliFlipped(Effect.bindEffect)($foreign.ppuSetKeyDeposit(ppu))((function () {
              var $153 = Ctl_Internal_Helpers.fromJustEff("convertProtocolParamUpdate: key_deposit must not be negative");
              var $154 = Data_Newtype.unwrap();
              return function ($155) {
                  return $153(Ctl_Internal_Types_BigNum.fromBigInt($154($155)));
              };
          })()))();
          Data_Foldable.for_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(v.poolDeposit)(Control_Bind.composeKleisliFlipped(Effect.bindEffect)($foreign.ppuSetPoolDeposit(ppu))((function () {
              var $156 = Ctl_Internal_Helpers.fromJustEff("convertProtocolParamUpdate: pool_deposit must not be negative");
              var $157 = Data_Newtype.unwrap();
              return function ($158) {
                  return $156(Ctl_Internal_Types_BigNum.fromBigInt($157($158)));
              };
          })()))();
          Data_Foldable.for_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(v.maxEpoch)((function () {
              var $159 = $foreign.ppuSetMaxEpoch(ppu);
              var $160 = Data_Newtype.unwrap();
              return function ($161) {
                  return $159(Data_UInt.toInt($160($161)));
              };
          })())();
          Data_Foldable.for_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(v.nOpt)((function () {
              var $162 = $foreign.ppuSetNOpt(ppu);
              return function ($163) {
                  return $162(Data_UInt.toInt($163));
              };
          })())();
          Data_Foldable.for_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(v.poolPledgeInfluence)(Control_Bind.composeKleisli(Effect.bindEffect)(mkUnitInterval)($foreign.ppuSetPoolPledgeInfluence(ppu)))();
          Data_Foldable.for_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(v.expansionRate)(Control_Bind.composeKleisli(Effect.bindEffect)(mkUnitInterval)($foreign.ppuSetExpansionRate(ppu)))();
          Data_Foldable.for_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(v.treasuryGrowthRate)(Control_Bind.composeKleisli(Effect.bindEffect)(mkUnitInterval)($foreign.ppuSetTreasuryGrowthRate(ppu)))();
          Data_Foldable.for_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(v.protocolVersion)(function (pv) {
              return Control_Bind.bindFlipped(Effect.bindEffect)($foreign.ppuSetProtocolVersion(ppu))($foreign.newProtocolVersion(Data_UInt.toInt(pv.major))(Data_UInt.toInt(pv.minor)));
          })();
          Data_Foldable.for_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(v.minPoolCost)($foreign.ppuSetMinPoolCost(ppu))();
          Data_Foldable.for_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(v.adaPerUtxoByte)($foreign.ppuSetAdaPerUtxoByte(ppu))();
          Data_Foldable.for_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(v.costModels)(Control_Bind.composeKleisli(Effect.bindEffect)(convertCostmdls)($foreign.ppuSetCostModels(ppu)))();
          Data_Foldable.for_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(v.executionCosts)(Control_Bind.composeKleisli(Effect.bindEffect)(convertExUnitPrices)($foreign.ppuSetExecutionCosts(ppu)))();
          Data_Foldable.for_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(v.maxTxExUnits)(Control_Bind.composeKleisli(Effect.bindEffect)(Ctl_Internal_Serialization_WitnessSet.convertExUnits)($foreign.ppuSetMaxTxExUnits(ppu)))();
          Data_Foldable.for_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(v.maxBlockExUnits)(Control_Bind.composeKleisli(Effect.bindEffect)(Ctl_Internal_Serialization_WitnessSet.convertExUnits)($foreign.ppuSetMaxBlockExUnits(ppu)))();
          Data_Foldable.for_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(v.maxValueSize)((function () {
              var $164 = $foreign.ppuSetMaxValueSize(ppu);
              return function ($165) {
                  return $164(Data_UInt.toInt($165));
              };
          })())();
          Data_Foldable.for_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(v.collateralPercentage)((function () {
              var $166 = $foreign.ppuSetCollateralPercentage(ppu);
              return function ($167) {
                  return $166(Data_UInt.toInt($167));
              };
          })())();
          Data_Foldable.for_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(v.maxCollateralInputs)((function () {
              var $168 = $foreign.ppuSetMaxCollateralInputs(ppu);
              return function ($169) {
                  return $168(Data_UInt.toInt($169));
              };
          })())();
          return ppu;
      };
  };
  var convertProposedProtocolParameterUpdates = function (ppus) {
      return Control_Bind.bindFlipped(Effect.bindEffect)($foreign.newProposedProtocolParameterUpdates(Ctl_Internal_FfiHelpers.containerHelper))(Data_Traversable["for"](Effect.applicativeEffect)(Data_Traversable.traversableArray)(Data_Map_Internal.toUnfoldable(Data_Unfoldable.unfoldableArray)(Data_Newtype.unwrap()(ppus)))(function (v) {
          return Control_Apply.apply(Effect.applyEffect)(Data_Functor.map(Effect.functorEffect)(Data_Tuple.Tuple.create)(Ctl_Internal_Helpers.fromJustEff("Failed to convert genesis hash")(Ctl_Internal_Deserialization_FromBytes.fromBytes(Ctl_Internal_Deserialization_FromBytes.fromBytesGenesisHash)(Data_Newtype.wrap()(Data_Newtype.unwrap()(v.value0))))))(convertProtocolParamUpdate(v.value1));
      }));
  };
  var convertUpdate = function (v) {
      return function __do() {
          var ppUpdates = convertProposedProtocolParameterUpdates(v.proposedProtocolParameterUpdates)();
          return $foreign.newUpdate(ppUpdates)(Data_UInt.toInt(Data_Newtype.unwrap()(v.epoch)))();
      };
  };
  var hashScriptData = function (cms) {
      return function (rs) {
          return function (ps) {
              return function __do() {
                  var rs$prime = $foreign.newRedeemers();
                  var cms$prime = convertCostmdls(cms)();
                  Data_Foldable.traverse_(Effect.applicativeEffect)(Data_Foldable.foldableArray)(Control_Bind.composeKleisliFlipped(Effect.bindEffect)($foreign.addRedeemer(rs$prime))(Ctl_Internal_Serialization_WitnessSet.convertRedeemer))(rs)();
                  if (ps.length === 0) {
                      return $foreign["_hashScriptDataNoDatums"](rs$prime)(cms$prime)();
                  };
                  return $foreign["_hashScriptData"](rs$prime)(cms$prime)(Data_Functor.map(Data_Functor.functorArray)(Ctl_Internal_Serialization_PlutusData.convertPlutusData)(ps))();
              };
          };
      };
  };
  var convertCert = function (v) {
      if (v instanceof Ctl_Internal_Cardano_Types_Transaction.StakeRegistration) {
          return $foreign.newStakeRegistrationCertificate(v.value0);
      };
      if (v instanceof Ctl_Internal_Cardano_Types_Transaction.StakeDeregistration) {
          return $foreign.newStakeDeregistrationCertificate(v.value0);
      };
      if (v instanceof Ctl_Internal_Cardano_Types_Transaction.StakeDelegation) {
          return $foreign.newStakeDelegationCertificate(v.value0)(Data_Newtype.unwrap()(v.value1));
      };
      if (v instanceof Ctl_Internal_Cardano_Types_Transaction.PoolRegistration) {
          return function __do() {
              var margin$prime = $foreign.newUnitInterval(v.value0.margin.numerator)(v.value0.margin.denominator)();
              var poolOwners$prime = $foreign.convertPoolOwners(Ctl_Internal_FfiHelpers.containerHelper)(Data_Functor.map(Data_Functor.functorArray)((function () {
                  var $170 = Data_Newtype.unwrap();
                  var $171 = Data_Newtype.unwrap();
                  return function ($172) {
                      return $170($171($172));
                  };
              })())(v.value0.poolOwners))();
              var relays$prime = convertRelays(v.value0.relays)();
              var poolMetadata$prime = Data_Traversable["for"](Effect.applicativeEffect)(Data_Traversable.traversableMaybe)(v.value0.poolMetadata)(convertPoolMetadata)();
              return $foreign.newPoolRegistrationCertificate(Data_Newtype.unwrap()(v.value0.operator))(Ctl_Internal_Types_VRFKeyHash.unVRFKeyHash(v.value0.vrfKeyhash))(v.value0.pledge)(v.value0.cost)(margin$prime)(Ctl_Internal_Types_RewardAddress.unRewardAddress(v.value0.rewardAccount))(poolOwners$prime)(relays$prime)(Untagged_Union.maybeToUor(poolMetadata$prime))();
          };
      };
      if (v instanceof Ctl_Internal_Cardano_Types_Transaction.PoolRetirement) {
          return $foreign.newPoolRetirementCertificate(Data_Newtype.unwrap()(v.value0.poolKeyHash))(Data_UInt.toInt(Data_Newtype.unwrap()(v.value0.epoch)));
      };
      if (v instanceof Ctl_Internal_Cardano_Types_Transaction.GenesisKeyDelegation) {
          return Control_Bind.join(Effect.bindEffect)(Control_Apply.apply(Effect.applyEffect)(Control_Apply.apply(Effect.applyEffect)(Data_Functor.map(Effect.functorEffect)($foreign.newGenesisKeyDelegationCertificate)(Ctl_Internal_Helpers.fromJustEff("Failed to convert genesis hash")(Ctl_Internal_Deserialization_FromBytes.fromBytes(Ctl_Internal_Deserialization_FromBytes.fromBytesGenesisHash)(Data_Newtype.wrap()(v.value0.genesisHash)))))(Ctl_Internal_Helpers.fromJustEff("Failed to convert genesis delegate hash")(Ctl_Internal_Deserialization_FromBytes.fromBytes(Ctl_Internal_Deserialization_FromBytes.fromBytesGenesisDelegateH)(Data_Newtype.wrap()(v.value0.genesisDelegateHash)))))(Control_Applicative.pure(Effect.applicativeEffect)(v.value0.vrfKeyhash)));
      };
      if (v instanceof Ctl_Internal_Cardano_Types_Transaction.MoveInstantaneousRewardsCert) {
          return Control_Bind.bindFlipped(Effect.bindEffect)($foreign.newMoveInstantaneousRewardsCertificate)(convertMoveInstantaneousReward(v.value0));
      };
      throw new Error("Failed pattern match at Ctl.Internal.Serialization (line 668, column 15 - line 722, column 41): " + [ v.constructor.name ]);
  };
  var convertCerts = function (certs) {
      return function __do() {
          var certificates = $foreign.newCertificates();
          Data_Foldable.for_(Effect.applicativeEffect)(Data_Foldable.foldableArray)(certs)(Control_Bind.composeKleisli(Effect.bindEffect)(convertCert)($foreign.addCert(certificates)))();
          return certificates;
      };
  };
  var convertTxBody = function (v) {
      return function __do() {
          var inputs = convertTxInputs(Data_Set.foldableSet)(v.inputs)();
          var outputs = convertTxOutputs(v.outputs)();
          var fee = Ctl_Internal_Helpers.fromJustEff("Failed to convert fee")(Ctl_Internal_Types_BigNum.fromBigInt(Data_Newtype.unwrap()(v.fee)))();
          var txBody = $foreign.newTransactionBody(inputs)(outputs)(fee)();
          Data_Foldable.for_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(v.ttl)((function () {
              var $173 = $foreign.setTxBodyTtl(txBody);
              var $174 = Data_Newtype.unwrap();
              return function ($175) {
                  return $173($174($175));
              };
          })())();
          Data_Foldable.for_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(v.certs)(Control_Bind.composeKleisli(Effect.bindEffect)(convertCerts)($foreign.setTxBodyCerts(txBody)))();
          Data_Foldable.for_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(v.withdrawals)(Control_Bind.composeKleisli(Effect.bindEffect)(convertWithdrawals)($foreign.setTxBodyWithdrawals(txBody)))();
          Data_Foldable.for_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(v.update)(Control_Bind.composeKleisli(Effect.bindEffect)(convertUpdate)($foreign.setTxBodyUpdate(txBody)))();
          Data_Foldable.for_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(v.auxiliaryDataHash)(Control_Bind.composeKleisli(Effect.bindEffect)((function () {
              var $176 = Ctl_Internal_Helpers.fromJustEff("Failed to convert auxiliary data hash");
              var $177 = Ctl_Internal_Deserialization_FromBytes.fromBytes(Ctl_Internal_Deserialization_FromBytes.fromBytesAuxiliaryDataHas);
              var $178 = Data_Newtype.wrap();
              var $179 = Data_Newtype.unwrap();
              return function ($180) {
                  return $176($177($178($179($180))));
              };
          })())($foreign.transactionBodySetAuxiliaryDataHash(txBody)))();
          Data_Foldable.for_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(v.validityStartInterval)((function () {
              var $181 = $foreign.transactionBodySetValidityStartInterval(txBody);
              var $182 = Data_Newtype.unwrap();
              return function ($183) {
                  return $181(Ctl_Internal_Types_BigNum.fromStringUnsafe(Ctl_Internal_Types_BigNum.toString($182($183))));
              };
          })())();
          Data_Foldable.for_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(v.requiredSigners)((function () {
              var $184 = $foreign.transactionBodySetRequiredSigners(Ctl_Internal_FfiHelpers.containerHelper)(txBody);
              var $185 = Data_Functor.map(Data_Functor.functorArray)(Data_Newtype.unwrap());
              return function ($186) {
                  return $184($185($186));
              };
          })())();
          Data_Foldable.for_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(v.networkId)(Control_Bind.composeKleisli(Effect.bindEffect)(convertNetworkId)($foreign.setTxBodyNetworkId(txBody)))();
          Data_Foldable.for_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(v.mint)(Control_Bind.composeKleisli(Effect.bindEffect)(convertMint)($foreign.setTxBodyMint(txBody)))();
          Data_Foldable.for_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(v.scriptDataHash)(Control_Bind.composeKleisli(Effect.bindEffect)((function () {
              var $187 = Ctl_Internal_Helpers.fromJustEff("Failed to convert script data hash");
              var $188 = Ctl_Internal_Deserialization_FromBytes.fromBytes(Ctl_Internal_Deserialization_FromBytes.fromBytesScriptDataHash);
              var $189 = Data_Newtype.wrap();
              var $190 = Data_Newtype.unwrap();
              return function ($191) {
                  return $187($188($189($190($191))));
              };
          })())($foreign.setTxBodyScriptDataHash(txBody)))();
          Data_Foldable.for_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(v.collateral)(Control_Bind.composeKleisli(Effect.bindEffect)(convertTxInputs(Data_Foldable.foldableArray))($foreign.setTxBodyCollateral(txBody)))();
          Data_Foldable.for_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(v.requiredSigners)((function () {
              var $192 = $foreign.transactionBodySetRequiredSigners(Ctl_Internal_FfiHelpers.containerHelper)(txBody);
              var $193 = Data_Functor.map(Data_Functor.functorArray)(Data_Newtype.unwrap());
              return function ($194) {
                  return $192($193($194));
              };
          })())();
          Data_Foldable.for_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(v.networkId)(Control_Bind.composeKleisli(Effect.bindEffect)(convertNetworkId)($foreign.setTxBodyNetworkId(txBody)))();
          Data_Foldable.for_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(v.collateralReturn)(Control_Bind.composeKleisli(Effect.bindEffect)(convertTxOutput)($foreign.setTxBodyCollateralReturn(txBody)))();
          Data_Foldable.for_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(v.totalCollateral)(Control_Bind.composeKleisli(Effect.bindEffect)((function () {
              var $195 = Ctl_Internal_Helpers.fromJustEff("Failed to convert fee");
              var $196 = Data_Newtype.unwrap();
              return function ($197) {
                  return $195(Ctl_Internal_Types_BigNum.fromBigInt($196($197)));
              };
          })())($foreign.setTxBodyTotalCollateral(txBody)))();
          (function () {
              var $124 = Data_Foldable["null"](Data_Set.foldableSet)(v.referenceInputs);
              if ($124) {
                  return Data_Unit.unit;
              };
              return Control_Bind.bind(Effect.bindEffect)(convertTxInputs(Data_Set.foldableSet)(v.referenceInputs))($foreign.setTxBodyReferenceInputs(txBody))();
          })();
          return txBody;
      };
  };
  var convertTransaction = function (v) {
      return function __do() {
          var txBody = convertTxBody(v.body)();
          var ws = Ctl_Internal_Serialization_WitnessSet.convertWitnessSet(v.witnessSet)();
          var mbAuxiliaryData = Data_Traversable["for"](Effect.applicativeEffect)(Data_Traversable.traversableMaybe)(v.auxiliaryData)(Ctl_Internal_Serialization_AuxiliaryData.convertAuxiliaryData)();
          var tx = (function () {
              if (mbAuxiliaryData instanceof Data_Maybe.Nothing) {
                  return $foreign.newTransaction_(txBody)(ws)();
              };
              if (mbAuxiliaryData instanceof Data_Maybe.Just) {
                  return $foreign.newTransaction(txBody)(ws)(mbAuxiliaryData.value0)();
              };
              throw new Error("Failed pattern match at Ctl.Internal.Serialization (line 540, column 11 - line 542, column 45): " + [ mbAuxiliaryData.constructor.name ]);
          })();
          $foreign.setTxIsValid(tx)(v.isValid)();
          return tx;
      };
  };
  exports["convertExUnitPrices"] = convertExUnitPrices;
  exports["convertTransaction"] = convertTransaction;
  exports["convertTxBody"] = convertTxBody;
  exports["convertTxOutput"] = convertTxOutput;
  exports["hashScriptData"] = hashScriptData;
  exports["hashTransaction"] = $foreign.hashTransaction;
  exports["publicKeyHash"] = $foreign.publicKeyHash;
  exports["makeVkeywitness"] = $foreign.makeVkeywitness;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Ctl.Internal.Wallet.Cip30"] = $PS["Ctl.Internal.Wallet.Cip30"] || {};
  var exports = $PS["Ctl.Internal.Wallet.Cip30"];
  var $foreign = $PS["Ctl.Internal.Wallet.Cip30"];
  var Control_Alt = $PS["Control.Alt"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad = $PS["Control.Monad"];
  var Control_Monad_Error_Class = $PS["Control.Monad.Error.Class"];
  var Control_Promise = $PS["Control.Promise"];
  var Ctl_Internal_Cardano_Types_Transaction = $PS["Ctl.Internal.Cardano.Types.Transaction"];
  var Ctl_Internal_Deserialization_FromBytes = $PS["Ctl.Internal.Deserialization.FromBytes"];
  var Ctl_Internal_Deserialization_UnspentOutput = $PS["Ctl.Internal.Deserialization.UnspentOutput"];
  var Ctl_Internal_Deserialization_WitnessSet = $PS["Ctl.Internal.Deserialization.WitnessSet"];
  var Ctl_Internal_FfiHelpers = $PS["Ctl.Internal.FfiHelpers"];
  var Ctl_Internal_Serialization = $PS["Ctl.Internal.Serialization"];
  var Ctl_Internal_Serialization_Address = $PS["Ctl.Internal.Serialization.Address"];
  var Ctl_Internal_Serialization_ToBytes = $PS["Ctl.Internal.Serialization.ToBytes"];
  var Ctl_Internal_Types_ByteArray = $PS["Ctl.Internal.Types.ByteArray"];
  var Ctl_Internal_Types_CborBytes = $PS["Ctl.Internal.Types.CborBytes"];
  var Ctl_Internal_Types_RawBytes = $PS["Ctl.Internal.Types.RawBytes"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Traversable = $PS["Data.Traversable"];
  var Effect = $PS["Effect"];
  var Effect_Aff = $PS["Effect.Aff"];
  var Effect_Class = $PS["Effect.Class"];
  var Effect_Exception = $PS["Effect.Exception"];                
  var txToHex = (function () {
      var $11 = Effect_Class.liftEffect(Effect_Aff.monadEffectAff);
      var $12 = Data_Functor.map(Effect.functorEffect)((function () {
          var $14 = Data_Newtype.unwrap();
          var $15 = Ctl_Internal_Serialization_ToBytes.toBytes();
          return function ($16) {
              return Ctl_Internal_Types_ByteArray.byteArrayToHex($14($15($16)));
          };
      })());
      return function ($13) {
          return $11($12(Ctl_Internal_Serialization.convertTransaction($13)));
      };
  })();
  var signData = function (conn) {
      return function (address) {
          return function (dat) {
              var fromReward = Data_Functor.map(Data_Maybe.functorMaybe)(Ctl_Internal_Serialization_Address.rewardAddressBytes)(Ctl_Internal_Serialization_Address.rewardAddressFromAddress(address));
              var fromPointer = Data_Functor.map(Data_Maybe.functorMaybe)(Ctl_Internal_Serialization_Address.pointerAddressBytes)(Ctl_Internal_Serialization_Address.pointerAddressFromAddress(address));
              var fromEnterprise = Data_Functor.map(Data_Maybe.functorMaybe)(Ctl_Internal_Serialization_Address.enterpriseAddressBytes)(Ctl_Internal_Serialization_Address.enterpriseAddressFromAddress(address));
              var fromBase = Data_Functor.map(Data_Maybe.functorMaybe)(Ctl_Internal_Serialization_Address.baseAddressBytes)(Ctl_Internal_Serialization_Address.baseAddressFromAddress(address));
              return Control_Bind.bind(Effect_Aff.bindAff)(Control_Monad_Error_Class.liftMaybe(Effect_Aff.monadThrowAff)(Effect_Exception.error("Can't convert Address to base, enterprise, pointer or reward"))(Control_Alt.alt(Data_Maybe.altMaybe)(Control_Alt.alt(Data_Maybe.altMaybe)(Control_Alt.alt(Data_Maybe.altMaybe)(fromBase)(fromEnterprise))(fromPointer))(fromReward)))(function (byteAddress) {
                  return Control_Bind.bind(Effect_Aff.bindAff)(Control_Promise.toAffE($foreign["_signData"](Ctl_Internal_Types_CborBytes.cborBytesToHex(byteAddress))(Ctl_Internal_Types_RawBytes.rawBytesToHex(dat))(conn)))(function (signedData) {
                      return Control_Applicative.pure(Effect_Aff.applicativeAff)(Control_Bind.bind(Data_Maybe.bindMaybe)(Ctl_Internal_Types_CborBytes.hexToCborBytes(signedData.key))(function (key) {
                          return Control_Bind.bind(Data_Maybe.bindMaybe)(Ctl_Internal_Types_CborBytes.hexToCborBytes(signedData.signature))(function (signature) {
                              return Control_Applicative.pure(Data_Maybe.applicativeMaybe)({
                                  key: key,
                                  signature: signature
                              });
                          });
                      }));
                  });
              });
          };
      };
  };
  var hexStringToAddress = Control_Bind.composeKleisliFlipped(Data_Maybe.bindMaybe)((function () {
      var $17 = Ctl_Internal_Deserialization_FromBytes.fromBytes(Ctl_Internal_Deserialization_FromBytes.fromBytesAddress);
      return function ($18) {
          return $17(Ctl_Internal_Types_CborBytes.rawBytesAsCborBytes($18));
      };
  })())(Ctl_Internal_Types_RawBytes.hexToRawBytes);
  var getWalletAddresses = function (conn) {
      return Data_Functor.mapFlipped(Effect_Aff.functorAff)(Control_Promise.toAffE($foreign["_getAddresses"](conn)))(Data_Traversable.traverse(Data_Traversable.traversableArray)(Data_Maybe.applicativeMaybe)(hexStringToAddress));
  };
  var getUtxos = function (conn) {
      return Control_Bind.bind(Effect_Aff.bindAff)(Control_Promise.toAffE($foreign["_getUtxos"](Ctl_Internal_FfiHelpers.maybeFfiHelper)(conn)))(function (mArrayStr) {
          return Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Data_Traversable["for"](Effect.applicativeEffect)(Data_Traversable.traversableMaybe)(mArrayStr)(Data_Traversable.traverse(Data_Traversable.traversableArray)(Effect.applicativeEffect)(function (str) {
              return Control_Monad_Error_Class.liftMaybe(Control_Monad_Error_Class.monadThrowEffect)(Effect_Exception.error("Unable to convert UTxO"))(Control_Bind.bind(Data_Maybe.bindMaybe)(Control_Bind.bind(Data_Maybe.bindMaybe)(Ctl_Internal_Types_CborBytes.hexToCborBytes(str))(Ctl_Internal_Deserialization_FromBytes.fromBytes(Ctl_Internal_Deserialization_FromBytes.fromBytesTransactionUnspe)))(Ctl_Internal_Deserialization_UnspentOutput.convertUnspentOutput));
          })));
      });
  };
  var getUnusedAddresses = function (conn) {
      return Data_Functor.mapFlipped(Effect_Aff.functorAff)(Control_Promise.toAffE($foreign["_getUnusedAddresses"](conn)))(Data_Traversable.traverse(Data_Traversable.traversableArray)(Data_Maybe.applicativeMaybe)(hexStringToAddress));
  };
  var getRewardAddresses = function (conn) {
      return Data_Functor.mapFlipped(Effect_Aff.functorAff)(Control_Promise.toAffE($foreign["_getRewardAddresses"](conn)))(Data_Traversable.traverse(Data_Traversable.traversableArray)(Data_Maybe.applicativeMaybe)(hexStringToAddress));
  };
  var getNetworkId = function ($19) {
      return Control_Promise.toAffE($foreign["_getNetworkId"]($19));
  };
  var getCip30Collateral = function (conn) {
      return Control_Monad_Error_Class.catchError(Control_Monad_Error_Class.monadErrorEffect)($foreign["_getCollateral"](Ctl_Internal_FfiHelpers.maybeFfiHelper)(conn))(function (v) {
          return Control_Monad_Error_Class.throwError(Control_Monad_Error_Class.monadThrowEffect)(Effect_Exception.error("Wallet doesn't implement `getCollateral`."));
      });
  };
  var getCollateral = function (conn) {
      return Control_Bind.bind(Effect_Aff.bindAff)(Control_Promise.toAffE(getCip30Collateral(conn)))(function (mbUtxoStrs) {
          var v = Control_Bind.join(Data_Maybe.bindMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Traversable.traverse(Data_Traversable.traversableArray)(Data_Maybe.applicativeMaybe)(Ctl_Internal_Types_RawBytes.hexToRawBytes))(mbUtxoStrs));
          return Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Data_Traversable["for"](Effect.applicativeEffect)(Data_Traversable.traversableMaybe)(v)(function (collateralUtxos) {
              return Data_Traversable["for"](Effect.applicativeEffect)(Data_Traversable.traversableArray)(collateralUtxos)(function (bytes) {
                  return Control_Bind.bindFlipped(Effect.bindEffect)(Data_Maybe.maybe(Effect_Exception["throw"]("Unable to convert UTxO"))(Control_Applicative.pure(Effect.applicativeEffect)))(Data_Functor.map(Effect.functorEffect)(Ctl_Internal_Deserialization_UnspentOutput.convertUnspentOutput)(Ctl_Internal_Deserialization_FromBytes.fromBytesEffect(Ctl_Internal_Deserialization_FromBytes.fromBytesTransactionUnspe)(Ctl_Internal_Types_CborBytes.rawBytesAsCborBytes(bytes))));
              });
          }));
      });
  };
  var getChangeAddress = function (conn) {
      return Data_Functor.mapFlipped(Effect_Aff.functorAff)(Control_Promise.toAffE($foreign["_getChangeAddress"](conn)))(hexStringToAddress);
  };
  var fromHexString = function (act) {
      var $20 = Data_Functor.map(Effect_Aff.functorAff)(Ctl_Internal_Types_RawBytes.hexToRawBytes);
      return function ($21) {
          return $20(Control_Promise.toAffE(act($21)));
      };
  };
  var getBalance = function (wallet) {
      return Data_Functor.mapFlipped(Effect_Aff.functorAff)(fromHexString($foreign["_getBalance"])(wallet))(function (mbBytes) {
          return Control_Bind.bind(Data_Maybe.bindMaybe)(mbBytes)(function (bytes) {
              return Control_Bind.bind(Data_Maybe.bindMaybe)(Ctl_Internal_Deserialization_FromBytes.fromBytes(Ctl_Internal_Deserialization_FromBytes.fromBytesValue)(Ctl_Internal_Types_CborBytes.rawBytesAsCborBytes(bytes)))(Ctl_Internal_Deserialization_UnspentOutput.convertValue);
          });
      });
  };
  var signTx = function (conn) {
      return function (tx) {
          var combineWitnessSet = function (v) {
              return function (newWits) {
                  return {
                      body: v.body,
                      witnessSet: Data_Semigroup.append(Ctl_Internal_Cardano_Types_Transaction.semigroupTransactionWitne)(v.witnessSet)(newWits),
                      isValid: v.isValid,
                      auxiliaryData: v.auxiliaryData
                  };
              };
          };
          return Control_Bind.bind(Effect_Aff.bindAff)(txToHex(tx))(function (txHex) {
              return Control_Bind.bind(Effect_Aff.bindAff)(fromHexString($foreign["_signTx"](txHex))(conn))(function (v) {
                  if (v instanceof Data_Maybe.Nothing) {
                      return Control_Applicative.pure(Effect_Aff.applicativeAff)(Data_Maybe.Nothing.value);
                  };
                  if (v instanceof Data_Maybe.Just) {
                      return Data_Functor.map(Effect_Aff.functorAff)(Data_Functor.map(Data_Maybe.functorMaybe)(combineWitnessSet(tx)))(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Data_Functor.map(Effect.functorEffect)(Ctl_Internal_Deserialization_WitnessSet.convertWitnessSet)(Ctl_Internal_Deserialization_FromBytes.fromBytesEffect(Ctl_Internal_Deserialization_FromBytes.fromBytesTransactionWitne)(Ctl_Internal_Types_CborBytes.rawBytesAsCborBytes(v.value0)))));
                  };
                  throw new Error("Failed pattern match at Ctl.Internal.Wallet.Cip30 (line 175, column 42 - line 180, column 8): " + [ v.constructor.name ]);
              });
          });
      };
  };
  var mkCip30WalletAff = function (walletName) {
      return function (enableWallet) {
          return Control_Bind.bind(Effect_Aff.bindAff)(Control_Promise.toAffE(enableWallet))(function (wallet) {
              return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Control_Monad.whenM(Effect_Aff.monadAff)(Data_Functor.map(Effect_Aff.functorAff)(Data_Maybe.isNothing)(getCollateral(wallet)))(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Exception["throw"](walletName + " wallet missing collateral"))))(function () {
                  return Control_Applicative.pure(Effect_Aff.applicativeAff)({
                      connection: wallet,
                      getNetworkId: getNetworkId,
                      getUtxos: getUtxos,
                      getCollateral: getCollateral,
                      getBalance: getBalance,
                      getWalletAddresses: getWalletAddresses,
                      getUnusedAddresses: getUnusedAddresses,
                      getChangeAddress: getChangeAddress,
                      getRewardAddresses: getRewardAddresses,
                      signTx: signTx,
                      signData: signData
                  });
              });
          });
      };
  };
  exports["mkCip30WalletAff"] = mkCip30WalletAff;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Ctl.Internal.BalanceTx.FakeOutput"] = $PS["Ctl.Internal.BalanceTx.FakeOutput"] || {};
  var exports = $PS["Ctl.Internal.BalanceTx.FakeOutput"];
  var Ctl_Internal_Cardano_Types_Value = $PS["Ctl.Internal.Cardano.Types.Value"];
  var Ctl_Internal_Serialization_Address = $PS["Ctl.Internal.Serialization.Address"];
  var Ctl_Internal_Types_OutputDatum = $PS["Ctl.Internal.Types.OutputDatum"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Monoid = $PS["Data.Monoid"];                
  var fakeOutputWithValue = function (amount) {
      return {
          address: Data_Maybe.fromJust()(Ctl_Internal_Serialization_Address.addressFromBech32("addr_test1qpu5vlrf4xkxv2qpwngf6cjhtw542ayty80v8dyr49rf5ewvxwdrt70qlcpeeagscasafhffqsxy36t90ldv06wqrk2qum8x5w")),
          amount: amount,
          datum: Ctl_Internal_Types_OutputDatum.NoOutputDatum.value,
          scriptRef: Data_Maybe.Nothing.value
      };
  };
  var fakeOutputWithNonAdaAssets = (function () {
      var $0 = Ctl_Internal_Cardano_Types_Value.mkValue(Data_Monoid.mempty(Ctl_Internal_Cardano_Types_Value.monoidCoin));
      return function ($1) {
          return fakeOutputWithValue($0($1));
      };
  })();
  exports["fakeOutputWithNonAdaAssets"] = fakeOutputWithNonAdaAssets;
})(PS);
(function(exports) {
  /* global BROWSER_RUNTIME */

  let lib;
  if (typeof BROWSER_RUNTIME != "undefined" && BROWSER_RUNTIME) {
    lib = require("@emurgo/cardano-serialization-lib-browser");
  } else {
    lib = require("@emurgo/cardano-serialization-lib-nodejs");
  }
  lib = require("@mlabs-haskell/csl-gc-wrapper")(lib);

  exports.minAdaForOutput = maybe => txOutput => dataCost => {
    try {
      return maybe.just(lib.min_ada_for_output(txOutput, dataCost));
    } catch (_) {
      return maybe.nothing;
    }
  };

  exports.newCoinsPerWord = n => lib.DataCost.new_coins_per_word(n);
  exports.newCoinsPerByte = n => lib.DataCost.new_coins_per_byte(n);
})(PS["Ctl.Internal.BalanceTx.UtxoMinAda"] = PS["Ctl.Internal.BalanceTx.UtxoMinAda"] || {});
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Heterogeneous.Folding"] = $PS["Heterogeneous.Folding"] || {};
  var exports = $PS["Heterogeneous.Folding"];
  var Record = $PS["Record"];
  var Type_Proxy = $PS["Type.Proxy"];
  var hfoldl = function (dict) {
      return dict.hfoldl;
  };
  var functionFolding = {
      folding: function (f) {
          return f;
      }
  };
  var foldlRecordRowList = function (dict) {
      return dict.foldlRecordRowList;
  };
  var hfoldlRecord = function () {
      return function (dictFoldlRecord) {
          return {
              hfoldl: function (f) {
                  return function (x) {
                      return foldlRecordRowList(dictFoldlRecord)(f)(x)(Type_Proxy["Proxy"].value);
                  };
              }
          };
      };
  };
  var foldlRecordNil = {
      foldlRecordRowList: function (v) {
          return function (x) {
              return function (v1) {
                  return function (v2) {
                      return x;
                  };
              };
          };
      }
  };
  var foldingWithIndex = function (dict) {
      return dict.foldingWithIndex;
  };
  var foldlRecordCons = function (dictIsSymbol) {
      return function () {
          return function (dictFoldingWithIndex) {
              return function (dictFoldlRecord) {
                  return {
                      foldlRecordRowList: function (f) {
                          return function (x) {
                              return function (v) {
                                  return function (r) {
                                      return foldlRecordRowList(dictFoldlRecord)(f)(foldingWithIndex(dictFoldingWithIndex)(f)(Type_Proxy["Proxy"].value)(x)(Record.get(dictIsSymbol)()(Type_Proxy["Proxy"].value)(r)))(Type_Proxy["Proxy"].value)(r);
                                  };
                              };
                          };
                      }
                  };
              };
          };
      };
  };
  var folding = function (dict) {
      return dict.folding;
  };
  var constFolding = function (dictFolding) {
      return {
          foldingWithIndex: function (v) {
              return function (v1) {
                  return folding(dictFolding)(v);
              };
          }
      };
  };
  exports["hfoldl"] = hfoldl;
  exports["functionFolding"] = functionFolding;
  exports["constFolding"] = constFolding;
  exports["hfoldlRecord"] = hfoldlRecord;
  exports["foldlRecordCons"] = foldlRecordCons;
  exports["foldlRecordNil"] = foldlRecordNil;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Ctl.Internal.Types.ProtocolParameters"] = $PS["Ctl.Internal.Types.ProtocolParameters"] || {};
  var exports = $PS["Ctl.Internal.Types.ProtocolParameters"];
  var Data_Array = $PS["Data.Array"];
  var Data_List = $PS["Data.List"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Unfoldable = $PS["Data.Unfoldable"];
  var Heterogeneous_Folding = $PS["Heterogeneous.Folding"];                
  var CoinsPerUtxoByte = (function () {
      function CoinsPerUtxoByte(value0) {
          this.value0 = value0;
      };
      CoinsPerUtxoByte.create = function (value0) {
          return new CoinsPerUtxoByte(value0);
      };
      return CoinsPerUtxoByte;
  })();
  var CoinsPerUtxoWord = (function () {
      function CoinsPerUtxoWord(value0) {
          this.value0 = value0;
      };
      CoinsPerUtxoWord.create = function (value0) {
          return new CoinsPerUtxoWord(value0);
      };
      return CoinsPerUtxoWord;
  })();
  var convertCostModel = function (dictHFoldl) {
      return function (model) {
          return Data_Newtype.wrap()(Data_Array.reverse(Data_List.toUnfoldable(Data_Unfoldable.unfoldableArray)(Heterogeneous_Folding.hfoldl(dictHFoldl)(function (xs) {
              return function (x) {
                  return new Data_List_Types.Cons(x, xs);
              };
          })(Data_Monoid.mempty(Data_List_Types.monoidList))(model))));
      };
  };
  var convertPlutusV1CostModel = convertCostModel(Heterogeneous_Folding.hfoldlRecord()(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "addInteger-cpu-arguments-intercept";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "addInteger-cpu-arguments-slope";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "addInteger-memory-arguments-intercept";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "addInteger-memory-arguments-slope";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "appendByteString-cpu-arguments-intercept";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "appendByteString-cpu-arguments-slope";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "appendByteString-memory-arguments-intercept";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "appendByteString-memory-arguments-slope";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "appendString-cpu-arguments-intercept";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "appendString-cpu-arguments-slope";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "appendString-memory-arguments-intercept";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "appendString-memory-arguments-slope";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "bData-cpu-arguments";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "bData-memory-arguments";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "blake2b_256-cpu-arguments-intercept";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "blake2b_256-cpu-arguments-slope";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "blake2b_256-memory-arguments";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "cekApplyCost-exBudgetCPU";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "cekApplyCost-exBudgetMemory";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "cekBuiltinCost-exBudgetCPU";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "cekBuiltinCost-exBudgetMemory";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "cekConstCost-exBudgetCPU";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "cekConstCost-exBudgetMemory";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "cekDelayCost-exBudgetCPU";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "cekDelayCost-exBudgetMemory";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "cekForceCost-exBudgetCPU";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "cekForceCost-exBudgetMemory";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "cekLamCost-exBudgetCPU";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "cekLamCost-exBudgetMemory";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "cekStartupCost-exBudgetCPU";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "cekStartupCost-exBudgetMemory";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "cekVarCost-exBudgetCPU";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "cekVarCost-exBudgetMemory";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "chooseData-cpu-arguments";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "chooseData-memory-arguments";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "chooseList-cpu-arguments";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "chooseList-memory-arguments";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "chooseUnit-cpu-arguments";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "chooseUnit-memory-arguments";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "consByteString-cpu-arguments-intercept";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "consByteString-cpu-arguments-slope";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "consByteString-memory-arguments-intercept";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "consByteString-memory-arguments-slope";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "constrData-cpu-arguments";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "constrData-memory-arguments";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "decodeUtf8-cpu-arguments-intercept";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "decodeUtf8-cpu-arguments-slope";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "decodeUtf8-memory-arguments-intercept";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "decodeUtf8-memory-arguments-slope";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "divideInteger-cpu-arguments-constant";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "divideInteger-cpu-arguments-model-arguments-intercept";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "divideInteger-cpu-arguments-model-arguments-slope";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "divideInteger-memory-arguments-intercept";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "divideInteger-memory-arguments-minimum";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "divideInteger-memory-arguments-slope";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "encodeUtf8-cpu-arguments-intercept";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "encodeUtf8-cpu-arguments-slope";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "encodeUtf8-memory-arguments-intercept";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "encodeUtf8-memory-arguments-slope";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "equalsByteString-cpu-arguments-constant";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "equalsByteString-cpu-arguments-intercept";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "equalsByteString-cpu-arguments-slope";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "equalsByteString-memory-arguments";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "equalsData-cpu-arguments-intercept";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "equalsData-cpu-arguments-slope";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "equalsData-memory-arguments";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "equalsInteger-cpu-arguments-intercept";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "equalsInteger-cpu-arguments-slope";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "equalsInteger-memory-arguments";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "equalsString-cpu-arguments-constant";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "equalsString-cpu-arguments-intercept";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "equalsString-cpu-arguments-slope";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "equalsString-memory-arguments";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "fstPair-cpu-arguments";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "fstPair-memory-arguments";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "headList-cpu-arguments";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "headList-memory-arguments";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "iData-cpu-arguments";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "iData-memory-arguments";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "ifThenElse-cpu-arguments";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "ifThenElse-memory-arguments";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "indexByteString-cpu-arguments";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "indexByteString-memory-arguments";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "lengthOfByteString-cpu-arguments";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "lengthOfByteString-memory-arguments";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "lessThanByteString-cpu-arguments-intercept";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "lessThanByteString-cpu-arguments-slope";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "lessThanByteString-memory-arguments";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "lessThanEqualsByteString-cpu-arguments-intercept";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "lessThanEqualsByteString-cpu-arguments-slope";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "lessThanEqualsByteString-memory-arguments";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "lessThanEqualsInteger-cpu-arguments-intercept";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "lessThanEqualsInteger-cpu-arguments-slope";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "lessThanEqualsInteger-memory-arguments";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "lessThanInteger-cpu-arguments-intercept";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "lessThanInteger-cpu-arguments-slope";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "lessThanInteger-memory-arguments";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "listData-cpu-arguments";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "listData-memory-arguments";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "mapData-cpu-arguments";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "mapData-memory-arguments";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "mkCons-cpu-arguments";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "mkCons-memory-arguments";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "mkNilData-cpu-arguments";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "mkNilData-memory-arguments";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "mkNilPairData-cpu-arguments";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "mkNilPairData-memory-arguments";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "mkPairData-cpu-arguments";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "mkPairData-memory-arguments";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "modInteger-cpu-arguments-constant";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "modInteger-cpu-arguments-model-arguments-intercept";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "modInteger-cpu-arguments-model-arguments-slope";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "modInteger-memory-arguments-intercept";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "modInteger-memory-arguments-minimum";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "modInteger-memory-arguments-slope";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "multiplyInteger-cpu-arguments-intercept";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "multiplyInteger-cpu-arguments-slope";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "multiplyInteger-memory-arguments-intercept";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "multiplyInteger-memory-arguments-slope";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "nullList-cpu-arguments";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "nullList-memory-arguments";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "quotientInteger-cpu-arguments-constant";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "quotientInteger-cpu-arguments-model-arguments-intercept";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "quotientInteger-cpu-arguments-model-arguments-slope";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "quotientInteger-memory-arguments-intercept";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "quotientInteger-memory-arguments-minimum";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "quotientInteger-memory-arguments-slope";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "remainderInteger-cpu-arguments-constant";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "remainderInteger-cpu-arguments-model-arguments-intercept";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "remainderInteger-cpu-arguments-model-arguments-slope";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "remainderInteger-memory-arguments-intercept";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "remainderInteger-memory-arguments-minimum";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "remainderInteger-memory-arguments-slope";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "sha2_256-cpu-arguments-intercept";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "sha2_256-cpu-arguments-slope";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "sha2_256-memory-arguments";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "sha3_256-cpu-arguments-intercept";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "sha3_256-cpu-arguments-slope";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "sha3_256-memory-arguments";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "sliceByteString-cpu-arguments-intercept";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "sliceByteString-cpu-arguments-slope";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "sliceByteString-memory-arguments-intercept";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "sliceByteString-memory-arguments-slope";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "sndPair-cpu-arguments";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "sndPair-memory-arguments";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "subtractInteger-cpu-arguments-intercept";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "subtractInteger-cpu-arguments-slope";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "subtractInteger-memory-arguments-intercept";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "subtractInteger-memory-arguments-slope";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "tailList-cpu-arguments";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "tailList-memory-arguments";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "trace-cpu-arguments";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "trace-memory-arguments";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "unBData-cpu-arguments";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "unBData-memory-arguments";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "unConstrData-cpu-arguments";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "unConstrData-memory-arguments";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "unIData-cpu-arguments";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "unIData-memory-arguments";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "unListData-cpu-arguments";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "unListData-memory-arguments";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "unMapData-cpu-arguments";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "unMapData-memory-arguments";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "verifyEd25519Signature-cpu-arguments-intercept";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "verifyEd25519Signature-cpu-arguments-slope";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "verifyEd25519Signature-memory-arguments";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordNil))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))));
  var convertPlutusV2CostModel = convertCostModel(Heterogeneous_Folding.hfoldlRecord()(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "addInteger-cpu-arguments-intercept";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "addInteger-cpu-arguments-slope";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "addInteger-memory-arguments-intercept";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "addInteger-memory-arguments-slope";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "appendByteString-cpu-arguments-intercept";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "appendByteString-cpu-arguments-slope";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "appendByteString-memory-arguments-intercept";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "appendByteString-memory-arguments-slope";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "appendString-cpu-arguments-intercept";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "appendString-cpu-arguments-slope";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "appendString-memory-arguments-intercept";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "appendString-memory-arguments-slope";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "bData-cpu-arguments";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "bData-memory-arguments";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "blake2b_256-cpu-arguments-intercept";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "blake2b_256-cpu-arguments-slope";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "blake2b_256-memory-arguments";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "cekApplyCost-exBudgetCPU";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "cekApplyCost-exBudgetMemory";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "cekBuiltinCost-exBudgetCPU";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "cekBuiltinCost-exBudgetMemory";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "cekConstCost-exBudgetCPU";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "cekConstCost-exBudgetMemory";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "cekDelayCost-exBudgetCPU";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "cekDelayCost-exBudgetMemory";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "cekForceCost-exBudgetCPU";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "cekForceCost-exBudgetMemory";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "cekLamCost-exBudgetCPU";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "cekLamCost-exBudgetMemory";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "cekStartupCost-exBudgetCPU";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "cekStartupCost-exBudgetMemory";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "cekVarCost-exBudgetCPU";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "cekVarCost-exBudgetMemory";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "chooseData-cpu-arguments";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "chooseData-memory-arguments";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "chooseList-cpu-arguments";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "chooseList-memory-arguments";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "chooseUnit-cpu-arguments";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "chooseUnit-memory-arguments";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "consByteString-cpu-arguments-intercept";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "consByteString-cpu-arguments-slope";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "consByteString-memory-arguments-intercept";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "consByteString-memory-arguments-slope";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "constrData-cpu-arguments";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "constrData-memory-arguments";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "decodeUtf8-cpu-arguments-intercept";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "decodeUtf8-cpu-arguments-slope";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "decodeUtf8-memory-arguments-intercept";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "decodeUtf8-memory-arguments-slope";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "divideInteger-cpu-arguments-constant";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "divideInteger-cpu-arguments-model-arguments-intercept";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "divideInteger-cpu-arguments-model-arguments-slope";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "divideInteger-memory-arguments-intercept";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "divideInteger-memory-arguments-minimum";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "divideInteger-memory-arguments-slope";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "encodeUtf8-cpu-arguments-intercept";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "encodeUtf8-cpu-arguments-slope";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "encodeUtf8-memory-arguments-intercept";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "encodeUtf8-memory-arguments-slope";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "equalsByteString-cpu-arguments-constant";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "equalsByteString-cpu-arguments-intercept";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "equalsByteString-cpu-arguments-slope";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "equalsByteString-memory-arguments";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "equalsData-cpu-arguments-intercept";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "equalsData-cpu-arguments-slope";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "equalsData-memory-arguments";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "equalsInteger-cpu-arguments-intercept";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "equalsInteger-cpu-arguments-slope";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "equalsInteger-memory-arguments";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "equalsString-cpu-arguments-constant";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "equalsString-cpu-arguments-intercept";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "equalsString-cpu-arguments-slope";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "equalsString-memory-arguments";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "fstPair-cpu-arguments";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "fstPair-memory-arguments";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "headList-cpu-arguments";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "headList-memory-arguments";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "iData-cpu-arguments";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "iData-memory-arguments";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "ifThenElse-cpu-arguments";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "ifThenElse-memory-arguments";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "indexByteString-cpu-arguments";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "indexByteString-memory-arguments";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "lengthOfByteString-cpu-arguments";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "lengthOfByteString-memory-arguments";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "lessThanByteString-cpu-arguments-intercept";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "lessThanByteString-cpu-arguments-slope";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "lessThanByteString-memory-arguments";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "lessThanEqualsByteString-cpu-arguments-intercept";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "lessThanEqualsByteString-cpu-arguments-slope";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "lessThanEqualsByteString-memory-arguments";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "lessThanEqualsInteger-cpu-arguments-intercept";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "lessThanEqualsInteger-cpu-arguments-slope";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "lessThanEqualsInteger-memory-arguments";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "lessThanInteger-cpu-arguments-intercept";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "lessThanInteger-cpu-arguments-slope";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "lessThanInteger-memory-arguments";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "listData-cpu-arguments";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "listData-memory-arguments";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "mapData-cpu-arguments";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "mapData-memory-arguments";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "mkCons-cpu-arguments";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "mkCons-memory-arguments";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "mkNilData-cpu-arguments";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "mkNilData-memory-arguments";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "mkNilPairData-cpu-arguments";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "mkNilPairData-memory-arguments";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "mkPairData-cpu-arguments";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "mkPairData-memory-arguments";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "modInteger-cpu-arguments-constant";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "modInteger-cpu-arguments-model-arguments-intercept";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "modInteger-cpu-arguments-model-arguments-slope";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "modInteger-memory-arguments-intercept";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "modInteger-memory-arguments-minimum";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "modInteger-memory-arguments-slope";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "multiplyInteger-cpu-arguments-intercept";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "multiplyInteger-cpu-arguments-slope";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "multiplyInteger-memory-arguments-intercept";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "multiplyInteger-memory-arguments-slope";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "nullList-cpu-arguments";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "nullList-memory-arguments";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "quotientInteger-cpu-arguments-constant";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "quotientInteger-cpu-arguments-model-arguments-intercept";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "quotientInteger-cpu-arguments-model-arguments-slope";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "quotientInteger-memory-arguments-intercept";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "quotientInteger-memory-arguments-minimum";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "quotientInteger-memory-arguments-slope";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "remainderInteger-cpu-arguments-constant";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "remainderInteger-cpu-arguments-model-arguments-intercept";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "remainderInteger-cpu-arguments-model-arguments-slope";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "remainderInteger-memory-arguments-intercept";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "remainderInteger-memory-arguments-minimum";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "remainderInteger-memory-arguments-slope";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "serialiseData-cpu-arguments-intercept";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "serialiseData-cpu-arguments-slope";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "serialiseData-memory-arguments-intercept";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "serialiseData-memory-arguments-slope";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "sha2_256-cpu-arguments-intercept";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "sha2_256-cpu-arguments-slope";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "sha2_256-memory-arguments";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "sha3_256-cpu-arguments-intercept";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "sha3_256-cpu-arguments-slope";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "sha3_256-memory-arguments";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "sliceByteString-cpu-arguments-intercept";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "sliceByteString-cpu-arguments-slope";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "sliceByteString-memory-arguments-intercept";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "sliceByteString-memory-arguments-slope";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "sndPair-cpu-arguments";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "sndPair-memory-arguments";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "subtractInteger-cpu-arguments-intercept";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "subtractInteger-cpu-arguments-slope";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "subtractInteger-memory-arguments-intercept";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "subtractInteger-memory-arguments-slope";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "tailList-cpu-arguments";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "tailList-memory-arguments";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "trace-cpu-arguments";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "trace-memory-arguments";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "unBData-cpu-arguments";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "unBData-memory-arguments";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "unConstrData-cpu-arguments";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "unConstrData-memory-arguments";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "unIData-cpu-arguments";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "unIData-memory-arguments";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "unListData-cpu-arguments";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "unListData-memory-arguments";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "unMapData-cpu-arguments";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "unMapData-memory-arguments";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "verifyEcdsaSecp256k1Signature-cpu-arguments";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "verifyEcdsaSecp256k1Signature-memory-arguments";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "verifyEd25519Signature-cpu-arguments-intercept";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "verifyEd25519Signature-cpu-arguments-slope";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "verifyEd25519Signature-memory-arguments";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "verifySchnorrSecp256k1Signature-cpu-arguments-intercept";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "verifySchnorrSecp256k1Signature-cpu-arguments-slope";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordCons({
      reflectSymbol: function () {
          return "verifySchnorrSecp256k1Signature-memory-arguments";
      }
  })()(Heterogeneous_Folding.constFolding(Heterogeneous_Folding.functionFolding))(Heterogeneous_Folding.foldlRecordNil)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))));
  exports["CoinsPerUtxoByte"] = CoinsPerUtxoByte;
  exports["CoinsPerUtxoWord"] = CoinsPerUtxoWord;
  exports["convertPlutusV1CostModel"] = convertPlutusV1CostModel;
  exports["convertPlutusV2CostModel"] = convertPlutusV2CostModel;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Ctl.Internal.BalanceTx.UtxoMinAda"] = $PS["Ctl.Internal.BalanceTx.UtxoMinAda"] || {};
  var exports = $PS["Ctl.Internal.BalanceTx.UtxoMinAda"];
  var $foreign = $PS["Ctl.Internal.BalanceTx.UtxoMinAda"];
  var Control_Monad_Error_Class = $PS["Control.Monad.Error.Class"];
  var Ctl_Internal_FfiHelpers = $PS["Ctl.Internal.FfiHelpers"];
  var Ctl_Internal_Serialization = $PS["Ctl.Internal.Serialization"];
  var Ctl_Internal_Types_BigNum = $PS["Ctl.Internal.Types.BigNum"];
  var Ctl_Internal_Types_ProtocolParameters = $PS["Ctl.Internal.Types.ProtocolParameters"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Effect = $PS["Effect"];
  var Effect_Exception = $PS["Effect.Exception"];                
  var utxoMinAdaValue = function (coinsPerUtxoUnit) {
      return function (txOutput) {
          return function __do() {
              var cslTxOutput = Ctl_Internal_Serialization.convertTxOutput(txOutput)();
              var dataCost = (function () {
                  if (coinsPerUtxoUnit instanceof Ctl_Internal_Types_ProtocolParameters.CoinsPerUtxoByte) {
                      return Data_Functor.map(Effect.functorEffect)($foreign.newCoinsPerByte)(Control_Monad_Error_Class.liftMaybe(Control_Monad_Error_Class.monadThrowEffect)(Effect_Exception.error("Failed to convert CoinsPerUtxoByte"))(Ctl_Internal_Types_BigNum.fromBigInt(coinsPerUtxoUnit.value0)))();
                  };
                  if (coinsPerUtxoUnit instanceof Ctl_Internal_Types_ProtocolParameters.CoinsPerUtxoWord) {
                      return Data_Functor.map(Effect.functorEffect)($foreign.newCoinsPerWord)(Control_Monad_Error_Class.liftMaybe(Control_Monad_Error_Class.monadThrowEffect)(Effect_Exception.error("Failed to convert CoinsPerUtxoWord"))(Ctl_Internal_Types_BigNum.fromBigInt(coinsPerUtxoUnit.value0)))();
                  };
                  throw new Error("Failed pattern match at Ctl.Internal.BalanceTx.UtxoMinAda (line 42, column 15 - line 48, column 30): " + [ coinsPerUtxoUnit.constructor.name ]);
              })();
              return Data_Functor.mapFlipped(Data_Maybe.functorMaybe)($foreign.minAdaForOutput(Ctl_Internal_FfiHelpers.maybeFfiHelper)(cslTxOutput)(dataCost))(Ctl_Internal_Types_BigNum.toBigInt);
          };
      };
  };
  exports["utxoMinAdaValue"] = utxoMinAdaValue;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Ctl.Internal.BalanceTx.Collateral.Select"] = $PS["Ctl.Internal.BalanceTx.Collateral.Select"] || {};
  var exports = $PS["Ctl.Internal.BalanceTx.Collateral.Select"];
  var Ctl_Internal_BalanceTx_FakeOutput = $PS["Ctl.Internal.BalanceTx.FakeOutput"];
  var Ctl_Internal_BalanceTx_UtxoMinAda = $PS["Ctl.Internal.BalanceTx.UtxoMinAda"];
  var Ctl_Internal_Cardano_Types_Value = $PS["Ctl.Internal.Cardano.Types.Value"];
  var Data_BigInt = $PS["Data.BigInt"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_List = $PS["Data.List"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Map_Internal = $PS["Data.Map.Internal"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Ordering = $PS["Data.Ordering"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Semiring = $PS["Data.Semiring"];
  var Data_Traversable = $PS["Data.Traversable"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Effect = $PS["Effect"];                
  var CollateralCandidate = function (x) {
      return x;
  };
  var AdaOut = function (x) {
      return x;
  };
  var eqCollateralCandidate = {
      eq: Data_Function.on(Data_Eq.eq(Data_BigInt.eqBigInt))((function () {
          var $26 = Data_Newtype.unwrap();
          return function ($27) {
              return Data_Tuple.snd($26($27));
          };
      })())
  };
  var subsequences = function (v) {
      if (v instanceof Data_List_Types.Nil) {
          return new Data_List_Types.Cons(Data_List_Types.Nil.value, Data_List_Types.Nil.value);
      };
      if (v instanceof Data_List_Types.Cons) {
          var subs = subsequences(v.value1);
          return Data_Semigroup.append(Data_List_Types.semigroupList)(Data_Functor.map(Data_List_Types.functorList)(Data_List_Types.Cons.create(v.value0))(subs))(subs);
      };
      throw new Error("Failed pattern match at Ctl.Internal.BalanceTx.Collateral.Select (line 172, column 1 - line 172, column 60): " + [ v.constructor.name ]);
  };
  var nonAdaAsset = (function () {
      var $28 = Data_Newtype.unwrap();
      var $29 = Data_Newtype.unwrap();
      return function ($30) {
          return Ctl_Internal_Cardano_Types_Value.getNonAdaAsset((function (v) {
              return v.amount;
          })($28((function (v) {
              return v.output;
          })($29($30)))));
      };
  })();
  var mkCollateralCandidate = function (v) {
      return Data_Functor.map(Data_Maybe.functorMaybe)((function () {
          var $31 = Data_Tuple.Tuple.create(v.value0);
          return function ($32) {
              return CollateralCandidate($31($32));
          };
      })())(v.value1);
  };
  var minRequiredCollateral = Data_BigInt.fromInt(5000000);
  var maxCandidateUtxos = 10;
  var combinations = function (k) {
      var $33 = Data_List.filter(function (x) {
          return Data_List.length(x) <= k && !Data_List["null"](x);
      });
      return function ($34) {
          return $33(subsequences($34));
      };
  };
  var collateralReturnMinAdaValue = function (coinsPerUtxoUnit) {
      var $35 = Ctl_Internal_BalanceTx_UtxoMinAda.utxoMinAdaValue(coinsPerUtxoUnit);
      var $36 = Data_Foldable.foldMap(Data_List_Types.foldableList)(Ctl_Internal_Cardano_Types_Value.monoidNonAdaAsset)(nonAdaAsset);
      return function ($37) {
          return $35(Ctl_Internal_BalanceTx_FakeOutput.fakeOutputWithNonAdaAssets($36($37)));
      };
  };
  var asTxUnspentOutput = function (v) {
      return Data_Newtype.wrap()({
          input: v.value0,
          output: v.value1
      });
  };
  var adaValue = (function () {
      var $38 = Data_Newtype.unwrap();
      var $39 = Data_Newtype.unwrap();
      return function ($40) {
          return Ctl_Internal_Cardano_Types_Value["valueToCoin'"]((function (v) {
              return v.amount;
          })($38((function (v) {
              return v.output;
          })($39($40)))));
      };
  })();
  var adaValue$prime = function (init) {
      var $41 = Data_Semiring.add(Data_BigInt.semiringBigInt)(init);
      return function ($42) {
          return $41(adaValue($42));
      };
  };
  var ordCollateralCandidate = {
      compare: function (lhs) {
          return function (rhs) {
              var caseEq = function (v) {
                  return function (v1) {
                      if (v instanceof Data_Ordering.EQ) {
                          return v1;
                      };
                      return v;
                  };
              };
              var byReturnOutMinAda = (function () {
                  var $43 = Data_Newtype.unwrap();
                  return function ($44) {
                      return Data_Tuple.snd($43($44));
                  };
              })();
              var byNumOfInputs = (function () {
                  var $45 = Data_Newtype.unwrap();
                  return function ($46) {
                      return Data_List.length(Data_Tuple.fst($45($46)));
                  };
              })();
              var byAdaValue = (function () {
                  var $47 = Data_Foldable.foldl(Data_List_Types.foldableList)(adaValue$prime)(Data_Semiring.zero(Data_BigInt.semiringBigInt));
                  var $48 = Data_Newtype.unwrap();
                  return function ($49) {
                      return $47(Data_Tuple.fst($48($49)));
                  };
              })();
              return caseEq(Data_Function.on(Data_Ord.compare(Data_BigInt.ordBigInt))(byReturnOutMinAda)(lhs)(rhs))(caseEq(Data_Function.on(Data_Ord.compare(Data_Ord.ordInt))(byNumOfInputs)(lhs)(rhs))(Data_Function.on(Data_Ord.compare(Data_BigInt.ordBigInt))(byAdaValue)(lhs)(rhs)));
          };
      },
      Eq0: function () {
          return eqCollateralCandidate;
      }
  };
  var eqAdaOut = {
      eq: Data_Function.on(Data_Eq.eq(Data_BigInt.eqBigInt))((function () {
          var $50 = Data_Newtype.unwrap();
          return function ($51) {
              return adaValue($50($51));
          };
      })())
  };
  var ordAdaOut = {
      compare: Data_Function.on(Data_Ord.compare(Data_BigInt.ordBigInt))((function () {
          var $52 = Data_Newtype.unwrap();
          return function ($53) {
              return adaValue($52($53));
          };
      })()),
      Eq0: function () {
          return eqAdaOut;
      }
  };
  var selectCollateral = function (coinsPerUtxoUnit) {
      return function (maxCollateralInputs) {
          var $54 = Data_Functor.map(Effect.functorEffect)((function () {
              var $65 = Data_Functor.map(Data_Maybe.functorMaybe)((function () {
                  var $68 = Data_Newtype.unwrap();
                  return function ($69) {
                      return Data_Tuple.fst($68($69));
                  };
              })());
              var $66 = Data_List.sort(ordCollateralCandidate);
              return function ($67) {
                  return $65(Data_List.head($66($67)));
              };
          })());
          var $55 = Data_Functor.map(Effect.functorEffect)(Data_List.mapMaybe(mkCollateralCandidate));
          var $56 = Data_Traversable.traverse(Data_List_Types.traversableList)(Effect.applicativeEffect)(function (x) {
              return Data_Functor.map(Effect.functorEffect)(Data_Tuple.Tuple.create(x))(collateralReturnMinAdaValue(coinsPerUtxoUnit)(x));
          });
          var $57 = Data_List.filter(function (x) {
              return Data_Ord.greaterThanOrEq(Data_BigInt.ordBigInt)(Data_Foldable.foldl(Data_List_Types.foldableList)(adaValue$prime)(Data_Semiring.zero(Data_BigInt.semiringBigInt))(x))(minRequiredCollateral);
          });
          var $58 = combinations(maxCollateralInputs);
          var $59 = Data_List.take(maxCandidateUtxos);
          var $60 = Data_Functor.map(Data_List_Types.functorList)(Data_Newtype.unwrap());
          var $61 = Data_List.sortBy(function (lhs) {
              var $70 = Data_Ord.compare(ordAdaOut)(lhs);
              return function ($71) {
                  return Data_Ordering.invert($70($71));
              };
          });
          var $62 = Data_Functor.map(Data_List_Types.functorList)(function ($72) {
              return AdaOut(asTxUnspentOutput($72));
          });
          var $63 = Data_Map_Internal.toUnfoldable(Data_List_Types.unfoldableList);
          return function ($64) {
              return $54($55($56($57($58($59($60($61($62($63($64))))))))));
          };
      };
  };
  exports["minRequiredCollateral"] = minRequiredCollateral;
  exports["selectCollateral"] = selectCollateral;
})(PS);
(function(exports) {
  /* global BROWSER_RUNTIME */

  let lib;
  if (typeof BROWSER_RUNTIME != "undefined" && BROWSER_RUNTIME) {
    lib = require("@emurgo/cardano-message-signing-browser");
  } else {
    lib = require("@emurgo/cardano-message-signing-nodejs");
  }

  // -----------------------------------------------------------------------------
  // COSESign1Builder
  // -----------------------------------------------------------------------------

  // newCoseSign1Builder :: ByteArray -> Headers -> Effect COSESign1Builder
  exports.newCoseSign1Builder = payload => headers => () => {
    return lib.COSESign1Builder.new(headers, payload, false);
  };

  // makeDataToSign :: COSESign1Builder -> ByteArray
  exports.makeDataToSign = builder => {
    return builder.make_data_to_sign().to_bytes();
  };

  // sign :: PrivateKey -> ByteArray -> ByteArray
  exports.sign = privateKey => message => {
    return privateKey.sign(message).to_bytes();
  };

  // buildSignature :: COSESign1Builder -> ByteArray -> ByteArray
  exports.buildSignature = builder => signedSigStruct => {
    return builder.build(signedSigStruct).to_bytes();
  };

  // -----------------------------------------------------------------------------
  // Headers
  // -----------------------------------------------------------------------------

  // newHeaders :: HeaderMap -> ProtectedHeaderMap -> Headers
  exports.newHeaders = unprotectedHeaders => protectedHeaders => {
    return lib.Headers.new(protectedHeaders, unprotectedHeaders);
  };

  // -----------------------------------------------------------------------------
  // ProtectedHeaderMap
  // -----------------------------------------------------------------------------

  // newProtectedHeaderMap :: HeaderMap -> ProtectedHeaderMap
  exports.newProtectedHeaderMap = headerMap => {
    return lib.ProtectedHeaderMap.new(headerMap);
  };

  // -----------------------------------------------------------------------------
  // HeaderMap
  // -----------------------------------------------------------------------------

  // newHeaderMap :: Effect HeaderMap
  exports.newHeaderMap = () => {
    return lib.HeaderMap.new();
  };

  // setAlgHeaderToEdDsa :: HeaderMap -> Effect Unit
  exports.setAlgHeaderToEdDsa = headerMap => () => {
    const label = lib.Label.from_algorithm_id(lib.AlgorithmId.EdDSA);
    headerMap.set_algorithm_id(label);
  };

  // setAddressHeader :: ByteArray -> HeaderMap -> Effect Unit
  exports.setAddressHeader = addressBytes => headerMap => () => {
    const label = lib.Label.new_text("address");
    const value = lib.CBORValue.new_bytes(addressBytes);
    headerMap.set_header(label, value);
  };

  // -----------------------------------------------------------------------------
  // COSEKey
  // -----------------------------------------------------------------------------

  // newCoseKeyWithOkpType :: Effect COSEKey
  exports.newCoseKeyWithOkpType = () => {
    return lib.COSEKey.new(lib.Label.from_key_type(lib.KeyType.OKP));
  };

  // setCoseKeyAlgHeaderToEdDsa :: COSEKey -> Effect Unit
  exports.setCoseKeyAlgHeaderToEdDsa = key => () => {
    key.set_algorithm_id(lib.Label.from_algorithm_id(lib.AlgorithmId.EdDSA));
  };

  // setCoseKeyCrvHeaderToEd25519 :: COSEKey -> Effect Unit
  exports.setCoseKeyCrvHeaderToEd25519 = key => () => {
    key.set_header(
      lib.Label.new_int(
        lib.Int.new_negative(lib.BigNum.from_str("1")) // crv (-1)
      ),
      lib.CBORValue.new_int(
        lib.Int.new_i32(6) // Ed25519 (6)
      )
    );
  };

  // setCoseKeyXHeader :: RawBytes -> COSEKey -> Effect Unit
  exports.setCoseKeyXHeader = publicKeyBytes => key => () => {
    key.set_header(
      lib.Label.new_int(
        lib.Int.new_negative(lib.BigNum.from_str("2")) // x (-2)
      ),
      lib.CBORValue.new_bytes(publicKeyBytes) // public key bytes
    );
  };

  // bytesFromCoseKey :: COSEKey -> CborBytes
  exports.bytesFromCoseKey = key => key.to_bytes();
})(PS["Ctl.Internal.Wallet.Cip30.SignData"] = PS["Ctl.Internal.Wallet.Cip30.SignData"] || {});
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Ctl.Internal.Wallet.Cip30.SignData"] = $PS["Ctl.Internal.Wallet.Cip30.SignData"] || {};
  var exports = $PS["Ctl.Internal.Wallet.Cip30.SignData"];
  var $foreign = $PS["Ctl.Internal.Wallet.Cip30.SignData"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Ctl_Internal_Serialization_Keys = $PS["Ctl.Internal.Serialization.Keys"];
  var Ctl_Internal_Serialization_ToBytes = $PS["Ctl.Internal.Serialization.ToBytes"];
  var Ctl_Internal_Types_CborBytes = $PS["Ctl.Internal.Types.CborBytes"];
  var Data_Functor = $PS["Data.Functor"];
  var Effect = $PS["Effect"];                
  var signData = function (privatePaymentKey) {
      return function (address) {
          return function (v) {
              var signature = (function () {
                  var builder = (function () {
                      var protectedHeaders = function __do() {
                          var headerMap = $foreign.newHeaderMap();
                          $foreign.setAlgHeaderToEdDsa(headerMap)();
                          $foreign.setAddressHeader(Ctl_Internal_Serialization_ToBytes.toBytes()(address))(headerMap)();
                          return $foreign.newProtectedHeaderMap(headerMap);
                      };
                      var headers = Control_Apply.apply(Effect.applyEffect)(Data_Functor.map(Effect.functorEffect)($foreign.newHeaders)($foreign.newHeaderMap))(protectedHeaders);
                      return Control_Bind.bind(Effect.bindEffect)(headers)($foreign.newCoseSign1Builder(v));
                  })();
                  var signedSigStruct = Data_Functor.map(Effect.functorEffect)((function () {
                      var $6 = $foreign.sign(privatePaymentKey);
                      return function ($7) {
                          return $6($foreign.makeDataToSign($7));
                      };
                  })())(builder);
                  return Data_Functor.map(Effect.functorEffect)(Ctl_Internal_Types_CborBytes.CborBytes)(Control_Apply.apply(Effect.applyEffect)(Data_Functor.map(Effect.functorEffect)($foreign.buildSignature)(builder))(signedSigStruct));
              })();
              var key = (function () {
                  var publicPaymentKeyBytes = Ctl_Internal_Serialization_Keys.bytesFromPublicKey(Ctl_Internal_Serialization_Keys.publicKeyFromPrivateKey(privatePaymentKey));
                  return function __do() {
                      var coseKey = $foreign.newCoseKeyWithOkpType();
                      $foreign.setCoseKeyAlgHeaderToEdDsa(coseKey)();
                      $foreign.setCoseKeyCrvHeaderToEd25519(coseKey)();
                      $foreign.setCoseKeyXHeader(publicPaymentKeyBytes)(coseKey)();
                      return $foreign.bytesFromCoseKey(coseKey);
                  };
              })();
              return Control_Apply.apply(Effect.applyEffect)(Data_Functor.map(Effect.functorEffect)(function (v1) {
                  return function (v2) {
                      return {
                          key: v1,
                          signature: v2
                      };
                  };
              })(key))(signature);
          };
      };
  };
  exports["signData"] = signData;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Data.Lens.Setter"] = $PS["Data.Lens.Setter"] || {};
  var exports = $PS["Data.Lens.Setter"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Semigroup = $PS["Data.Semigroup"];        
  var over = function (l) {
      return l;
  };
  var set = function (l) {
      return function (b) {
          return over(l)(Data_Function["const"](b));
      };
  };
  var setJust = function (p) {
      var $24 = set(p);
      return function ($25) {
          return $24(Data_Maybe.Just.create($25));
      };
  };
  var modifying = function (dictMonadState) {
      return function (p) {
          return function (f) {
              return Data_Functor["void"]((((dictMonadState.Monad0()).Bind1()).Apply0()).Functor0())(Control_Monad_State_Class.modify(dictMonadState)(over(p)(f)));
          };
      };
  };
  var assign = function (dictMonadState) {
      return function (p) {
          return function (b) {
              return Data_Functor["void"]((((dictMonadState.Monad0()).Bind1()).Apply0()).Functor0())(Control_Monad_State_Class.modify(dictMonadState)(set(p)(b)));
          };
      };
  };
  var appendOver = function (dictSemigroup) {
      return function (p) {
          var $58 = over(p);
          var $59 = Data_Function.flip(Data_Semigroup.append(dictSemigroup));
          return function ($60) {
              return $58($59($60));
          };
      };
  };
  var appendModifying = function (dictMonadState) {
      return function (dictSemigroup) {
          return function (p) {
              var $61 = modifying(dictMonadState)(p);
              var $62 = Data_Function.flip(Data_Semigroup.append(dictSemigroup));
              return function ($63) {
                  return $61($62($63));
              };
          };
      };
  };
  exports["over"] = over;
  exports["set"] = set;
  exports["appendOver"] = appendOver;
  exports["setJust"] = setJust;
  exports["assign"] = assign;
  exports["modifying"] = modifying;
  exports["appendModifying"] = appendModifying;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Ctl.Internal.Wallet.Key"] = $PS["Ctl.Internal.Wallet.Key"] || {};
  var exports = $PS["Ctl.Internal.Wallet.Key"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Ctl_Internal_BalanceTx_Collateral_Select = $PS["Ctl.Internal.BalanceTx.Collateral.Select"];
  var Ctl_Internal_Cardano_Types_Transaction = $PS["Ctl.Internal.Cardano.Types.Transaction"];
  var Ctl_Internal_Deserialization_WitnessSet = $PS["Ctl.Internal.Deserialization.WitnessSet"];
  var Ctl_Internal_Serialization = $PS["Ctl.Internal.Serialization"];
  var Ctl_Internal_Serialization_Address = $PS["Ctl.Internal.Serialization.Address"];
  var Ctl_Internal_Serialization_Keys = $PS["Ctl.Internal.Serialization.Keys"];
  var Ctl_Internal_Wallet_Cip30_SignData = $PS["Ctl.Internal.Wallet.Cip30.SignData"];
  var Data_Array = $PS["Data.Array"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Lens_Setter = $PS["Data.Lens.Setter"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Profunctor_Strong = $PS["Data.Profunctor.Strong"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Traversable = $PS["Data.Traversable"];
  var Effect = $PS["Effect"];
  var Effect_Aff = $PS["Effect.Aff"];
  var Effect_Class = $PS["Effect.Class"];                
  var PrivateStakeKey = function (x) {
      return x;
  };
  var PrivatePaymentKey = function (x) {
      return x;
  };
  var privateKeysToAddress = function (payKey) {
      return function (mbStakeKey) {
          return function (network) {
              var pubPayKey = Ctl_Internal_Serialization_Keys.publicKeyFromPrivateKey(Data_Newtype.unwrap()(payKey));
              if (mbStakeKey instanceof Data_Maybe.Just) {
                  var pubStakeKey = Ctl_Internal_Serialization_Keys.publicKeyFromPrivateKey(Data_Newtype.unwrap()(mbStakeKey.value0));
                  return Ctl_Internal_Serialization_Address.baseAddressToAddress(Ctl_Internal_Serialization_Address.baseAddress({
                      network: network,
                      paymentCred: Ctl_Internal_Serialization_Address.keyHashCredential(Ctl_Internal_Serialization.publicKeyHash(pubPayKey)),
                      delegationCred: Ctl_Internal_Serialization_Address.keyHashCredential(Ctl_Internal_Serialization.publicKeyHash(pubStakeKey))
                  }));
              };
              if (mbStakeKey instanceof Data_Maybe.Nothing) {
                  return (function ($28) {
                      return Ctl_Internal_Serialization_Address.enterpriseAddressToAddress(Ctl_Internal_Serialization_Address.enterpriseAddress((function (v) {
                          return {
                              network: network,
                              paymentCred: v
                          };
                      })(Ctl_Internal_Serialization_Address.keyHashCredential($28))));
                  })(Ctl_Internal_Serialization.publicKeyHash(pubPayKey));
              };
              throw new Error("Failed pattern match at Ctl.Internal.Wallet.Key (line 128, column 3 - line 144, column 37): " + [ mbStakeKey.constructor.name ]);
          };
      };
  };
  var privateKeysToKeyWallet = function (payKey) {
      return function (mbStakeKey) {
          var signTx = function (v) {
              return Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(function __do() {
                  var txBody = Ctl_Internal_Serialization.convertTxBody(v.body)();
                  var hash = Ctl_Internal_Serialization.hashTransaction(txBody)();
                  var payWitness = Data_Functor.map(Effect.functorEffect)(Ctl_Internal_Deserialization_WitnessSet.convertVkeyWitness)(Ctl_Internal_Serialization.makeVkeywitness(hash)(Data_Newtype.unwrap()(payKey)))();
                  var mbStakeWitness = Data_Traversable["for"](Effect.applicativeEffect)(Data_Traversable.traversableMaybe)(mbStakeKey)(function (stakeKey) {
                      return Data_Functor.map(Effect.functorEffect)(Ctl_Internal_Deserialization_WitnessSet.convertVkeyWitness)(Ctl_Internal_Serialization.makeVkeywitness(hash)(Data_Newtype.unwrap()(stakeKey)));
                  })();
                  var witnessSet$prime = Data_Lens_Setter.set(Ctl_Internal_Cardano_Types_Transaction["_vkeys"](Data_Profunctor_Strong.strongFn))(Control_Applicative.pure(Data_Maybe.applicativeMaybe)(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ payWitness ])(Data_Foldable.fold(Data_Foldable.foldableMaybe)(Data_Monoid.monoidArray)(Data_Functor.map(Data_Maybe.functorMaybe)(Control_Applicative.pure(Control_Applicative.applicativeArray))(mbStakeWitness)))))(Data_Monoid.mempty(Ctl_Internal_Cardano_Types_Transaction.monoidTransactionWitnessS));
                  return witnessSet$prime;
              });
          };
          var selectCollateral = function (coinsPerUtxoByte) {
              return function (maxCollateralInputs) {
                  return function (utxos) {
                      return Data_Functor.map(Effect.functorEffect)(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Array.fromFoldable(Data_List_Types.foldableList)))(Ctl_Internal_BalanceTx_Collateral_Select.selectCollateral(coinsPerUtxoByte)(maxCollateralInputs)(utxos));
                  };
              };
          };
          var address = privateKeysToAddress(payKey)(mbStakeKey);
          var signData = function (networkId) {
              return function (payload) {
                  return Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Ctl_Internal_Wallet_Cip30_SignData.signData(Data_Newtype.unwrap()(payKey))(address(networkId))(payload));
              };
          };
          return {
              address: address,
              selectCollateral: selectCollateral,
              signTx: signTx,
              signData: signData,
              paymentKey: payKey,
              stakeKey: mbStakeKey
          };
      };
  };
  exports["PrivatePaymentKey"] = PrivatePaymentKey;
  exports["PrivateStakeKey"] = PrivateStakeKey;
  exports["privateKeysToKeyWallet"] = privateKeysToKeyWallet;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Control.Monad.State.Trans"] = $PS["Control.Monad.State.Trans"] || {};
  var exports = $PS["Control.Monad.State.Trans"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad = $PS["Control.Monad"];
  var Control_Monad_Error_Class = $PS["Control.Monad.Error.Class"];
  var Control_Monad_Reader_Class = $PS["Control.Monad.Reader.Class"];
  var Control_Monad_Trans_Class = $PS["Control.Monad.Trans.Class"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect_Class = $PS["Effect.Class"];                
  var StateT = function (x) {
      return x;
  };
  var runStateT = function (v) {
      return v;
  };
  var monadTransStateT = {
      lift: function (dictMonad) {
          return function (m) {
              return function (s) {
                  return Control_Bind.bind(dictMonad.Bind1())(m)(function (x) {
                      return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Tuple.Tuple(x, s));
                  });
              };
          };
      }
  };
  var mapStateT = function (f) {
      return function (v) {
          return function ($107) {
              return f(v($107));
          };
      };
  };
  var lazyStateT = {
      defer: function (f) {
          return function (s) {
              var v = f(Data_Unit.unit);
              return v(s);
          };
      }
  };
  var functorStateT = function (dictFunctor) {
      return {
          map: function (f) {
              return function (v) {
                  return function (s) {
                      return Data_Functor.map(dictFunctor)(function (v1) {
                          return new Data_Tuple.Tuple(f(v1.value0), v1.value1);
                      })(v(s));
                  };
              };
          }
      };
  };
  var evalStateT = function (dictFunctor) {
      return function (v) {
          return function (s) {
              return Data_Functor.map(dictFunctor)(Data_Tuple.fst)(v(s));
          };
      };
  };
  var monadStateT = function (dictMonad) {
      return {
          Applicative0: function () {
              return applicativeStateT(dictMonad);
          },
          Bind1: function () {
              return bindStateT(dictMonad);
          }
      };
  };
  var bindStateT = function (dictMonad) {
      return {
          bind: function (v) {
              return function (f) {
                  return function (s) {
                      return Control_Bind.bind(dictMonad.Bind1())(v(s))(function (v1) {
                          var v3 = f(v1.value0);
                          return v3(v1.value1);
                      });
                  };
              };
          },
          Apply0: function () {
              return applyStateT(dictMonad);
          }
      };
  };
  var applyStateT = function (dictMonad) {
      return {
          apply: Control_Monad.ap(monadStateT(dictMonad)),
          Functor0: function () {
              return functorStateT(((dictMonad.Bind1()).Apply0()).Functor0());
          }
      };
  };
  var applicativeStateT = function (dictMonad) {
      return {
          pure: function (a) {
              return function (s) {
                  return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Tuple.Tuple(a, s));
              };
          },
          Apply0: function () {
              return applyStateT(dictMonad);
          }
      };
  };
  var monadAskStateT = function (dictMonadAsk) {
      return {
          ask: Control_Monad_Trans_Class.lift(monadTransStateT)(dictMonadAsk.Monad0())(Control_Monad_Reader_Class.ask(dictMonadAsk)),
          Monad0: function () {
              return monadStateT(dictMonadAsk.Monad0());
          }
      };
  };
  var monadEffectState = function (dictMonadEffect) {
      return {
          liftEffect: (function () {
              var $110 = Control_Monad_Trans_Class.lift(monadTransStateT)(dictMonadEffect.Monad0());
              var $111 = Effect_Class.liftEffect(dictMonadEffect);
              return function ($112) {
                  return $110($111($112));
              };
          })(),
          Monad0: function () {
              return monadStateT(dictMonadEffect.Monad0());
          }
      };
  };
  var monadStateStateT = function (dictMonad) {
      return {
          state: function (f) {
              var $113 = Control_Applicative.pure(dictMonad.Applicative0());
              return function ($114) {
                  return $113(f($114));
              };
          },
          Monad0: function () {
              return monadStateT(dictMonad);
          }
      };
  };
  var monadThrowStateT = function (dictMonadThrow) {
      return {
          throwError: function (e) {
              return Control_Monad_Trans_Class.lift(monadTransStateT)(dictMonadThrow.Monad0())(Control_Monad_Error_Class.throwError(dictMonadThrow)(e));
          },
          Monad0: function () {
              return monadStateT(dictMonadThrow.Monad0());
          }
      };
  };
  var monadErrorStateT = function (dictMonadError) {
      return {
          catchError: function (v) {
              return function (h) {
                  return function (s) {
                      return Control_Monad_Error_Class.catchError(dictMonadError)(v(s))(function (e) {
                          var v1 = h(e);
                          return v1(s);
                      });
                  };
              };
          },
          MonadThrow0: function () {
              return monadThrowStateT(dictMonadError.MonadThrow0());
          }
      };
  };
  exports["StateT"] = StateT;
  exports["runStateT"] = runStateT;
  exports["evalStateT"] = evalStateT;
  exports["mapStateT"] = mapStateT;
  exports["functorStateT"] = functorStateT;
  exports["applyStateT"] = applyStateT;
  exports["applicativeStateT"] = applicativeStateT;
  exports["bindStateT"] = bindStateT;
  exports["monadStateT"] = monadStateT;
  exports["monadTransStateT"] = monadTransStateT;
  exports["lazyStateT"] = lazyStateT;
  exports["monadEffectState"] = monadEffectState;
  exports["monadThrowStateT"] = monadThrowStateT;
  exports["monadErrorStateT"] = monadErrorStateT;
  exports["monadAskStateT"] = monadAskStateT;
  exports["monadStateStateT"] = monadStateStateT;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Effect.Aff.Class"] = $PS["Effect.Aff.Class"] || {};
  var exports = $PS["Effect.Aff.Class"];
  var Control_Category = $PS["Control.Category"];
  var Control_Monad_Reader_Trans = $PS["Control.Monad.Reader.Trans"];
  var Control_Monad_State_Trans = $PS["Control.Monad.State.Trans"];
  var Control_Monad_Trans_Class = $PS["Control.Monad.Trans.Class"];
  var Effect_Aff = $PS["Effect.Aff"];                
  var monadAffAff = {
      liftAff: Control_Category.identity(Control_Category.categoryFn),
      MonadEffect0: function () {
          return Effect_Aff.monadEffectAff;
      }
  };
  var liftAff = function (dict) {
      return dict.liftAff;
  };
  var monadAffReader = function (dictMonadAff) {
      return {
          liftAff: (function () {
              var $26 = Control_Monad_Trans_Class.lift(Control_Monad_Reader_Trans.monadTransReaderT)((dictMonadAff.MonadEffect0()).Monad0());
              var $27 = liftAff(dictMonadAff);
              return function ($28) {
                  return $26($27($28));
              };
          })(),
          MonadEffect0: function () {
              return Control_Monad_Reader_Trans.monadEffectReader(dictMonadAff.MonadEffect0());
          }
      };
  };
  var monadAffState = function (dictMonadAff) {
      return {
          liftAff: (function () {
              var $29 = Control_Monad_Trans_Class.lift(Control_Monad_State_Trans.monadTransStateT)((dictMonadAff.MonadEffect0()).Monad0());
              var $30 = liftAff(dictMonadAff);
              return function ($31) {
                  return $29($30($31));
              };
          })(),
          MonadEffect0: function () {
              return Control_Monad_State_Trans.monadEffectState(dictMonadAff.MonadEffect0());
          }
      };
  };
  exports["liftAff"] = liftAff;
  exports["monadAffAff"] = monadAffAff;
  exports["monadAffReader"] = monadAffReader;
  exports["monadAffState"] = monadAffState;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Ctl.Internal.Wallet"] = $PS["Ctl.Internal.Wallet"] || {};
  var exports = $PS["Ctl.Internal.Wallet"];
  var $foreign = $PS["Ctl.Internal.Wallet"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_Error_Class = $PS["Control.Monad.Error.Class"];
  var Ctl_Internal_Types_Natural = $PS["Ctl.Internal.Types.Natural"];
  var Ctl_Internal_Wallet_Cip30 = $PS["Ctl.Internal.Wallet.Cip30"];
  var Ctl_Internal_Wallet_Key = $PS["Ctl.Internal.Wallet.Key"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Int = $PS["Data.Int"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Semiring = $PS["Data.Semiring"];
  var Data_Show = $PS["Data.Show"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect_Aff = $PS["Effect.Aff"];
  var Effect_Aff_Class = $PS["Effect.Aff.Class"];
  var Effect_Class = $PS["Effect.Class"];
  var Effect_Exception = $PS["Effect.Exception"];                
  var NamiWallet = (function () {
      function NamiWallet() {

      };
      NamiWallet.value = new NamiWallet();
      return NamiWallet;
  })();
  var GeroWallet = (function () {
      function GeroWallet() {

      };
      GeroWallet.value = new GeroWallet();
      return GeroWallet;
  })();
  var FlintWallet = (function () {
      function FlintWallet() {

      };
      FlintWallet.value = new FlintWallet();
      return FlintWallet;
  })();
  var EternlWallet = (function () {
      function EternlWallet() {

      };
      EternlWallet.value = new EternlWallet();
      return EternlWallet;
  })();
  var LodeWallet = (function () {
      function LodeWallet() {

      };
      LodeWallet.value = new LodeWallet();
      return LodeWallet;
  })();
  var NuFiWallet = (function () {
      function NuFiWallet() {

      };
      NuFiWallet.value = new NuFiWallet();
      return NuFiWallet;
  })();
  var Nami = (function () {
      function Nami(value0) {
          this.value0 = value0;
      };
      Nami.create = function (value0) {
          return new Nami(value0);
      };
      return Nami;
  })();
  var Gero = (function () {
      function Gero(value0) {
          this.value0 = value0;
      };
      Gero.create = function (value0) {
          return new Gero(value0);
      };
      return Gero;
  })();
  var Flint = (function () {
      function Flint(value0) {
          this.value0 = value0;
      };
      Flint.create = function (value0) {
          return new Flint(value0);
      };
      return Flint;
  })();
  var Eternl = (function () {
      function Eternl(value0) {
          this.value0 = value0;
      };
      Eternl.create = function (value0) {
          return new Eternl(value0);
      };
      return Eternl;
  })();
  var Lode = (function () {
      function Lode(value0) {
          this.value0 = value0;
      };
      Lode.create = function (value0) {
          return new Lode(value0);
      };
      return Lode;
  })();
  var NuFi = (function () {
      function NuFi(value0) {
          this.value0 = value0;
      };
      NuFi.create = function (value0) {
          return new NuFi(value0);
      };
      return NuFi;
  })();
  var KeyWallet = (function () {
      function KeyWallet(value0) {
          this.value0 = value0;
      };
      KeyWallet.create = function (value0) {
          return new KeyWallet(value0);
      };
      return KeyWallet;
  })();
  var walletExtensionToName = function (v) {
      if (v instanceof NamiWallet) {
          return "nami";
      };
      if (v instanceof GeroWallet) {
          return "gerowallet";
      };
      if (v instanceof FlintWallet) {
          return "flint";
      };
      if (v instanceof EternlWallet) {
          return "eternl";
      };
      if (v instanceof LodeWallet) {
          return "LodeWallet";
      };
      if (v instanceof NuFiWallet) {
          return "nufi";
      };
      throw new Error("Failed pattern match at Ctl.Internal.Wallet (line 230, column 25 - line 236, column 23): " + [ v.constructor.name ]);
  };
  var name = (function () {
      var $39 = Effect_Class.liftEffect(Effect_Aff.monadEffectAff);
      return function ($40) {
          return $39($foreign["_name"](walletExtensionToName($40)));
      };
  })();
  var mkKeyWallet = function (payKey) {
      return function (mbStakeKey) {
          return new KeyWallet(Ctl_Internal_Wallet_Key.privateKeysToKeyWallet(payKey)(mbStakeKey));
      };
  };
  var isWalletAvailable = function ($41) {
      return $foreign["_isWalletAvailable"](walletExtensionToName($41));
  };
  var cip30Wallet = function (v) {
      if (v instanceof Nami) {
          return new Data_Maybe.Just(v.value0);
      };
      if (v instanceof Gero) {
          return new Data_Maybe.Just(v.value0);
      };
      if (v instanceof Flint) {
          return new Data_Maybe.Just(v.value0);
      };
      if (v instanceof Eternl) {
          return new Data_Maybe.Just(v.value0);
      };
      if (v instanceof Lode) {
          return new Data_Maybe.Just(v.value0);
      };
      if (v instanceof NuFi) {
          return new Data_Maybe.Just(v.value0);
      };
      if (v instanceof KeyWallet) {
          return Data_Maybe.Nothing.value;
      };
      throw new Error("Failed pattern match at Ctl.Internal.Wallet (line 220, column 15 - line 227, column 25): " + [ v.constructor.name ]);
  };
  var callCip30Wallet = function (wallet) {
      return function (act) {
          return act(wallet)(wallet.connection);
      };
  };   
  var actionBasedOnWallet = function (dictMonadAff) {
      return function (walletAction) {
          return function (keyWalletAction) {
              return function (v) {
                  if (v instanceof Eternl) {
                      return Effect_Aff_Class.liftAff(dictMonadAff)(callCip30Wallet(v.value0)(walletAction));
                  };
                  if (v instanceof Nami) {
                      return Effect_Aff_Class.liftAff(dictMonadAff)(callCip30Wallet(v.value0)(walletAction));
                  };
                  if (v instanceof Gero) {
                      return Effect_Aff_Class.liftAff(dictMonadAff)(callCip30Wallet(v.value0)(walletAction));
                  };
                  if (v instanceof Flint) {
                      return Effect_Aff_Class.liftAff(dictMonadAff)(callCip30Wallet(v.value0)(walletAction));
                  };
                  if (v instanceof Lode) {
                      return Effect_Aff_Class.liftAff(dictMonadAff)(callCip30Wallet(v.value0)(walletAction));
                  };
                  if (v instanceof NuFi) {
                      return Effect_Aff_Class.liftAff(dictMonadAff)(callCip30Wallet(v.value0)(walletAction));
                  };
                  if (v instanceof KeyWallet) {
                      return keyWalletAction(v.value0);
                  };
                  throw new Error("Failed pattern match at Ctl.Internal.Wallet (line 296, column 3 - line 303, column 39): " + [ v.constructor.name ]);
              };
          };
      };
  };
  var _mkLodeWalletAff = (function () {
      var retryNWithIntervalUntil = function (n) {
          return function (ms) {
              return function (mBool) {
                  var $36 = Data_Eq.eq(Ctl_Internal_Types_Natural.eqNatural)(n)(Data_Semiring.zero(Ctl_Internal_Types_Natural.semiringNatural));
                  if ($36) {
                      return Control_Applicative.pure(Effect_Aff.applicativeAff)(Data_Unit.unit);
                  };
                  return Control_Bind.bind(Effect_Aff.bindAff)(mBool)(function (v) {
                      if (v) {
                          return Control_Applicative.pure(Effect_Aff.applicativeAff)(Data_Unit.unit);
                      };
                      return Control_Apply.applySecond(Effect_Aff.applyAff)(Effect_Aff.delay(Data_Newtype.wrap()(ms)))(retryNWithIntervalUntil(Ctl_Internal_Types_Natural.minus(n)(Data_Semiring.one(Ctl_Internal_Types_Natural.semiringNatural)))(ms)(mBool));
                  });
              };
          };
      };
      return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(retryNWithIntervalUntil(Ctl_Internal_Types_Natural["fromInt'"](10))(Data_Int.toNumber(100))(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(isWalletAvailable(LodeWallet.value))))(function () {
          return Control_Monad_Error_Class.catchError(Effect_Aff.monadErrorAff)(Data_Functor.map(Effect_Aff.functorAff)(Lode.create)(Ctl_Internal_Wallet_Cip30.mkCip30WalletAff("Lode")($foreign["_enableWallet"]("LodeWallet"))))(function (e) {
              return Control_Monad_Error_Class.throwError(Effect_Aff.monadThrowAff)(Effect_Exception.error(Data_Show.show(Effect_Exception.showError)(e) + " Note: LodeWallet is injected asynchronously and may be unreliable."));
          });
      });
  })();
  var mkWalletAff = function (walletExtension) {
      var walletName = walletExtensionToName(walletExtension);
      if (walletExtension instanceof NamiWallet) {
          return Data_Functor.map(Effect_Aff.functorAff)(Nami.create)(Ctl_Internal_Wallet_Cip30.mkCip30WalletAff("Nami")($foreign["_enableWallet"](walletName)));
      };
      if (walletExtension instanceof GeroWallet) {
          return Data_Functor.map(Effect_Aff.functorAff)(Gero.create)(Ctl_Internal_Wallet_Cip30.mkCip30WalletAff("Gero")($foreign["_enableWallet"](walletName)));
      };
      if (walletExtension instanceof EternlWallet) {
          return Data_Functor.map(Effect_Aff.functorAff)(Eternl.create)(Ctl_Internal_Wallet_Cip30.mkCip30WalletAff("Eternl")($foreign["_enableWallet"](walletName)));
      };
      if (walletExtension instanceof FlintWallet) {
          return Data_Functor.map(Effect_Aff.functorAff)(Flint.create)(Ctl_Internal_Wallet_Cip30.mkCip30WalletAff("Flint")($foreign["_enableWallet"](walletName)));
      };
      if (walletExtension instanceof LodeWallet) {
          return _mkLodeWalletAff;
      };
      if (walletExtension instanceof NuFiWallet) {
          return Data_Functor.map(Effect_Aff.functorAff)(NuFi.create)(Ctl_Internal_Wallet_Cip30.mkCip30WalletAff("NuFi")($foreign["_enableWallet"](walletName)));
      };
      throw new Error("Failed pattern match at Ctl.Internal.Wallet (line 106, column 3 - line 114, column 78): " + [ walletExtension.constructor.name ]);
  };
  exports["Gero"] = Gero;
  exports["Nami"] = Nami;
  exports["Flint"] = Flint;
  exports["Lode"] = Lode;
  exports["Eternl"] = Eternl;
  exports["NuFi"] = NuFi;
  exports["KeyWallet"] = KeyWallet;
  exports["NamiWallet"] = NamiWallet;
  exports["LodeWallet"] = LodeWallet;
  exports["GeroWallet"] = GeroWallet;
  exports["FlintWallet"] = FlintWallet;
  exports["EternlWallet"] = EternlWallet;
  exports["NuFiWallet"] = NuFiWallet;
  exports["mkKeyWallet"] = mkKeyWallet;
  exports["mkWalletAff"] = mkWalletAff;
  exports["cip30Wallet"] = cip30Wallet;
  exports["actionBasedOnWallet"] = actionBasedOnWallet;
  exports["callCip30Wallet"] = callCip30Wallet;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Ctl.Internal.Types.Cbor"] = $PS["Ctl.Internal.Types.Cbor"] || {};
  var exports = $PS["Ctl.Internal.Types.Cbor"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_Error_Class = $PS["Control.Monad.Error.Class"];
  var Control_Monad_Except = $PS["Control.Monad.Except"];
  var Control_Monad_Except_Trans = $PS["Control.Monad.Except.Trans"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Control_Monad_State_Trans = $PS["Control.Monad.State.Trans"];
  var Ctl_Internal_Types_ByteArray = $PS["Ctl.Internal.Types.ByteArray"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Identity = $PS["Data.Identity"];
  var Data_Semiring = $PS["Data.Semiring"];
  var Data_UInt = $PS["Data.UInt"];                
  var ByteStringType = (function () {
      function ByteStringType(value0) {
          this.value0 = value0;
      };
      ByteStringType.create = function (value0) {
          return new ByteStringType(value0);
      };
      return ByteStringType;
  })();
  var UnknownType = (function () {
      function UnknownType(value0) {
          this.value0 = value0;
      };
      UnknownType.create = function (value0) {
          return new UnknownType(value0);
      };
      return UnknownType;
  })();
  var UnknownAdditionalInformation = (function () {
      function UnknownAdditionalInformation(value0) {
          this.value0 = value0;
      };
      UnknownAdditionalInformation.create = function (value0) {
          return new UnknownAdditionalInformation(value0);
      };
      return UnknownAdditionalInformation;
  })();
  var ByteArrayTooShort = (function () {
      function ByteArrayTooShort(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      ByteArrayTooShort.create = function (value0) {
          return function (value1) {
              return new ByteArrayTooShort(value0, value1);
          };
      };
      return ByteArrayTooShort;
  })();                                                 
  var takeN$prime = function ($27) {
      return (function (n) {
          return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Control_Monad_Except_Trans.monadExceptT(Data_Identity.monadIdentity)))(Control_Monad_State_Class.get(Control_Monad_State_Trans.monadStateStateT(Control_Monad_Except_Trans.monadExceptT(Data_Identity.monadIdentity))))(function (ba) {
              return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_State_Trans.bindStateT(Control_Monad_Except_Trans.monadExceptT(Data_Identity.monadIdentity)))(Control_Applicative.when(Control_Monad_State_Trans.applicativeStateT(Control_Monad_Except_Trans.monadExceptT(Data_Identity.monadIdentity)))(n > Ctl_Internal_Types_ByteArray.byteLength(ba))(Control_Monad_Error_Class.throwError(Control_Monad_State_Trans.monadThrowStateT(Control_Monad_Except_Trans.monadThrowExceptT(Data_Identity.monadIdentity)))(new ByteArrayTooShort(ba, n))))(function () {
                  return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_State_Trans.bindStateT(Control_Monad_Except_Trans.monadExceptT(Data_Identity.monadIdentity)))(Control_Monad_State_Class.put(Control_Monad_State_Trans.monadStateStateT(Control_Monad_Except_Trans.monadExceptT(Data_Identity.monadIdentity)))(Ctl_Internal_Types_ByteArray.subarray(n)(Ctl_Internal_Types_ByteArray.byteLength(ba))(ba)))(function () {
                      return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Control_Monad_Except_Trans.monadExceptT(Data_Identity.monadIdentity)))(Ctl_Internal_Types_ByteArray.subarray(0)(n)(ba));
                  });
              });
          });
      })(Data_UInt.toInt($27));
  };
  var takeN = function (n) {
      return Data_Functor.map(Control_Monad_State_Trans.functorStateT(Control_Monad_Except_Trans.functorExceptT(Data_Identity.functorIdentity)))((function () {
          var $28 = Data_Functor.map(Data_Functor.functorArray)(Data_UInt.fromInt);
          return function ($29) {
              return $28(Ctl_Internal_Types_ByteArray.byteArrayToIntArray($29));
          };
      })())(takeN$prime(n));
  };
  var runParser = function (parser) {
      return function (v) {
          return Control_Monad_Except.runExcept(Data_Function.flip(Control_Monad_State_Trans.evalStateT(Control_Monad_Except_Trans.functorExceptT(Data_Identity.functorIdentity)))(v)(parser));
      };
  };
  var partitionType = function (u) {
      return {
          majorType: Data_UInt.zshr(u)(Data_UInt.fromInt(5)),
          additionalInformation: Data_UInt.and(u)(Data_UInt.fromInt(31))
      };
  };
  var fromBytes = Data_Foldable.foldl(Data_Foldable.foldableArray)(function (acc) {
      return function (b) {
          return Data_UInt.or(Data_UInt.shl(acc)(Data_UInt.fromInt(8)))(b);
      };
  })(Data_Semiring.zero(Data_UInt.uintSemiring));
  var readType = Data_Functor.map(Control_Monad_State_Trans.functorStateT(Control_Monad_Except_Trans.functorExceptT(Data_Identity.functorIdentity)))(fromBytes)(takeN(Data_Semiring.one(Data_UInt.uintSemiring)));
  var decodeType = function (rawCborType) {
      var v = partitionType(rawCborType);
      var decodeByteStringLength = (function () {
          var v1 = Data_UInt.toInt(v.additionalInformation);
          if (v1 < 24) {
              return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Control_Monad_Except_Trans.monadExceptT(Data_Identity.monadIdentity)))(v.additionalInformation);
          };
          if (v1 === 24) {
              return Data_Functor.mapFlipped(Control_Monad_State_Trans.functorStateT(Control_Monad_Except_Trans.functorExceptT(Data_Identity.functorIdentity)))(takeN(Data_UInt.fromInt(1)))(fromBytes);
          };
          if (v1 === 25) {
              return Data_Functor.mapFlipped(Control_Monad_State_Trans.functorStateT(Control_Monad_Except_Trans.functorExceptT(Data_Identity.functorIdentity)))(takeN(Data_UInt.fromInt(2)))(fromBytes);
          };
          if (v1 === 26) {
              return Data_Functor.mapFlipped(Control_Monad_State_Trans.functorStateT(Control_Monad_Except_Trans.functorExceptT(Data_Identity.functorIdentity)))(takeN(Data_UInt.fromInt(4)))(fromBytes);
          };
          if (v1 === 27) {
              return Data_Functor.mapFlipped(Control_Monad_State_Trans.functorStateT(Control_Monad_Except_Trans.functorExceptT(Data_Identity.functorIdentity)))(takeN(Data_UInt.fromInt(8)))(fromBytes);
          };
          return Control_Monad_Error_Class.throwError(Control_Monad_State_Trans.monadThrowStateT(Control_Monad_Except_Trans.monadThrowExceptT(Data_Identity.monadIdentity)))(new UnknownAdditionalInformation(v.additionalInformation));
      })();
      var v1 = Data_UInt.toInt(v.majorType);
      if (v1 === 2) {
          return Data_Functor.map(Control_Monad_State_Trans.functorStateT(Control_Monad_Except_Trans.functorExceptT(Data_Identity.functorIdentity)))(ByteStringType.create)(decodeByteStringLength);
      };
      return Control_Monad_Error_Class.throwError(Control_Monad_State_Trans.monadThrowStateT(Control_Monad_Except_Trans.monadThrowExceptT(Data_Identity.monadIdentity)))(new UnknownType(v.majorType));
  };
  var cborType = Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Control_Monad_Except_Trans.monadExceptT(Data_Identity.monadIdentity)))(readType)(decodeType);
  var toByteArray = runParser(Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Control_Monad_Except_Trans.monadExceptT(Data_Identity.monadIdentity)))(cborType)(function (v) {
      return takeN$prime(v.value0);
  }));
  exports["toByteArray"] = toByteArray;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Ctl.Internal.Cardano.TextEnvelope"] = $PS["Ctl.Internal.Cardano.TextEnvelope"] || {};
  var exports = $PS["Ctl.Internal.Cardano.TextEnvelope"];
  var Aeson = $PS["Aeson"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Ctl_Internal_Types_ByteArray = $PS["Ctl.Internal.Types.ByteArray"];
  var Ctl_Internal_Types_Cbor = $PS["Ctl.Internal.Types.Cbor"];
  var Ctl_Internal_Types_Scripts = $PS["Ctl.Internal.Types.Scripts"];
  var Data_Either = $PS["Data.Either"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Newtype = $PS["Data.Newtype"];                
  var PlutusScriptV1 = (function () {
      function PlutusScriptV1() {

      };
      PlutusScriptV1.value = new PlutusScriptV1();
      return PlutusScriptV1;
  })();
  var PlutusScriptV2 = (function () {
      function PlutusScriptV2() {

      };
      PlutusScriptV2.value = new PlutusScriptV2();
      return PlutusScriptV2;
  })();
  var PaymentSigningKeyShelleyed25519 = (function () {
      function PaymentSigningKeyShelleyed25519() {

      };
      PaymentSigningKeyShelleyed25519.value = new PaymentSigningKeyShelleyed25519();
      return PaymentSigningKeyShelleyed25519;
  })();
  var StakeSigningKeyShelleyed25519 = (function () {
      function StakeSigningKeyShelleyed25519() {

      };
      StakeSigningKeyShelleyed25519.value = new StakeSigningKeyShelleyed25519();
      return StakeSigningKeyShelleyed25519;
  })();
  var Other = (function () {
      function Other(value0) {
          this.value0 = value0;
      };
      Other.create = function (value0) {
          return new Other(value0);
      };
      return Other;
  })();
  var eqTextEnvelopeType = {
      eq: function (x) {
          return function (y) {
              if (x instanceof PlutusScriptV1 && y instanceof PlutusScriptV1) {
                  return true;
              };
              if (x instanceof PlutusScriptV2 && y instanceof PlutusScriptV2) {
                  return true;
              };
              if (x instanceof PaymentSigningKeyShelleyed25519 && y instanceof PaymentSigningKeyShelleyed25519) {
                  return true;
              };
              if (x instanceof StakeSigningKeyShelleyed25519 && y instanceof StakeSigningKeyShelleyed25519) {
                  return true;
              };
              if (x instanceof Other && y instanceof Other) {
                  return x.value0 === y.value0;
              };
              return false;
          };
      }
  };
  var decodeAesonTextEnvelopeTy = {
      decodeAeson: function (aeson) {
          return Control_Bind.bind(Data_Either.bindEither)(Aeson.decodeAeson(Aeson.decodeAesonString)(aeson))(function (v) {
              if (v === "PlutusScriptV1") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(PlutusScriptV1.value);
              };
              if (v === "PlutusScriptV2") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(PlutusScriptV2.value);
              };
              if (v === "PaymentSigningKeyShelley_ed25519") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(PaymentSigningKeyShelleyed25519.value);
              };
              if (v === "StakeSigningKeyShelley_ed25519") {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(StakeSigningKeyShelleyed25519.value);
              };
              return Control_Applicative.pure(Data_Either.applicativeEither)(new Other(v));
          });
      }
  };
  var plutusScriptFromEnvelope = function (type_) {
      return function (bytesToScript) {
          return function (v) {
              return Control_Bind.discard(Control_Bind.discardUnit)(Data_Maybe.bindMaybe)(Control_Applicative.unless(Data_Maybe.applicativeMaybe)(Data_Eq.eq(eqTextEnvelopeType)(v.type_)(type_))(Data_Maybe.Nothing.value))(function () {
                  return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(bytesToScript(v.bytes));
              });
          };
      };
  };
  var plutusScriptV1FromEnvelope = function (envelope) {
      return plutusScriptFromEnvelope(PlutusScriptV1.value)(Ctl_Internal_Types_Scripts.plutusV1Script)(envelope);
  };
  var decodeCborHexToBytes = function (cborHex) {
      return Control_Bind.bind(Data_Maybe.bindMaybe)(Ctl_Internal_Types_ByteArray.hexToByteArray(cborHex))(function (cborBa) {
          return Data_Either.hush(Ctl_Internal_Types_Cbor.toByteArray(Data_Newtype.wrap()(Data_Newtype.wrap()(cborBa))));
      });
  };
  var decodeTextEnvelope = function (json) {
      return Control_Bind.bind(Data_Maybe.bindMaybe)(Data_Either.hush(Aeson.parseJsonStringToAeson(json)))(function (aeson) {
          return Control_Bind.bind(Data_Maybe.bindMaybe)(Data_Either.hush(Aeson.decodeAeson(Aeson.decodeAesonRecord(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Aeson.decodeAesonString))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Aeson.decodeAesonString))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(decodeAesonTextEnvelopeTy))(Aeson.gDecodeAesonRowNil)({
              reflectSymbol: function () {
                  return "type";
              }
          })()())({
              reflectSymbol: function () {
                  return "description";
              }
          })()())({
              reflectSymbol: function () {
                  return "cborHex";
              }
          })()())())(aeson)))(function (v) {
              return Control_Bind.bind(Data_Maybe.bindMaybe)(decodeCborHexToBytes(v.cborHex))(function (ba) {
                  return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(Data_Newtype.wrap()({
                      type_: v.type,
                      description: v.description,
                      bytes: ba
                  }));
              });
          });
      });
  };
  exports["PaymentSigningKeyShelleyed25519"] = PaymentSigningKeyShelleyed25519;
  exports["StakeSigningKeyShelleyed25519"] = StakeSigningKeyShelleyed25519;
  exports["decodeTextEnvelope"] = decodeTextEnvelope;
  exports["plutusScriptV1FromEnvelope"] = plutusScriptV1FromEnvelope;
  exports["eqTextEnvelopeType"] = eqTextEnvelopeType;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Node.Encoding"] = $PS["Node.Encoding"] || {};
  var exports = $PS["Node.Encoding"];    
  var ASCII = (function () {
      function ASCII() {

      };
      ASCII.value = new ASCII();
      return ASCII;
  })();
  var UTF8 = (function () {
      function UTF8() {

      };
      UTF8.value = new UTF8();
      return UTF8;
  })();
  var UTF16LE = (function () {
      function UTF16LE() {

      };
      UTF16LE.value = new UTF16LE();
      return UTF16LE;
  })();
  var UCS2 = (function () {
      function UCS2() {

      };
      UCS2.value = new UCS2();
      return UCS2;
  })();
  var Base64 = (function () {
      function Base64() {

      };
      Base64.value = new Base64();
      return Base64;
  })();
  var Latin1 = (function () {
      function Latin1() {

      };
      Latin1.value = new Latin1();
      return Latin1;
  })();
  var Binary = (function () {
      function Binary() {

      };
      Binary.value = new Binary();
      return Binary;
  })();
  var Hex = (function () {
      function Hex() {

      };
      Hex.value = new Hex();
      return Hex;
  })();
  var showEncoding = {
      show: function (v) {
          if (v instanceof ASCII) {
              return "ASCII";
          };
          if (v instanceof UTF8) {
              return "UTF8";
          };
          if (v instanceof UTF16LE) {
              return "UTF16LE";
          };
          if (v instanceof UCS2) {
              return "UCS2";
          };
          if (v instanceof Base64) {
              return "Base64";
          };
          if (v instanceof Latin1) {
              return "Latin1";
          };
          if (v instanceof Binary) {
              return "Binary";
          };
          if (v instanceof Hex) {
              return "Hex";
          };
          throw new Error("Failed pattern match at Node.Encoding (line 19, column 1 - line 27, column 23): " + [ v.constructor.name ]);
      }
  };
  exports["UTF8"] = UTF8;
  exports["showEncoding"] = showEncoding;
})(PS);
(function(exports) {
  "use strict";

  exports.unsafeRequireFS = require("fs");
})(PS["Node.FS.Internal"] = PS["Node.FS.Internal"] || {});
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Node.FS.Internal"] = $PS["Node.FS.Internal"] || {};
  var exports = $PS["Node.FS.Internal"];
  var $foreign = $PS["Node.FS.Internal"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];                
  var mkEffect = Unsafe_Coerce.unsafeCoerce;
  exports["mkEffect"] = mkEffect;
  exports["unsafeRequireFS"] = $foreign.unsafeRequireFS;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Node.FS.Sync"] = $PS["Node.FS.Sync"] || {};
  var exports = $PS["Node.FS.Sync"];
  var Data_Show = $PS["Data.Show"];
  var Node_Encoding = $PS["Node.Encoding"];
  var Node_FS_Internal = $PS["Node.FS.Internal"];          
  var fs = Node_FS_Internal.unsafeRequireFS;
  var readTextFile = function (encoding) {
      return function (file) {
          return Node_FS_Internal.mkEffect(function (v) {
              return fs.readFileSync(file, {
                  encoding: Data_Show.show(Node_Encoding.showEncoding)(encoding)
              });
          });
      };
  };
  exports["readTextFile"] = readTextFile;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Ctl.Internal.Wallet.KeyFile"] = $PS["Ctl.Internal.Wallet.KeyFile"] || {};
  var exports = $PS["Ctl.Internal.Wallet.KeyFile"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_Error_Class = $PS["Control.Monad.Error.Class"];
  var Ctl_Internal_Cardano_TextEnvelope = $PS["Ctl.Internal.Cardano.TextEnvelope"];
  var Ctl_Internal_Deserialization_Keys = $PS["Ctl.Internal.Deserialization.Keys"];
  var Ctl_Internal_Helpers = $PS["Ctl.Internal.Helpers"];
  var Ctl_Internal_Wallet_Key = $PS["Ctl.Internal.Wallet.Key"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Show = $PS["Data.Show"];
  var Effect_Aff = $PS["Effect.Aff"];
  var Effect_Class = $PS["Effect.Class"];
  var Effect_Exception = $PS["Effect.Exception"];
  var Node_Encoding = $PS["Node.Encoding"];
  var Node_FS_Sync = $PS["Node.FS.Sync"];
  var keyFromFile = function (filePath) {
      return function (ty) {
          var errorHandler = function (action) {
              return Control_Monad_Error_Class.catchError(Effect_Aff.monadErrorAff)(action)(function (err) {
                  return Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Exception["throw"]("Unable to load key from file: " + (Data_Show.show(Data_Show.showString)(filePath) + (", error: " + Data_Show.show(Effect_Exception.showError)(err)))));
              });
          };
          return errorHandler(Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Node_FS_Sync.readTextFile(Node_Encoding.UTF8.value)(filePath)))(function (fileContents) {
              var errorMsg = Effect_Exception.error("Error while decoding key");
              return Control_Monad_Error_Class.liftMaybe(Effect_Aff.monadThrowAff)(errorMsg)(Control_Bind.bind(Data_Maybe.bindMaybe)(Ctl_Internal_Cardano_TextEnvelope.decodeTextEnvelope(fileContents))(function (v) {
                  return Control_Bind.discard(Control_Bind.discardUnit)(Data_Maybe.bindMaybe)(Control_Applicative.unless(Data_Maybe.applicativeMaybe)(Data_Eq.eq(Ctl_Internal_Cardano_TextEnvelope.eqTextEnvelopeType)(v.type_)(ty))(Data_Maybe.Nothing.value))(function () {
                      return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(v.bytes);
                  });
              }));
          }));
      };
  };
  var privatePaymentKeyFromFile = function (filePath) {
      return Control_Bind.bind(Effect_Aff.bindAff)(keyFromFile(filePath)(Ctl_Internal_Cardano_TextEnvelope.PaymentSigningKeyShelleyed25519.value))(function (bytes) {
          return Ctl_Internal_Helpers.liftM(Effect_Aff.monadErrorAff)(Effect_Exception.error("Unable to decode private payment key"))(Data_Functor.map(Data_Maybe.functorMaybe)(Ctl_Internal_Wallet_Key.PrivatePaymentKey)(Ctl_Internal_Deserialization_Keys.privateKeyFromBytes(Data_Newtype.wrap()(bytes))));
      });
  };
  var privateStakeKeyFromFile = function (filePath) {
      return Control_Bind.bind(Effect_Aff.bindAff)(keyFromFile(filePath)(Ctl_Internal_Cardano_TextEnvelope.StakeSigningKeyShelleyed25519.value))(function (bytes) {
          return Ctl_Internal_Helpers.liftM(Effect_Aff.monadErrorAff)(Effect_Exception.error("Unable to decode private stake key"))(Data_Functor.map(Data_Maybe.functorMaybe)(Ctl_Internal_Wallet_Key.PrivateStakeKey)(Ctl_Internal_Deserialization_Keys.privateKeyFromBytes(Data_Newtype.wrap()(bytes))));
      });
  };
  exports["privatePaymentKeyFromFile"] = privatePaymentKeyFromFile;
  exports["privateStakeKeyFromFile"] = privateStakeKeyFromFile;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Ctl.Internal.Wallet.Spec"] = $PS["Ctl.Internal.Wallet.Spec"] || {};
  var exports = $PS["Ctl.Internal.Wallet.Spec"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Ctl_Internal_Wallet = $PS["Ctl.Internal.Wallet"];
  var Ctl_Internal_Wallet_KeyFile = $PS["Ctl.Internal.Wallet.KeyFile"];
  var Data_Traversable = $PS["Data.Traversable"];
  var Effect_Aff = $PS["Effect.Aff"];                
  var PrivateStakeKeyFile = (function () {
      function PrivateStakeKeyFile(value0) {
          this.value0 = value0;
      };
      PrivateStakeKeyFile.create = function (value0) {
          return new PrivateStakeKeyFile(value0);
      };
      return PrivateStakeKeyFile;
  })();
  var PrivateStakeKeyValue = (function () {
      function PrivateStakeKeyValue(value0) {
          this.value0 = value0;
      };
      PrivateStakeKeyValue.create = function (value0) {
          return new PrivateStakeKeyValue(value0);
      };
      return PrivateStakeKeyValue;
  })();
  var PrivatePaymentKeyFile = (function () {
      function PrivatePaymentKeyFile(value0) {
          this.value0 = value0;
      };
      PrivatePaymentKeyFile.create = function (value0) {
          return new PrivatePaymentKeyFile(value0);
      };
      return PrivatePaymentKeyFile;
  })();
  var PrivatePaymentKeyValue = (function () {
      function PrivatePaymentKeyValue(value0) {
          this.value0 = value0;
      };
      PrivatePaymentKeyValue.create = function (value0) {
          return new PrivatePaymentKeyValue(value0);
      };
      return PrivatePaymentKeyValue;
  })();
  var UseKeys = (function () {
      function UseKeys(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      UseKeys.create = function (value0) {
          return function (value1) {
              return new UseKeys(value0, value1);
          };
      };
      return UseKeys;
  })();
  var ConnectToNami = (function () {
      function ConnectToNami() {

      };
      ConnectToNami.value = new ConnectToNami();
      return ConnectToNami;
  })();
  var ConnectToGero = (function () {
      function ConnectToGero() {

      };
      ConnectToGero.value = new ConnectToGero();
      return ConnectToGero;
  })();
  var ConnectToFlint = (function () {
      function ConnectToFlint() {

      };
      ConnectToFlint.value = new ConnectToFlint();
      return ConnectToFlint;
  })();
  var ConnectToEternl = (function () {
      function ConnectToEternl() {

      };
      ConnectToEternl.value = new ConnectToEternl();
      return ConnectToEternl;
  })();
  var ConnectToLode = (function () {
      function ConnectToLode() {

      };
      ConnectToLode.value = new ConnectToLode();
      return ConnectToLode;
  })();
  var ConnectToNuFi = (function () {
      function ConnectToNuFi() {

      };
      ConnectToNuFi.value = new ConnectToNuFi();
      return ConnectToNuFi;
  })();
  var mkWalletBySpec = function (v) {
      if (v instanceof UseKeys) {
          return Control_Bind.bind(Effect_Aff.bindAff)((function () {
              if (v.value0 instanceof PrivatePaymentKeyFile) {
                  return Ctl_Internal_Wallet_KeyFile.privatePaymentKeyFromFile(v.value0.value0);
              };
              if (v.value0 instanceof PrivatePaymentKeyValue) {
                  return Control_Applicative.pure(Effect_Aff.applicativeAff)(v.value0.value0);
              };
              throw new Error("Failed pattern match at Ctl.Internal.Wallet.Spec (line 62, column 26 - line 65, column 45): " + [ v.value0.constructor.name ]);
          })())(function (privatePaymentKey) {
              return Control_Bind.bind(Effect_Aff.bindAff)(Data_Traversable["for"](Effect_Aff.applicativeAff)(Data_Traversable.traversableMaybe)(v.value1)(function (v1) {
                  if (v1 instanceof PrivateStakeKeyFile) {
                      return Ctl_Internal_Wallet_KeyFile.privateStakeKeyFromFile(v1.value0);
                  };
                  if (v1 instanceof PrivateStakeKeyValue) {
                      return Control_Applicative.pure(Effect_Aff.applicativeAff)(v1.value0);
                  };
                  throw new Error("Failed pattern match at Ctl.Internal.Wallet.Spec (line 66, column 45 - line 68, column 43): " + [ v1.constructor.name ]);
              }))(function (mbPrivateStakeKey) {
                  return Control_Applicative.pure(Effect_Aff.applicativeAff)(Ctl_Internal_Wallet.mkKeyWallet(privatePaymentKey)(mbPrivateStakeKey));
              });
          });
      };
      if (v instanceof ConnectToNami) {
          return Ctl_Internal_Wallet.mkWalletAff(Ctl_Internal_Wallet.NamiWallet.value);
      };
      if (v instanceof ConnectToGero) {
          return Ctl_Internal_Wallet.mkWalletAff(Ctl_Internal_Wallet.GeroWallet.value);
      };
      if (v instanceof ConnectToFlint) {
          return Ctl_Internal_Wallet.mkWalletAff(Ctl_Internal_Wallet.FlintWallet.value);
      };
      if (v instanceof ConnectToEternl) {
          return Ctl_Internal_Wallet.mkWalletAff(Ctl_Internal_Wallet.EternlWallet.value);
      };
      if (v instanceof ConnectToLode) {
          return Ctl_Internal_Wallet.mkWalletAff(Ctl_Internal_Wallet.LodeWallet.value);
      };
      if (v instanceof ConnectToNuFi) {
          return Ctl_Internal_Wallet.mkWalletAff(Ctl_Internal_Wallet.NuFiWallet.value);
      };
      throw new Error("Failed pattern match at Ctl.Internal.Wallet.Spec (line 60, column 18 - line 75, column 42): " + [ v.constructor.name ]);
  };
  exports["ConnectToNami"] = ConnectToNami;
  exports["mkWalletBySpec"] = mkWalletBySpec;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Contract.Config"] = $PS["Contract.Config"] || {};
  var exports = $PS["Contract.Config"];
  var Ctl_Internal_Contract_Hooks = $PS["Ctl.Internal.Contract.Hooks"];
  var Ctl_Internal_Contract_QueryBackend = $PS["Ctl.Internal.Contract.QueryBackend"];
  var Ctl_Internal_Serialization_Address = $PS["Ctl.Internal.Serialization.Address"];
  var Ctl_Internal_ServerConfig = $PS["Ctl.Internal.ServerConfig"];
  var Ctl_Internal_Wallet_Spec = $PS["Ctl.Internal.Wallet.Spec"];
  var Data_Log_Level = $PS["Data.Log.Level"];
  var Data_Maybe = $PS["Data.Maybe"];                
  var testnetConfig = {
      backendParams: Ctl_Internal_Contract_QueryBackend.mkCtlBackendParams({
          ogmiosConfig: Ctl_Internal_ServerConfig.defaultOgmiosWsConfig,
          kupoConfig: Ctl_Internal_ServerConfig.defaultKupoServerConfig
      }),
      networkId: Ctl_Internal_Serialization_Address.TestnetId.value,
      walletSpec: Data_Maybe.Nothing.value,
      logLevel: Data_Log_Level.Trace.value,
      customLogger: Data_Maybe.Nothing.value,
      suppressLogs: false,
      hooks: Ctl_Internal_Contract_Hooks.emptyHooks
  };
  var testnetNamiConfig = {
      backendParams: testnetConfig.backendParams,
      networkId: testnetConfig.networkId,
      logLevel: testnetConfig.logLevel,
      walletSpec: new Data_Maybe.Just(Ctl_Internal_Wallet_Spec.ConnectToNami.value),
      customLogger: testnetConfig.customLogger,
      suppressLogs: testnetConfig.suppressLogs,
      hooks: testnetConfig.hooks
  };
  exports["testnetNamiConfig"] = testnetNamiConfig;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Control.Monad.Logger.Class"] = $PS["Control.Monad.Logger.Class"] || {};
  var exports = $PS["Control.Monad.Logger.Class"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_Except_Trans = $PS["Control.Monad.Except.Trans"];
  var Control_Monad_Reader_Trans = $PS["Control.Monad.Reader.Trans"];
  var Control_Monad_Trans_Class = $PS["Control.Monad.Trans.Class"];
  var Data_JSDate = $PS["Data.JSDate"];
  var Data_Log_Level = $PS["Data.Log.Level"];
  var Effect_Class = $PS["Effect.Class"];                
  var log = function (dict) {
      return dict.log;
  };
  var log$prime = function (dictMonadLogger) {
      return function (level) {
          return function (tags) {
              return function (message) {
                  return Control_Bind.bind(((dictMonadLogger.MonadEffect0()).Monad0()).Bind1())(Effect_Class.liftEffect(dictMonadLogger.MonadEffect0())(Data_JSDate.now))((function () {
                      var $23 = log(dictMonadLogger);
                      return function ($24) {
                          return $23((function (v) {
                              return {
                                  level: level,
                                  message: message,
                                  tags: tags,
                                  timestamp: v
                              };
                          })($24));
                      };
                  })());
              };
          };
      };
  };
  var trace = function (dictMonadLogger) {
      return log$prime(dictMonadLogger)(Data_Log_Level.Trace.value);
  };
  var warn = function (dictMonadLogger) {
      return log$prime(dictMonadLogger)(Data_Log_Level.Warn.value);
  };
  var monadLoggerExceptT = function (dictMonadLogger) {
      return {
          log: (function () {
              var $28 = Control_Monad_Trans_Class.lift(Control_Monad_Except_Trans.monadTransExceptT)((dictMonadLogger.MonadEffect0()).Monad0());
              var $29 = log(dictMonadLogger);
              return function ($30) {
                  return $28($29($30));
              };
          })(),
          MonadEffect0: function () {
              return Control_Monad_Except_Trans.monadEffectExceptT(dictMonadLogger.MonadEffect0());
          }
      };
  };
  var monadLoggerReaderT = function (dictMonadLogger) {
      return {
          log: (function () {
              var $40 = Control_Monad_Trans_Class.lift(Control_Monad_Reader_Trans.monadTransReaderT)((dictMonadLogger.MonadEffect0()).Monad0());
              var $41 = log(dictMonadLogger);
              return function ($42) {
                  return $40($41($42));
              };
          })(),
          MonadEffect0: function () {
              return Control_Monad_Reader_Trans.monadEffectReader(dictMonadLogger.MonadEffect0());
          }
      };
  };
  var info = function (dictMonadLogger) {
      return log$prime(dictMonadLogger)(Data_Log_Level.Info.value);
  };
  var debug = function (dictMonadLogger) {
      return log$prime(dictMonadLogger)(Data_Log_Level.Debug.value);
  };
  exports["log"] = log;
  exports["trace"] = trace;
  exports["debug"] = debug;
  exports["info"] = info;
  exports["warn"] = warn;
  exports["monadLoggerExceptT"] = monadLoggerExceptT;
  exports["monadLoggerReaderT"] = monadLoggerReaderT;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Contract.Log"] = $PS["Contract.Log"] || {};
  var exports = $PS["Contract.Log"];
  var Control_Monad_Logger_Class = $PS["Control.Monad.Logger.Class"];
  var Data_Map_Internal = $PS["Data.Map.Internal"];                
  var logWarn$prime = function (dictMonadLogger) {
      return Control_Monad_Logger_Class.warn(dictMonadLogger)(Data_Map_Internal.empty);
  };
  var logInfo$prime = function (dictMonadLogger) {
      return Control_Monad_Logger_Class.info(dictMonadLogger)(Data_Map_Internal.empty);
  };
  var logDebug$prime = function (dictMonadLogger) {
      return Control_Monad_Logger_Class.debug(dictMonadLogger)(Data_Map_Internal.empty);
  };
  exports["logDebug'"] = logDebug$prime;
  exports["logInfo'"] = logInfo$prime;
  exports["logWarn'"] = logWarn$prime;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Control.Monad.Logger.Trans"] = $PS["Control.Monad.Logger.Trans"] || {};
  var exports = $PS["Control.Monad.Logger.Trans"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad = $PS["Control.Monad"];
  var Control_Monad_Error_Class = $PS["Control.Monad.Error.Class"];
  var Control_Monad_Reader_Class = $PS["Control.Monad.Reader.Class"];
  var Control_Monad_Trans_Class = $PS["Control.Monad.Trans.Class"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Effect_Aff_Class = $PS["Effect.Aff.Class"];
  var Effect_Class = $PS["Effect.Class"];                
  var LoggerT = function (x) {
      return x;
  };
  var runLoggerT = function (v) {
      return v;
  };
  var monadTransLoggerT = {
      lift: function (dictMonad) {
          return function ($33) {
              return LoggerT(Data_Function["const"]($33));
          };
      }
  };
  var mapLoggerT = function (f) {
      return function (v) {
          return function ($34) {
              return f(v($34));
          };
      };
  };
  var functorLoggerT = function (dictFunctor) {
      return {
          map: (function () {
              var $35 = Data_Functor.map(dictFunctor);
              return function ($36) {
                  return mapLoggerT($35($36));
              };
          })()
      };
  };
  var monadLoggerT = function (dictMonad) {
      return {
          Applicative0: function () {
              return applicativeLoggerT(dictMonad);
          },
          Bind1: function () {
              return bindLoggerT(dictMonad);
          }
      };
  };
  var bindLoggerT = function (dictMonad) {
      return {
          bind: function (v) {
              return function (f) {
                  return function (l) {
                      return Control_Bind.bind(dictMonad.Bind1())(v(l))((function () {
                          var $37 = Data_Newtype.unwrap();
                          return function ($38) {
                              return (function (v1) {
                                  return v1(l);
                              })($37(f($38)));
                          };
                      })());
                  };
              };
          },
          Apply0: function () {
              return applyLoggerT(dictMonad);
          }
      };
  };
  var applyLoggerT = function (dictMonad) {
      return {
          apply: Control_Monad.ap(monadLoggerT(dictMonad)),
          Functor0: function () {
              return functorLoggerT(((dictMonad.Bind1()).Apply0()).Functor0());
          }
      };
  };
  var applicativeLoggerT = function (dictMonad) {
      return {
          pure: (function () {
              var $39 = Control_Applicative.pure(dictMonad.Applicative0());
              return function ($40) {
                  return LoggerT(Data_Function["const"]($39($40)));
              };
          })(),
          Apply0: function () {
              return applyLoggerT(dictMonad);
          }
      };
  };
  var monadAskLoggerT = function (dictMonadAsk) {
      return {
          ask: Control_Monad_Trans_Class.lift(monadTransLoggerT)(dictMonadAsk.Monad0())(Control_Monad_Reader_Class.ask(dictMonadAsk)),
          Monad0: function () {
              return monadLoggerT(dictMonadAsk.Monad0());
          }
      };
  };
  var monadEffectLoggerT = function (dictMonadEffect) {
      return {
          liftEffect: (function () {
              var $43 = Control_Monad_Trans_Class.lift(monadTransLoggerT)(dictMonadEffect.Monad0());
              var $44 = Effect_Class.liftEffect(dictMonadEffect);
              return function ($45) {
                  return $43($44($45));
              };
          })(),
          Monad0: function () {
              return monadLoggerT(dictMonadEffect.Monad0());
          }
      };
  };
  var monadAffLoggerT = function (dictMonadAff) {
      return {
          liftAff: (function () {
              var $46 = Control_Monad_Trans_Class.lift(monadTransLoggerT)((dictMonadAff.MonadEffect0()).Monad0());
              var $47 = Effect_Aff_Class.liftAff(dictMonadAff);
              return function ($48) {
                  return $46($47($48));
              };
          })(),
          MonadEffect0: function () {
              return monadEffectLoggerT(dictMonadAff.MonadEffect0());
          }
      };
  };
  var monadLoggerLoggerT = function (dictMonadEffect) {
      return {
          log: function (message) {
              return function (v) {
                  return v(message);
              };
          },
          MonadEffect0: function () {
              return monadEffectLoggerT(dictMonadEffect);
          }
      };
  };
  var monadThrowLoggerT = function (dictMonadThrow) {
      return {
          throwError: (function () {
              var $52 = Control_Monad_Trans_Class.lift(monadTransLoggerT)(dictMonadThrow.Monad0());
              var $53 = Control_Monad_Error_Class.throwError(dictMonadThrow);
              return function ($54) {
                  return $52($53($54));
              };
          })(),
          Monad0: function () {
              return monadLoggerT(dictMonadThrow.Monad0());
          }
      };
  };
  var monadErrorLoggerT = function (dictMonadError) {
      return {
          catchError: function (v) {
              return function (h) {
                  return function (l) {
                      return Control_Monad_Error_Class.catchError(dictMonadError)(v(l))((function () {
                          var $55 = Data_Newtype.unwrap();
                          return function ($56) {
                              return (function (v1) {
                                  return v1(l);
                              })($55(h($56)));
                          };
                      })());
                  };
              };
          },
          MonadThrow0: function () {
              return monadThrowLoggerT(dictMonadError.MonadThrow0());
          }
      };
  };
  exports["runLoggerT"] = runLoggerT;
  exports["functorLoggerT"] = functorLoggerT;
  exports["applyLoggerT"] = applyLoggerT;
  exports["applicativeLoggerT"] = applicativeLoggerT;
  exports["bindLoggerT"] = bindLoggerT;
  exports["monadLoggerT"] = monadLoggerT;
  exports["monadEffectLoggerT"] = monadEffectLoggerT;
  exports["monadAffLoggerT"] = monadAffLoggerT;
  exports["monadAskLoggerT"] = monadAskLoggerT;
  exports["monadLoggerLoggerT"] = monadLoggerLoggerT;
  exports["monadThrowLoggerT"] = monadThrowLoggerT;
  exports["monadErrorLoggerT"] = monadErrorLoggerT;
})(PS);
(function(exports) {
  /* global BROWSER_RUNTIME */

  const ReconnectingWebSocket = require("reconnecting-websocket");

  let OurWebSocket;
  if (typeof BROWSER_RUNTIME == "undefined" || !BROWSER_RUNTIME) {
    OurWebSocket = require("ws");
  } else {
    OurWebSocket = WebSocket;
  }

  class NoPerMessageDeflateWebSocket extends OurWebSocket {
    constructor(url, protocols, options) {
      options = options || {};
      options.perMessageDeflate = false;
      super(url, protocols, options);
    }
  }

  exports._mkWebSocket = logger => url => () => {
    try {
      let ws;
      if (typeof BROWSER_RUNTIME != "undefined" && BROWSER_RUNTIME) {
        ws = new ReconnectingWebSocket.default(url);
      } else {
        ws = new ReconnectingWebSocket(url, [], {
          WebSocket: NoPerMessageDeflateWebSocket,
        });
      }
      ws.finalizers = [];
      logger("Created a new WebSocket")();
      return ws;
    } catch (e) {
      logger("Failed to create a new WebSocket");
      throw e;
    }
  };

  exports._onWsConnect = ws => fn => () => {
    ws.addEventListener("open", fn);
    ws.finalizers.push(() => {
      ws.removeEventListener("open", fn);
    });
  };

  exports._onWsError = ws => fn => () => {
    const listener = function (event) {
      fn(event.toString())();
    };
    ws.addEventListener("error", listener);
    ws.finalizers.push(() => {
      ws.removeEventListener("error", listener);
    });
    return listener;
  };

  exports._removeOnWsError = ws => listener => () =>
    ws.removeEventListener("error", listener);

  exports._onWsMessage = ws => logger => fn => () => {
    const listener = function func(event) {
      const str = event.data;
      logger(`message: ${str}`)();
      fn(str)();
    };
    ws.addEventListener("message", listener);
    ws.finalizers.push(() => {
      ws.removeEventListener("message", listener);
    });
  };

  exports._wsFinalize = ws => () => {
    for (let finalizer of ws.finalizers) {
      /* eslint-disable no-empty */
      try {
        finalizer();
      } catch (_) {}
      /* eslint-enable */
    }
    ws.finalizers = [];
  };

  exports._wsSend = ws => logger => str => () => {
    logger(`sending: ${str}`)();
    ws.send(str);
  };

  exports._wsClose = ws => () => {
    ws.close();
  };
})(PS["Ctl.Internal.JsWebSocket"] = PS["Ctl.Internal.JsWebSocket"] || {});
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Ctl.Internal.JsWebSocket"] = $PS["Ctl.Internal.JsWebSocket"] || {};
  var exports = $PS["Ctl.Internal.JsWebSocket"];
  var $foreign = $PS["Ctl.Internal.JsWebSocket"];
  exports["_mkWebSocket"] = $foreign["_mkWebSocket"];
  exports["_onWsConnect"] = $foreign["_onWsConnect"];
  exports["_onWsError"] = $foreign["_onWsError"];
  exports["_removeOnWsError"] = $foreign["_removeOnWsError"];
  exports["_onWsMessage"] = $foreign["_onWsMessage"];
  exports["_wsSend"] = $foreign["_wsSend"];
  exports["_wsClose"] = $foreign["_wsClose"];
  exports["_wsFinalize"] = $foreign["_wsFinalize"];
})(PS);
(function(exports) {
  "use strict";

  exports.new = function (val) {
    return function () {
      return { value: val };
    };
  };

  exports.read = function (ref) {
    return function () {
      return ref.value;
    };
  };

  exports.modifyImpl = function (f) {
    return function (ref) {
      return function () {
        var t = f(ref.value);
        ref.value = t.state;
        return t.value;
      };
    };
  };

  exports.write = function (val) {
    return function (ref) {
      return function () {
        ref.value = val;
      };
    };
  };
})(PS["Effect.Ref"] = PS["Effect.Ref"] || {});
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Effect.Ref"] = $PS["Effect.Ref"] || {};
  var exports = $PS["Effect.Ref"];
  var $foreign = $PS["Effect.Ref"];
  var Data_Functor = $PS["Data.Functor"];
  var Effect = $PS["Effect"];                
  var modify$prime = $foreign.modifyImpl;
  var modify = function (f) {
      return modify$prime(function (s) {
          var s$prime = f(s);
          return {
              state: s$prime,
              value: s$prime
          };
      });
  };
  var modify_ = function (f) {
      return function (s) {
          return Data_Functor["void"](Effect.functorEffect)(modify(f)(s));
      };
  };
  exports["modify_"] = modify_;
  exports["new"] = $foreign["new"];
  exports["read"] = $foreign.read;
  exports["write"] = $foreign.write;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Ctl.Internal.Logging"] = $PS["Ctl.Internal.Logging"] || {};
  var exports = $PS["Ctl.Internal.Logging"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Ctl_Internal_Helpers = $PS["Ctl.Internal.Helpers"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_JSDate = $PS["Data.JSDate"];
  var Data_List = $PS["Data.List"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Log_Level = $PS["Data.Log.Level"];
  var Data_Map_Internal = $PS["Data.Map.Internal"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Effect = $PS["Effect"];
  var Effect_Aff = $PS["Effect.Aff"];
  var Effect_Class = $PS["Effect.Class"];
  var Effect_Ref = $PS["Effect.Ref"];                
  var mkLogger = function (logLevel) {
      return function (mbCustomLogger) {
          return function (level) {
              return function (message) {
                  if (mbCustomLogger instanceof Data_Maybe.Nothing) {
                      return Ctl_Internal_Helpers.logString(logLevel)(level)(message);
                  };
                  if (mbCustomLogger instanceof Data_Maybe.Just) {
                      return Effect_Class.liftEffect(Effect_Class.monadEffectEffect)(function __do() {
                          var timestamp = Data_JSDate.now();
                          return Effect_Aff.launchAff_(mbCustomLogger.value0(logLevel)({
                              level: level,
                              message: message,
                              tags: Data_Map_Internal.empty,
                              timestamp: timestamp
                          }))();
                      });
                  };
                  throw new Error("Failed pattern match at Ctl.Internal.Logging (line 30, column 3 - line 35, column 55): " + [ mbCustomLogger.constructor.name ]);
              };
          };
      };
  };
  var setupLogs = function (logLevel) {
      return function (customLogger) {
          return function __do() {
              var logsRef = Effect_Class.liftEffect(Effect_Class.monadEffectEffect)(Effect_Ref["new"](Data_List_Types.Nil.value))();
              var logger = mkLogger(logLevel)(customLogger);
              var clearLogs = Effect_Ref.write(Data_List_Types.Nil.value)(logsRef);
              var printLogs = function __do() {
                  var logs = Data_Functor.map(Effect.functorEffect)(Data_List.reverse)(Effect_Ref.read(logsRef))();
                  clearLogs();
                  return Data_Foldable.for_(Effect.applicativeEffect)(Data_List_Types.foldableList)(logs)(function (logEntry) {
                      return logger(logEntry.level)(logEntry.message);
                  })();
              };
              var addLogEntry = function (lgl) {
                  return function (msg) {
                      return Control_Applicative.when(Effect.applicativeEffect)(Data_Ord.greaterThanOrEq(Data_Log_Level.ordLogLevel)(msg.level)(lgl))(Effect_Ref.modify_(Data_List_Types.Cons.create(msg))(logsRef));
                  };
              };
              var suppressedLogger = mkLogger(logLevel)(new Data_Maybe.Just((function () {
                  var $2 = Data_Functor.map(Data_Functor.functorFn)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff));
                  return function ($3) {
                      return $2(addLogEntry($3));
                  };
              })()));
              return {
                  addLogEntry: addLogEntry,
                  logger: logger,
                  printLogs: printLogs,
                  clearLogs: clearLogs,
                  suppressedLogger: suppressedLogger
              };
          };
      };
  };
  exports["setupLogs"] = setupLogs;
  exports["mkLogger"] = mkLogger;
})(PS);
(function(exports) {
  const uniqid = require("uniqid");

  exports.uniqueId = str => () => uniqid(str);
})(PS["Ctl.Internal.QueryM.UniqueId"] = PS["Ctl.Internal.QueryM.UniqueId"] || {});
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Ctl.Internal.QueryM.UniqueId"] = $PS["Ctl.Internal.QueryM.UniqueId"] || {};
  var exports = $PS["Ctl.Internal.QueryM.UniqueId"];
  var $foreign = $PS["Ctl.Internal.QueryM.UniqueId"];
  exports["uniqueId"] = $foreign.uniqueId;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Ctl.Internal.QueryM.JsonWsp"] = $PS["Ctl.Internal.QueryM.JsonWsp"] || {};
  var exports = $PS["Ctl.Internal.QueryM.JsonWsp"];
  var Aeson = $PS["Aeson"];
  var Ctl_Internal_QueryM_UniqueId = $PS["Ctl.Internal.QueryM.UniqueId"];
  var Data_Argonaut_Decode_Error = $PS["Data.Argonaut.Decode.Error"];
  var Data_Either = $PS["Data.Either"];
  var Data_Function = $PS["Data.Function"];
  var Record = $PS["Record"];
  var mkJsonWspRequest = function (service) {
      return function (method) {
          return function __do() {
              var id = Ctl_Internal_QueryM_UniqueId.uniqueId(method.methodname + "-")();
              return Record.merge()()({
                  mirror: id
              })(Record.merge()()(service)(method));
          };
      };
  };
  var mkCallType = function (dictEncodeAeson) {
      return function (service) {
          return function (v) {
              return function (i) {
                  return function __do() {
                      var req = mkJsonWspRequest(service)({
                          methodname: v.methodname,
                          args: v.args(i)
                      })();
                      return {
                          body: Aeson.encodeAeson(dictEncodeAeson)(req),
                          id: req.mirror
                      };
                  };
              };
          };
      };
  };
  var buildRequest = function (v) {
      return v;
  };
  var aesonObject = Aeson.caseAesonObject(new Data_Either.Left(new Data_Argonaut_Decode_Error.TypeMismatch("expected object")));
  var parseJsonWspResponseId = aesonObject(Data_Function.flip(Aeson.getField(Aeson.decodeAesonString))("reflection"));
  exports["mkCallType"] = mkCallType;
  exports["buildRequest"] = buildRequest;
  exports["parseJsonWspResponseId"] = parseJsonWspResponseId;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Ctl.Internal.QueryM.Dispatcher"] = $PS["Ctl.Internal.QueryM.Dispatcher"] || {};
  var exports = $PS["Ctl.Internal.QueryM.Dispatcher"];
  var Aeson = $PS["Aeson"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Ctl_Internal_QueryM_JsonWsp = $PS["Ctl.Internal.QueryM.JsonWsp"];
  var Data_Argonaut_Decode_Error = $PS["Data.Argonaut.Decode.Error"];
  var Data_Either = $PS["Data.Either"];
  var Data_Map_Internal = $PS["Data.Map.Internal"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Show = $PS["Data.Show"];
  var Effect = $PS["Effect"];
  var Effect_Exception = $PS["Effect.Exception"];
  var Effect_Ref = $PS["Effect.Ref"];                
  var JsError = (function () {
      function JsError(value0) {
          this.value0 = value0;
      };
      JsError.create = function (value0) {
          return new JsError(value0);
      };
      return JsError;
  })();
  var JsonError = (function () {
      function JsonError(value0) {
          this.value0 = value0;
      };
      JsonError.create = function (value0) {
          return new JsonError(value0);
      };
      return JsonError;
  })();
  var FaultError = (function () {
      function FaultError(value0) {
          this.value0 = value0;
      };
      FaultError.create = function (value0) {
          return new FaultError(value0);
      };
      return FaultError;
  })();
  var ListenerCancelled = (function () {
      function ListenerCancelled(value0) {
          this.value0 = value0;
      };
      ListenerCancelled.create = function (value0) {
          return new ListenerCancelled(value0);
      };
      return ListenerCancelled;
  })();
  var showDispatchError = {
      show: function (v) {
          if (v instanceof JsError) {
              return "(JsError (message " + (Data_Show.show(Data_Show.showString)(Effect_Exception.message(v.value0)) + "))");
          };
          if (v instanceof JsonError) {
              return "(JsonError " + (Data_Show.show(Data_Argonaut_Decode_Error.showJsonDecodeError)(v.value0) + ")");
          };
          if (v instanceof FaultError) {
              return "(FaultError " + (Data_Show.show(Aeson.showAeson)(v.value0) + ")");
          };
          if (v instanceof ListenerCancelled) {
              return "(ListenerCancelled " + (Data_Show.show(Data_Show.showString)(v.value0) + ")");
          };
          throw new Error("Failed pattern match at Ctl.Internal.QueryM.Dispatcher (line 40, column 1 - line 45, column 52): " + [ v.constructor.name ]);
      }
  };
  var newPendingRequests = Effect_Ref["new"](Data_Map_Internal.empty);
  var newDispatcher = Effect_Ref["new"](Data_Map_Internal.empty);
  var mkWebsocketDispatch = function (dispatcher) {
      return function (aeson) {
          var v = Ctl_Internal_QueryM_JsonWsp.parseJsonWspResponseId(aeson);
          if (v instanceof Data_Either.Left) {
              return Control_Applicative.pure(Effect.applicativeEffect)(new Data_Either.Left(new JsonError(v.value0)));
          };
          if (v instanceof Data_Either.Right) {
              return function __do() {
                  var idMap = Effect_Ref.read(dispatcher)();
                  var mbAction = Data_Map_Internal.lookup(Data_Ord.ordString)(v.value0)(idMap);
                  if (mbAction instanceof Data_Maybe.Nothing) {
                      return new Data_Either.Left(new ListenerCancelled(v.value0));
                  };
                  if (mbAction instanceof Data_Maybe.Just) {
                      return new Data_Either.Right(mbAction.value0(aeson));
                  };
                  throw new Error("Failed pattern match at Ctl.Internal.QueryM.Dispatcher (line 76, column 7 - line 78, column 51): " + [ mbAction.constructor.name ]);
              };
          };
          throw new Error("Failed pattern match at Ctl.Internal.QueryM.Dispatcher (line 67, column 3 - line 78, column 51): " + [ v.constructor.name ]);
      };
  };
  var dispatchErrorToError = function (v) {
      if (v instanceof JsError) {
          return v.value0;
      };
      if (v instanceof JsonError) {
          return Effect_Exception.error(Data_Show.show(Data_Argonaut_Decode_Error.showJsonDecodeError)(v.value0));
      };
      if (v instanceof FaultError) {
          return Effect_Exception.error("Server responded with `fault`: " + Aeson.stringifyAeson(v.value0));
      };
      if (v instanceof ListenerCancelled) {
          return Effect_Exception.error("Listener cancelled (" + (v.value0 + ")"));
      };
      throw new Error("Failed pattern match at Ctl.Internal.QueryM.Dispatcher (line 47, column 1 - line 47, column 47): " + [ v.constructor.name ]);
  };
  exports["JsonError"] = JsonError;
  exports["FaultError"] = FaultError;
  exports["ListenerCancelled"] = ListenerCancelled;
  exports["dispatchErrorToError"] = dispatchErrorToError;
  exports["mkWebsocketDispatch"] = mkWebsocketDispatch;
  exports["newDispatcher"] = newDispatcher;
  exports["newPendingRequests"] = newPendingRequests;
  exports["showDispatchError"] = showDispatchError;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Ctl.Internal.Service.Helpers"] = $PS["Ctl.Internal.Service.Helpers"] || {};
  var exports = $PS["Ctl.Internal.Service.Helpers"];
  var Aeson = $PS["Aeson"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Ctl_Internal_Cardano_Types_Value = $PS["Ctl.Internal.Cardano.Types.Value"];
  var Ctl_Internal_Types_ByteArray = $PS["Ctl.Internal.Types.ByteArray"];
  var Ctl_Internal_Types_TokenName = $PS["Ctl.Internal.Types.TokenName"];
  var Data_Argonaut_Decode_Error = $PS["Data.Argonaut.Decode.Error"];
  var Data_Either = $PS["Data.Either"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Tuple = $PS["Data.Tuple"];                
  var decodeAssetClass = function (assetString) {
      return function (csString) {
          return function (tnString) {
              var assetStringTypeMismatch = function (t) {
                  return function (actual) {
                      return new Data_Argonaut_Decode_Error.TypeMismatch("In " + (assetString + (": Expected hex-encoded " + t)) + (", got: " + actual));
                  };
              };
              return Control_Apply.lift2(Data_Either.applyEither)(Data_Tuple.Tuple.create)(Data_Either.note(assetStringTypeMismatch("CurrencySymbol")(csString))(Control_Bind.bindFlipped(Data_Maybe.bindMaybe)(Ctl_Internal_Cardano_Types_Value.mkCurrencySymbol)(Ctl_Internal_Types_ByteArray.hexToByteArray(csString))))(Data_Either.note(assetStringTypeMismatch("TokenName")(tnString))(Control_Bind.bindFlipped(Data_Maybe.bindMaybe)(Ctl_Internal_Types_TokenName.mkTokenName)(Ctl_Internal_Types_ByteArray.hexToByteArray(tnString))));
          };
      };
  };
  var aesonString = Aeson.caseAesonString(new Data_Either.Left(new Data_Argonaut_Decode_Error.TypeMismatch("String")));
  var aesonObject = Aeson.caseAesonObject(new Data_Either.Left(new Data_Argonaut_Decode_Error.TypeMismatch("Object")));
  var aesonArray = Aeson.caseAesonArray(new Data_Either.Left(new Data_Argonaut_Decode_Error.TypeMismatch("Array")));
  exports["aesonArray"] = aesonArray;
  exports["aesonString"] = aesonString;
  exports["aesonObject"] = aesonObject;
  exports["decodeAssetClass"] = decodeAssetClass;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Ctl.Internal.Types.Epoch"] = $PS["Ctl.Internal.Types.Epoch"] || {};
  var exports = $PS["Ctl.Internal.Types.Epoch"];
  var Aeson = $PS["Aeson"];                      
  var decodeAesonEpoch = Aeson.decodeAesonBigInt;
  exports["decodeAesonEpoch"] = decodeAesonEpoch;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Ctl.Internal.Types.EraSummaries"] = $PS["Ctl.Internal.Types.EraSummaries"] || {};
  var exports = $PS["Ctl.Internal.Types.EraSummaries"];
  var Aeson = $PS["Aeson"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Ctl_Internal_Serialization_Address = $PS["Ctl.Internal.Serialization.Address"];
  var Ctl_Internal_Service_Helpers = $PS["Ctl.Internal.Service.Helpers"];
  var Ctl_Internal_Types_Epoch = $PS["Ctl.Internal.Types.Epoch"];
  var Data_BigInt = $PS["Data.BigInt"];
  var Data_Either = $PS["Data.Either"];
  var Data_Newtype = $PS["Data.Newtype"];
  var semiringSafeZone = Data_BigInt.semiringBigInt;  
  var decodeAesonSafeZone = Aeson.decodeAesonBigInt;
  var decodeAesonRelativeTime = Aeson.decodeAesonNumber;
  var decodeAesonEraSummaryTime = {
      decodeAeson: Ctl_Internal_Service_Helpers.aesonObject(function (obj) {
          return Control_Bind.bind(Data_Either.bindEither)(Aeson.getField(decodeAesonRelativeTime)(obj)("time"))(function (time) {
              return Control_Bind.bind(Data_Either.bindEither)(Aeson.getField(Ctl_Internal_Serialization_Address.decodeAesonSlot)(obj)("slot"))(function (slot) {
                  return Control_Bind.bind(Data_Either.bindEither)(Aeson.getField(Ctl_Internal_Types_Epoch.decodeAesonEpoch)(obj)("epoch"))(function (epoch) {
                      return Control_Applicative.pure(Data_Either.applicativeEither)(Data_Newtype.wrap()({
                          time: time,
                          slot: slot,
                          epoch: epoch
                      }));
                  });
              });
          });
      })
  };
  var decodeAesonEpochLength = Aeson.decodeAesonBigInt;
  exports["decodeAesonEraSummaryTime"] = decodeAesonEraSummaryTime;
  exports["decodeAesonEpochLength"] = decodeAesonEpochLength;
  exports["semiringSafeZone"] = semiringSafeZone;
  exports["decodeAesonSafeZone"] = decodeAesonSafeZone;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Data.Ratio"] = $PS["Data.Ratio"] || {};
  var exports = $PS["Data.Ratio"];
  var Data_EuclideanRing = $PS["Data.EuclideanRing"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Semiring = $PS["Data.Semiring"];        
  var Ratio = (function () {
      function Ratio(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Ratio.create = function (value0) {
          return function (value1) {
              return new Ratio(value0, value1);
          };
      };
      return Ratio;
  })();
  var reduce = function (dictOrd) {
      return function (dictEuclideanRing) {
          return function (n) {
              return function (d) {
                  var g = Data_EuclideanRing.gcd(dictOrd.Eq0())(dictEuclideanRing)(n)(d);
                  var d$prime = Data_EuclideanRing.div(dictEuclideanRing)(d)(g);
                  return new Ratio(Data_Semiring.mul(((dictEuclideanRing.CommutativeRing0()).Ring0()).Semiring0())(Data_EuclideanRing.div(dictEuclideanRing)(n)(g))(Data_Ord.signum(dictOrd)((dictEuclideanRing.CommutativeRing0()).Ring0())(d$prime)), Data_Ord.abs(dictOrd)((dictEuclideanRing.CommutativeRing0()).Ring0())(d$prime));
              };
          };
      };
  };
  var semiringRatio = function (dictOrd) {
      return function (dictEuclideanRing) {
          return {
              one: new Ratio(Data_Semiring.one(((dictEuclideanRing.CommutativeRing0()).Ring0()).Semiring0()), Data_Semiring.one(((dictEuclideanRing.CommutativeRing0()).Ring0()).Semiring0())),
              mul: function (v) {
                  return function (v1) {
                      return reduce(dictOrd)(dictEuclideanRing)(Data_Semiring.mul(((dictEuclideanRing.CommutativeRing0()).Ring0()).Semiring0())(v.value0)(v1.value0))(Data_Semiring.mul(((dictEuclideanRing.CommutativeRing0()).Ring0()).Semiring0())(v.value1)(v1.value1));
                  };
              },
              zero: new Ratio(Data_Semiring.zero(((dictEuclideanRing.CommutativeRing0()).Ring0()).Semiring0()), Data_Semiring.one(((dictEuclideanRing.CommutativeRing0()).Ring0()).Semiring0())),
              add: function (v) {
                  return function (v1) {
                      return reduce(dictOrd)(dictEuclideanRing)(Data_Semiring.add(((dictEuclideanRing.CommutativeRing0()).Ring0()).Semiring0())(Data_Semiring.mul(((dictEuclideanRing.CommutativeRing0()).Ring0()).Semiring0())(v.value0)(v1.value1))(Data_Semiring.mul(((dictEuclideanRing.CommutativeRing0()).Ring0()).Semiring0())(v.value1)(v1.value0)))(Data_Semiring.mul(((dictEuclideanRing.CommutativeRing0()).Ring0()).Semiring0())(v.value1)(v1.value1));
                  };
              }
          };
      };
  };
  var numerator = function (v) {
      return v.value0;
  };
  var denominator = function (v) {
      return v.value1;
  };
  exports["reduce"] = reduce;
  exports["numerator"] = numerator;
  exports["denominator"] = denominator;
  exports["semiringRatio"] = semiringRatio;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Ctl.Internal.Types.Rational"] = $PS["Ctl.Internal.Types.Rational"] || {};
  var exports = $PS["Ctl.Internal.Types.Rational"];
  var Data_BigInt = $PS["Data.BigInt"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ratio = $PS["Data.Ratio"];
  var Data_Semiring = $PS["Data.Semiring"];                       
  var semiringRational = Data_Ratio.semiringRatio(Data_BigInt.ordBigInt)(Data_BigInt.euclideanRingBigInt);
  var rationalComponentBigInt = {
      reduce: function (n) {
          return function (d) {
              if (Data_Eq.eq(Data_BigInt.eqBigInt)(d)(Data_Semiring.zero(Data_BigInt.semiringBigInt))) {
                  return Data_Maybe.Nothing.value;
              };
              if (Data_Boolean.otherwise) {
                  return new Data_Maybe.Just(Data_Ratio.reduce(Data_BigInt.ordBigInt)(Data_BigInt.euclideanRingBigInt)(n)(d));
              };
              throw new Error("Failed pattern match at Ctl.Internal.Types.Rational (line 128, column 1 - line 131, column 48): " + [ n.constructor.name, d.constructor.name ]);
          };
      }
  };                                                                                                                    
  var reduce = function (dict) {
      return dict.reduce;
  };
  var numerator = function (v) {
      return Data_Ratio.numerator(v);
  };
  var denominator = function (v) {
      return Data_Ratio.denominator(v);
  };
  exports["reduce"] = reduce;
  exports["numerator"] = numerator;
  exports["denominator"] = denominator;
  exports["semiringRational"] = semiringRational;
  exports["rationalComponentBigInt"] = rationalComponentBigInt;
})(PS);
(function(exports) {
  "use strict";

  var createDateTime = function (y, m, d, h, mi, s, ms) {
    var dateTime = new Date(Date.UTC(y, m, d, h, mi, s, ms));
    if (y >= 0 && y < 100) {
      dateTime.setUTCFullYear(y);
    }
    return dateTime;
  };

  exports.fromDateTimeImpl = function (y, mo, d, h, mi, s, ms) {
    return createDateTime(y, mo - 1, d, h, mi, s, ms).getTime();
  };

  exports.toDateTimeImpl = function (ctor) {
    return function (instant) {
      var dt = new Date(instant);
      return ctor (dt.getUTCFullYear())(dt.getUTCMonth() + 1)(dt.getUTCDate())(dt.getUTCHours())(dt.getUTCMinutes())(dt.getUTCSeconds())(dt.getUTCMilliseconds());
    };
  };
})(PS["Data.DateTime.Instant"] = PS["Data.DateTime.Instant"] || {});
(function(exports) {
  "use strict";

  var createDate = function (y, m, d) {
    var date = new Date(Date.UTC(y, m, d));
    if (y >= 0 && y < 100) {
      date.setUTCFullYear(y);
    }
    return date;
  };

  exports.canonicalDateImpl = function (ctor, y, m, d) {
    var date = createDate(y, m - 1, d);
    return ctor(date.getUTCFullYear())(date.getUTCMonth() + 1)(date.getUTCDate());
  };
})(PS["Data.Date"] = PS["Data.Date"] || {});
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Data.Date.Component"] = $PS["Data.Date.Component"] || {};
  var exports = $PS["Data.Date.Component"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Enum = $PS["Data.Enum"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Ordering = $PS["Data.Ordering"];
  var Monday = (function () {
      function Monday() {

      };
      Monday.value = new Monday();
      return Monday;
  })();
  var Tuesday = (function () {
      function Tuesday() {

      };
      Tuesday.value = new Tuesday();
      return Tuesday;
  })();
  var Wednesday = (function () {
      function Wednesday() {

      };
      Wednesday.value = new Wednesday();
      return Wednesday;
  })();
  var Thursday = (function () {
      function Thursday() {

      };
      Thursday.value = new Thursday();
      return Thursday;
  })();
  var Friday = (function () {
      function Friday() {

      };
      Friday.value = new Friday();
      return Friday;
  })();
  var Saturday = (function () {
      function Saturday() {

      };
      Saturday.value = new Saturday();
      return Saturday;
  })();
  var Sunday = (function () {
      function Sunday() {

      };
      Sunday.value = new Sunday();
      return Sunday;
  })();
  var January = (function () {
      function January() {

      };
      January.value = new January();
      return January;
  })();
  var February = (function () {
      function February() {

      };
      February.value = new February();
      return February;
  })();
  var March = (function () {
      function March() {

      };
      March.value = new March();
      return March;
  })();
  var April = (function () {
      function April() {

      };
      April.value = new April();
      return April;
  })();
  var May = (function () {
      function May() {

      };
      May.value = new May();
      return May;
  })();
  var June = (function () {
      function June() {

      };
      June.value = new June();
      return June;
  })();
  var July = (function () {
      function July() {

      };
      July.value = new July();
      return July;
  })();
  var August = (function () {
      function August() {

      };
      August.value = new August();
      return August;
  })();
  var September = (function () {
      function September() {

      };
      September.value = new September();
      return September;
  })();
  var October = (function () {
      function October() {

      };
      October.value = new October();
      return October;
  })();
  var November = (function () {
      function November() {

      };
      November.value = new November();
      return November;
  })();
  var December = (function () {
      function December() {

      };
      December.value = new December();
      return December;
  })();
  var ordYear = Data_Ord.ordInt;
  var ordDay = Data_Ord.ordInt;
  var eqWeekday = {
      eq: function (x) {
          return function (y) {
              if (x instanceof Monday && y instanceof Monday) {
                  return true;
              };
              if (x instanceof Tuesday && y instanceof Tuesday) {
                  return true;
              };
              if (x instanceof Wednesday && y instanceof Wednesday) {
                  return true;
              };
              if (x instanceof Thursday && y instanceof Thursday) {
                  return true;
              };
              if (x instanceof Friday && y instanceof Friday) {
                  return true;
              };
              if (x instanceof Saturday && y instanceof Saturday) {
                  return true;
              };
              if (x instanceof Sunday && y instanceof Sunday) {
                  return true;
              };
              return false;
          };
      }
  };
  var ordWeekday = {
      compare: function (x) {
          return function (y) {
              if (x instanceof Monday && y instanceof Monday) {
                  return Data_Ordering.EQ.value;
              };
              if (x instanceof Monday) {
                  return Data_Ordering.LT.value;
              };
              if (y instanceof Monday) {
                  return Data_Ordering.GT.value;
              };
              if (x instanceof Tuesday && y instanceof Tuesday) {
                  return Data_Ordering.EQ.value;
              };
              if (x instanceof Tuesday) {
                  return Data_Ordering.LT.value;
              };
              if (y instanceof Tuesday) {
                  return Data_Ordering.GT.value;
              };
              if (x instanceof Wednesday && y instanceof Wednesday) {
                  return Data_Ordering.EQ.value;
              };
              if (x instanceof Wednesday) {
                  return Data_Ordering.LT.value;
              };
              if (y instanceof Wednesday) {
                  return Data_Ordering.GT.value;
              };
              if (x instanceof Thursday && y instanceof Thursday) {
                  return Data_Ordering.EQ.value;
              };
              if (x instanceof Thursday) {
                  return Data_Ordering.LT.value;
              };
              if (y instanceof Thursday) {
                  return Data_Ordering.GT.value;
              };
              if (x instanceof Friday && y instanceof Friday) {
                  return Data_Ordering.EQ.value;
              };
              if (x instanceof Friday) {
                  return Data_Ordering.LT.value;
              };
              if (y instanceof Friday) {
                  return Data_Ordering.GT.value;
              };
              if (x instanceof Saturday && y instanceof Saturday) {
                  return Data_Ordering.EQ.value;
              };
              if (x instanceof Saturday) {
                  return Data_Ordering.LT.value;
              };
              if (y instanceof Saturday) {
                  return Data_Ordering.GT.value;
              };
              if (x instanceof Sunday && y instanceof Sunday) {
                  return Data_Ordering.EQ.value;
              };
              throw new Error("Failed pattern match at Data.Date.Component (line 154, column 1 - line 154, column 42): " + [ x.constructor.name, y.constructor.name ]);
          };
      },
      Eq0: function () {
          return eqWeekday;
      }
  };
  var eqMonth = {
      eq: function (x) {
          return function (y) {
              if (x instanceof January && y instanceof January) {
                  return true;
              };
              if (x instanceof February && y instanceof February) {
                  return true;
              };
              if (x instanceof March && y instanceof March) {
                  return true;
              };
              if (x instanceof April && y instanceof April) {
                  return true;
              };
              if (x instanceof May && y instanceof May) {
                  return true;
              };
              if (x instanceof June && y instanceof June) {
                  return true;
              };
              if (x instanceof July && y instanceof July) {
                  return true;
              };
              if (x instanceof August && y instanceof August) {
                  return true;
              };
              if (x instanceof September && y instanceof September) {
                  return true;
              };
              if (x instanceof October && y instanceof October) {
                  return true;
              };
              if (x instanceof November && y instanceof November) {
                  return true;
              };
              if (x instanceof December && y instanceof December) {
                  return true;
              };
              return false;
          };
      }
  };
  var ordMonth = {
      compare: function (x) {
          return function (y) {
              if (x instanceof January && y instanceof January) {
                  return Data_Ordering.EQ.value;
              };
              if (x instanceof January) {
                  return Data_Ordering.LT.value;
              };
              if (y instanceof January) {
                  return Data_Ordering.GT.value;
              };
              if (x instanceof February && y instanceof February) {
                  return Data_Ordering.EQ.value;
              };
              if (x instanceof February) {
                  return Data_Ordering.LT.value;
              };
              if (y instanceof February) {
                  return Data_Ordering.GT.value;
              };
              if (x instanceof March && y instanceof March) {
                  return Data_Ordering.EQ.value;
              };
              if (x instanceof March) {
                  return Data_Ordering.LT.value;
              };
              if (y instanceof March) {
                  return Data_Ordering.GT.value;
              };
              if (x instanceof April && y instanceof April) {
                  return Data_Ordering.EQ.value;
              };
              if (x instanceof April) {
                  return Data_Ordering.LT.value;
              };
              if (y instanceof April) {
                  return Data_Ordering.GT.value;
              };
              if (x instanceof May && y instanceof May) {
                  return Data_Ordering.EQ.value;
              };
              if (x instanceof May) {
                  return Data_Ordering.LT.value;
              };
              if (y instanceof May) {
                  return Data_Ordering.GT.value;
              };
              if (x instanceof June && y instanceof June) {
                  return Data_Ordering.EQ.value;
              };
              if (x instanceof June) {
                  return Data_Ordering.LT.value;
              };
              if (y instanceof June) {
                  return Data_Ordering.GT.value;
              };
              if (x instanceof July && y instanceof July) {
                  return Data_Ordering.EQ.value;
              };
              if (x instanceof July) {
                  return Data_Ordering.LT.value;
              };
              if (y instanceof July) {
                  return Data_Ordering.GT.value;
              };
              if (x instanceof August && y instanceof August) {
                  return Data_Ordering.EQ.value;
              };
              if (x instanceof August) {
                  return Data_Ordering.LT.value;
              };
              if (y instanceof August) {
                  return Data_Ordering.GT.value;
              };
              if (x instanceof September && y instanceof September) {
                  return Data_Ordering.EQ.value;
              };
              if (x instanceof September) {
                  return Data_Ordering.LT.value;
              };
              if (y instanceof September) {
                  return Data_Ordering.GT.value;
              };
              if (x instanceof October && y instanceof October) {
                  return Data_Ordering.EQ.value;
              };
              if (x instanceof October) {
                  return Data_Ordering.LT.value;
              };
              if (y instanceof October) {
                  return Data_Ordering.GT.value;
              };
              if (x instanceof November && y instanceof November) {
                  return Data_Ordering.EQ.value;
              };
              if (x instanceof November) {
                  return Data_Ordering.LT.value;
              };
              if (y instanceof November) {
                  return Data_Ordering.GT.value;
              };
              if (x instanceof December && y instanceof December) {
                  return Data_Ordering.EQ.value;
              };
              throw new Error("Failed pattern match at Data.Date.Component (line 61, column 1 - line 61, column 38): " + [ x.constructor.name, y.constructor.name ]);
          };
      },
      Eq0: function () {
          return eqMonth;
      }
  };                        
  var boundedYear = {
      bottom: -271820 | 0,
      top: 275759,
      Ord0: function () {
          return ordYear;
      }
  };
  var boundedWeekday = {
      bottom: Monday.value,
      top: Sunday.value,
      Ord0: function () {
          return ordWeekday;
      }
  };
  var boundedMonth = {
      bottom: January.value,
      top: December.value,
      Ord0: function () {
          return ordMonth;
      }
  };
  var boundedEnumYear = {
      cardinality: 547580,
      toEnum: function (n) {
          if (n >= (-271820 | 0) && n <= 275759) {
              return new Data_Maybe.Just(n);
          };
          if (Data_Boolean.otherwise) {
              return Data_Maybe.Nothing.value;
          };
          throw new Error("Failed pattern match at Data.Date.Component (line 35, column 1 - line 40, column 24): " + [ n.constructor.name ]);
      },
      fromEnum: function (v) {
          return v;
      },
      Bounded0: function () {
          return boundedYear;
      },
      Enum1: function () {
          return enumYear;
      }
  };
  var enumYear = {
      succ: (function () {
          var $46 = Data_Enum.toEnum(boundedEnumYear);
          var $47 = Data_Enum.fromEnum(boundedEnumYear);
          return function ($48) {
              return $46((function (v) {
                  return v + 1 | 0;
              })($47($48)));
          };
      })(),
      pred: (function () {
          var $49 = Data_Enum.toEnum(boundedEnumYear);
          var $50 = Data_Enum.fromEnum(boundedEnumYear);
          return function ($51) {
              return $49((function (v) {
                  return v - 1 | 0;
              })($50($51)));
          };
      })(),
      Ord0: function () {
          return ordYear;
      }
  };
  var boundedEnumWeekday = {
      cardinality: 7,
      toEnum: function (v) {
          if (v === 1) {
              return new Data_Maybe.Just(Monday.value);
          };
          if (v === 2) {
              return new Data_Maybe.Just(Tuesday.value);
          };
          if (v === 3) {
              return new Data_Maybe.Just(Wednesday.value);
          };
          if (v === 4) {
              return new Data_Maybe.Just(Thursday.value);
          };
          if (v === 5) {
              return new Data_Maybe.Just(Friday.value);
          };
          if (v === 6) {
              return new Data_Maybe.Just(Saturday.value);
          };
          if (v === 7) {
              return new Data_Maybe.Just(Sunday.value);
          };
          return Data_Maybe.Nothing.value;
      },
      fromEnum: function (v) {
          if (v instanceof Monday) {
              return 1;
          };
          if (v instanceof Tuesday) {
              return 2;
          };
          if (v instanceof Wednesday) {
              return 3;
          };
          if (v instanceof Thursday) {
              return 4;
          };
          if (v instanceof Friday) {
              return 5;
          };
          if (v instanceof Saturday) {
              return 6;
          };
          if (v instanceof Sunday) {
              return 7;
          };
          throw new Error("Failed pattern match at Data.Date.Component (line 175, column 14 - line 182, column 16): " + [ v.constructor.name ]);
      },
      Bounded0: function () {
          return boundedWeekday;
      },
      Enum1: function () {
          return enumWeekday;
      }
  };
  var enumWeekday = {
      succ: (function () {
          var $52 = Data_Enum.toEnum(boundedEnumWeekday);
          var $53 = Data_Enum.fromEnum(boundedEnumWeekday);
          return function ($54) {
              return $52((function (v) {
                  return v + 1 | 0;
              })($53($54)));
          };
      })(),
      pred: (function () {
          var $55 = Data_Enum.toEnum(boundedEnumWeekday);
          var $56 = Data_Enum.fromEnum(boundedEnumWeekday);
          return function ($57) {
              return $55((function (v) {
                  return v - 1 | 0;
              })($56($57)));
          };
      })(),
      Ord0: function () {
          return ordWeekday;
      }
  };
  var boundedEnumMonth = {
      cardinality: 12,
      toEnum: function (v) {
          if (v === 1) {
              return new Data_Maybe.Just(January.value);
          };
          if (v === 2) {
              return new Data_Maybe.Just(February.value);
          };
          if (v === 3) {
              return new Data_Maybe.Just(March.value);
          };
          if (v === 4) {
              return new Data_Maybe.Just(April.value);
          };
          if (v === 5) {
              return new Data_Maybe.Just(May.value);
          };
          if (v === 6) {
              return new Data_Maybe.Just(June.value);
          };
          if (v === 7) {
              return new Data_Maybe.Just(July.value);
          };
          if (v === 8) {
              return new Data_Maybe.Just(August.value);
          };
          if (v === 9) {
              return new Data_Maybe.Just(September.value);
          };
          if (v === 10) {
              return new Data_Maybe.Just(October.value);
          };
          if (v === 11) {
              return new Data_Maybe.Just(November.value);
          };
          if (v === 12) {
              return new Data_Maybe.Just(December.value);
          };
          return Data_Maybe.Nothing.value;
      },
      fromEnum: function (v) {
          if (v instanceof January) {
              return 1;
          };
          if (v instanceof February) {
              return 2;
          };
          if (v instanceof March) {
              return 3;
          };
          if (v instanceof April) {
              return 4;
          };
          if (v instanceof May) {
              return 5;
          };
          if (v instanceof June) {
              return 6;
          };
          if (v instanceof July) {
              return 7;
          };
          if (v instanceof August) {
              return 8;
          };
          if (v instanceof September) {
              return 9;
          };
          if (v instanceof October) {
              return 10;
          };
          if (v instanceof November) {
              return 11;
          };
          if (v instanceof December) {
              return 12;
          };
          throw new Error("Failed pattern match at Data.Date.Component (line 87, column 14 - line 99, column 19): " + [ v.constructor.name ]);
      },
      Bounded0: function () {
          return boundedMonth;
      },
      Enum1: function () {
          return enumMonth;
      }
  };
  var enumMonth = {
      succ: (function () {
          var $58 = Data_Enum.toEnum(boundedEnumMonth);
          var $59 = Data_Enum.fromEnum(boundedEnumMonth);
          return function ($60) {
              return $58((function (v) {
                  return v + 1 | 0;
              })($59($60)));
          };
      })(),
      pred: (function () {
          var $61 = Data_Enum.toEnum(boundedEnumMonth);
          var $62 = Data_Enum.fromEnum(boundedEnumMonth);
          return function ($63) {
              return $61((function (v) {
                  return v - 1 | 0;
              })($62($63)));
          };
      })(),
      Ord0: function () {
          return ordMonth;
      }
  };
  var boundedDay = {
      bottom: 1,
      top: 31,
      Ord0: function () {
          return ordDay;
      }
  };
  var boundedEnumDay = {
      cardinality: 31,
      toEnum: function (n) {
          if (n >= 1 && n <= 31) {
              return new Data_Maybe.Just(n);
          };
          if (Data_Boolean.otherwise) {
              return Data_Maybe.Nothing.value;
          };
          throw new Error("Failed pattern match at Data.Date.Component (line 133, column 1 - line 138, column 23): " + [ n.constructor.name ]);
      },
      fromEnum: function (v) {
          return v;
      },
      Bounded0: function () {
          return boundedDay;
      },
      Enum1: function () {
          return enumDay;
      }
  };
  var enumDay = {
      succ: (function () {
          var $64 = Data_Enum.toEnum(boundedEnumDay);
          var $65 = Data_Enum.fromEnum(boundedEnumDay);
          return function ($66) {
              return $64((function (v) {
                  return v + 1 | 0;
              })($65($66)));
          };
      })(),
      pred: (function () {
          var $67 = Data_Enum.toEnum(boundedEnumDay);
          var $68 = Data_Enum.fromEnum(boundedEnumDay);
          return function ($69) {
              return $67((function (v) {
                  return v - 1 | 0;
              })($68($69)));
          };
      })(),
      Ord0: function () {
          return ordDay;
      }
  };
  exports["January"] = January;
  exports["February"] = February;
  exports["March"] = March;
  exports["April"] = April;
  exports["May"] = May;
  exports["June"] = June;
  exports["July"] = July;
  exports["August"] = August;
  exports["September"] = September;
  exports["October"] = October;
  exports["November"] = November;
  exports["December"] = December;
  exports["Monday"] = Monday;
  exports["Tuesday"] = Tuesday;
  exports["Wednesday"] = Wednesday;
  exports["Thursday"] = Thursday;
  exports["Friday"] = Friday;
  exports["Saturday"] = Saturday;
  exports["Sunday"] = Sunday;
  exports["boundedEnumYear"] = boundedEnumYear;
  exports["boundedEnumMonth"] = boundedEnumMonth;
  exports["boundedEnumDay"] = boundedEnumDay;
  exports["boundedEnumWeekday"] = boundedEnumWeekday;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Data.Date"] = $PS["Data.Date"] || {};
  var exports = $PS["Data.Date"];
  var $foreign = $PS["Data.Date"];
  var Data_Date_Component = $PS["Data.Date.Component"];
  var Data_Enum = $PS["Data.Enum"];
  var Data_Maybe = $PS["Data.Maybe"];                                
  var $$Date = (function () {
      function $$Date(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      $$Date.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new $$Date(value0, value1, value2);
              };
          };
      };
      return $$Date;
  })();
  var year = function (v) {
      return v.value0;
  };
  var month = function (v) {
      return v.value1;
  };
  var day = function (v) {
      return v.value2;
  };
  var canonicalDate = function (y) {
      return function (m) {
          return function (d) {
              var mkDate = function (y$prime) {
                  return function (m$prime) {
                      return function (d$prime) {
                          return new $$Date(y$prime, Data_Maybe.fromJust()(Data_Enum.toEnum(Data_Date_Component.boundedEnumMonth)(m$prime)), d$prime);
                      };
                  };
              };
              return $foreign.canonicalDateImpl(mkDate, y, Data_Enum.fromEnum(Data_Date_Component.boundedEnumMonth)(m), d);
          };
      };
  };
  exports["canonicalDate"] = canonicalDate;
  exports["year"] = year;
  exports["month"] = month;
  exports["day"] = day;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Data.DateTime"] = $PS["Data.DateTime"] || {};
  var exports = $PS["Data.DateTime"];                                
  var DateTime = (function () {
      function DateTime(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      DateTime.create = function (value0) {
          return function (value1) {
              return new DateTime(value0, value1);
          };
      };
      return DateTime;
  })();
  exports["DateTime"] = DateTime;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Data.Time"] = $PS["Data.Time"] || {};
  var exports = $PS["Data.Time"];          
  var Time = (function () {
      function Time(value0, value1, value2, value3) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
      };
      Time.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return new Time(value0, value1, value2, value3);
                  };
              };
          };
      };
      return Time;
  })();
  var second = function (v) {
      return v.value2;
  };
  var minute = function (v) {
      return v.value1;
  };
  var millisecond = function (v) {
      return v.value3;
  };
  var hour = function (v) {
      return v.value0;
  };
  exports["Time"] = Time;
  exports["hour"] = hour;
  exports["minute"] = minute;
  exports["second"] = second;
  exports["millisecond"] = millisecond;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Data.DateTime.Instant"] = $PS["Data.DateTime.Instant"] || {};
  var exports = $PS["Data.DateTime.Instant"];
  var $foreign = $PS["Data.DateTime.Instant"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Date = $PS["Data.Date"];
  var Data_Date_Component = $PS["Data.Date.Component"];
  var Data_DateTime = $PS["Data.DateTime"];
  var Data_Enum = $PS["Data.Enum"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Time = $PS["Data.Time"];
  var unInstant = function (v) {
      return v;
  };
  var toDateTime = (function () {
      var mkDateTime = function (y) {
          return function (mo) {
              return function (d) {
                  return function (h) {
                      return function (mi) {
                          return function (s) {
                              return function (ms) {
                                  return new Data_DateTime.DateTime(Data_Date.canonicalDate(y)(Data_Maybe.fromJust()(Data_Enum.toEnum(Data_Date_Component.boundedEnumMonth)(mo)))(d), new Data_Time.Time(h, mi, s, ms));
                              };
                          };
                      };
                  };
              };
          };
      };
      return $foreign.toDateTimeImpl(mkDateTime);
  })();                                                
  var instant = function (v) {
      if (v >= -8.6399778816e15 && v <= 8.639977881599999e15) {
          return new Data_Maybe.Just(v);
      };
      if (Data_Boolean.otherwise) {
          return Data_Maybe.Nothing.value;
      };
      throw new Error("Failed pattern match at Data.DateTime.Instant (line 44, column 1 - line 44, column 41): " + [ v.constructor.name ]);
  };
  var fromDateTime = function (v) {
      return $foreign.fromDateTimeImpl(Data_Date.year(v.value0), Data_Enum.fromEnum(Data_Date_Component.boundedEnumMonth)(Data_Date.month(v.value0)), Data_Date.day(v.value0), Data_Time.hour(v.value1), Data_Time.minute(v.value1), Data_Time.second(v.value1), Data_Time.millisecond(v.value1));
  };
  exports["instant"] = instant;
  exports["unInstant"] = unInstant;
  exports["fromDateTime"] = fromDateTime;
  exports["toDateTime"] = toDateTime;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Control.Monad.State"] = $PS["Control.Monad.State"] || {};
  var exports = $PS["Control.Monad.State"];
  var Data_Newtype = $PS["Data.Newtype"];              
  var runState = function (v) {
      var $16 = Data_Newtype.unwrap();
      return function ($17) {
          return $16(v($17));
      };
  };
  exports["runState"] = runState;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Data.Formatter.Internal"] = $PS["Data.Formatter.Internal"] || {};
  var exports = $PS["Data.Formatter.Internal"];
  var Data_Foldable = $PS["Data.Foldable"];
  var foldDigits = function (dictFoldable) {
      return Data_Foldable.foldl(dictFoldable)(function (acc) {
          return function (d) {
              return (acc * 10 | 0) + d | 0;
          };
      })(0);
  };
  exports["foldDigits"] = foldDigits;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Text.Parsing.Parser.Pos"] = $PS["Text.Parsing.Parser.Pos"] || {};
  var exports = $PS["Text.Parsing.Parser.Pos"];
  var initialPos = {
      line: 1,
      column: 1
  };
  exports["initialPos"] = initialPos;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Text.Parsing.Parser"] = $PS["Text.Parsing.Parser"] || {};
  var exports = $PS["Text.Parsing.Parser"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Lazy = $PS["Control.Lazy"];
  var Control_Monad_Error_Class = $PS["Control.Monad.Error.Class"];
  var Control_Monad_Except_Trans = $PS["Control.Monad.Except.Trans"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Control_Monad_State_Trans = $PS["Control.Monad.State.Trans"];
  var Control_Monad_Trans_Class = $PS["Control.Monad.Trans.Class"];
  var Data_Either = $PS["Data.Either"];
  var Data_Identity = $PS["Data.Identity"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Text_Parsing_Parser_Pos = $PS["Text.Parsing.Parser.Pos"];                
  var ParseState = (function () {
      function ParseState(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      ParseState.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new ParseState(value0, value1, value2);
              };
          };
      };
      return ParseState;
  })();
  var ParseError = (function () {
      function ParseError(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      ParseError.create = function (value0) {
          return function (value1) {
              return new ParseError(value0, value1);
          };
      };
      return ParseError;
  })();
  var ParserT = function (x) {
      return x;
  };
  var parseErrorPosition = function (v) {
      return v.value1;
  };
  var parseErrorMessage = function (v) {
      return v.value0;
  };
  var runParserT = function (dictMonad) {
      return function (s) {
          return function (p) {
              var initialState = new ParseState(s, Text_Parsing_Parser_Pos.initialPos, false);
              return Control_Monad_State_Trans.evalStateT(((dictMonad.Bind1()).Apply0()).Functor0())(Control_Monad_Except_Trans.runExceptT(Data_Newtype.unwrap()(p)))(initialState);
          };
      };
  };
  var runParser = function (s) {
      var $88 = Data_Newtype.unwrap();
      var $89 = runParserT(Data_Identity.monadIdentity)(s);
      return function ($90) {
          return $88($89($90));
      };
  };
  var monadTransParserT = {
      lift: function (dictMonad) {
          var $91 = Control_Monad_Trans_Class.lift(Control_Monad_Except_Trans.monadTransExceptT)(Control_Monad_State_Trans.monadStateT(dictMonad));
          var $92 = Control_Monad_Trans_Class.lift(Control_Monad_State_Trans.monadTransStateT)(dictMonad);
          return function ($93) {
              return ParserT($91($92($93)));
          };
      }
  };
  var monadThrowParserT = function (dictMonad) {
      return Control_Monad_Except_Trans.monadThrowExceptT(Control_Monad_State_Trans.monadStateT(dictMonad));
  };
  var monadStateParserT = function (dictMonad) {
      return Control_Monad_Except_Trans.monadStateExceptT(Control_Monad_State_Trans.monadStateStateT(dictMonad));
  };
  var position = function (dictMonad) {
      return Control_Monad_State_Class.gets(monadStateParserT(dictMonad))(function (v) {
          return v.value1;
      });
  };
  var mapParserT = (function () {
      var $94 = Data_Newtype.over()()(ParserT);
      return function ($95) {
          return $94(Control_Monad_Except_Trans.mapExceptT(Control_Monad_State_Trans.mapStateT($95)));
      };
  })();
  var lazyParserT = {
      defer: function (f) {
          return Control_Lazy.defer(Control_Monad_State_Trans.lazyStateT)((function () {
              var $96 = Data_Newtype.unwrap();
              return function ($97) {
                  return Control_Monad_Except_Trans.runExceptT($96(f($97)));
              };
          })());
      }
  };                            
  var functorParserT = function (dictFunctor) {
      return Control_Monad_Except_Trans.functorExceptT(Control_Monad_State_Trans.functorStateT(dictFunctor));
  };
  var failWithPosition = function (dictMonad) {
      return function (message) {
          return function (pos) {
              return Control_Monad_Error_Class.throwError(monadThrowParserT(dictMonad))(new ParseError(message, pos));
          };
      };
  };
  var bindParserT = function (dictMonad) {
      return Control_Monad_Except_Trans.bindExceptT(Control_Monad_State_Trans.monadStateT(dictMonad));
  };
  var fail = function (dictMonad) {
      return function (message) {
          return Control_Bind.bindFlipped(bindParserT(dictMonad))(failWithPosition(dictMonad)(message))(position(dictMonad));
      };
  };
  var applyParserT = function (dictMonad) {
      return Control_Monad_Except_Trans.applyExceptT(Control_Monad_State_Trans.monadStateT(dictMonad));
  };
  var semigroupParserT = function (dictMonad) {
      return function (dictSemigroup) {
          return {
              append: Control_Apply.lift2(applyParserT(dictMonad))(Data_Semigroup.append(dictSemigroup))
          };
      };
  };
  var applicativeParserT = function (dictMonad) {
      return Control_Monad_Except_Trans.applicativeExceptT(Control_Monad_State_Trans.monadStateT(dictMonad));
  };
  var monoidParserT = function (dictMonad) {
      return function (dictMonoid) {
          return {
              mempty: Control_Applicative.pure(applicativeParserT(dictMonad))(Data_Monoid.mempty(dictMonoid)),
              Semigroup0: function () {
                  return semigroupParserT(dictMonad)(dictMonoid.Semigroup0());
              }
          };
      };
  };
  var altParserT = function (dictMonad) {
      return {
          alt: function (p1) {
              return function (p2) {
                  return ParserT(Control_Monad_Except_Trans.ExceptT(Control_Monad_State_Trans.StateT(function (v) {
                      return Control_Bind.bind(dictMonad.Bind1())(Control_Monad_State_Trans.runStateT(Control_Monad_Except_Trans.runExceptT(Data_Newtype.unwrap()(p1)))(new ParseState(v.value0, v.value1, false)))(function (v1) {
                          if (v1.value0 instanceof Data_Either.Left && !v1.value1.value2) {
                              return Control_Monad_State_Trans.runStateT(Control_Monad_Except_Trans.runExceptT(Data_Newtype.unwrap()(p2)))(v);
                          };
                          return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Tuple.Tuple(v1.value0, v1.value1));
                      });
                  })));
              };
          },
          Functor0: function () {
              return functorParserT(((dictMonad.Bind1()).Apply0()).Functor0());
          }
      };
  };
  var plusParserT = function (dictMonad) {
      return {
          empty: fail(dictMonad)("No alternative"),
          Alt0: function () {
              return altParserT(dictMonad);
          }
      };
  };
  var alternativeParserT = function (dictMonad) {
      return {
          Applicative0: function () {
              return applicativeParserT(dictMonad);
          },
          Plus1: function () {
              return plusParserT(dictMonad);
          }
      };
  };
  exports["ParseError"] = ParseError;
  exports["parseErrorMessage"] = parseErrorMessage;
  exports["parseErrorPosition"] = parseErrorPosition;
  exports["ParseState"] = ParseState;
  exports["ParserT"] = ParserT;
  exports["runParser"] = runParser;
  exports["mapParserT"] = mapParserT;
  exports["fail"] = fail;
  exports["lazyParserT"] = lazyParserT;
  exports["monoidParserT"] = monoidParserT;
  exports["functorParserT"] = functorParserT;
  exports["applyParserT"] = applyParserT;
  exports["applicativeParserT"] = applicativeParserT;
  exports["bindParserT"] = bindParserT;
  exports["monadStateParserT"] = monadStateParserT;
  exports["altParserT"] = altParserT;
  exports["plusParserT"] = plusParserT;
  exports["alternativeParserT"] = alternativeParserT;
  exports["monadTransParserT"] = monadTransParserT;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Text.Parsing.Parser.Combinators"] = $PS["Text.Parsing.Parser.Combinators"] || {};
  var exports = $PS["Text.Parsing.Parser.Combinators"];
  var Control_Alt = $PS["Control.Alt"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_Except_Trans = $PS["Control.Monad.Except.Trans"];
  var Control_Monad_State_Trans = $PS["Control.Monad.State.Trans"];
  var Control_Plus = $PS["Control.Plus"];
  var Data_Either = $PS["Data.Either"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Text_Parsing_Parser = $PS["Text.Parsing.Parser"];                
  var withErrorMessage = function (dictMonad) {
      return function (p) {
          return function (msg) {
              return Control_Alt.alt(Text_Parsing_Parser.altParserT(dictMonad))(p)(Text_Parsing_Parser.fail(dictMonad)("Expected " + msg));
          };
      };
  };
  var tryRethrow = function (dictMonad) {
      return function (p) {
          return Text_Parsing_Parser.ParserT(Control_Monad_Except_Trans.ExceptT(Control_Monad_State_Trans.StateT(function (v) {
              return Control_Bind.bind(dictMonad.Bind1())(Control_Monad_State_Trans.runStateT(Control_Monad_Except_Trans.runExceptT(Data_Newtype.unwrap()(p)))(v))(function (v1) {
                  if (v1.value0 instanceof Data_Either.Left) {
                      return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Tuple.Tuple(new Data_Either.Left(new Text_Parsing_Parser.ParseError(v1.value0.value0.value0, v.value1)), new Text_Parsing_Parser.ParseState(v1.value1.value0, v1.value1.value1, v.value2)));
                  };
                  return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Tuple.Tuple(v1.value0, v1.value1));
              });
          })));
      };
  };
  var $$try = function (dictMonad) {
      return function (p) {
          return Text_Parsing_Parser.ParserT(Control_Monad_Except_Trans.ExceptT(Control_Monad_State_Trans.StateT(function (v) {
              return Control_Bind.bind(dictMonad.Bind1())(Control_Monad_State_Trans.runStateT(Control_Monad_Except_Trans.runExceptT(Data_Newtype.unwrap()(p)))(v))(function (v1) {
                  if (v1.value0 instanceof Data_Either.Left) {
                      return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Tuple.Tuple(v1.value0, new Text_Parsing_Parser.ParseState(v1.value1.value0, v1.value1.value1, v.value2)));
                  };
                  return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Tuple.Tuple(v1.value0, v1.value1));
              });
          })));
      };
  };
  var option = function (dictMonad) {
      return function (a) {
          return function (p) {
              return Control_Alt.alt(Text_Parsing_Parser.altParserT(dictMonad))(p)(Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(dictMonad))(a));
          };
      };
  };
  var optionMaybe = function (dictMonad) {
      return function (p) {
          return option(dictMonad)(Data_Maybe.Nothing.value)(Data_Functor.map(Text_Parsing_Parser.functorParserT(((dictMonad.Bind1()).Apply0()).Functor0()))(Data_Maybe.Just.create)(p));
      };
  };
  var choice = function (dictFoldable) {
      return function (dictMonad) {
          return Data_Foldable.foldl(dictFoldable)(Control_Alt.alt(Text_Parsing_Parser.altParserT(dictMonad)))(Control_Plus.empty(Text_Parsing_Parser.plusParserT(dictMonad)));
      };
  };
  exports["withErrorMessage"] = withErrorMessage;
  exports["option"] = option;
  exports["optionMaybe"] = optionMaybe;
  exports["try"] = $$try;
  exports["tryRethrow"] = tryRethrow;
  exports["choice"] = choice;
})(PS);
(function(exports) {
  "use strict";
  /* global Symbol */

  var hasArrayFrom = typeof Array.from === "function";
  var hasStringIterator =
    typeof Symbol !== "undefined" &&
    Symbol != null &&
    typeof Symbol.iterator !== "undefined" &&
    typeof String.prototype[Symbol.iterator] === "function";
  var hasFromCodePoint = typeof String.prototype.fromCodePoint === "function";
  var hasCodePointAt = typeof String.prototype.codePointAt === "function";

  exports._unsafeCodePointAt0 = function (fallback) {
    return hasCodePointAt
      ? function (str) { return str.codePointAt(0); }
      : fallback;
  };

  exports._singleton = function (fallback) {
    return hasFromCodePoint ? String.fromCodePoint : fallback;
  };

  exports._take = function (fallback) {
    return function (n) {
      if (hasStringIterator) {
        return function (str) {
          var accum = "";
          var iter = str[Symbol.iterator]();
          for (var i = 0; i < n; ++i) {
            var o = iter.next();
            if (o.done) return accum;
            accum += o.value;
          }
          return accum;
        };
      }
      return fallback(n);
    };
  };

  exports._toCodePointArray = function (fallback) {
    return function (unsafeCodePointAt0) {
      if (hasArrayFrom) {
        return function (str) {
          return Array.from(str, unsafeCodePointAt0);
        };
      }
      return fallback;
    };
  };
})(PS["Data.String.CodePoints"] = PS["Data.String.CodePoints"] || {});
(function(exports) {
  "use strict";

  exports.charAt = function (i) {
    return function (s) {
      if (i >= 0 && i < s.length) return s.charAt(i);
      throw new Error("Data.String.Unsafe.charAt: Invalid index.");
    };
  };
})(PS["Data.String.Unsafe"] = PS["Data.String.Unsafe"] || {});
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Data.String.Unsafe"] = $PS["Data.String.Unsafe"] || {};
  var exports = $PS["Data.String.Unsafe"];
  var $foreign = $PS["Data.String.Unsafe"];
  exports["charAt"] = $foreign.charAt;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Data.String.CodePoints"] = $PS["Data.String.CodePoints"] || {};
  var exports = $PS["Data.String.CodePoints"];
  var $foreign = $PS["Data.String.CodePoints"];
  var Data_Array = $PS["Data.Array"];
  var Data_Bounded = $PS["Data.Bounded"];
  var Data_Enum = $PS["Data.Enum"];
  var Data_EuclideanRing = $PS["Data.EuclideanRing"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_String_CodeUnits = $PS["Data.String.CodeUnits"];
  var Data_String_Unsafe = $PS["Data.String.Unsafe"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unfoldable = $PS["Data.Unfoldable"];
  var unsurrogate = function (lead) {
      return function (trail) {
          return (((lead - 55296 | 0) * 1024 | 0) + (trail - 56320 | 0) | 0) + 65536 | 0;
      };
  };
  var isTrail = function (cu) {
      return 56320 <= cu && cu <= 57343;
  };
  var isLead = function (cu) {
      return 55296 <= cu && cu <= 56319;
  };
  var uncons = function (s) {
      var v = Data_String_CodeUnits.length(s);
      if (v === 0) {
          return Data_Maybe.Nothing.value;
      };
      if (v === 1) {
          return new Data_Maybe.Just({
              head: Data_Enum.fromEnum(Data_Enum.boundedEnumChar)(Data_String_Unsafe.charAt(0)(s)),
              tail: ""
          });
      };
      var cu1 = Data_Enum.fromEnum(Data_Enum.boundedEnumChar)(Data_String_Unsafe.charAt(1)(s));
      var cu0 = Data_Enum.fromEnum(Data_Enum.boundedEnumChar)(Data_String_Unsafe.charAt(0)(s));
      var $21 = isLead(cu0) && isTrail(cu1);
      if ($21) {
          return new Data_Maybe.Just({
              head: unsurrogate(cu0)(cu1),
              tail: Data_String_CodeUnits.drop(2)(s)
          });
      };
      return new Data_Maybe.Just({
          head: cu0,
          tail: Data_String_CodeUnits.drop(1)(s)
      });
  };
  var unconsButWithTuple = function (s) {
      return Data_Functor.map(Data_Maybe.functorMaybe)(function (v) {
          return new Data_Tuple.Tuple(v.head, v.tail);
      })(uncons(s));
  };
  var toCodePointArrayFallback = function (s) {
      return Data_Unfoldable.unfoldr(Data_Unfoldable.unfoldableArray)(unconsButWithTuple)(s);
  };
  var unsafeCodePointAt0Fallback = function (s) {
      var cu0 = Data_Enum.fromEnum(Data_Enum.boundedEnumChar)(Data_String_Unsafe.charAt(0)(s));
      var $25 = isLead(cu0) && Data_String_CodeUnits.length(s) > 1;
      if ($25) {
          var cu1 = Data_Enum.fromEnum(Data_Enum.boundedEnumChar)(Data_String_Unsafe.charAt(1)(s));
          var $26 = isTrail(cu1);
          if ($26) {
              return unsurrogate(cu0)(cu1);
          };
          return cu0;
      };
      return cu0;
  };
  var unsafeCodePointAt0 = $foreign["_unsafeCodePointAt0"](unsafeCodePointAt0Fallback);
  var toCodePointArray = $foreign["_toCodePointArray"](toCodePointArrayFallback)(unsafeCodePointAt0);
  var length = function ($52) {
      return Data_Array.length(toCodePointArray($52));
  };
  var indexOf = function (p) {
      return function (s) {
          return Data_Functor.map(Data_Maybe.functorMaybe)(function (i) {
              return length(Data_String_CodeUnits.take(i)(s));
          })(Data_String_CodeUnits.indexOf(p)(s));
      };
  };
  var fromCharCode = (function () {
      var $53 = Data_Enum.toEnumWithDefaults(Data_Enum.boundedEnumChar)(Data_Bounded.bottom(Data_Bounded.boundedChar))(Data_Bounded.top(Data_Bounded.boundedChar));
      return function ($54) {
          return Data_String_CodeUnits.singleton($53($54));
      };
  })();
  var singletonFallback = function (v) {
      if (v <= 65535) {
          return fromCharCode(v);
      };
      var lead = Data_EuclideanRing.div(Data_EuclideanRing.euclideanRingInt)(v - 65536 | 0)(1024) + 55296 | 0;
      var trail = Data_EuclideanRing.mod(Data_EuclideanRing.euclideanRingInt)(v - 65536 | 0)(1024) + 56320 | 0;
      return fromCharCode(lead) + fromCharCode(trail);
  };                                                                          
  var singleton = $foreign["_singleton"](singletonFallback);
  var takeFallback = function (n) {
      return function (v) {
          if (n < 1) {
              return "";
          };
          var v1 = uncons(v);
          if (v1 instanceof Data_Maybe.Just) {
              return singleton(v1.value0.head) + takeFallback(n - 1 | 0)(v1.value0.tail);
          };
          return v;
      };
  };
  var take = $foreign["_take"](takeFallback);
  var splitAt = function (i) {
      return function (s) {
          var before = take(i)(s);
          return {
              before: before,
              after: Data_String_CodeUnits.drop(Data_String_CodeUnits.length(before))(s)
          };
      };
  };
  var drop = function (n) {
      return function (s) {
          return Data_String_CodeUnits.drop(Data_String_CodeUnits.length(take(n)(s)))(s);
      };
  };
  exports["uncons"] = uncons;
  exports["length"] = length;
  exports["indexOf"] = indexOf;
  exports["take"] = take;
  exports["drop"] = drop;
  exports["splitAt"] = splitAt;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Text.Parsing.Parser.String"] = $PS["Text.Parsing.Parser.String"] || {};
  var exports = $PS["Text.Parsing.Parser.String"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Data_Array = $PS["Data.Array"];
  var Data_Char = $PS["Data.Char"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_EuclideanRing = $PS["Data.EuclideanRing"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Show = $PS["Data.Show"];
  var Data_String_CodePoints = $PS["Data.String.CodePoints"];
  var Data_String_CodeUnits = $PS["Data.String.CodeUnits"];
  var Data_String_Common = $PS["Data.String.Common"];
  var Text_Parsing_Parser = $PS["Text.Parsing.Parser"];
  var Text_Parsing_Parser_Combinators = $PS["Text.Parsing.Parser.Combinators"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];                
  var unCodePoint = Unsafe_Coerce.unsafeCoerce;
  var updatePosSingle = function (v) {
      return function (cp) {
          var v1 = unCodePoint(cp);
          if (v1 === 10) {
              return {
                  line: v.line + 1 | 0,
                  column: 1
              };
          };
          if (v1 === 13) {
              return {
                  line: v.line + 1 | 0,
                  column: 1
              };
          };
          if (v1 === 9) {
              return {
                  line: v.line,
                  column: (v.column + 8 | 0) - Data_EuclideanRing.mod(Data_EuclideanRing.euclideanRingInt)(v.column - 1 | 0)(8) | 0
              };
          };
          return {
              line: v.line,
              column: v.column + 1 | 0
          };
      };
  };
  var updatePosString = function ($copy_pos) {
      return function ($copy_str) {
          var $tco_var_pos = $copy_pos;
          var $tco_done = false;
          var $tco_result;
          function $tco_loop(pos, str) {
              var v = Data_String_CodePoints.uncons(str);
              if (v instanceof Data_Maybe.Nothing) {
                  $tco_done = true;
                  return pos;
              };
              if (v instanceof Data_Maybe.Just) {
                  $tco_var_pos = updatePosSingle(pos)(v.value0.head);
                  $copy_str = v.value0.tail;
                  return;
              };
              throw new Error("Failed pattern match at Text.Parsing.Parser.String (line 129, column 27 - line 131, column 70): " + [ v.constructor.name ]);
          };
          while (!$tco_done) {
              $tco_result = $tco_loop($tco_var_pos, $copy_str);
          };
          return $tco_result;
      };
  };
  var string = function (dictMonad) {
      return function (str) {
          return Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(Control_Monad_State_Class.get(Text_Parsing_Parser.monadStateParserT(dictMonad)))(function (v) {
              var v1 = Data_String_CodeUnits.stripPrefix(str)(v.value0);
              if (v1 instanceof Data_Maybe.Just) {
                  return Control_Bind.discard(Control_Bind.discardUnit)(Text_Parsing_Parser.bindParserT(dictMonad))(Control_Monad_State_Class.put(Text_Parsing_Parser.monadStateParserT(dictMonad))(new Text_Parsing_Parser.ParseState(v1.value0, updatePosString(v.value1)(str), true)))(function () {
                      return Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(dictMonad))(str);
                  });
              };
              return Text_Parsing_Parser.fail(dictMonad)("Expected " + Data_Show.show(Data_Show.showString)(str));
          });
      };
  };
  var eof = function (dictMonad) {
      return Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(Control_Monad_State_Class.get(Text_Parsing_Parser.monadStateParserT(dictMonad)))(function (v) {
          return Control_Applicative.unless(Text_Parsing_Parser.applicativeParserT(dictMonad))(Data_String_Common["null"](v.value0))(Text_Parsing_Parser.fail(dictMonad)("Expected EOF"));
      });
  };
  var anyCodePoint = function (dictMonad) {
      return Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(Control_Monad_State_Class.get(Text_Parsing_Parser.monadStateParserT(dictMonad)))(function (v) {
          var v1 = Data_String_CodePoints.uncons(v.value0);
          if (v1 instanceof Data_Maybe.Nothing) {
              return Text_Parsing_Parser.fail(dictMonad)("Unexpected EOF");
          };
          if (v1 instanceof Data_Maybe.Just) {
              return Control_Bind.discard(Control_Bind.discardUnit)(Text_Parsing_Parser.bindParserT(dictMonad))(Control_Monad_State_Class.put(Text_Parsing_Parser.monadStateParserT(dictMonad))(new Text_Parsing_Parser.ParseState(v1.value0.tail, updatePosSingle(v.value1)(v1.value0.head), true)))(function () {
                  return Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(dictMonad))(v1.value0.head);
              });
          };
          throw new Error("Failed pattern match at Text.Parsing.Parser.String (line 84, column 3 - line 88, column 16): " + [ v1.constructor.name ]);
      });
  };
  var anyChar = function (dictMonad) {
      return Text_Parsing_Parser_Combinators.tryRethrow(dictMonad)(Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(Data_Functor.map(Text_Parsing_Parser.functorParserT(((dictMonad.Bind1()).Apply0()).Functor0()))(unCodePoint)(anyCodePoint(dictMonad)))(function (v) {
          var $62 = v > 65535;
          if ($62) {
              return Text_Parsing_Parser.fail(dictMonad)("Not a Char");
          };
          var v1 = Data_Char.fromCharCode(v);
          if (v1 instanceof Data_Maybe.Nothing) {
              return Text_Parsing_Parser.fail(dictMonad)("Not a Char");
          };
          if (v1 instanceof Data_Maybe.Just) {
              return Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(dictMonad))(v1.value0);
          };
          throw new Error("Failed pattern match at Text.Parsing.Parser.String (line 75, column 8 - line 77, column 21): " + [ v1.constructor.name ]);
      }));
  };
  var satisfy = function (dictMonad) {
      return function (f) {
          return Text_Parsing_Parser_Combinators.tryRethrow(dictMonad)(Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(anyChar(dictMonad))(function (c) {
              var $65 = f(c);
              if ($65) {
                  return Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(dictMonad))(c);
              };
              return Text_Parsing_Parser.fail(dictMonad)("Predicate unsatisfied");
          }));
      };
  };
  var $$char = function (dictMonad) {
      return function (c) {
          return Text_Parsing_Parser_Combinators.withErrorMessage(dictMonad)(satisfy(dictMonad)(function (v) {
              return v === c;
          }))(Data_Show.show(Data_Show.showChar)(c));
      };
  };
  var noneOf = function (dictMonad) {
      return function (ss) {
          return Text_Parsing_Parser_Combinators.withErrorMessage(dictMonad)(satisfy(dictMonad)(Data_Function.flip(Data_Array.notElem(Data_Eq.eqChar))(ss)))("none of " + Data_Show.show(Data_Show.showArray(Data_Show.showChar))(ss));
      };
  };
  exports["string"] = string;
  exports["eof"] = eof;
  exports["char"] = $$char;
  exports["noneOf"] = noneOf;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Data.Formatter.Parser.Utils"] = $PS["Data.Formatter.Parser.Utils"] || {};
  var exports = $PS["Data.Formatter.Parser.Utils"];
  var Control_Apply = $PS["Control.Apply"];
  var Data_Bifunctor = $PS["Data.Bifunctor"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Identity = $PS["Data.Identity"];
  var Data_Show = $PS["Data.Show"];
  var Text_Parsing_Parser = $PS["Text.Parsing.Parser"];
  var Text_Parsing_Parser_Combinators = $PS["Text.Parsing.Parser.Combinators"];
  var Text_Parsing_Parser_String = $PS["Text.Parsing.Parser.String"];                
  var printPosition = function (v) {
      return "(line " + (Data_Show.show(Data_Show.showInt)(v.line) + (", col " + (Data_Show.show(Data_Show.showInt)(v.column) + ")")));
  };
  var printError = function (err) {
      return Text_Parsing_Parser.parseErrorMessage(err) + (" " + printPosition(Text_Parsing_Parser.parseErrorPosition(err)));
  };
  var runP = function (p) {
      return function (s) {
          return Data_Bifunctor.lmap(Data_Bifunctor.bifunctorEither)(printError)(Text_Parsing_Parser.runParser(s)(Control_Apply.applyFirst(Text_Parsing_Parser.applyParserT(Data_Identity.monadIdentity))(p)(Text_Parsing_Parser_String.eof(Data_Identity.monadIdentity))));
      };
  };
  var oneOfAs = function (dictFunctor) {
      return function (dictFoldable) {
          return function (dictMonad) {
              return function (p) {
                  return function (xs) {
                      return Text_Parsing_Parser_Combinators.choice(dictFoldable)(dictMonad)(Data_Functor.map(dictFunctor)(function (v) {
                          return Data_Functor.voidLeft(Text_Parsing_Parser.functorParserT(((dictMonad.Bind1()).Apply0()).Functor0()))(p(v.value0))(v.value1);
                      })(xs));
                  };
              };
          };
      };
  };
  exports["oneOfAs"] = oneOfAs;
  exports["runP"] = runP;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Data.Formatter.Parser.Number"] = $PS["Data.Formatter.Parser.Number"] || {};
  var exports = $PS["Data.Formatter.Parser.Number"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Formatter_Parser_Utils = $PS["Data.Formatter.Parser.Utils"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Text_Parsing_Parser_Combinators = $PS["Text.Parsing.Parser.Combinators"];
  var Text_Parsing_Parser_String = $PS["Text.Parsing.Parser.String"];                
  var parseDigit = function (dictMonad) {
      return Text_Parsing_Parser_Combinators["try"](dictMonad)(Data_Formatter_Parser_Utils.oneOfAs(Data_Functor.functorArray)(Data_Foldable.foldableArray)(dictMonad)(Text_Parsing_Parser_String["char"](dictMonad))([ new Data_Tuple.Tuple("0", 0), new Data_Tuple.Tuple("1", 1), new Data_Tuple.Tuple("2", 2), new Data_Tuple.Tuple("3", 3), new Data_Tuple.Tuple("4", 4), new Data_Tuple.Tuple("5", 5), new Data_Tuple.Tuple("6", 6), new Data_Tuple.Tuple("7", 7), new Data_Tuple.Tuple("8", 8), new Data_Tuple.Tuple("9", 9) ]));
  };
  exports["parseDigit"] = parseDigit;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Data.Time.Component"] = $PS["Data.Time.Component"] || {};
  var exports = $PS["Data.Time.Component"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Enum = $PS["Data.Enum"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var ordSecond = Data_Ord.ordInt;
  var ordMinute = Data_Ord.ordInt;
  var ordMillisecond = Data_Ord.ordInt;
  var ordHour = Data_Ord.ordInt;
  var boundedSecond = {
      bottom: 0,
      top: 59,
      Ord0: function () {
          return ordSecond;
      }
  };
  var boundedMinute = {
      bottom: 0,
      top: 59,
      Ord0: function () {
          return ordMinute;
      }
  };
  var boundedMillisecond = {
      bottom: 0,
      top: 999,
      Ord0: function () {
          return ordMillisecond;
      }
  };
  var boundedHour = {
      bottom: 0,
      top: 23,
      Ord0: function () {
          return ordHour;
      }
  };
  var boundedEnumSecond = {
      cardinality: 60,
      toEnum: function (n) {
          if (n >= 0 && n <= 59) {
              return new Data_Maybe.Just(n);
          };
          if (Data_Boolean.otherwise) {
              return Data_Maybe.Nothing.value;
          };
          throw new Error("Failed pattern match at Data.Time.Component (line 90, column 1 - line 95, column 26): " + [ n.constructor.name ]);
      },
      fromEnum: function (v) {
          return v;
      },
      Bounded0: function () {
          return boundedSecond;
      },
      Enum1: function () {
          return enumSecond;
      }
  };
  var enumSecond = {
      succ: (function () {
          var $28 = Data_Enum.toEnum(boundedEnumSecond);
          var $29 = Data_Enum.fromEnum(boundedEnumSecond);
          return function ($30) {
              return $28((function (v) {
                  return v + 1 | 0;
              })($29($30)));
          };
      })(),
      pred: (function () {
          var $31 = Data_Enum.toEnum(boundedEnumSecond);
          var $32 = Data_Enum.fromEnum(boundedEnumSecond);
          return function ($33) {
              return $31((function (v) {
                  return v - 1 | 0;
              })($32($33)));
          };
      })(),
      Ord0: function () {
          return ordSecond;
      }
  };
  var boundedEnumMinute = {
      cardinality: 60,
      toEnum: function (n) {
          if (n >= 0 && n <= 59) {
              return new Data_Maybe.Just(n);
          };
          if (Data_Boolean.otherwise) {
              return Data_Maybe.Nothing.value;
          };
          throw new Error("Failed pattern match at Data.Time.Component (line 61, column 1 - line 66, column 26): " + [ n.constructor.name ]);
      },
      fromEnum: function (v) {
          return v;
      },
      Bounded0: function () {
          return boundedMinute;
      },
      Enum1: function () {
          return enumMinute;
      }
  };
  var enumMinute = {
      succ: (function () {
          var $34 = Data_Enum.toEnum(boundedEnumMinute);
          var $35 = Data_Enum.fromEnum(boundedEnumMinute);
          return function ($36) {
              return $34((function (v) {
                  return v + 1 | 0;
              })($35($36)));
          };
      })(),
      pred: (function () {
          var $37 = Data_Enum.toEnum(boundedEnumMinute);
          var $38 = Data_Enum.fromEnum(boundedEnumMinute);
          return function ($39) {
              return $37((function (v) {
                  return v - 1 | 0;
              })($38($39)));
          };
      })(),
      Ord0: function () {
          return ordMinute;
      }
  };
  var boundedEnumMillisecond = {
      cardinality: 1000,
      toEnum: function (n) {
          if (n >= 0 && n <= 999) {
              return new Data_Maybe.Just(n);
          };
          if (Data_Boolean.otherwise) {
              return Data_Maybe.Nothing.value;
          };
          throw new Error("Failed pattern match at Data.Time.Component (line 120, column 1 - line 125, column 31): " + [ n.constructor.name ]);
      },
      fromEnum: function (v) {
          return v;
      },
      Bounded0: function () {
          return boundedMillisecond;
      },
      Enum1: function () {
          return enumMillisecond;
      }
  };
  var enumMillisecond = {
      succ: (function () {
          var $40 = Data_Enum.toEnum(boundedEnumMillisecond);
          var $41 = Data_Enum.fromEnum(boundedEnumMillisecond);
          return function ($42) {
              return $40((function (v) {
                  return v + 1 | 0;
              })($41($42)));
          };
      })(),
      pred: (function () {
          var $43 = Data_Enum.toEnum(boundedEnumMillisecond);
          var $44 = Data_Enum.fromEnum(boundedEnumMillisecond);
          return function ($45) {
              return $43((function (v) {
                  return v - 1 | 0;
              })($44($45)));
          };
      })(),
      Ord0: function () {
          return ordMillisecond;
      }
  };
  var boundedEnumHour = {
      cardinality: 24,
      toEnum: function (n) {
          if (n >= 0 && n <= 23) {
              return new Data_Maybe.Just(n);
          };
          if (Data_Boolean.otherwise) {
              return Data_Maybe.Nothing.value;
          };
          throw new Error("Failed pattern match at Data.Time.Component (line 32, column 1 - line 37, column 24): " + [ n.constructor.name ]);
      },
      fromEnum: function (v) {
          return v;
      },
      Bounded0: function () {
          return boundedHour;
      },
      Enum1: function () {
          return enumHour;
      }
  };
  var enumHour = {
      succ: (function () {
          var $46 = Data_Enum.toEnum(boundedEnumHour);
          var $47 = Data_Enum.fromEnum(boundedEnumHour);
          return function ($48) {
              return $46((function (v) {
                  return v + 1 | 0;
              })($47($48)));
          };
      })(),
      pred: (function () {
          var $49 = Data_Enum.toEnum(boundedEnumHour);
          var $50 = Data_Enum.fromEnum(boundedEnumHour);
          return function ($51) {
              return $49((function (v) {
                  return v - 1 | 0;
              })($50($51)));
          };
      })(),
      Ord0: function () {
          return ordHour;
      }
  };
  exports["boundedEnumHour"] = boundedEnumHour;
  exports["boundedEnumMinute"] = boundedEnumMinute;
  exports["boundedEnumSecond"] = boundedEnumSecond;
  exports["boundedEnumMillisecond"] = boundedEnumMillisecond;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Data.Formatter.DateTime"] = $PS["Data.Formatter.DateTime"] || {};
  var exports = $PS["Data.Formatter.DateTime"];
  var Control_Alt = $PS["Control.Alt"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Category = $PS["Control.Category"];
  var Control_Lazy = $PS["Control.Lazy"];
  var Control_Monad_Reader_Class = $PS["Control.Monad.Reader.Class"];
  var Control_Monad_Reader_Trans = $PS["Control.Monad.Reader.Trans"];
  var Control_Monad_State = $PS["Control.Monad.State"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Control_Monad_State_Trans = $PS["Control.Monad.State.Trans"];
  var Control_Monad_Trans_Class = $PS["Control.Monad.Trans.Class"];
  var Data_Array = $PS["Data.Array"];
  var Data_Date = $PS["Data.Date"];
  var Data_Date_Component = $PS["Data.Date.Component"];
  var Data_DateTime = $PS["Data.DateTime"];
  var Data_DateTime_Instant = $PS["Data.DateTime.Instant"];
  var Data_Either = $PS["Data.Either"];
  var Data_Enum = $PS["Data.Enum"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Formatter_Internal = $PS["Data.Formatter.Internal"];
  var Data_Formatter_Parser_Number = $PS["Data.Formatter.Parser.Number"];
  var Data_Formatter_Parser_Utils = $PS["Data.Formatter.Parser.Utils"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Identity = $PS["Data.Identity"];
  var Data_Int = $PS["Data.Int"];
  var Data_List = $PS["Data.List"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Ring = $PS["Data.Ring"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Semiring = $PS["Data.Semiring"];
  var Data_Show = $PS["Data.Show"];
  var Data_String_CodeUnits = $PS["Data.String.CodeUnits"];
  var Data_Time = $PS["Data.Time"];
  var Data_Time_Component = $PS["Data.Time.Component"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unit = $PS["Data.Unit"];
  var Text_Parsing_Parser = $PS["Text.Parsing.Parser"];
  var Text_Parsing_Parser_Combinators = $PS["Text.Parsing.Parser.Combinators"];
  var Text_Parsing_Parser_String = $PS["Text.Parsing.Parser.String"];                
  var AM = (function () {
      function AM() {

      };
      AM.value = new AM();
      return AM;
  })();
  var PM = (function () {
      function PM() {

      };
      PM.value = new PM();
      return PM;
  })();
  var YearFull = (function () {
      function YearFull() {

      };
      YearFull.value = new YearFull();
      return YearFull;
  })();
  var YearTwoDigits = (function () {
      function YearTwoDigits() {

      };
      YearTwoDigits.value = new YearTwoDigits();
      return YearTwoDigits;
  })();
  var YearAbsolute = (function () {
      function YearAbsolute() {

      };
      YearAbsolute.value = new YearAbsolute();
      return YearAbsolute;
  })();
  var MonthFull = (function () {
      function MonthFull() {

      };
      MonthFull.value = new MonthFull();
      return MonthFull;
  })();
  var MonthShort = (function () {
      function MonthShort() {

      };
      MonthShort.value = new MonthShort();
      return MonthShort;
  })();
  var MonthTwoDigits = (function () {
      function MonthTwoDigits() {

      };
      MonthTwoDigits.value = new MonthTwoDigits();
      return MonthTwoDigits;
  })();
  var DayOfMonthTwoDigits = (function () {
      function DayOfMonthTwoDigits() {

      };
      DayOfMonthTwoDigits.value = new DayOfMonthTwoDigits();
      return DayOfMonthTwoDigits;
  })();
  var DayOfMonth = (function () {
      function DayOfMonth() {

      };
      DayOfMonth.value = new DayOfMonth();
      return DayOfMonth;
  })();
  var UnixTimestamp = (function () {
      function UnixTimestamp() {

      };
      UnixTimestamp.value = new UnixTimestamp();
      return UnixTimestamp;
  })();
  var DayOfWeek = (function () {
      function DayOfWeek() {

      };
      DayOfWeek.value = new DayOfWeek();
      return DayOfWeek;
  })();
  var DayOfWeekName = (function () {
      function DayOfWeekName() {

      };
      DayOfWeekName.value = new DayOfWeekName();
      return DayOfWeekName;
  })();
  var DayOfWeekNameShort = (function () {
      function DayOfWeekNameShort() {

      };
      DayOfWeekNameShort.value = new DayOfWeekNameShort();
      return DayOfWeekNameShort;
  })();
  var Hours24 = (function () {
      function Hours24() {

      };
      Hours24.value = new Hours24();
      return Hours24;
  })();
  var Hours12 = (function () {
      function Hours12() {

      };
      Hours12.value = new Hours12();
      return Hours12;
  })();
  var Meridiem = (function () {
      function Meridiem() {

      };
      Meridiem.value = new Meridiem();
      return Meridiem;
  })();
  var Minutes = (function () {
      function Minutes() {

      };
      Minutes.value = new Minutes();
      return Minutes;
  })();
  var MinutesTwoDigits = (function () {
      function MinutesTwoDigits() {

      };
      MinutesTwoDigits.value = new MinutesTwoDigits();
      return MinutesTwoDigits;
  })();
  var Seconds = (function () {
      function Seconds() {

      };
      Seconds.value = new Seconds();
      return Seconds;
  })();
  var SecondsTwoDigits = (function () {
      function SecondsTwoDigits() {

      };
      SecondsTwoDigits.value = new SecondsTwoDigits();
      return SecondsTwoDigits;
  })();
  var Milliseconds = (function () {
      function Milliseconds() {

      };
      Milliseconds.value = new Milliseconds();
      return Milliseconds;
  })();
  var MillisecondsShort = (function () {
      function MillisecondsShort() {

      };
      MillisecondsShort.value = new MillisecondsShort();
      return MillisecondsShort;
  })();
  var MillisecondsTwoDigits = (function () {
      function MillisecondsTwoDigits() {

      };
      MillisecondsTwoDigits.value = new MillisecondsTwoDigits();
      return MillisecondsTwoDigits;
  })();
  var Placeholder = (function () {
      function Placeholder(value0) {
          this.value0 = value0;
      };
      Placeholder.create = function (value0) {
          return new Placeholder(value0);
      };
      return Placeholder;
  })();
  var validateRange = function (min) {
      return function (max) {
          return Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Data_Either.bindEither))(Control_Monad_Reader_Class.ask(Control_Monad_Reader_Trans.monadAskReaderT(Data_Either.monadEither)))(function (v) {
              return Control_Monad_Trans_Class.lift(Control_Monad_Reader_Trans.monadTransReaderT)(Data_Either.monadEither)((function () {
                  var $92 = v.num < min || v.num > max;
                  if ($92) {
                      return new Data_Either.Left("Number is out of range [ " + (Data_Show.show(Data_Show.showInt)(min) + (", " + (Data_Show.show(Data_Show.showInt)(max) + " ]"))));
                  };
                  return new Data_Either.Right(Data_Unit.unit);
              })());
          });
      };
  };
  var validAccum = function (v) {
      if (v.hour instanceof Data_Maybe.Just && v.hour.value0 === 24) {
          return Data_Foldable.for_(Data_Either.applicativeEither)(Data_Foldable.foldableArray)([ v.minute, v.second, v.millisecond ])(function (val) {
              return Control_Applicative.when(Data_Either.applicativeEither)(Data_Maybe.fromMaybe(0)(val) > 0)(new Data_Either.Left("When hour is 24, other time components must be 0"));
          });
      };
      return Control_Applicative.pure(Data_Either.applicativeEither)(Data_Unit.unit);
  };
  var takeSome = function (dictAlternative) {
      return function (dictLazy) {
          return function (v) {
              return function (v1) {
                  if (v === 0) {
                      return Control_Applicative.pure(dictAlternative.Applicative0())(Data_List_Types.Nil.value);
                  };
                  return Control_Apply.apply((dictAlternative.Applicative0()).Apply0())(Data_Functor.map(((dictAlternative.Plus1()).Alt0()).Functor0())(Data_List_Types.Cons.create)(v1))(Control_Lazy.defer(dictLazy)(function (v3) {
                      return takeMany(dictAlternative)(dictLazy)(v - 1 | 0)(v1);
                  }));
              };
          };
      };
  };
  var takeMany = function (dictAlternative) {
      return function (dictLazy) {
          return function (v) {
              return function (v1) {
                  if (v === 0) {
                      return Control_Applicative.pure(dictAlternative.Applicative0())(Data_List_Types.Nil.value);
                  };
                  return Control_Alt.alt((dictAlternative.Plus1()).Alt0())(takeSome(dictAlternative)(dictLazy)(v)(v1))(Control_Applicative.pure(dictAlternative.Applicative0())(Data_List_Types.Nil.value));
              };
          };
      };
  };                                                                                                                        
  var placeholderContent = Data_Functor.mapFlipped(Text_Parsing_Parser.functorParserT(Data_Identity.functorIdentity))(Data_Array.some(Text_Parsing_Parser.alternativeParserT(Data_Identity.monadIdentity))(Text_Parsing_Parser.lazyParserT)(Text_Parsing_Parser_String.noneOf(Data_Identity.monadIdentity)(Data_String_CodeUnits.toCharArray("YMDEHhamsS"))))(Data_String_CodeUnits.fromCharArray);
  var parseShortMonth = function (dictMonad) {
      return Data_Formatter_Parser_Utils.oneOfAs(Data_Functor.functorArray)(Data_Foldable.foldableArray)(dictMonad)((function () {
          var $435 = Text_Parsing_Parser_Combinators["try"](dictMonad);
          var $436 = Text_Parsing_Parser_String.string(dictMonad);
          return function ($437) {
              return $435($436($437));
          };
      })())([ new Data_Tuple.Tuple("Jan", Data_Date_Component.January.value), new Data_Tuple.Tuple("Feb", Data_Date_Component.February.value), new Data_Tuple.Tuple("Mar", Data_Date_Component.March.value), new Data_Tuple.Tuple("Apr", Data_Date_Component.April.value), new Data_Tuple.Tuple("May", Data_Date_Component.May.value), new Data_Tuple.Tuple("Jun", Data_Date_Component.June.value), new Data_Tuple.Tuple("Jul", Data_Date_Component.July.value), new Data_Tuple.Tuple("Aug", Data_Date_Component.August.value), new Data_Tuple.Tuple("Sep", Data_Date_Component.September.value), new Data_Tuple.Tuple("Oct", Data_Date_Component.October.value), new Data_Tuple.Tuple("Nov", Data_Date_Component.November.value), new Data_Tuple.Tuple("Dec", Data_Date_Component.December.value) ]);
  };
  var parseMonth = function (dictMonad) {
      return Data_Formatter_Parser_Utils.oneOfAs(Data_Functor.functorArray)(Data_Foldable.foldableArray)(dictMonad)((function () {
          var $438 = Text_Parsing_Parser_Combinators["try"](dictMonad);
          var $439 = Text_Parsing_Parser_String.string(dictMonad);
          return function ($440) {
              return $438($439($440));
          };
      })())([ new Data_Tuple.Tuple("January", Data_Date_Component.January.value), new Data_Tuple.Tuple("February", Data_Date_Component.February.value), new Data_Tuple.Tuple("March", Data_Date_Component.March.value), new Data_Tuple.Tuple("April", Data_Date_Component.April.value), new Data_Tuple.Tuple("May", Data_Date_Component.May.value), new Data_Tuple.Tuple("June", Data_Date_Component.June.value), new Data_Tuple.Tuple("July", Data_Date_Component.July.value), new Data_Tuple.Tuple("August", Data_Date_Component.August.value), new Data_Tuple.Tuple("September", Data_Date_Component.September.value), new Data_Tuple.Tuple("October", Data_Date_Component.October.value), new Data_Tuple.Tuple("November", Data_Date_Component.November.value), new Data_Tuple.Tuple("December", Data_Date_Component.December.value) ]);
  };
  var parseMeridiem = function (dictMonad) {
      return Data_Formatter_Parser_Utils.oneOfAs(Data_Functor.functorArray)(Data_Foldable.foldableArray)(dictMonad)((function () {
          var $441 = Text_Parsing_Parser_Combinators["try"](dictMonad);
          var $442 = Text_Parsing_Parser_String.string(dictMonad);
          return function ($443) {
              return $441($442($443));
          };
      })())([ new Data_Tuple.Tuple("am", AM.value), new Data_Tuple.Tuple("AM", AM.value), new Data_Tuple.Tuple("pm", PM.value), new Data_Tuple.Tuple("PM", PM.value) ]);
  };
  var $$parseInt = function (dictMonad) {
      return function (maxLength) {
          return function (validators) {
              return function (errMsg) {
                  return Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(takeSome(Text_Parsing_Parser.alternativeParserT(dictMonad))(Text_Parsing_Parser.lazyParserT)(maxLength)(Data_Formatter_Parser_Number.parseDigit(dictMonad)))(function (ds) {
                      var num = Data_Formatter_Internal.foldDigits(Data_List_Types.foldableList)(ds);
                      var length = Data_List.length(ds);
                      var v = Control_Monad_Reader_Trans.runReaderT(validators)({
                          length: length,
                          num: num,
                          maxLength: maxLength
                      });
                      if (v instanceof Data_Either.Left) {
                          return Text_Parsing_Parser.fail(dictMonad)(errMsg + ("(" + (v.value0 + ")")));
                      };
                      if (v instanceof Data_Either.Right) {
                          return Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(dictMonad))(num);
                      };
                      throw new Error("Failed pattern match at Data.Formatter.DateTime (line 336, column 3 - line 338, column 23): " + [ v.constructor.name ]);
                  });
              };
          };
      };
  };
  var parseSignedInt = function (dictMonad) {
      return function (maxLength) {
          return function (validators) {
              return function (errMsg) {
                  return Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(Data_Functor.map(Text_Parsing_Parser.functorParserT(((dictMonad.Bind1()).Apply0()).Functor0()))(Data_Maybe.isJust)(Text_Parsing_Parser_Combinators.optionMaybe(dictMonad)(Text_Parsing_Parser_String["char"](dictMonad)("-"))))(function (isNegative) {
                      return Data_Functor.map(Text_Parsing_Parser.functorParserT(((dictMonad.Bind1()).Apply0()).Functor0()))((function () {
                          if (isNegative) {
                              return Data_Ring.negate(Data_Ring.ringInt);
                          };
                          return Control_Category.identity(Control_Category.categoryFn);
                      })())($$parseInt(dictMonad)(maxLength)(validators)(errMsg));
                  });
              };
          };
      };
  };
  var parseDayOfWeekNameShort = function (dictMonad) {
      return Data_Formatter_Parser_Utils.oneOfAs(Data_Functor.functorArray)(Data_Foldable.foldableArray)(dictMonad)((function () {
          var $444 = Text_Parsing_Parser_Combinators["try"](dictMonad);
          var $445 = Text_Parsing_Parser_String.string(dictMonad);
          return function ($446) {
              return $444($445($446));
          };
      })())([ new Data_Tuple.Tuple("Mon", Data_Date_Component.Monday.value), new Data_Tuple.Tuple("Tue", Data_Date_Component.Tuesday.value), new Data_Tuple.Tuple("Wed", Data_Date_Component.Wednesday.value), new Data_Tuple.Tuple("Thu", Data_Date_Component.Thursday.value), new Data_Tuple.Tuple("Fri", Data_Date_Component.Friday.value), new Data_Tuple.Tuple("Sat", Data_Date_Component.Saturday.value), new Data_Tuple.Tuple("Sun", Data_Date_Component.Sunday.value) ]);
  };
  var parseDayOfWeekName = function (dictMonad) {
      return Data_Formatter_Parser_Utils.oneOfAs(Data_Functor.functorArray)(Data_Foldable.foldableArray)(dictMonad)((function () {
          var $447 = Text_Parsing_Parser_Combinators["try"](dictMonad);
          var $448 = Text_Parsing_Parser_String.string(dictMonad);
          return function ($449) {
              return $447($448($449));
          };
      })())([ new Data_Tuple.Tuple("Monday", Data_Date_Component.Monday.value), new Data_Tuple.Tuple("Tuesday", Data_Date_Component.Tuesday.value), new Data_Tuple.Tuple("Wednesday", Data_Date_Component.Wednesday.value), new Data_Tuple.Tuple("Thursday", Data_Date_Component.Thursday.value), new Data_Tuple.Tuple("Friday", Data_Date_Component.Friday.value), new Data_Tuple.Tuple("Saturday", Data_Date_Component.Saturday.value), new Data_Tuple.Tuple("Sunday", Data_Date_Component.Sunday.value) ]);
  };
  var initialAccum = {
      year: Data_Maybe.Nothing.value,
      month: Data_Maybe.Nothing.value,
      day: Data_Maybe.Nothing.value,
      hour: Data_Maybe.Nothing.value,
      minute: Data_Maybe.Nothing.value,
      second: Data_Maybe.Nothing.value,
      millisecond: Data_Maybe.Nothing.value,
      meridiem: Data_Maybe.Nothing.value
  };
  var formatterCommandParser = Control_Alt.alt(Text_Parsing_Parser.altParserT(Data_Identity.monadIdentity))(Data_Formatter_Parser_Utils.oneOfAs(Data_Functor.functorArray)(Data_Foldable.foldableArray)(Data_Identity.monadIdentity)((function () {
      var $450 = Text_Parsing_Parser_Combinators["try"](Data_Identity.monadIdentity);
      var $451 = Text_Parsing_Parser_String.string(Data_Identity.monadIdentity);
      return function ($452) {
          return $450($451($452));
      };
  })())([ new Data_Tuple.Tuple("YYYY", YearFull.value), new Data_Tuple.Tuple("YY", YearTwoDigits.value), new Data_Tuple.Tuple("Y", YearAbsolute.value), new Data_Tuple.Tuple("MMMM", MonthFull.value), new Data_Tuple.Tuple("MMM", MonthShort.value), new Data_Tuple.Tuple("MM", MonthTwoDigits.value), new Data_Tuple.Tuple("DD", DayOfMonthTwoDigits.value), new Data_Tuple.Tuple("D", DayOfMonth.value), new Data_Tuple.Tuple("E", DayOfWeek.value), new Data_Tuple.Tuple("X", UnixTimestamp.value), new Data_Tuple.Tuple("dddd", DayOfWeekName.value), new Data_Tuple.Tuple("ddd", DayOfWeekNameShort.value), new Data_Tuple.Tuple("HH", Hours24.value), new Data_Tuple.Tuple("hh", Hours12.value), new Data_Tuple.Tuple("a", Meridiem.value), new Data_Tuple.Tuple("mm", MinutesTwoDigits.value), new Data_Tuple.Tuple("m", Minutes.value), new Data_Tuple.Tuple("ss", SecondsTwoDigits.value), new Data_Tuple.Tuple("s", Seconds.value), new Data_Tuple.Tuple("SSS", Milliseconds.value), new Data_Tuple.Tuple("SS", MillisecondsTwoDigits.value), new Data_Tuple.Tuple("S", MillisecondsShort.value) ]))(Data_Functor.map(Text_Parsing_Parser.functorParserT(Data_Identity.functorIdentity))(Placeholder.create)(placeholderContent));
  var formatParser = Data_List.some(Text_Parsing_Parser.alternativeParserT(Data_Identity.monadIdentity))(Text_Parsing_Parser.lazyParserT)(formatterCommandParser);
  var parseFormatString = Data_Formatter_Parser_Utils.runP(formatParser);
  var exactLength = Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Data_Either.bindEither))(Control_Monad_Reader_Class.ask(Control_Monad_Reader_Trans.monadAskReaderT(Data_Either.monadEither)))(function (v) {
      return Control_Monad_Trans_Class.lift(Control_Monad_Reader_Trans.monadTransReaderT)(Data_Either.monadEither)((function () {
          var $402 = v.maxLength !== v.length;
          if ($402) {
              return new Data_Either.Left("Expected " + (Data_Show.show(Data_Show.showInt)(v.maxLength) + (" digits but got " + Data_Show.show(Data_Show.showInt)(v.length))));
          };
          return new Data_Either.Right(Data_Unit.unit);
      })());
  });
  var unformatCommandParser = (function () {
      var modifyWithParser = function (f) {
          return function (p) {
              return Control_Bind.bind(Text_Parsing_Parser.bindParserT(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity)))(p)(function (v) {
                  return Control_Monad_Trans_Class.lift(Text_Parsing_Parser.monadTransParserT)(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))(Control_Monad_State_Class.modify_(Control_Monad_State_Trans.monadStateStateT(Data_Identity.monadIdentity))(Data_Function.flip(f)(new Data_Maybe.Just(v))));
              });
          };
      };
      return function (v) {
          if (v instanceof YearFull) {
              return modifyWithParser(function (v1) {
                  return function (v2) {
                      return {
                          year: v2,
                          day: v1.day,
                          hour: v1.hour,
                          meridiem: v1.meridiem,
                          millisecond: v1.millisecond,
                          minute: v1.minute,
                          month: v1.month,
                          second: v1.second
                      };
                  };
              })(parseSignedInt(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))(4)(exactLength)("Incorrect full year"));
          };
          if (v instanceof YearTwoDigits) {
              return modifyWithParser(function (v1) {
                  return function (v2) {
                      return {
                          year: v2,
                          day: v1.day,
                          hour: v1.hour,
                          meridiem: v1.meridiem,
                          millisecond: v1.millisecond,
                          minute: v1.minute,
                          month: v1.month,
                          second: v1.second
                      };
                  };
              })(parseSignedInt(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))(2)(exactLength)("Incorrect 2-digit year"));
          };
          if (v instanceof YearAbsolute) {
              return modifyWithParser(function (v1) {
                  return function (v2) {
                      return {
                          year: v2,
                          day: v1.day,
                          hour: v1.hour,
                          meridiem: v1.meridiem,
                          millisecond: v1.millisecond,
                          minute: v1.minute,
                          month: v1.month,
                          second: v1.second
                      };
                  };
              })(Control_Apply.lift2(Text_Parsing_Parser.applyParserT(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity)))(Data_Semiring.mul(Data_Semiring.semiringInt))(Text_Parsing_Parser_Combinators.option(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))(1)(Text_Parsing_Parser_Combinators["try"](Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))(Data_Functor.mapFlipped(Text_Parsing_Parser.functorParserT(Control_Monad_State_Trans.functorStateT(Data_Identity.functorIdentity)))(Text_Parsing_Parser_String.string(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))("-"))(Data_Function["const"](-1 | 0)))))(Data_Functor.mapFlipped(Text_Parsing_Parser.functorParserT(Control_Monad_State_Trans.functorStateT(Data_Identity.functorIdentity)))(Data_List.some(Text_Parsing_Parser.alternativeParserT(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity)))(Text_Parsing_Parser.lazyParserT)(Data_Formatter_Parser_Number.parseDigit(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))))(Data_Formatter_Internal.foldDigits(Data_List_Types.foldableList))));
          };
          if (v instanceof MonthFull) {
              return modifyWithParser(function (v1) {
                  return function (v2) {
                      return {
                          month: v2,
                          day: v1.day,
                          hour: v1.hour,
                          meridiem: v1.meridiem,
                          millisecond: v1.millisecond,
                          minute: v1.minute,
                          second: v1.second,
                          year: v1.year
                      };
                  };
              })(Data_Functor.map(Text_Parsing_Parser.functorParserT(Control_Monad_State_Trans.functorStateT(Data_Identity.functorIdentity)))(Data_Enum.fromEnum(Data_Date_Component.boundedEnumMonth))(parseMonth(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))));
          };
          if (v instanceof MonthShort) {
              return modifyWithParser(function (v1) {
                  return function (v2) {
                      return {
                          month: v2,
                          day: v1.day,
                          hour: v1.hour,
                          meridiem: v1.meridiem,
                          millisecond: v1.millisecond,
                          minute: v1.minute,
                          second: v1.second,
                          year: v1.year
                      };
                  };
              })(Data_Functor.map(Text_Parsing_Parser.functorParserT(Control_Monad_State_Trans.functorStateT(Data_Identity.functorIdentity)))(Data_Enum.fromEnum(Data_Date_Component.boundedEnumMonth))(parseShortMonth(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))));
          };
          if (v instanceof MonthTwoDigits) {
              return modifyWithParser(function (v1) {
                  return function (v2) {
                      return {
                          month: v2,
                          day: v1.day,
                          hour: v1.hour,
                          meridiem: v1.meridiem,
                          millisecond: v1.millisecond,
                          minute: v1.minute,
                          second: v1.second,
                          year: v1.year
                      };
                  };
              })($$parseInt(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))(2)(Data_Semigroup.append(Control_Monad_Reader_Trans.semigroupReaderT(Data_Either.applyEither)(Data_Semigroup.semigroupUnit))(validateRange(1)(12))(exactLength))("Incorrect 2-digit month"));
          };
          if (v instanceof DayOfMonthTwoDigits) {
              return modifyWithParser(function (v1) {
                  return function (v2) {
                      return {
                          day: v2,
                          hour: v1.hour,
                          meridiem: v1.meridiem,
                          millisecond: v1.millisecond,
                          minute: v1.minute,
                          month: v1.month,
                          second: v1.second,
                          year: v1.year
                      };
                  };
              })($$parseInt(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))(2)(Data_Semigroup.append(Control_Monad_Reader_Trans.semigroupReaderT(Data_Either.applyEither)(Data_Semigroup.semigroupUnit))(validateRange(1)(31))(exactLength))("Incorrect day of month"));
          };
          if (v instanceof DayOfMonth) {
              return modifyWithParser(function (v1) {
                  return function (v2) {
                      return {
                          day: v2,
                          hour: v1.hour,
                          meridiem: v1.meridiem,
                          millisecond: v1.millisecond,
                          minute: v1.minute,
                          month: v1.month,
                          second: v1.second,
                          year: v1.year
                      };
                  };
              })($$parseInt(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))(2)(validateRange(1)(31))("Incorrect day of month"));
          };
          if (v instanceof UnixTimestamp) {
              return Control_Bind.bind(Text_Parsing_Parser.bindParserT(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity)))(Data_Functor.map(Text_Parsing_Parser.functorParserT(Control_Monad_State_Trans.functorStateT(Data_Identity.functorIdentity)))(Data_Formatter_Internal.foldDigits(Data_List_Types.foldableList))(Data_List.some(Text_Parsing_Parser.alternativeParserT(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity)))(Text_Parsing_Parser.lazyParserT)(Data_Formatter_Parser_Number.parseDigit(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity)))))(function (s) {
                  var v1 = Data_Functor.map(Data_Maybe.functorMaybe)(Data_DateTime_Instant.toDateTime)(Data_DateTime_Instant.instant(1000.0 * Data_Int.toNumber(s)));
                  if (v1 instanceof Data_Maybe.Nothing) {
                      return Text_Parsing_Parser.fail(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))("Incorrect timestamp");
                  };
                  if (v1 instanceof Data_Maybe.Just) {
                      return Control_Monad_Trans_Class.lift(Text_Parsing_Parser.monadTransParserT)(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))(Control_Monad_State_Class.put(Control_Monad_State_Trans.monadStateStateT(Data_Identity.monadIdentity))({
                          year: new Data_Maybe.Just(Data_Enum.fromEnum(Data_Date_Component.boundedEnumYear)(Data_Date.year(v1.value0.value0))),
                          month: new Data_Maybe.Just(Data_Enum.fromEnum(Data_Date_Component.boundedEnumMonth)(Data_Date.month(v1.value0.value0))),
                          day: new Data_Maybe.Just(Data_Enum.fromEnum(Data_Date_Component.boundedEnumDay)(Data_Date.day(v1.value0.value0))),
                          hour: new Data_Maybe.Just(Data_Enum.fromEnum(Data_Time_Component.boundedEnumHour)(Data_Time.hour(v1.value0.value1))),
                          minute: new Data_Maybe.Just(Data_Enum.fromEnum(Data_Time_Component.boundedEnumMinute)(Data_Time.minute(v1.value0.value1))),
                          second: new Data_Maybe.Just(Data_Enum.fromEnum(Data_Time_Component.boundedEnumSecond)(Data_Time.second(v1.value0.value1))),
                          millisecond: new Data_Maybe.Just(Data_Enum.fromEnum(Data_Time_Component.boundedEnumMillisecond)(Data_Time.millisecond(v1.value0.value1))),
                          meridiem: Data_Maybe.Nothing.value
                      }));
                  };
                  throw new Error("Failed pattern match at Data.Formatter.DateTime (line 362, column 5 - line 373, column 10): " + [ v1.constructor.name ]);
              });
          };
          if (v instanceof DayOfWeek) {
              return Data_Functor["void"](Text_Parsing_Parser.functorParserT(Control_Monad_State_Trans.functorStateT(Data_Identity.functorIdentity)))($$parseInt(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))(1)(validateRange(1)(7))("Incorrect day of week"));
          };
          if (v instanceof DayOfWeekName) {
              return modifyWithParser(function (v1) {
                  return function (v2) {
                      return {
                          day: v2,
                          hour: v1.hour,
                          meridiem: v1.meridiem,
                          millisecond: v1.millisecond,
                          minute: v1.minute,
                          month: v1.month,
                          second: v1.second,
                          year: v1.year
                      };
                  };
              })(Data_Functor.map(Text_Parsing_Parser.functorParserT(Control_Monad_State_Trans.functorStateT(Data_Identity.functorIdentity)))(Data_Enum.fromEnum(Data_Date_Component.boundedEnumWeekday))(parseDayOfWeekName(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))));
          };
          if (v instanceof DayOfWeekNameShort) {
              return modifyWithParser(function (v1) {
                  return function (v2) {
                      return {
                          day: v2,
                          hour: v1.hour,
                          meridiem: v1.meridiem,
                          millisecond: v1.millisecond,
                          minute: v1.minute,
                          month: v1.month,
                          second: v1.second,
                          year: v1.year
                      };
                  };
              })(Data_Functor.map(Text_Parsing_Parser.functorParserT(Control_Monad_State_Trans.functorStateT(Data_Identity.functorIdentity)))(Data_Enum.fromEnum(Data_Date_Component.boundedEnumWeekday))(parseDayOfWeekNameShort(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))));
          };
          if (v instanceof Hours24) {
              return modifyWithParser(function (v1) {
                  return function (v2) {
                      return {
                          hour: v2,
                          day: v1.day,
                          meridiem: v1.meridiem,
                          millisecond: v1.millisecond,
                          minute: v1.minute,
                          month: v1.month,
                          second: v1.second,
                          year: v1.year
                      };
                  };
              })($$parseInt(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))(2)(Data_Semigroup.append(Control_Monad_Reader_Trans.semigroupReaderT(Data_Either.applyEither)(Data_Semigroup.semigroupUnit))(validateRange(0)(24))(exactLength))("Incorrect 24 hour"));
          };
          if (v instanceof Hours12) {
              return modifyWithParser(function (v1) {
                  return function (v2) {
                      return {
                          hour: v2,
                          day: v1.day,
                          meridiem: v1.meridiem,
                          millisecond: v1.millisecond,
                          minute: v1.minute,
                          month: v1.month,
                          second: v1.second,
                          year: v1.year
                      };
                  };
              })($$parseInt(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))(2)(Data_Semigroup.append(Control_Monad_Reader_Trans.semigroupReaderT(Data_Either.applyEither)(Data_Semigroup.semigroupUnit))(validateRange(0)(12))(exactLength))("Incorrect 12 hour"));
          };
          if (v instanceof Meridiem) {
              return modifyWithParser(function (v1) {
                  return function (v2) {
                      return {
                          meridiem: v2,
                          day: v1.day,
                          hour: v1.hour,
                          millisecond: v1.millisecond,
                          minute: v1.minute,
                          month: v1.month,
                          second: v1.second,
                          year: v1.year
                      };
                  };
              })(parseMeridiem(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity)));
          };
          if (v instanceof MinutesTwoDigits) {
              return modifyWithParser(function (v1) {
                  return function (v2) {
                      return {
                          minute: v2,
                          day: v1.day,
                          hour: v1.hour,
                          meridiem: v1.meridiem,
                          millisecond: v1.millisecond,
                          month: v1.month,
                          second: v1.second,
                          year: v1.year
                      };
                  };
              })($$parseInt(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))(2)(Data_Semigroup.append(Control_Monad_Reader_Trans.semigroupReaderT(Data_Either.applyEither)(Data_Semigroup.semigroupUnit))(validateRange(0)(59))(exactLength))("Incorrect 2-digit minute"));
          };
          if (v instanceof Minutes) {
              return modifyWithParser(function (v1) {
                  return function (v2) {
                      return {
                          minute: v2,
                          day: v1.day,
                          hour: v1.hour,
                          meridiem: v1.meridiem,
                          millisecond: v1.millisecond,
                          month: v1.month,
                          second: v1.second,
                          year: v1.year
                      };
                  };
              })($$parseInt(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))(2)(validateRange(0)(59))("Incorrect minute"));
          };
          if (v instanceof SecondsTwoDigits) {
              return modifyWithParser(function (v1) {
                  return function (v2) {
                      return {
                          second: v2,
                          day: v1.day,
                          hour: v1.hour,
                          meridiem: v1.meridiem,
                          millisecond: v1.millisecond,
                          minute: v1.minute,
                          month: v1.month,
                          year: v1.year
                      };
                  };
              })($$parseInt(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))(2)(Data_Semigroup.append(Control_Monad_Reader_Trans.semigroupReaderT(Data_Either.applyEither)(Data_Semigroup.semigroupUnit))(validateRange(0)(59))(exactLength))("Incorrect 2-digit second"));
          };
          if (v instanceof Seconds) {
              return modifyWithParser(function (v1) {
                  return function (v2) {
                      return {
                          second: v2,
                          day: v1.day,
                          hour: v1.hour,
                          meridiem: v1.meridiem,
                          millisecond: v1.millisecond,
                          minute: v1.minute,
                          month: v1.month,
                          year: v1.year
                      };
                  };
              })($$parseInt(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))(2)(validateRange(0)(59))("Incorrect second"));
          };
          if (v instanceof Milliseconds) {
              return modifyWithParser(function (v1) {
                  return function (v2) {
                      return {
                          millisecond: v2,
                          day: v1.day,
                          hour: v1.hour,
                          meridiem: v1.meridiem,
                          minute: v1.minute,
                          month: v1.month,
                          second: v1.second,
                          year: v1.year
                      };
                  };
              })($$parseInt(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))(3)(exactLength)("Incorrect millisecond"));
          };
          if (v instanceof Placeholder) {
              return Data_Functor["void"](Text_Parsing_Parser.functorParserT(Control_Monad_State_Trans.functorStateT(Data_Identity.functorIdentity)))(Text_Parsing_Parser_String.string(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))(v.value0));
          };
          if (v instanceof MillisecondsShort) {
              return modifyWithParser(function (v1) {
                  return function (v2) {
                      return {
                          millisecond: v2,
                          day: v1.day,
                          hour: v1.hour,
                          meridiem: v1.meridiem,
                          minute: v1.minute,
                          month: v1.month,
                          second: v1.second,
                          year: v1.year
                      };
                  };
              })(Data_Functor.mapFlipped(Text_Parsing_Parser.functorParserT(Control_Monad_State_Trans.functorStateT(Data_Identity.functorIdentity)))($$parseInt(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))(1)(exactLength)("Incorrect 1-digit millisecond"))(function (v1) {
                  return v1 * 100 | 0;
              }));
          };
          if (v instanceof MillisecondsTwoDigits) {
              return modifyWithParser(function (v1) {
                  return function (v2) {
                      return {
                          millisecond: v2,
                          day: v1.day,
                          hour: v1.hour,
                          meridiem: v1.meridiem,
                          minute: v1.minute,
                          month: v1.month,
                          second: v1.second,
                          year: v1.year
                      };
                  };
              })(Data_Functor.mapFlipped(Text_Parsing_Parser.functorParserT(Control_Monad_State_Trans.functorStateT(Data_Identity.functorIdentity)))($$parseInt(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))(2)(exactLength)("Incorrect 2-digit millisecond"))(function (v1) {
                  return v1 * 10 | 0;
              }));
          };
          throw new Error("Failed pattern match at Data.Formatter.DateTime (line 341, column 25 - line 399, column 74): " + [ v.constructor.name ]);
      };
  })();
  var adjustMeridiem = function (v) {
      return function (v1) {
          if (v instanceof Data_Maybe.Just && (v.value0 instanceof AM && v1 === 12)) {
              return 0;
          };
          if (v instanceof Data_Maybe.Just && (v.value0 instanceof PM && v1 === 12)) {
              return 12;
          };
          if (v instanceof Data_Maybe.Just && v.value0 instanceof PM) {
              return v1 + 12 | 0;
          };
          if (v instanceof Data_Maybe.Just && v.value0 instanceof AM) {
              return v1;
          };
          if (v instanceof Data_Maybe.Nothing && v1 === 24) {
              return 0;
          };
          if (v instanceof Data_Maybe.Nothing) {
              return v1;
          };
          throw new Error("Failed pattern match at Data.Formatter.DateTime (line 279, column 1 - line 279, column 44): " + [ v.constructor.name, v1.constructor.name ]);
      };
  };
  var adjustDay = function (v) {
      return function (n) {
          if (v instanceof Data_Maybe.Just && v.value0 === 24) {
              return n + 1 | 0;
          };
          return n;
      };
  };
  var unformatAccumToDateTime = function (a) {
      return Control_Apply.applySecond(Data_Either.applyEither)(validAccum(a))(Control_Apply.apply(Data_Either.applyEither)(Data_Functor.map(Data_Either.functorEither)(Data_DateTime.DateTime.create)(Control_Apply.apply(Data_Either.applyEither)(Control_Apply.apply(Data_Either.applyEither)(Data_Functor.map(Data_Either.functorEither)(Data_Date.canonicalDate)(Data_Maybe.maybe(new Data_Either.Left("Incorrect year"))(Control_Applicative.pure(Data_Either.applicativeEither))(Data_Enum.toEnum(Data_Date_Component.boundedEnumYear)(Data_Maybe.fromMaybe(0)(a.year)))))(Data_Maybe.maybe(new Data_Either.Left("Incorrect month"))(Control_Applicative.pure(Data_Either.applicativeEither))(Data_Enum.toEnum(Data_Date_Component.boundedEnumMonth)(Data_Maybe.fromMaybe(1)(a.month)))))(Data_Maybe.maybe(new Data_Either.Left("Incorrect day"))(Control_Applicative.pure(Data_Either.applicativeEither))(Data_Enum.toEnum(Data_Date_Component.boundedEnumDay)(adjustDay(a.hour)(Data_Maybe.fromMaybe(1)(a.day)))))))(Control_Apply.apply(Data_Either.applyEither)(Control_Apply.apply(Data_Either.applyEither)(Control_Apply.apply(Data_Either.applyEither)(Data_Functor.map(Data_Either.functorEither)(Data_Time.Time.create)(Data_Maybe.maybe(new Data_Either.Left("Incorrect hour"))(Control_Applicative.pure(Data_Either.applicativeEither))(Data_Enum.toEnum(Data_Time_Component.boundedEnumHour)(Data_Maybe.fromMaybe(0)(Data_Functor.map(Data_Maybe.functorMaybe)(adjustMeridiem(a.meridiem))(a.hour))))))(Data_Maybe.maybe(new Data_Either.Left("Incorrect minute"))(Control_Applicative.pure(Data_Either.applicativeEither))(Data_Enum.toEnum(Data_Time_Component.boundedEnumMinute)(Data_Maybe.fromMaybe(0)(a.minute)))))(Data_Maybe.maybe(new Data_Either.Left("Incorrect second"))(Control_Applicative.pure(Data_Either.applicativeEither))(Data_Enum.toEnum(Data_Time_Component.boundedEnumSecond)(Data_Maybe.fromMaybe(0)(a.second)))))(Data_Maybe.maybe(new Data_Either.Left("Incorrect millisecond"))(Control_Applicative.pure(Data_Either.applicativeEither))(Data_Enum.toEnum(Data_Time_Component.boundedEnumMillisecond)(Data_Maybe.fromMaybe(0)(a.millisecond))))));
  };
  var unformatParser = function (dictMonad) {
      return function (f) {
          var unState = function (dictMonad1) {
              return function (s) {
                  var v = Control_Monad_State.runState(s)(initialAccum);
                  return Control_Applicative.pure(dictMonad1.Applicative0())(new Data_Tuple.Tuple(Data_Functor.voidLeft(Data_Either.functorEither)(v.value0.value0)(v.value1), v.value0.value1));
              };
          };
          return Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(Text_Parsing_Parser.mapParserT(unState(dictMonad))(Data_Foldable.foldMap(Data_List_Types.foldableList)(Text_Parsing_Parser.monoidParserT(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))(Data_Monoid.monoidUnit))(unformatCommandParser)(f)))(function (acc) {
              return Data_Either.either(Text_Parsing_Parser.fail(dictMonad))(Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(dictMonad)))(unformatAccumToDateTime(acc));
          });
      };
  };
  var unformat = (function () {
      var $453 = unformatParser(Data_Identity.monadIdentity);
      return function ($454) {
          return Data_Formatter_Parser_Utils.runP($453($454));
      };
  })();
  exports["parseFormatString"] = parseFormatString;
  exports["unformat"] = unformat;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Ctl.Internal.Types.SystemStart"] = $PS["Ctl.Internal.Types.SystemStart"] || {};
  var exports = $PS["Ctl.Internal.Types.SystemStart"];
  var Control_Alt = $PS["Control.Alt"];
  var Data_BigInt = $PS["Data.BigInt"];
  var Data_DateTime_Instant = $PS["Data.DateTime.Instant"];
  var Data_Either = $PS["Data.Either"];
  var Data_Formatter_DateTime = $PS["Data.Formatter.DateTime"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_String_CodePoints = $PS["Data.String.CodePoints"];
  var sysStartUnixTime = function (v) {
      return Data_BigInt.fromNumber(Data_Newtype.unwrap()(Data_DateTime_Instant.unInstant(Data_DateTime_Instant.fromDateTime(v))));
  };
  var ogmiosDateTimeFormatStringSec = "YYYY-MM-DDTHH:mm:ss";
  var ogmiosDateTimeFormatStringMsec = ogmiosDateTimeFormatStringSec + ".SSS"; 
  var mkDateTimeFormatterUnsafe = (function () {
      var $10 = Data_Maybe.fromJust();
      return function ($11) {
          return $10(Data_Either.hush(Data_Formatter_DateTime.parseFormatString($11)));
      };
  })();
  var sysStartFromOgmiosTimestamp = function (timestamp) {
      var unformatSec = Data_Formatter_DateTime.unformat(mkDateTimeFormatterUnsafe(ogmiosDateTimeFormatStringSec))(Data_String_CodePoints.take(Data_String_CodePoints.length(ogmiosDateTimeFormatStringSec))(timestamp));
      var unformatMsec = Data_Formatter_DateTime.unformat(mkDateTimeFormatterUnsafe(ogmiosDateTimeFormatStringMsec))(Data_String_CodePoints.take(Data_String_CodePoints.length(ogmiosDateTimeFormatStringMsec))(timestamp));
      return Data_Functor.map(Data_Either.functorEither)(Data_Newtype.wrap())(Control_Alt.alt(Data_Either.altEither)(unformatMsec)(unformatSec));
  };
  exports["sysStartFromOgmiosTimestamp"] = sysStartFromOgmiosTimestamp;
  exports["sysStartUnixTime"] = sysStartUnixTime;
})(PS);
(function(exports) {
  "use strict";

  function lengthImpl (str) {
    return Array.from(str).length;
  }

  function padEndPrimeImpl (targetLength, str) {
    return str.padEnd(targetLength);
  }

  function padStartPrimeImpl (targetLength, str) {
    return str.padStart(targetLength);
  }                                                      
  exports.lengthImpl                 = lengthImpl;        
  exports.padEndPrimeImpl            = padEndPrimeImpl;
  exports.padStartPrimeImpl          = padStartPrimeImpl;
})(PS["Data.String.Utils"] = PS["Data.String.Utils"] || {});
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Data.String.Utils"] = $PS["Data.String.Utils"] || {};
  var exports = $PS["Data.String.Utils"];
  var $foreign = $PS["Data.String.Utils"];
  var Data_String_CodePoints = $PS["Data.String.CodePoints"];
  var Data_String_CodeUnits = $PS["Data.String.CodeUnits"];
  var padStart$prime = function (n) {
      return function (s) {
          return $foreign.padStartPrimeImpl(n, s);
      };
  };
  var padStart = function (n) {
      return function (s) {
          var numberOfCodeUnits = Data_String_CodeUnits.length(s);
          var numberOfCodePoints = Data_String_CodePoints.length(s);
          return padStart$prime((n + numberOfCodeUnits | 0) - numberOfCodePoints | 0)(s);
      };
  };
  var padEnd$prime = function (n) {
      return function (s) {
          return $foreign.padEndPrimeImpl(n, s);
      };
  };
  var padEnd = function (n) {
      return function (s) {
          var numberOfCodeUnits = Data_String_CodeUnits.length(s);
          var numberOfCodePoints = Data_String_CodePoints.length(s);
          return padEnd$prime((n + numberOfCodeUnits | 0) - numberOfCodePoints | 0)(s);
      };
  };                                     
  var length = function () {
      return function (s) {
          return $foreign.lengthImpl(s);
      };
  };
  exports["padEnd"] = padEnd;
  exports["padStart"] = padStart;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Ctl.Internal.QueryM.Ogmios"] = $PS["Ctl.Internal.QueryM.Ogmios"] || {};
  var exports = $PS["Ctl.Internal.QueryM.Ogmios"];
  var Aeson = $PS["Aeson"];
  var Control_Alt = $PS["Control.Alt"];
  var Control_Alternative = $PS["Control.Alternative"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_Reader_Trans = $PS["Control.Monad.Reader.Trans"];
  var Ctl_Internal_Cardano_Types_NativeScript = $PS["Ctl.Internal.Cardano.Types.NativeScript"];
  var Ctl_Internal_Cardano_Types_ScriptRef = $PS["Ctl.Internal.Cardano.Types.ScriptRef"];
  var Ctl_Internal_Cardano_Types_Transaction = $PS["Ctl.Internal.Cardano.Types.Transaction"];
  var Ctl_Internal_Cardano_Types_Value = $PS["Ctl.Internal.Cardano.Types.Value"];
  var Ctl_Internal_Deserialization_FromBytes = $PS["Ctl.Internal.Deserialization.FromBytes"];
  var Ctl_Internal_Helpers = $PS["Ctl.Internal.Helpers"];
  var Ctl_Internal_QueryM_JsonWsp = $PS["Ctl.Internal.QueryM.JsonWsp"];
  var Ctl_Internal_Serialization_Address = $PS["Ctl.Internal.Serialization.Address"];
  var Ctl_Internal_Serialization_Hash = $PS["Ctl.Internal.Serialization.Hash"];
  var Ctl_Internal_Types_BigNum = $PS["Ctl.Internal.Types.BigNum"];
  var Ctl_Internal_Types_ByteArray = $PS["Ctl.Internal.Types.ByteArray"];
  var Ctl_Internal_Types_CborBytes = $PS["Ctl.Internal.Types.CborBytes"];
  var Ctl_Internal_Types_EraSummaries = $PS["Ctl.Internal.Types.EraSummaries"];
  var Ctl_Internal_Types_Int = $PS["Ctl.Internal.Types.Int"];
  var Ctl_Internal_Types_Natural = $PS["Ctl.Internal.Types.Natural"];
  var Ctl_Internal_Types_ProtocolParameters = $PS["Ctl.Internal.Types.ProtocolParameters"];
  var Ctl_Internal_Types_Rational = $PS["Ctl.Internal.Types.Rational"];
  var Ctl_Internal_Types_RedeemerTag = $PS["Ctl.Internal.Types.RedeemerTag"];
  var Ctl_Internal_Types_RewardAddress = $PS["Ctl.Internal.Types.RewardAddress"];
  var Ctl_Internal_Types_Scripts = $PS["Ctl.Internal.Types.Scripts"];
  var Ctl_Internal_Types_SystemStart = $PS["Ctl.Internal.Types.SystemStart"];
  var Ctl_Internal_Types_TokenName = $PS["Ctl.Internal.Types.TokenName"];
  var Ctl_Internal_Types_VRFKeyHash = $PS["Ctl.Internal.Types.VRFKeyHash"];
  var Data_Argonaut_Decode_Error = $PS["Data.Argonaut.Decode.Error"];
  var Data_Array = $PS["Data.Array"];
  var Data_Bifunctor = $PS["Data.Bifunctor"];
  var Data_BigInt = $PS["Data.BigInt"];
  var Data_Either = $PS["Data.Either"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Generic_Rep = $PS["Data.Generic.Rep"];
  var Data_Int = $PS["Data.Int"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Map_Internal = $PS["Data.Map.Internal"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Semiring = $PS["Data.Semiring"];
  var Data_Show = $PS["Data.Show"];
  var Data_Show_Generic = $PS["Data.Show.Generic"];
  var Data_String_Common = $PS["Data.String.Common"];
  var Data_String_Utils = $PS["Data.String.Utils"];
  var Data_Traversable = $PS["Data.Traversable"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unfoldable = $PS["Data.Unfoldable"];
  var Foreign_Object = $PS["Foreign.Object"];
  var Untagged_TypeCheck = $PS["Untagged.TypeCheck"];
  var Untagged_Union = $PS["Untagged.Union"];                
  var SubmitTxSuccess = (function () {
      function SubmitTxSuccess(value0) {
          this.value0 = value0;
      };
      SubmitTxSuccess.create = function (value0) {
          return new SubmitTxSuccess(value0);
      };
      return SubmitTxSuccess;
  })();
  var SubmitFail = (function () {
      function SubmitFail(value0) {
          this.value0 = value0;
      };
      SubmitFail.create = function (value0) {
          return new SubmitFail(value0);
      };
      return SubmitFail;
  })();
  var PParamRational = function (x) {
      return x;
  };
  var AwaitAcquired = function (x) {
      return x;
  };
  var ExtraRedeemers = (function () {
      function ExtraRedeemers(value0) {
          this.value0 = value0;
      };
      ExtraRedeemers.create = function (value0) {
          return new ExtraRedeemers(value0);
      };
      return ExtraRedeemers;
  })();
  var MissingRequiredDatums = (function () {
      function MissingRequiredDatums(value0) {
          this.value0 = value0;
      };
      MissingRequiredDatums.create = function (value0) {
          return new MissingRequiredDatums(value0);
      };
      return MissingRequiredDatums;
  })();
  var MissingRequiredScripts = (function () {
      function MissingRequiredScripts(value0) {
          this.value0 = value0;
      };
      MissingRequiredScripts.create = function (value0) {
          return new MissingRequiredScripts(value0);
      };
      return MissingRequiredScripts;
  })();
  var ValidatorFailed = (function () {
      function ValidatorFailed(value0) {
          this.value0 = value0;
      };
      ValidatorFailed.create = function (value0) {
          return new ValidatorFailed(value0);
      };
      return ValidatorFailed;
  })();
  var UnknownInputReferencedByRedeemer = (function () {
      function UnknownInputReferencedByRedeemer(value0) {
          this.value0 = value0;
      };
      UnknownInputReferencedByRedeemer.create = function (value0) {
          return new UnknownInputReferencedByRedeemer(value0);
      };
      return UnknownInputReferencedByRedeemer;
  })();
  var NonScriptInputReferencedByRedeemer = (function () {
      function NonScriptInputReferencedByRedeemer(value0) {
          this.value0 = value0;
      };
      NonScriptInputReferencedByRedeemer.create = function (value0) {
          return new NonScriptInputReferencedByRedeemer(value0);
      };
      return NonScriptInputReferencedByRedeemer;
  })();
  var IllFormedExecutionBudget = (function () {
      function IllFormedExecutionBudget(value0) {
          this.value0 = value0;
      };
      IllFormedExecutionBudget.create = function (value0) {
          return new IllFormedExecutionBudget(value0);
      };
      return IllFormedExecutionBudget;
  })();
  var NoCostModelForLanguage = (function () {
      function NoCostModelForLanguage(value0) {
          this.value0 = value0;
      };
      NoCostModelForLanguage.create = function (value0) {
          return new NoCostModelForLanguage(value0);
      };
      return NoCostModelForLanguage;
  })();
  var UnparsedError = (function () {
      function UnparsedError(value0) {
          this.value0 = value0;
      };
      UnparsedError.create = function (value0) {
          return new UnparsedError(value0);
      };
      return UnparsedError;
  })();
  var ScriptFailures = (function () {
      function ScriptFailures(value0) {
          this.value0 = value0;
      };
      ScriptFailures.create = function (value0) {
          return new ScriptFailures(value0);
      };
      return ScriptFailures;
  })();
  var TxEvaluationResult = function (x) {
      return x;
  };
  var CtChainOrigin = (function () {
      function CtChainOrigin(value0) {
          this.value0 = value0;
      };
      CtChainOrigin.create = function (value0) {
          return new CtChainOrigin(value0);
      };
      return CtChainOrigin;
  })();
  var CtChainPoint = (function () {
      function CtChainPoint(value0) {
          this.value0 = value0;
      };
      CtChainPoint.create = function (value0) {
          return new CtChainPoint(value0);
      };
      return CtChainPoint;
  })();
  var hasRuntimeTypeChainOrigin = Untagged_TypeCheck.hasRuntimeTypeString;
  var genericTxEvaluationFailur = {
      to: function (x) {
          if (x instanceof Data_Generic_Rep.Inl) {
              return new UnparsedError(x.value0);
          };
          if (x instanceof Data_Generic_Rep.Inr) {
              return new ScriptFailures(x.value0);
          };
          throw new Error("Failed pattern match at Ctl.Internal.QueryM.Ogmios (line 709, column 1 - line 709, column 46): " + [ x.constructor.name ]);
      },
      from: function (x) {
          if (x instanceof UnparsedError) {
              return new Data_Generic_Rep.Inl(x.value0);
          };
          if (x instanceof ScriptFailures) {
              return new Data_Generic_Rep.Inr(x.value0);
          };
          throw new Error("Failed pattern match at Ctl.Internal.QueryM.Ogmios (line 709, column 1 - line 709, column 46): " + [ x.constructor.name ]);
      }
  };
  var genericScriptFailure_ = {
      to: function (x) {
          if (x instanceof Data_Generic_Rep.Inl) {
              return new ExtraRedeemers(x.value0);
          };
          if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inl) {
              return new MissingRequiredDatums(x.value0.value0);
          };
          if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0 instanceof Data_Generic_Rep.Inl)) {
              return new MissingRequiredScripts(x.value0.value0.value0);
          };
          if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0 instanceof Data_Generic_Rep.Inl))) {
              return new ValidatorFailed(x.value0.value0.value0.value0);
          };
          if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl)))) {
              return new UnknownInputReferencedByRedeemer(x.value0.value0.value0.value0.value0);
          };
          if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl))))) {
              return new NonScriptInputReferencedByRedeemer(x.value0.value0.value0.value0.value0.value0);
          };
          if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl)))))) {
              return new IllFormedExecutionBudget(x.value0.value0.value0.value0.value0.value0.value0);
          };
          if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr)))))) {
              return new NoCostModelForLanguage(x.value0.value0.value0.value0.value0.value0.value0);
          };
          throw new Error("Failed pattern match at Ctl.Internal.QueryM.Ogmios (line 695, column 1 - line 695, column 40): " + [ x.constructor.name ]);
      },
      from: function (x) {
          if (x instanceof ExtraRedeemers) {
              return new Data_Generic_Rep.Inl(x.value0);
          };
          if (x instanceof MissingRequiredDatums) {
              return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0));
          };
          if (x instanceof MissingRequiredScripts) {
              return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0)));
          };
          if (x instanceof ValidatorFailed) {
              return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0))));
          };
          if (x instanceof UnknownInputReferencedByRedeemer) {
              return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0)))));
          };
          if (x instanceof NonScriptInputReferencedByRedeemer) {
              return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0))))));
          };
          if (x instanceof IllFormedExecutionBudget) {
              return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0)))))));
          };
          if (x instanceof NoCostModelForLanguage) {
              return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(x.value0)))))));
          };
          throw new Error("Failed pattern match at Ctl.Internal.QueryM.Ogmios (line 695, column 1 - line 695, column 40): " + [ x.constructor.name ]);
      }
  };
  var showScriptFailure = {
      show: Data_Show_Generic.genericShow(genericScriptFailure_)(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Data_Show.showArray(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "redeemerIndex";
          }
      })(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "redeemerTag";
          }
      })(Data_Show.showRecordFieldsNil)(Ctl_Internal_Types_RedeemerTag.showRedeemerTag))(Ctl_Internal_Types_Natural.showNatural)))))({
          reflectSymbol: function () {
              return "ExtraRedeemers";
          }
      }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "missing";
          }
      })(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "provided";
          }
      })(Data_Show.showRecordFieldsNil)(Data_Maybe.showMaybe(Data_Show.showArray(Data_Show.showString))))(Data_Show.showArray(Data_Show.showString)))))({
          reflectSymbol: function () {
              return "MissingRequiredDatums";
          }
      }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "missing";
          }
      })(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "resolved";
          }
      })(Data_Show.showRecordFieldsNil)(Data_Map_Internal.showMap(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "redeemerIndex";
          }
      })(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "redeemerTag";
          }
      })(Data_Show.showRecordFieldsNil)(Ctl_Internal_Types_RedeemerTag.showRedeemerTag))(Ctl_Internal_Types_Natural.showNatural)))(Data_Show.showString)))(Data_Show.showArray(Data_Show.showString)))))({
          reflectSymbol: function () {
              return "MissingRequiredScripts";
          }
      }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "error";
          }
      })(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "traces";
          }
      })(Data_Show.showRecordFieldsNil)(Data_Show.showArray(Data_Show.showString)))(Data_Show.showString))))({
          reflectSymbol: function () {
              return "ValidatorFailed";
          }
      }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "index";
          }
      })(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "txId";
          }
      })(Data_Show.showRecordFieldsNil)(Data_Show.showString))(Data_Show.showInt))))({
          reflectSymbol: function () {
              return "UnknownInputReferencedByRedeemer";
          }
      }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "index";
          }
      })(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "txId";
          }
      })(Data_Show.showRecordFieldsNil)(Data_Show.showString))(Data_Show.showInt))))({
          reflectSymbol: function () {
              return "NonScriptInputReferencedByRedeemer";
          }
      }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Data_Maybe.showMaybe(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "memory";
          }
      })(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "steps";
          }
      })(Data_Show.showRecordFieldsNil)(Ctl_Internal_Types_Natural.showNatural))(Ctl_Internal_Types_Natural.showNatural)))))({
          reflectSymbol: function () {
              return "IllFormedExecutionBudget";
          }
      }))(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Data_Show.showString))({
          reflectSymbol: function () {
              return "NoCostModelForLanguage";
          }
      })))))))))
  };
  var showTxEvaluationFailure = {
      show: Data_Show_Generic.genericShow(genericTxEvaluationFailur)(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Data_Show.showString))({
          reflectSymbol: function () {
              return "UnparsedError";
          }
      }))(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Data_Map_Internal.showMap(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "redeemerIndex";
          }
      })(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "redeemerTag";
          }
      })(Data_Show.showRecordFieldsNil)(Ctl_Internal_Types_RedeemerTag.showRedeemerTag))(Ctl_Internal_Types_Natural.showNatural)))(Data_Show.showArray(showScriptFailure))))({
          reflectSymbol: function () {
              return "ScriptFailures";
          }
      })))
  };                                                    
  var encodeAesonAdditionalUtxo = {
      encodeAeson: function (v) {
          var utxos = Data_Map_Internal.toUnfoldable(Data_Unfoldable.unfoldableArray)(v);
          var encodeNonAdaAsset = function (assets) {
              var createKey = function (cs) {
                  return function (tn) {
                      var tn$prime = Ctl_Internal_Types_TokenName.getTokenName(tn);
                      var tnHex = Ctl_Internal_Types_ByteArray.byteArrayToHex(tn$prime);
                      var cs$prime = Ctl_Internal_Cardano_Types_Value.getCurrencySymbol(cs);
                      var csHex = Ctl_Internal_Types_ByteArray.byteArrayToHex(cs$prime);
                      var $276 = Data_Eq.eq(Ctl_Internal_Types_ByteArray.eqByteArray)(tn$prime)(Data_Monoid.mempty(Ctl_Internal_Types_ByteArray.monoidByteArray));
                      if ($276) {
                          return csHex;
                      };
                      return csHex + ("." + tnHex);
                  };
              };
              return Ctl_Internal_Helpers.encodeMap(Aeson.encodeAesonString)(Aeson.encodeAesonBigInt)(Data_Foldable.foldl(Data_List_Types.foldableList)(function (m$prime) {
                  return function (v1) {
                      return Data_Map_Internal.insert(Data_Ord.ordString)(createKey(v1.value0)(v1.value1.value0))(v1.value1.value1)(m$prime);
                  };
              })(Data_Map_Internal.empty)(Ctl_Internal_Cardano_Types_Value.flattenNonAdaValue(assets)));
          };
          var encodeNativeScript = function (v1) {
              if (v1 instanceof Ctl_Internal_Cardano_Types_NativeScript.ScriptPubkey) {
                  return Aeson.encodeAeson(Ctl_Internal_Serialization_Hash.encodeAesonEd25519KeyHash)(v1.value0);
              };
              if (v1 instanceof Ctl_Internal_Cardano_Types_NativeScript.ScriptAll) {
                  return Aeson.encodeAeson(Aeson.encodeAesonRecord(Aeson.gEncodeAesonCons(Aeson.encodeAesonArray(Aeson.encodeAesonAeson))(Aeson.gEncodeAesonNil)({
                      reflectSymbol: function () {
                          return "all";
                      }
                  })())())({
                      all: Data_Functor.map(Data_Functor.functorArray)(encodeNativeScript)(v1.value0)
                  });
              };
              if (v1 instanceof Ctl_Internal_Cardano_Types_NativeScript.ScriptAny) {
                  return Aeson.encodeAeson(Aeson.encodeAesonRecord(Aeson.gEncodeAesonCons(Aeson.encodeAesonArray(Aeson.encodeAesonAeson))(Aeson.gEncodeAesonNil)({
                      reflectSymbol: function () {
                          return "any";
                      }
                  })())())({
                      any: Data_Functor.map(Data_Functor.functorArray)(encodeNativeScript)(v1.value0)
                  });
              };
              if (v1 instanceof Ctl_Internal_Cardano_Types_NativeScript.ScriptNOfK) {
                  return Aeson.encodeAeson(Aeson.encodeAesonObject(Aeson.encodeAesonArray(Aeson.encodeAesonAeson)))(Foreign_Object.singleton(Data_BigInt.toString(Data_BigInt.fromInt(v1.value0)))(Data_Functor.map(Data_Functor.functorArray)(encodeNativeScript)(v1.value1)));
              };
              if (v1 instanceof Ctl_Internal_Cardano_Types_NativeScript.TimelockStart) {
                  return Aeson.encodeAeson(Aeson.encodeAesonRecord(Aeson.gEncodeAesonCons(Ctl_Internal_Types_BigNum.encodeAesonBigNum)(Aeson.gEncodeAesonNil)({
                      reflectSymbol: function () {
                          return "startsAt";
                      }
                  })())())({
                      startsAt: v1.value0
                  });
              };
              if (v1 instanceof Ctl_Internal_Cardano_Types_NativeScript.TimelockExpiry) {
                  return Aeson.encodeAeson(Aeson.encodeAesonRecord(Aeson.gEncodeAesonCons(Ctl_Internal_Types_BigNum.encodeAesonBigNum)(Aeson.gEncodeAesonNil)({
                      reflectSymbol: function () {
                          return "expiresAt";
                      }
                  })())())({
                      expiresAt: v1.value0
                  });
              };
              throw new Error("Failed pattern match at Ctl.Internal.QueryM.Ogmios (line 1024, column 5 - line 1024, column 48): " + [ v1.constructor.name ]);
          };
          var encodeScriptRef = function (v1) {
              if (v1 instanceof Ctl_Internal_Cardano_Types_ScriptRef.NativeScriptRef) {
                  return Aeson.encodeAeson(Aeson.encodeAesonRecord(Aeson.gEncodeAesonCons(Aeson.encodeAesonAeson)(Aeson.gEncodeAesonNil)({
                      reflectSymbol: function () {
                          return "native";
                      }
                  })())())({
                      "native": encodeNativeScript(v1.value0)
                  });
              };
              if (v1 instanceof Ctl_Internal_Cardano_Types_ScriptRef.PlutusScriptRef && v1.value0.value1 instanceof Ctl_Internal_Types_Scripts.PlutusV1) {
                  return Aeson.encodeAeson(Aeson.encodeAesonRecord(Aeson.gEncodeAesonCons(Ctl_Internal_Types_ByteArray.encodeAesonByteArray)(Aeson.gEncodeAesonNil)({
                      reflectSymbol: function () {
                          return "plutus:v1";
                      }
                  })())())({
                      "plutus:v1": v1.value0.value0
                  });
              };
              if (v1 instanceof Ctl_Internal_Cardano_Types_ScriptRef.PlutusScriptRef && v1.value0.value1 instanceof Ctl_Internal_Types_Scripts.PlutusV2) {
                  return Aeson.encodeAeson(Aeson.encodeAesonRecord(Aeson.gEncodeAesonCons(Ctl_Internal_Types_ByteArray.encodeAesonByteArray)(Aeson.gEncodeAesonNil)({
                      reflectSymbol: function () {
                          return "plutus:v2";
                      }
                  })())())({
                      "plutus:v2": v1.value0.value0
                  });
              };
              throw new Error("Failed pattern match at Ctl.Internal.QueryM.Ogmios (line 1039, column 5 - line 1039, column 42): " + [ v1.constructor.name ]);
          };
          var encode = function (v1) {
              return Aeson.encodeAeson(Aeson.encodeAesonTuple(Aeson.encodeTupleAuxTuple(Aeson.encodeAesonRecord(Aeson.gEncodeAesonCons(Aeson.encodeAesonUInt)(Aeson.gEncodeAesonCons(Aeson.encodeAesonString)(Aeson.gEncodeAesonNil)({
                  reflectSymbol: function () {
                      return "txId";
                  }
              })())({
                  reflectSymbol: function () {
                      return "index";
                  }
              })())())(Aeson.encodeAesonRecord(Aeson.gEncodeAesonCons(Aeson.encodeAesonString)(Aeson.gEncodeAesonCons(Aeson.encodeAesonMaybe(Aeson.encodeAesonString))(Aeson.gEncodeAesonCons(Aeson.encodeAesonMaybe(Aeson.encodeAesonString))(Aeson.gEncodeAesonCons(Aeson.encodeAesonMaybe(Aeson.encodeAesonAeson))(Aeson.gEncodeAesonCons(Aeson.encodeAesonRecord(Aeson.gEncodeAesonCons(Aeson.encodeAesonAeson)(Aeson.gEncodeAesonCons(Aeson.encodeAesonBigInt)(Aeson.gEncodeAesonNil)({
                  reflectSymbol: function () {
                      return "coins";
                  }
              })())({
                  reflectSymbol: function () {
                      return "assets";
                  }
              })())())(Aeson.gEncodeAesonNil)({
                  reflectSymbol: function () {
                      return "value";
                  }
              })())({
                  reflectSymbol: function () {
                      return "script";
                  }
              })())({
                  reflectSymbol: function () {
                      return "datumHash";
                  }
              })())({
                  reflectSymbol: function () {
                      return "datum";
                  }
              })())({
                  reflectSymbol: function () {
                      return "address";
                  }
              })())())))(new Data_Tuple.Tuple({
                  txId: v1.value0.txId,
                  index: v1.value0.index
              }, {
                  address: v1.value1.address,
                  datumHash: v1.value1.datumHash,
                  datum: v1.value1.datum,
                  script: Data_Functor.map(Data_Maybe.functorMaybe)(encodeScriptRef)(v1.value1.script),
                  value: {
                      coins: Ctl_Internal_Cardano_Types_Value.getLovelace(Ctl_Internal_Cardano_Types_Value.valueToCoin(v1.value1.value)),
                      assets: encodeNonAdaAsset(Ctl_Internal_Cardano_Types_Value.getNonAdaAsset(v1.value1.value))
                  }
              }));
          };
          return Aeson.encodeAeson(Aeson.encodeAesonArray(Aeson.encodeAesonAeson))(Data_Functor.map(Data_Functor.functorArray)(encode)(utxos));
      }
  };
  var decodeAesonPParamRational = {
      decodeAeson: (function () {
          var err = new Data_Argonaut_Decode_Error.TypeMismatch("PParamRaional");
          return Aeson.caseAesonString(new Data_Either.Left(err))(function (string) {
              var v = Data_String_Common.split("/")(string);
              if (v.length === 2) {
                  return Data_Either.note(err)(Control_Bind.bind(Data_Maybe.bindMaybe)(Data_BigInt.fromString(v[0]))(function (numerator) {
                      return Control_Bind.bind(Data_Maybe.bindMaybe)(Data_BigInt.fromString(v[1]))(function (denominator) {
                          return Data_Functor.map(Data_Maybe.functorMaybe)(PParamRational)(Ctl_Internal_Types_Rational.reduce(Ctl_Internal_Types_Rational.rationalComponentBigInt)(numerator)(denominator));
                      });
                  }));
              };
              return new Data_Either.Left(err);
          });
      })()
  };
  var decodeAesonOgmiosSystemSt = {
      decodeAeson: Aeson.caseAesonString(new Data_Either.Left(new Data_Argonaut_Decode_Error.TypeMismatch("Timestamp string")))((function () {
          var $387 = Data_Functor.map(Data_Either.functorEither)(Data_Newtype.wrap());
          var $388 = Data_Bifunctor.lmap(Data_Bifunctor.bifunctorEither)(Data_Argonaut_Decode_Error.TypeMismatch.create);
          return function ($389) {
              return $387($388(Ctl_Internal_Types_SystemStart.sysStartFromOgmiosTimestamp($389)));
          };
      })())
  };
  var decodeAesonOgmiosBlockHea = Aeson.decodeAesonString;
  var decodeAesonDelegationsAnd = {
      decodeAeson: function (aeson) {
          return Control_Bind.bind(Data_Either.bindEither)(Aeson.decodeAeson(Aeson.decodeAesonObject(Aeson.decodeAesonObject(Aeson.decodeAesonAeson)))(aeson))(function (v) {
              return Control_Bind.bind(Data_Either.bindEither)(Data_Traversable["for"](Data_Either.applicativeEither)(Data_Traversable.traversableArray)(Foreign_Object.toUnfoldable(Data_Unfoldable.unfoldableArray)(v))(function (v1) {
                  return Control_Bind.bind(Data_Either.bindEither)(Data_Functor.map(Data_Either.functorEither)(Data_Functor.map(Data_Maybe.functorMaybe)(Ctl_Internal_Cardano_Types_Value.Coin))(Aeson["getFieldOptional'"](Aeson.decodeAesonBigInt)(v1.value1)("rewards")))(function (rewards) {
                      return Control_Bind.bind(Data_Either.bindEither)(Aeson["getFieldOptional'"](Ctl_Internal_Cardano_Types_Transaction.decodeAesonPoolPubKeyHash)(v1.value1)("delegate"))(function (delegate) {
                          return Control_Applicative.pure(Data_Either.applicativeEither)(new Data_Tuple.Tuple(v1.value0, {
                              rewards: rewards,
                              delegate: delegate
                          }));
                      });
                  });
              }))(function (kvs) {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(Data_Map_Internal.fromFoldable(Data_Ord.ordString)(Data_Foldable.foldableArray)(kvs));
              });
          });
      }
  };
  var decodeAesonCurrentEpoch = Aeson.decodeAesonBigInt;
  var decodeAesonChainOrigin = Aeson.decodeAesonString;
  var decodeAesonChainTipQR = {
      decodeAeson: function (j) {
          return Control_Bind.bind(Data_Either.bindEither)(Aeson.decodeAeson(Aeson["decodeAeson|+|"]()(decodeAesonChainOrigin)(Aeson.decodeAesonRecord(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(decodeAesonOgmiosBlockHea))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Serialization_Address.decodeAesonSlot))(Aeson.gDecodeAesonRowNil)({
              reflectSymbol: function () {
                  return "slot";
              }
          })()())({
              reflectSymbol: function () {
                  return "hash";
              }
          })()())()))(j))(function (v) {
              return Control_Applicative.pure(Data_Either.applicativeEither)(Data_Either.either(CtChainOrigin.create)(CtChainPoint.create)(Untagged_Union.toEither1(hasRuntimeTypeChainOrigin)(v)));
          });
      }
  };
  var slotLengthFactor = 1000.0;
  var redeemerPtrTypeMismatch = new Data_Argonaut_Decode_Error.TypeMismatch("Expected redeemer pointer to be encoded as: ^(spend|mint|certificate|withdrawal):[0-9]+$");
  var rationalToSubcoin = function (v) {
      return Control_Bind.bind(Data_Maybe.bindMaybe)(Ctl_Internal_Types_BigNum.fromBigInt(Ctl_Internal_Types_Rational.numerator(v)))(function (numerator) {
          return Control_Bind.bind(Data_Maybe.bindMaybe)(Ctl_Internal_Types_BigNum.fromBigInt(Ctl_Internal_Types_Rational.denominator(v)))(function (denominator) {
              return Control_Applicative.pure(Data_Maybe.applicativeMaybe)({
                  numerator: numerator,
                  denominator: denominator
              });
          });
      });
  };
  var decodeAesonOgmiosProtocol = {
      decodeAeson: function (aeson) {
          var decodePrices = function (ps) {
              return Data_Either.note(new Data_Argonaut_Decode_Error.TypeMismatch("ExUnitPrices"))(Control_Bind.bind(Data_Maybe.bindMaybe)(rationalToSubcoin(ps.prices.memory))(function (memPrice) {
                  return Control_Bind.bind(Data_Maybe.bindMaybe)(rationalToSubcoin(ps.prices.steps))(function (stepPrice) {
                      return Control_Applicative.pure(Data_Maybe.applicativeMaybe)({
                          memPrice: memPrice,
                          stepPrice: stepPrice
                      });
                  });
              }));
          };
          var decodeExUnits = function (v) {
              return {
                  mem: v.memory,
                  steps: v.steps
              };
          };
          return Control_Bind.bind(Data_Either.bindEither)(Aeson.decodeAeson(Aeson.decodeAesonRecord(Aeson.gDecodeAesonCons(Aeson.decodeAesonFieldMaybe(Aeson.decodeAesonBigInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonFieldMaybe(Aeson.decodeAesonBigInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Aeson.decodeAesonUInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Aeson.decodeAesonRecord(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Aeson.decodeAesonRecord(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonRowNil)({
              reflectSymbol: function () {
                  return "verifyEd25519Signature-memory-arguments";
              }
          })()())({
              reflectSymbol: function () {
                  return "verifyEd25519Signature-cpu-arguments-slope";
              }
          })()())({
              reflectSymbol: function () {
                  return "verifyEd25519Signature-cpu-arguments-intercept";
              }
          })()())({
              reflectSymbol: function () {
                  return "unMapData-memory-arguments";
              }
          })()())({
              reflectSymbol: function () {
                  return "unMapData-cpu-arguments";
              }
          })()())({
              reflectSymbol: function () {
                  return "unListData-memory-arguments";
              }
          })()())({
              reflectSymbol: function () {
                  return "unListData-cpu-arguments";
              }
          })()())({
              reflectSymbol: function () {
                  return "unIData-memory-arguments";
              }
          })()())({
              reflectSymbol: function () {
                  return "unIData-cpu-arguments";
              }
          })()())({
              reflectSymbol: function () {
                  return "unConstrData-memory-arguments";
              }
          })()())({
              reflectSymbol: function () {
                  return "unConstrData-cpu-arguments";
              }
          })()())({
              reflectSymbol: function () {
                  return "unBData-memory-arguments";
              }
          })()())({
              reflectSymbol: function () {
                  return "unBData-cpu-arguments";
              }
          })()())({
              reflectSymbol: function () {
                  return "trace-memory-arguments";
              }
          })()())({
              reflectSymbol: function () {
                  return "trace-cpu-arguments";
              }
          })()())({
              reflectSymbol: function () {
                  return "tailList-memory-arguments";
              }
          })()())({
              reflectSymbol: function () {
                  return "tailList-cpu-arguments";
              }
          })()())({
              reflectSymbol: function () {
                  return "subtractInteger-memory-arguments-slope";
              }
          })()())({
              reflectSymbol: function () {
                  return "subtractInteger-memory-arguments-intercept";
              }
          })()())({
              reflectSymbol: function () {
                  return "subtractInteger-cpu-arguments-slope";
              }
          })()())({
              reflectSymbol: function () {
                  return "subtractInteger-cpu-arguments-intercept";
              }
          })()())({
              reflectSymbol: function () {
                  return "sndPair-memory-arguments";
              }
          })()())({
              reflectSymbol: function () {
                  return "sndPair-cpu-arguments";
              }
          })()())({
              reflectSymbol: function () {
                  return "sliceByteString-memory-arguments-slope";
              }
          })()())({
              reflectSymbol: function () {
                  return "sliceByteString-memory-arguments-intercept";
              }
          })()())({
              reflectSymbol: function () {
                  return "sliceByteString-cpu-arguments-slope";
              }
          })()())({
              reflectSymbol: function () {
                  return "sliceByteString-cpu-arguments-intercept";
              }
          })()())({
              reflectSymbol: function () {
                  return "sha3_256-memory-arguments";
              }
          })()())({
              reflectSymbol: function () {
                  return "sha3_256-cpu-arguments-slope";
              }
          })()())({
              reflectSymbol: function () {
                  return "sha3_256-cpu-arguments-intercept";
              }
          })()())({
              reflectSymbol: function () {
                  return "sha2_256-memory-arguments";
              }
          })()())({
              reflectSymbol: function () {
                  return "sha2_256-cpu-arguments-slope";
              }
          })()())({
              reflectSymbol: function () {
                  return "sha2_256-cpu-arguments-intercept";
              }
          })()())({
              reflectSymbol: function () {
                  return "remainderInteger-memory-arguments-slope";
              }
          })()())({
              reflectSymbol: function () {
                  return "remainderInteger-memory-arguments-minimum";
              }
          })()())({
              reflectSymbol: function () {
                  return "remainderInteger-memory-arguments-intercept";
              }
          })()())({
              reflectSymbol: function () {
                  return "remainderInteger-cpu-arguments-model-arguments-slope";
              }
          })()())({
              reflectSymbol: function () {
                  return "remainderInteger-cpu-arguments-model-arguments-intercept";
              }
          })()())({
              reflectSymbol: function () {
                  return "remainderInteger-cpu-arguments-constant";
              }
          })()())({
              reflectSymbol: function () {
                  return "quotientInteger-memory-arguments-slope";
              }
          })()())({
              reflectSymbol: function () {
                  return "quotientInteger-memory-arguments-minimum";
              }
          })()())({
              reflectSymbol: function () {
                  return "quotientInteger-memory-arguments-intercept";
              }
          })()())({
              reflectSymbol: function () {
                  return "quotientInteger-cpu-arguments-model-arguments-slope";
              }
          })()())({
              reflectSymbol: function () {
                  return "quotientInteger-cpu-arguments-model-arguments-intercept";
              }
          })()())({
              reflectSymbol: function () {
                  return "quotientInteger-cpu-arguments-constant";
              }
          })()())({
              reflectSymbol: function () {
                  return "nullList-memory-arguments";
              }
          })()())({
              reflectSymbol: function () {
                  return "nullList-cpu-arguments";
              }
          })()())({
              reflectSymbol: function () {
                  return "multiplyInteger-memory-arguments-slope";
              }
          })()())({
              reflectSymbol: function () {
                  return "multiplyInteger-memory-arguments-intercept";
              }
          })()())({
              reflectSymbol: function () {
                  return "multiplyInteger-cpu-arguments-slope";
              }
          })()())({
              reflectSymbol: function () {
                  return "multiplyInteger-cpu-arguments-intercept";
              }
          })()())({
              reflectSymbol: function () {
                  return "modInteger-memory-arguments-slope";
              }
          })()())({
              reflectSymbol: function () {
                  return "modInteger-memory-arguments-minimum";
              }
          })()())({
              reflectSymbol: function () {
                  return "modInteger-memory-arguments-intercept";
              }
          })()())({
              reflectSymbol: function () {
                  return "modInteger-cpu-arguments-model-arguments-slope";
              }
          })()())({
              reflectSymbol: function () {
                  return "modInteger-cpu-arguments-model-arguments-intercept";
              }
          })()())({
              reflectSymbol: function () {
                  return "modInteger-cpu-arguments-constant";
              }
          })()())({
              reflectSymbol: function () {
                  return "mkPairData-memory-arguments";
              }
          })()())({
              reflectSymbol: function () {
                  return "mkPairData-cpu-arguments";
              }
          })()())({
              reflectSymbol: function () {
                  return "mkNilPairData-memory-arguments";
              }
          })()())({
              reflectSymbol: function () {
                  return "mkNilPairData-cpu-arguments";
              }
          })()())({
              reflectSymbol: function () {
                  return "mkNilData-memory-arguments";
              }
          })()())({
              reflectSymbol: function () {
                  return "mkNilData-cpu-arguments";
              }
          })()())({
              reflectSymbol: function () {
                  return "mkCons-memory-arguments";
              }
          })()())({
              reflectSymbol: function () {
                  return "mkCons-cpu-arguments";
              }
          })()())({
              reflectSymbol: function () {
                  return "mapData-memory-arguments";
              }
          })()())({
              reflectSymbol: function () {
                  return "mapData-cpu-arguments";
              }
          })()())({
              reflectSymbol: function () {
                  return "listData-memory-arguments";
              }
          })()())({
              reflectSymbol: function () {
                  return "listData-cpu-arguments";
              }
          })()())({
              reflectSymbol: function () {
                  return "lessThanInteger-memory-arguments";
              }
          })()())({
              reflectSymbol: function () {
                  return "lessThanInteger-cpu-arguments-slope";
              }
          })()())({
              reflectSymbol: function () {
                  return "lessThanInteger-cpu-arguments-intercept";
              }
          })()())({
              reflectSymbol: function () {
                  return "lessThanEqualsInteger-memory-arguments";
              }
          })()())({
              reflectSymbol: function () {
                  return "lessThanEqualsInteger-cpu-arguments-slope";
              }
          })()())({
              reflectSymbol: function () {
                  return "lessThanEqualsInteger-cpu-arguments-intercept";
              }
          })()())({
              reflectSymbol: function () {
                  return "lessThanEqualsByteString-memory-arguments";
              }
          })()())({
              reflectSymbol: function () {
                  return "lessThanEqualsByteString-cpu-arguments-slope";
              }
          })()())({
              reflectSymbol: function () {
                  return "lessThanEqualsByteString-cpu-arguments-intercept";
              }
          })()())({
              reflectSymbol: function () {
                  return "lessThanByteString-memory-arguments";
              }
          })()())({
              reflectSymbol: function () {
                  return "lessThanByteString-cpu-arguments-slope";
              }
          })()())({
              reflectSymbol: function () {
                  return "lessThanByteString-cpu-arguments-intercept";
              }
          })()())({
              reflectSymbol: function () {
                  return "lengthOfByteString-memory-arguments";
              }
          })()())({
              reflectSymbol: function () {
                  return "lengthOfByteString-cpu-arguments";
              }
          })()())({
              reflectSymbol: function () {
                  return "indexByteString-memory-arguments";
              }
          })()())({
              reflectSymbol: function () {
                  return "indexByteString-cpu-arguments";
              }
          })()())({
              reflectSymbol: function () {
                  return "ifThenElse-memory-arguments";
              }
          })()())({
              reflectSymbol: function () {
                  return "ifThenElse-cpu-arguments";
              }
          })()())({
              reflectSymbol: function () {
                  return "iData-memory-arguments";
              }
          })()())({
              reflectSymbol: function () {
                  return "iData-cpu-arguments";
              }
          })()())({
              reflectSymbol: function () {
                  return "headList-memory-arguments";
              }
          })()())({
              reflectSymbol: function () {
                  return "headList-cpu-arguments";
              }
          })()())({
              reflectSymbol: function () {
                  return "fstPair-memory-arguments";
              }
          })()())({
              reflectSymbol: function () {
                  return "fstPair-cpu-arguments";
              }
          })()())({
              reflectSymbol: function () {
                  return "equalsString-memory-arguments";
              }
          })()())({
              reflectSymbol: function () {
                  return "equalsString-cpu-arguments-slope";
              }
          })()())({
              reflectSymbol: function () {
                  return "equalsString-cpu-arguments-intercept";
              }
          })()())({
              reflectSymbol: function () {
                  return "equalsString-cpu-arguments-constant";
              }
          })()())({
              reflectSymbol: function () {
                  return "equalsInteger-memory-arguments";
              }
          })()())({
              reflectSymbol: function () {
                  return "equalsInteger-cpu-arguments-slope";
              }
          })()())({
              reflectSymbol: function () {
                  return "equalsInteger-cpu-arguments-intercept";
              }
          })()())({
              reflectSymbol: function () {
                  return "equalsData-memory-arguments";
              }
          })()())({
              reflectSymbol: function () {
                  return "equalsData-cpu-arguments-slope";
              }
          })()())({
              reflectSymbol: function () {
                  return "equalsData-cpu-arguments-intercept";
              }
          })()())({
              reflectSymbol: function () {
                  return "equalsByteString-memory-arguments";
              }
          })()())({
              reflectSymbol: function () {
                  return "equalsByteString-cpu-arguments-slope";
              }
          })()())({
              reflectSymbol: function () {
                  return "equalsByteString-cpu-arguments-intercept";
              }
          })()())({
              reflectSymbol: function () {
                  return "equalsByteString-cpu-arguments-constant";
              }
          })()())({
              reflectSymbol: function () {
                  return "encodeUtf8-memory-arguments-slope";
              }
          })()())({
              reflectSymbol: function () {
                  return "encodeUtf8-memory-arguments-intercept";
              }
          })()())({
              reflectSymbol: function () {
                  return "encodeUtf8-cpu-arguments-slope";
              }
          })()())({
              reflectSymbol: function () {
                  return "encodeUtf8-cpu-arguments-intercept";
              }
          })()())({
              reflectSymbol: function () {
                  return "divideInteger-memory-arguments-slope";
              }
          })()())({
              reflectSymbol: function () {
                  return "divideInteger-memory-arguments-minimum";
              }
          })()())({
              reflectSymbol: function () {
                  return "divideInteger-memory-arguments-intercept";
              }
          })()())({
              reflectSymbol: function () {
                  return "divideInteger-cpu-arguments-model-arguments-slope";
              }
          })()())({
              reflectSymbol: function () {
                  return "divideInteger-cpu-arguments-model-arguments-intercept";
              }
          })()())({
              reflectSymbol: function () {
                  return "divideInteger-cpu-arguments-constant";
              }
          })()())({
              reflectSymbol: function () {
                  return "decodeUtf8-memory-arguments-slope";
              }
          })()())({
              reflectSymbol: function () {
                  return "decodeUtf8-memory-arguments-intercept";
              }
          })()())({
              reflectSymbol: function () {
                  return "decodeUtf8-cpu-arguments-slope";
              }
          })()())({
              reflectSymbol: function () {
                  return "decodeUtf8-cpu-arguments-intercept";
              }
          })()())({
              reflectSymbol: function () {
                  return "constrData-memory-arguments";
              }
          })()())({
              reflectSymbol: function () {
                  return "constrData-cpu-arguments";
              }
          })()())({
              reflectSymbol: function () {
                  return "consByteString-memory-arguments-slope";
              }
          })()())({
              reflectSymbol: function () {
                  return "consByteString-memory-arguments-intercept";
              }
          })()())({
              reflectSymbol: function () {
                  return "consByteString-cpu-arguments-slope";
              }
          })()())({
              reflectSymbol: function () {
                  return "consByteString-cpu-arguments-intercept";
              }
          })()())({
              reflectSymbol: function () {
                  return "chooseUnit-memory-arguments";
              }
          })()())({
              reflectSymbol: function () {
                  return "chooseUnit-cpu-arguments";
              }
          })()())({
              reflectSymbol: function () {
                  return "chooseList-memory-arguments";
              }
          })()())({
              reflectSymbol: function () {
                  return "chooseList-cpu-arguments";
              }
          })()())({
              reflectSymbol: function () {
                  return "chooseData-memory-arguments";
              }
          })()())({
              reflectSymbol: function () {
                  return "chooseData-cpu-arguments";
              }
          })()())({
              reflectSymbol: function () {
                  return "cekVarCost-exBudgetMemory";
              }
          })()())({
              reflectSymbol: function () {
                  return "cekVarCost-exBudgetCPU";
              }
          })()())({
              reflectSymbol: function () {
                  return "cekStartupCost-exBudgetMemory";
              }
          })()())({
              reflectSymbol: function () {
                  return "cekStartupCost-exBudgetCPU";
              }
          })()())({
              reflectSymbol: function () {
                  return "cekLamCost-exBudgetMemory";
              }
          })()())({
              reflectSymbol: function () {
                  return "cekLamCost-exBudgetCPU";
              }
          })()())({
              reflectSymbol: function () {
                  return "cekForceCost-exBudgetMemory";
              }
          })()())({
              reflectSymbol: function () {
                  return "cekForceCost-exBudgetCPU";
              }
          })()())({
              reflectSymbol: function () {
                  return "cekDelayCost-exBudgetMemory";
              }
          })()())({
              reflectSymbol: function () {
                  return "cekDelayCost-exBudgetCPU";
              }
          })()())({
              reflectSymbol: function () {
                  return "cekConstCost-exBudgetMemory";
              }
          })()())({
              reflectSymbol: function () {
                  return "cekConstCost-exBudgetCPU";
              }
          })()())({
              reflectSymbol: function () {
                  return "cekBuiltinCost-exBudgetMemory";
              }
          })()())({
              reflectSymbol: function () {
                  return "cekBuiltinCost-exBudgetCPU";
              }
          })()())({
              reflectSymbol: function () {
                  return "cekApplyCost-exBudgetMemory";
              }
          })()())({
              reflectSymbol: function () {
                  return "cekApplyCost-exBudgetCPU";
              }
          })()())({
              reflectSymbol: function () {
                  return "blake2b_256-memory-arguments";
              }
          })()())({
              reflectSymbol: function () {
                  return "blake2b_256-cpu-arguments-slope";
              }
          })()())({
              reflectSymbol: function () {
                  return "blake2b_256-cpu-arguments-intercept";
              }
          })()())({
              reflectSymbol: function () {
                  return "bData-memory-arguments";
              }
          })()())({
              reflectSymbol: function () {
                  return "bData-cpu-arguments";
              }
          })()())({
              reflectSymbol: function () {
                  return "appendString-memory-arguments-slope";
              }
          })()())({
              reflectSymbol: function () {
                  return "appendString-memory-arguments-intercept";
              }
          })()())({
              reflectSymbol: function () {
                  return "appendString-cpu-arguments-slope";
              }
          })()())({
              reflectSymbol: function () {
                  return "appendString-cpu-arguments-intercept";
              }
          })()())({
              reflectSymbol: function () {
                  return "appendByteString-memory-arguments-slope";
              }
          })()())({
              reflectSymbol: function () {
                  return "appendByteString-memory-arguments-intercept";
              }
          })()())({
              reflectSymbol: function () {
                  return "appendByteString-cpu-arguments-slope";
              }
          })()())({
              reflectSymbol: function () {
                  return "appendByteString-cpu-arguments-intercept";
              }
          })()())({
              reflectSymbol: function () {
                  return "addInteger-memory-arguments-slope";
              }
          })()())({
              reflectSymbol: function () {
                  return "addInteger-memory-arguments-intercept";
              }
          })()())({
              reflectSymbol: function () {
                  return "addInteger-cpu-arguments-slope";
              }
          })()())({
              reflectSymbol: function () {
                  return "addInteger-cpu-arguments-intercept";
              }
          })()())()))(Aeson.gDecodeAesonCons(Aeson.decodeAesonFieldMaybe(Aeson.decodeAesonRecord(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonRowNil)({
              reflectSymbol: function () {
                  return "verifySchnorrSecp256k1Signature-memory-arguments";
              }
          })()())({
              reflectSymbol: function () {
                  return "verifySchnorrSecp256k1Signature-cpu-arguments-slope";
              }
          })()())({
              reflectSymbol: function () {
                  return "verifySchnorrSecp256k1Signature-cpu-arguments-intercept";
              }
          })()())({
              reflectSymbol: function () {
                  return "verifyEd25519Signature-memory-arguments";
              }
          })()())({
              reflectSymbol: function () {
                  return "verifyEd25519Signature-cpu-arguments-slope";
              }
          })()())({
              reflectSymbol: function () {
                  return "verifyEd25519Signature-cpu-arguments-intercept";
              }
          })()())({
              reflectSymbol: function () {
                  return "verifyEcdsaSecp256k1Signature-memory-arguments";
              }
          })()())({
              reflectSymbol: function () {
                  return "verifyEcdsaSecp256k1Signature-cpu-arguments";
              }
          })()())({
              reflectSymbol: function () {
                  return "unMapData-memory-arguments";
              }
          })()())({
              reflectSymbol: function () {
                  return "unMapData-cpu-arguments";
              }
          })()())({
              reflectSymbol: function () {
                  return "unListData-memory-arguments";
              }
          })()())({
              reflectSymbol: function () {
                  return "unListData-cpu-arguments";
              }
          })()())({
              reflectSymbol: function () {
                  return "unIData-memory-arguments";
              }
          })()())({
              reflectSymbol: function () {
                  return "unIData-cpu-arguments";
              }
          })()())({
              reflectSymbol: function () {
                  return "unConstrData-memory-arguments";
              }
          })()())({
              reflectSymbol: function () {
                  return "unConstrData-cpu-arguments";
              }
          })()())({
              reflectSymbol: function () {
                  return "unBData-memory-arguments";
              }
          })()())({
              reflectSymbol: function () {
                  return "unBData-cpu-arguments";
              }
          })()())({
              reflectSymbol: function () {
                  return "trace-memory-arguments";
              }
          })()())({
              reflectSymbol: function () {
                  return "trace-cpu-arguments";
              }
          })()())({
              reflectSymbol: function () {
                  return "tailList-memory-arguments";
              }
          })()())({
              reflectSymbol: function () {
                  return "tailList-cpu-arguments";
              }
          })()())({
              reflectSymbol: function () {
                  return "subtractInteger-memory-arguments-slope";
              }
          })()())({
              reflectSymbol: function () {
                  return "subtractInteger-memory-arguments-intercept";
              }
          })()())({
              reflectSymbol: function () {
                  return "subtractInteger-cpu-arguments-slope";
              }
          })()())({
              reflectSymbol: function () {
                  return "subtractInteger-cpu-arguments-intercept";
              }
          })()())({
              reflectSymbol: function () {
                  return "sndPair-memory-arguments";
              }
          })()())({
              reflectSymbol: function () {
                  return "sndPair-cpu-arguments";
              }
          })()())({
              reflectSymbol: function () {
                  return "sliceByteString-memory-arguments-slope";
              }
          })()())({
              reflectSymbol: function () {
                  return "sliceByteString-memory-arguments-intercept";
              }
          })()())({
              reflectSymbol: function () {
                  return "sliceByteString-cpu-arguments-slope";
              }
          })()())({
              reflectSymbol: function () {
                  return "sliceByteString-cpu-arguments-intercept";
              }
          })()())({
              reflectSymbol: function () {
                  return "sha3_256-memory-arguments";
              }
          })()())({
              reflectSymbol: function () {
                  return "sha3_256-cpu-arguments-slope";
              }
          })()())({
              reflectSymbol: function () {
                  return "sha3_256-cpu-arguments-intercept";
              }
          })()())({
              reflectSymbol: function () {
                  return "sha2_256-memory-arguments";
              }
          })()())({
              reflectSymbol: function () {
                  return "sha2_256-cpu-arguments-slope";
              }
          })()())({
              reflectSymbol: function () {
                  return "sha2_256-cpu-arguments-intercept";
              }
          })()())({
              reflectSymbol: function () {
                  return "serialiseData-memory-arguments-slope";
              }
          })()())({
              reflectSymbol: function () {
                  return "serialiseData-memory-arguments-intercept";
              }
          })()())({
              reflectSymbol: function () {
                  return "serialiseData-cpu-arguments-slope";
              }
          })()())({
              reflectSymbol: function () {
                  return "serialiseData-cpu-arguments-intercept";
              }
          })()())({
              reflectSymbol: function () {
                  return "remainderInteger-memory-arguments-slope";
              }
          })()())({
              reflectSymbol: function () {
                  return "remainderInteger-memory-arguments-minimum";
              }
          })()())({
              reflectSymbol: function () {
                  return "remainderInteger-memory-arguments-intercept";
              }
          })()())({
              reflectSymbol: function () {
                  return "remainderInteger-cpu-arguments-model-arguments-slope";
              }
          })()())({
              reflectSymbol: function () {
                  return "remainderInteger-cpu-arguments-model-arguments-intercept";
              }
          })()())({
              reflectSymbol: function () {
                  return "remainderInteger-cpu-arguments-constant";
              }
          })()())({
              reflectSymbol: function () {
                  return "quotientInteger-memory-arguments-slope";
              }
          })()())({
              reflectSymbol: function () {
                  return "quotientInteger-memory-arguments-minimum";
              }
          })()())({
              reflectSymbol: function () {
                  return "quotientInteger-memory-arguments-intercept";
              }
          })()())({
              reflectSymbol: function () {
                  return "quotientInteger-cpu-arguments-model-arguments-slope";
              }
          })()())({
              reflectSymbol: function () {
                  return "quotientInteger-cpu-arguments-model-arguments-intercept";
              }
          })()())({
              reflectSymbol: function () {
                  return "quotientInteger-cpu-arguments-constant";
              }
          })()())({
              reflectSymbol: function () {
                  return "nullList-memory-arguments";
              }
          })()())({
              reflectSymbol: function () {
                  return "nullList-cpu-arguments";
              }
          })()())({
              reflectSymbol: function () {
                  return "multiplyInteger-memory-arguments-slope";
              }
          })()())({
              reflectSymbol: function () {
                  return "multiplyInteger-memory-arguments-intercept";
              }
          })()())({
              reflectSymbol: function () {
                  return "multiplyInteger-cpu-arguments-slope";
              }
          })()())({
              reflectSymbol: function () {
                  return "multiplyInteger-cpu-arguments-intercept";
              }
          })()())({
              reflectSymbol: function () {
                  return "modInteger-memory-arguments-slope";
              }
          })()())({
              reflectSymbol: function () {
                  return "modInteger-memory-arguments-minimum";
              }
          })()())({
              reflectSymbol: function () {
                  return "modInteger-memory-arguments-intercept";
              }
          })()())({
              reflectSymbol: function () {
                  return "modInteger-cpu-arguments-model-arguments-slope";
              }
          })()())({
              reflectSymbol: function () {
                  return "modInteger-cpu-arguments-model-arguments-intercept";
              }
          })()())({
              reflectSymbol: function () {
                  return "modInteger-cpu-arguments-constant";
              }
          })()())({
              reflectSymbol: function () {
                  return "mkPairData-memory-arguments";
              }
          })()())({
              reflectSymbol: function () {
                  return "mkPairData-cpu-arguments";
              }
          })()())({
              reflectSymbol: function () {
                  return "mkNilPairData-memory-arguments";
              }
          })()())({
              reflectSymbol: function () {
                  return "mkNilPairData-cpu-arguments";
              }
          })()())({
              reflectSymbol: function () {
                  return "mkNilData-memory-arguments";
              }
          })()())({
              reflectSymbol: function () {
                  return "mkNilData-cpu-arguments";
              }
          })()())({
              reflectSymbol: function () {
                  return "mkCons-memory-arguments";
              }
          })()())({
              reflectSymbol: function () {
                  return "mkCons-cpu-arguments";
              }
          })()())({
              reflectSymbol: function () {
                  return "mapData-memory-arguments";
              }
          })()())({
              reflectSymbol: function () {
                  return "mapData-cpu-arguments";
              }
          })()())({
              reflectSymbol: function () {
                  return "listData-memory-arguments";
              }
          })()())({
              reflectSymbol: function () {
                  return "listData-cpu-arguments";
              }
          })()())({
              reflectSymbol: function () {
                  return "lessThanInteger-memory-arguments";
              }
          })()())({
              reflectSymbol: function () {
                  return "lessThanInteger-cpu-arguments-slope";
              }
          })()())({
              reflectSymbol: function () {
                  return "lessThanInteger-cpu-arguments-intercept";
              }
          })()())({
              reflectSymbol: function () {
                  return "lessThanEqualsInteger-memory-arguments";
              }
          })()())({
              reflectSymbol: function () {
                  return "lessThanEqualsInteger-cpu-arguments-slope";
              }
          })()())({
              reflectSymbol: function () {
                  return "lessThanEqualsInteger-cpu-arguments-intercept";
              }
          })()())({
              reflectSymbol: function () {
                  return "lessThanEqualsByteString-memory-arguments";
              }
          })()())({
              reflectSymbol: function () {
                  return "lessThanEqualsByteString-cpu-arguments-slope";
              }
          })()())({
              reflectSymbol: function () {
                  return "lessThanEqualsByteString-cpu-arguments-intercept";
              }
          })()())({
              reflectSymbol: function () {
                  return "lessThanByteString-memory-arguments";
              }
          })()())({
              reflectSymbol: function () {
                  return "lessThanByteString-cpu-arguments-slope";
              }
          })()())({
              reflectSymbol: function () {
                  return "lessThanByteString-cpu-arguments-intercept";
              }
          })()())({
              reflectSymbol: function () {
                  return "lengthOfByteString-memory-arguments";
              }
          })()())({
              reflectSymbol: function () {
                  return "lengthOfByteString-cpu-arguments";
              }
          })()())({
              reflectSymbol: function () {
                  return "indexByteString-memory-arguments";
              }
          })()())({
              reflectSymbol: function () {
                  return "indexByteString-cpu-arguments";
              }
          })()())({
              reflectSymbol: function () {
                  return "ifThenElse-memory-arguments";
              }
          })()())({
              reflectSymbol: function () {
                  return "ifThenElse-cpu-arguments";
              }
          })()())({
              reflectSymbol: function () {
                  return "iData-memory-arguments";
              }
          })()())({
              reflectSymbol: function () {
                  return "iData-cpu-arguments";
              }
          })()())({
              reflectSymbol: function () {
                  return "headList-memory-arguments";
              }
          })()())({
              reflectSymbol: function () {
                  return "headList-cpu-arguments";
              }
          })()())({
              reflectSymbol: function () {
                  return "fstPair-memory-arguments";
              }
          })()())({
              reflectSymbol: function () {
                  return "fstPair-cpu-arguments";
              }
          })()())({
              reflectSymbol: function () {
                  return "equalsString-memory-arguments";
              }
          })()())({
              reflectSymbol: function () {
                  return "equalsString-cpu-arguments-slope";
              }
          })()())({
              reflectSymbol: function () {
                  return "equalsString-cpu-arguments-intercept";
              }
          })()())({
              reflectSymbol: function () {
                  return "equalsString-cpu-arguments-constant";
              }
          })()())({
              reflectSymbol: function () {
                  return "equalsInteger-memory-arguments";
              }
          })()())({
              reflectSymbol: function () {
                  return "equalsInteger-cpu-arguments-slope";
              }
          })()())({
              reflectSymbol: function () {
                  return "equalsInteger-cpu-arguments-intercept";
              }
          })()())({
              reflectSymbol: function () {
                  return "equalsData-memory-arguments";
              }
          })()())({
              reflectSymbol: function () {
                  return "equalsData-cpu-arguments-slope";
              }
          })()())({
              reflectSymbol: function () {
                  return "equalsData-cpu-arguments-intercept";
              }
          })()())({
              reflectSymbol: function () {
                  return "equalsByteString-memory-arguments";
              }
          })()())({
              reflectSymbol: function () {
                  return "equalsByteString-cpu-arguments-slope";
              }
          })()())({
              reflectSymbol: function () {
                  return "equalsByteString-cpu-arguments-intercept";
              }
          })()())({
              reflectSymbol: function () {
                  return "equalsByteString-cpu-arguments-constant";
              }
          })()())({
              reflectSymbol: function () {
                  return "encodeUtf8-memory-arguments-slope";
              }
          })()())({
              reflectSymbol: function () {
                  return "encodeUtf8-memory-arguments-intercept";
              }
          })()())({
              reflectSymbol: function () {
                  return "encodeUtf8-cpu-arguments-slope";
              }
          })()())({
              reflectSymbol: function () {
                  return "encodeUtf8-cpu-arguments-intercept";
              }
          })()())({
              reflectSymbol: function () {
                  return "divideInteger-memory-arguments-slope";
              }
          })()())({
              reflectSymbol: function () {
                  return "divideInteger-memory-arguments-minimum";
              }
          })()())({
              reflectSymbol: function () {
                  return "divideInteger-memory-arguments-intercept";
              }
          })()())({
              reflectSymbol: function () {
                  return "divideInteger-cpu-arguments-model-arguments-slope";
              }
          })()())({
              reflectSymbol: function () {
                  return "divideInteger-cpu-arguments-model-arguments-intercept";
              }
          })()())({
              reflectSymbol: function () {
                  return "divideInteger-cpu-arguments-constant";
              }
          })()())({
              reflectSymbol: function () {
                  return "decodeUtf8-memory-arguments-slope";
              }
          })()())({
              reflectSymbol: function () {
                  return "decodeUtf8-memory-arguments-intercept";
              }
          })()())({
              reflectSymbol: function () {
                  return "decodeUtf8-cpu-arguments-slope";
              }
          })()())({
              reflectSymbol: function () {
                  return "decodeUtf8-cpu-arguments-intercept";
              }
          })()())({
              reflectSymbol: function () {
                  return "constrData-memory-arguments";
              }
          })()())({
              reflectSymbol: function () {
                  return "constrData-cpu-arguments";
              }
          })()())({
              reflectSymbol: function () {
                  return "consByteString-memory-arguments-slope";
              }
          })()())({
              reflectSymbol: function () {
                  return "consByteString-memory-arguments-intercept";
              }
          })()())({
              reflectSymbol: function () {
                  return "consByteString-cpu-arguments-slope";
              }
          })()())({
              reflectSymbol: function () {
                  return "consByteString-cpu-arguments-intercept";
              }
          })()())({
              reflectSymbol: function () {
                  return "chooseUnit-memory-arguments";
              }
          })()())({
              reflectSymbol: function () {
                  return "chooseUnit-cpu-arguments";
              }
          })()())({
              reflectSymbol: function () {
                  return "chooseList-memory-arguments";
              }
          })()())({
              reflectSymbol: function () {
                  return "chooseList-cpu-arguments";
              }
          })()())({
              reflectSymbol: function () {
                  return "chooseData-memory-arguments";
              }
          })()())({
              reflectSymbol: function () {
                  return "chooseData-cpu-arguments";
              }
          })()())({
              reflectSymbol: function () {
                  return "cekVarCost-exBudgetMemory";
              }
          })()())({
              reflectSymbol: function () {
                  return "cekVarCost-exBudgetCPU";
              }
          })()())({
              reflectSymbol: function () {
                  return "cekStartupCost-exBudgetMemory";
              }
          })()())({
              reflectSymbol: function () {
                  return "cekStartupCost-exBudgetCPU";
              }
          })()())({
              reflectSymbol: function () {
                  return "cekLamCost-exBudgetMemory";
              }
          })()())({
              reflectSymbol: function () {
                  return "cekLamCost-exBudgetCPU";
              }
          })()())({
              reflectSymbol: function () {
                  return "cekForceCost-exBudgetMemory";
              }
          })()())({
              reflectSymbol: function () {
                  return "cekForceCost-exBudgetCPU";
              }
          })()())({
              reflectSymbol: function () {
                  return "cekDelayCost-exBudgetMemory";
              }
          })()())({
              reflectSymbol: function () {
                  return "cekDelayCost-exBudgetCPU";
              }
          })()())({
              reflectSymbol: function () {
                  return "cekConstCost-exBudgetMemory";
              }
          })()())({
              reflectSymbol: function () {
                  return "cekConstCost-exBudgetCPU";
              }
          })()())({
              reflectSymbol: function () {
                  return "cekBuiltinCost-exBudgetMemory";
              }
          })()())({
              reflectSymbol: function () {
                  return "cekBuiltinCost-exBudgetCPU";
              }
          })()())({
              reflectSymbol: function () {
                  return "cekApplyCost-exBudgetMemory";
              }
          })()())({
              reflectSymbol: function () {
                  return "cekApplyCost-exBudgetCPU";
              }
          })()())({
              reflectSymbol: function () {
                  return "blake2b_256-memory-arguments";
              }
          })()())({
              reflectSymbol: function () {
                  return "blake2b_256-cpu-arguments-slope";
              }
          })()())({
              reflectSymbol: function () {
                  return "blake2b_256-cpu-arguments-intercept";
              }
          })()())({
              reflectSymbol: function () {
                  return "bData-memory-arguments";
              }
          })()())({
              reflectSymbol: function () {
                  return "bData-cpu-arguments";
              }
          })()())({
              reflectSymbol: function () {
                  return "appendString-memory-arguments-slope";
              }
          })()())({
              reflectSymbol: function () {
                  return "appendString-memory-arguments-intercept";
              }
          })()())({
              reflectSymbol: function () {
                  return "appendString-cpu-arguments-slope";
              }
          })()())({
              reflectSymbol: function () {
                  return "appendString-cpu-arguments-intercept";
              }
          })()())({
              reflectSymbol: function () {
                  return "appendByteString-memory-arguments-slope";
              }
          })()())({
              reflectSymbol: function () {
                  return "appendByteString-memory-arguments-intercept";
              }
          })()())({
              reflectSymbol: function () {
                  return "appendByteString-cpu-arguments-slope";
              }
          })()())({
              reflectSymbol: function () {
                  return "appendByteString-cpu-arguments-intercept";
              }
          })()())({
              reflectSymbol: function () {
                  return "addInteger-memory-arguments-slope";
              }
          })()())({
              reflectSymbol: function () {
                  return "addInteger-memory-arguments-intercept";
              }
          })()())({
              reflectSymbol: function () {
                  return "addInteger-cpu-arguments-slope";
              }
          })()())({
              reflectSymbol: function () {
                  return "addInteger-cpu-arguments-intercept";
              }
          })()())()))(Aeson.gDecodeAesonRowNil)({
              reflectSymbol: function () {
                  return "plutus:v2";
              }
          })()())({
              reflectSymbol: function () {
                  return "plutus:v1";
              }
          })()())()))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Aeson.decodeAesonUInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Aeson.decodeAesonUInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Aeson.decodeAesonUInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Aeson.decodeAesonUInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Aeson.decodeAesonRecord(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Aeson.decodeAesonBigInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Aeson.decodeAesonBigInt))(Aeson.gDecodeAesonRowNil)({
              reflectSymbol: function () {
                  return "steps";
              }
          })()())({
              reflectSymbol: function () {
                  return "memory";
              }
          })()())()))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Aeson.decodeAesonRecord(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Aeson.decodeAesonBigInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Aeson.decodeAesonBigInt))(Aeson.gDecodeAesonRowNil)({
              reflectSymbol: function () {
                  return "steps";
              }
          })()())({
              reflectSymbol: function () {
                  return "memory";
              }
          })()())()))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Aeson.decodeAesonUInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Aeson.decodeAesonUInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Aeson.decodeAesonUInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Aeson.decodeAesonUInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Aeson.decodeAesonBigInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(decodeAesonPParamRational))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Aeson.decodeAesonBigInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(decodeAesonPParamRational))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Aeson.decodeAesonBigInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Aeson.decodeAesonRecord(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(decodeAesonPParamRational))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(decodeAesonPParamRational))(Aeson.gDecodeAesonRowNil)({
              reflectSymbol: function () {
                  return "steps";
              }
          })()())({
              reflectSymbol: function () {
                  return "memory";
              }
          })()())()))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Aeson.decodeAesonRecord(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Aeson.decodeAesonUInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Aeson.decodeAesonUInt))(Aeson.gDecodeAesonRowNil)({
              reflectSymbol: function () {
                  return "minor";
              }
          })()())({
              reflectSymbol: function () {
                  return "major";
              }
          })()())()))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Aeson.decodeAesonBigInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(decodeAesonPParamRational))(Aeson.gDecodeAesonRowNil)({
              reflectSymbol: function () {
                  return "treasuryExpansion";
              }
          })()())({
              reflectSymbol: function () {
                  return "stakeKeyDeposit";
              }
          })()())({
              reflectSymbol: function () {
                  return "protocolVersion";
              }
          })()())({
              reflectSymbol: function () {
                  return "prices";
              }
          })()())({
              reflectSymbol: function () {
                  return "poolRetirementEpochBound";
              }
          })()())({
              reflectSymbol: function () {
                  return "poolInfluence";
              }
          })()())({
              reflectSymbol: function () {
                  return "poolDeposit";
              }
          })()())({
              reflectSymbol: function () {
                  return "monetaryExpansion";
              }
          })()())({
              reflectSymbol: function () {
                  return "minPoolCost";
              }
          })()())({
              reflectSymbol: function () {
                  return "minFeeConstant";
              }
          })()())({
              reflectSymbol: function () {
                  return "minFeeCoefficient";
              }
          })()())({
              reflectSymbol: function () {
                  return "maxValueSize";
              }
          })()())({
              reflectSymbol: function () {
                  return "maxTxSize";
              }
          })()())({
              reflectSymbol: function () {
                  return "maxExecutionUnitsPerTransaction";
              }
          })()())({
              reflectSymbol: function () {
                  return "maxExecutionUnitsPerBlock";
              }
          })()())({
              reflectSymbol: function () {
                  return "maxCollateralInputs";
              }
          })()())({
              reflectSymbol: function () {
                  return "maxBlockHeaderSize";
              }
          })()())({
              reflectSymbol: function () {
                  return "maxBlockBodySize";
              }
          })()())({
              reflectSymbol: function () {
                  return "desiredNumberOfPools";
              }
          })()())({
              reflectSymbol: function () {
                  return "costModels";
              }
          })()())({
              reflectSymbol: function () {
                  return "collateralPercentage";
              }
          })()())({
              reflectSymbol: function () {
                  return "coinsPerUtxoWord";
              }
          })()())({
              reflectSymbol: function () {
                  return "coinsPerUtxoByte";
              }
          })()())())(aeson))(function (v) {
              return Control_Bind.bind(Data_Either.bindEither)(decodePrices(v))(function (prices) {
                  return Control_Bind.bind(Data_Either.bindEither)(Data_Maybe.maybe(new Data_Either.Left(new Data_Argonaut_Decode_Error.AtKey("coinsPerUtxoByte or coinsPerUtxoWord", Data_Argonaut_Decode_Error.MissingValue.value)))(Control_Applicative.pure(Data_Either.applicativeEither))(Control_Alt.alt(Data_Maybe.altMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(function ($392) {
                      return Ctl_Internal_Types_ProtocolParameters.CoinsPerUtxoByte.create(Ctl_Internal_Cardano_Types_Value.Coin($392));
                  })(v.coinsPerUtxoByte))(Data_Functor.map(Data_Maybe.functorMaybe)(function ($393) {
                      return Ctl_Internal_Types_ProtocolParameters.CoinsPerUtxoWord.create(Ctl_Internal_Cardano_Types_Value.Coin($393));
                  })(v.coinsPerUtxoWord))))(function (coinsPerUtxoUnit) {
                      return Control_Applicative.pure(Data_Either.applicativeEither)({
                          protocolVersion: new Data_Tuple.Tuple(v.protocolVersion.major, v.protocolVersion.minor),
                          decentralization: Data_Semiring.zero(Ctl_Internal_Types_Rational.semiringRational),
                          extraPraosEntropy: Data_Maybe.Nothing.value,
                          maxBlockHeaderSize: v.maxBlockHeaderSize,
                          maxBlockBodySize: v.maxBlockBodySize,
                          maxTxSize: v.maxTxSize,
                          txFeeFixed: v.minFeeConstant,
                          txFeePerByte: v.minFeeCoefficient,
                          stakeAddressDeposit: v.stakeKeyDeposit,
                          stakePoolDeposit: v.poolDeposit,
                          minPoolCost: v.minPoolCost,
                          poolRetireMaxEpoch: v.poolRetirementEpochBound,
                          stakePoolTargetNum: v.desiredNumberOfPools,
                          poolPledgeInfluence: Data_Newtype.unwrap()(v.poolInfluence),
                          monetaryExpansion: Data_Newtype.unwrap()(v.monetaryExpansion),
                          treasuryCut: Data_Newtype.unwrap()(v.treasuryExpansion),
                          coinsPerUtxoUnit: coinsPerUtxoUnit,
                          costModels: Data_Map_Internal.fromFoldable(Ctl_Internal_Types_Scripts.ordLanguage)(Data_Foldable.foldableArray)(Data_Array.catMaybes([ Control_Applicative.pure(Data_Maybe.applicativeMaybe)(new Data_Tuple.Tuple(Ctl_Internal_Types_Scripts.PlutusV1.value, Ctl_Internal_Types_ProtocolParameters.convertPlutusV1CostModel(v["costModels"]["plutus:v1"]))), Data_Functor.map(Data_Maybe.functorMaybe)(function ($394) {
                              return (function (v1) {
                                  return new Data_Tuple.Tuple(Ctl_Internal_Types_Scripts.PlutusV2.value, v1);
                              })(Ctl_Internal_Types_ProtocolParameters.convertPlutusV2CostModel($394));
                          })(v["costModels"]["plutus:v2"]) ])),
                          prices: prices,
                          maxTxExUnits: decodeExUnits(v.maxExecutionUnitsPerTransaction),
                          maxBlockExUnits: decodeExUnits(v.maxExecutionUnitsPerBlock),
                          maxValueSize: v.maxValueSize,
                          collateralPercent: v.collateralPercentage,
                          maxCollateralInputs: v.maxCollateralInputs
                      });
                  });
              });
          });
      }
  };
  var parseIpv6String = function (str) {
      var parts = Data_String_Common.split(":")(str);
      var partsFixed = (function () {
          var $324 = Data_Array.length(parts) < 8;
          if ($324) {
              return Control_Bind.bind(Control_Bind.bindArray)(parts)(function (part) {
                  var $325 = part === "";
                  if ($325) {
                      return Data_Array.replicate((8 - Data_Array.length(parts) | 0) + 1 | 0)("");
                  };
                  return Control_Applicative.pure(Control_Applicative.applicativeArray)(part);
              });
          };
          return parts;
      })();
      return Control_Bind.discard(Control_Bind.discardUnit)(Data_Maybe.bindMaybe)(Control_Alternative.guard(Data_Maybe.alternativeMaybe)(Data_Array.length(partsFixed) === 8))(function () {
          var padded = Data_String_Common.replaceAll(" ")("0")(Data_Foldable.fold(Data_Foldable.foldableArray)(Data_Monoid.monoidString)(Data_Functor.mapFlipped(Data_Functor.functorArray)(partsFixed)(Data_String_Utils.padStart(4))));
          return Data_Functor.map(Data_Maybe.functorMaybe)(Ctl_Internal_Cardano_Types_Transaction.Ipv6)(Ctl_Internal_Types_ByteArray.hexToByteArray(padded));
      });
  };
  var mkOgmiosCallType = function (dictEncodeAeson) {
      return Ctl_Internal_QueryM_JsonWsp.mkCallType(dictEncodeAeson)({
          type: "jsonwsp/request",
          version: "1.0",
          servicename: "ogmios"
      });
  };
  var mkOgmiosCallTypeNoArgs = function (methodname) {
      return mkOgmiosCallType(Aeson.encodeAesonRecord(Aeson.gEncodeAesonCons(Aeson.encodeAesonRecord(Aeson.gEncodeAesonNil)())(Aeson.gEncodeAesonCons(Aeson.encodeAesonString)(Aeson.gEncodeAesonCons(Aeson.encodeAesonString)(Aeson.gEncodeAesonCons(Aeson.encodeAesonString)(Aeson.gEncodeAesonCons(Aeson.encodeAesonString)(Aeson.gEncodeAesonCons(Aeson.encodeAesonString)(Aeson.gEncodeAesonNil)({
          reflectSymbol: function () {
              return "version";
          }
      })())({
          reflectSymbol: function () {
              return "type";
          }
      })())({
          reflectSymbol: function () {
              return "servicename";
          }
      })())({
          reflectSymbol: function () {
              return "mirror";
          }
      })())({
          reflectSymbol: function () {
              return "methodname";
          }
      })())({
          reflectSymbol: function () {
              return "args";
          }
      })())())({
          methodname: methodname,
          args: Data_Function["const"]({})
      });
  };
  var queryChainTipCall = mkOgmiosCallType(Aeson.encodeAesonRecord(Aeson.gEncodeAesonCons(Aeson.encodeAesonRecord(Aeson.gEncodeAesonCons(Aeson.encodeAesonString)(Aeson.gEncodeAesonNil)({
      reflectSymbol: function () {
          return "query";
      }
  })())())(Aeson.gEncodeAesonCons(Aeson.encodeAesonString)(Aeson.gEncodeAesonCons(Aeson.encodeAesonString)(Aeson.gEncodeAesonCons(Aeson.encodeAesonString)(Aeson.gEncodeAesonCons(Aeson.encodeAesonString)(Aeson.gEncodeAesonCons(Aeson.encodeAesonString)(Aeson.gEncodeAesonNil)({
      reflectSymbol: function () {
          return "version";
      }
  })())({
      reflectSymbol: function () {
          return "type";
      }
  })())({
      reflectSymbol: function () {
          return "servicename";
      }
  })())({
      reflectSymbol: function () {
          return "mirror";
      }
  })())({
      reflectSymbol: function () {
          return "methodname";
      }
  })())({
      reflectSymbol: function () {
          return "args";
      }
  })())())({
      methodname: "Query",
      args: Data_Function["const"]({
          query: "chainTip"
      })
  });
  var queryCurrentEpochCall = mkOgmiosCallType(Aeson.encodeAesonRecord(Aeson.gEncodeAesonCons(Aeson.encodeAesonRecord(Aeson.gEncodeAesonCons(Aeson.encodeAesonString)(Aeson.gEncodeAesonNil)({
      reflectSymbol: function () {
          return "query";
      }
  })())())(Aeson.gEncodeAesonCons(Aeson.encodeAesonString)(Aeson.gEncodeAesonCons(Aeson.encodeAesonString)(Aeson.gEncodeAesonCons(Aeson.encodeAesonString)(Aeson.gEncodeAesonCons(Aeson.encodeAesonString)(Aeson.gEncodeAesonCons(Aeson.encodeAesonString)(Aeson.gEncodeAesonNil)({
      reflectSymbol: function () {
          return "version";
      }
  })())({
      reflectSymbol: function () {
          return "type";
      }
  })())({
      reflectSymbol: function () {
          return "servicename";
      }
  })())({
      reflectSymbol: function () {
          return "mirror";
      }
  })())({
      reflectSymbol: function () {
          return "methodname";
      }
  })())({
      reflectSymbol: function () {
          return "args";
      }
  })())())({
      methodname: "Query",
      args: Data_Function["const"]({
          query: "currentEpoch"
      })
  });
  var queryDelegationsAndRewards = mkOgmiosCallType(Aeson.encodeAesonRecord(Aeson.gEncodeAesonCons(Aeson.encodeAesonRecord(Aeson.gEncodeAesonCons(Aeson.encodeAesonRecord(Aeson.gEncodeAesonCons(Aeson.encodeAesonArray(Aeson.encodeAesonString))(Aeson.gEncodeAesonNil)({
      reflectSymbol: function () {
          return "delegationsAndRewards";
      }
  })())())(Aeson.gEncodeAesonNil)({
      reflectSymbol: function () {
          return "query";
      }
  })())())(Aeson.gEncodeAesonCons(Aeson.encodeAesonString)(Aeson.gEncodeAesonCons(Aeson.encodeAesonString)(Aeson.gEncodeAesonCons(Aeson.encodeAesonString)(Aeson.gEncodeAesonCons(Aeson.encodeAesonString)(Aeson.gEncodeAesonCons(Aeson.encodeAesonString)(Aeson.gEncodeAesonNil)({
      reflectSymbol: function () {
          return "version";
      }
  })())({
      reflectSymbol: function () {
          return "type";
      }
  })())({
      reflectSymbol: function () {
          return "servicename";
      }
  })())({
      reflectSymbol: function () {
          return "mirror";
      }
  })())({
      reflectSymbol: function () {
          return "methodname";
      }
  })())({
      reflectSymbol: function () {
          return "args";
      }
  })())())({
      methodname: "Query",
      args: function (skhs) {
          return {
              query: {
                  delegationsAndRewards: skhs
              }
          };
      }
  });
  var queryEraSummariesCall = mkOgmiosCallType(Aeson.encodeAesonRecord(Aeson.gEncodeAesonCons(Aeson.encodeAesonRecord(Aeson.gEncodeAesonCons(Aeson.encodeAesonString)(Aeson.gEncodeAesonNil)({
      reflectSymbol: function () {
          return "query";
      }
  })())())(Aeson.gEncodeAesonCons(Aeson.encodeAesonString)(Aeson.gEncodeAesonCons(Aeson.encodeAesonString)(Aeson.gEncodeAesonCons(Aeson.encodeAesonString)(Aeson.gEncodeAesonCons(Aeson.encodeAesonString)(Aeson.gEncodeAesonCons(Aeson.encodeAesonString)(Aeson.gEncodeAesonNil)({
      reflectSymbol: function () {
          return "version";
      }
  })())({
      reflectSymbol: function () {
          return "type";
      }
  })())({
      reflectSymbol: function () {
          return "servicename";
      }
  })())({
      reflectSymbol: function () {
          return "mirror";
      }
  })())({
      reflectSymbol: function () {
          return "methodname";
      }
  })())({
      reflectSymbol: function () {
          return "args";
      }
  })())())({
      methodname: "Query",
      args: Data_Function["const"]({
          query: "eraSummaries"
      })
  });
  var queryPoolIdsCall = mkOgmiosCallType(Aeson.encodeAesonRecord(Aeson.gEncodeAesonCons(Aeson.encodeAesonRecord(Aeson.gEncodeAesonCons(Aeson.encodeAesonString)(Aeson.gEncodeAesonNil)({
      reflectSymbol: function () {
          return "query";
      }
  })())())(Aeson.gEncodeAesonCons(Aeson.encodeAesonString)(Aeson.gEncodeAesonCons(Aeson.encodeAesonString)(Aeson.gEncodeAesonCons(Aeson.encodeAesonString)(Aeson.gEncodeAesonCons(Aeson.encodeAesonString)(Aeson.gEncodeAesonCons(Aeson.encodeAesonString)(Aeson.gEncodeAesonNil)({
      reflectSymbol: function () {
          return "version";
      }
  })())({
      reflectSymbol: function () {
          return "type";
      }
  })())({
      reflectSymbol: function () {
          return "servicename";
      }
  })())({
      reflectSymbol: function () {
          return "mirror";
      }
  })())({
      reflectSymbol: function () {
          return "methodname";
      }
  })())({
      reflectSymbol: function () {
          return "args";
      }
  })())())({
      methodname: "Query",
      args: Data_Function["const"]({
          query: "poolIds"
      })
  });
  var queryProtocolParametersCall = mkOgmiosCallType(Aeson.encodeAesonRecord(Aeson.gEncodeAesonCons(Aeson.encodeAesonRecord(Aeson.gEncodeAesonCons(Aeson.encodeAesonString)(Aeson.gEncodeAesonNil)({
      reflectSymbol: function () {
          return "query";
      }
  })())())(Aeson.gEncodeAesonCons(Aeson.encodeAesonString)(Aeson.gEncodeAesonCons(Aeson.encodeAesonString)(Aeson.gEncodeAesonCons(Aeson.encodeAesonString)(Aeson.gEncodeAesonCons(Aeson.encodeAesonString)(Aeson.gEncodeAesonCons(Aeson.encodeAesonString)(Aeson.gEncodeAesonNil)({
      reflectSymbol: function () {
          return "version";
      }
  })())({
      reflectSymbol: function () {
          return "type";
      }
  })())({
      reflectSymbol: function () {
          return "servicename";
      }
  })())({
      reflectSymbol: function () {
          return "mirror";
      }
  })())({
      reflectSymbol: function () {
          return "methodname";
      }
  })())({
      reflectSymbol: function () {
          return "args";
      }
  })())())({
      methodname: "Query",
      args: Data_Function["const"]({
          query: "currentProtocolParameters"
      })
  });
  var querySystemStartCall = mkOgmiosCallType(Aeson.encodeAesonRecord(Aeson.gEncodeAesonCons(Aeson.encodeAesonRecord(Aeson.gEncodeAesonCons(Aeson.encodeAesonString)(Aeson.gEncodeAesonNil)({
      reflectSymbol: function () {
          return "query";
      }
  })())())(Aeson.gEncodeAesonCons(Aeson.encodeAesonString)(Aeson.gEncodeAesonCons(Aeson.encodeAesonString)(Aeson.gEncodeAesonCons(Aeson.encodeAesonString)(Aeson.gEncodeAesonCons(Aeson.encodeAesonString)(Aeson.gEncodeAesonCons(Aeson.encodeAesonString)(Aeson.gEncodeAesonNil)({
      reflectSymbol: function () {
          return "version";
      }
  })())({
      reflectSymbol: function () {
          return "type";
      }
  })())({
      reflectSymbol: function () {
          return "servicename";
      }
  })())({
      reflectSymbol: function () {
          return "mirror";
      }
  })())({
      reflectSymbol: function () {
          return "methodname";
      }
  })())({
      reflectSymbol: function () {
          return "args";
      }
  })())())({
      methodname: "Query",
      args: Data_Function["const"]({
          query: "systemStart"
      })
  });
  var submitTxCall = mkOgmiosCallType(Aeson.encodeAesonRecord(Aeson.gEncodeAesonCons(Aeson.encodeAesonRecord(Aeson.gEncodeAesonCons(Aeson.encodeAesonString)(Aeson.gEncodeAesonNil)({
      reflectSymbol: function () {
          return "submit";
      }
  })())())(Aeson.gEncodeAesonCons(Aeson.encodeAesonString)(Aeson.gEncodeAesonCons(Aeson.encodeAesonString)(Aeson.gEncodeAesonCons(Aeson.encodeAesonString)(Aeson.gEncodeAesonCons(Aeson.encodeAesonString)(Aeson.gEncodeAesonCons(Aeson.encodeAesonString)(Aeson.gEncodeAesonNil)({
      reflectSymbol: function () {
          return "version";
      }
  })())({
      reflectSymbol: function () {
          return "type";
      }
  })())({
      reflectSymbol: function () {
          return "servicename";
      }
  })())({
      reflectSymbol: function () {
          return "mirror";
      }
  })())({
      reflectSymbol: function () {
          return "methodname";
      }
  })())({
      reflectSymbol: function () {
          return "args";
      }
  })())())({
      methodname: "SubmitTx",
      args: function ($395) {
          return (function (v) {
              return {
                  submit: v
              };
          })(Ctl_Internal_Types_CborBytes.cborBytesToHex(Data_Tuple.snd($395)));
      }
  });
  var mempoolSnapshotHasTxCall = function (v) {
      return mkOgmiosCallType(Aeson.encodeAesonRecord(Aeson.gEncodeAesonCons(Aeson.encodeAesonRecord(Aeson.gEncodeAesonCons(Ctl_Internal_Types_ByteArray.encodeAesonByteArray)(Aeson.gEncodeAesonNil)({
          reflectSymbol: function () {
              return "id";
          }
      })())())(Aeson.gEncodeAesonCons(Aeson.encodeAesonString)(Aeson.gEncodeAesonCons(Aeson.encodeAesonString)(Aeson.gEncodeAesonCons(Aeson.encodeAesonString)(Aeson.gEncodeAesonCons(Aeson.encodeAesonString)(Aeson.gEncodeAesonCons(Aeson.encodeAesonString)(Aeson.gEncodeAesonNil)({
          reflectSymbol: function () {
              return "version";
          }
      })())({
          reflectSymbol: function () {
              return "type";
          }
      })())({
          reflectSymbol: function () {
              return "servicename";
          }
      })())({
          reflectSymbol: function () {
              return "mirror";
          }
      })())({
          reflectSymbol: function () {
              return "methodname";
          }
      })())({
          reflectSymbol: function () {
              return "args";
          }
      })())())({
          methodname: "HasTx",
          args: function (v1) {
              return {
                  id: v1
              };
          }
      });
  };
  var liftField = function (dictDecodeAeson) {
      return function (f) {
          return function (act) {
              return Control_Bind.composeKleisli(Data_Either.bindEither)(Data_Function.flip(Aeson.getField(dictDecodeAeson))(f))(act);
          };
      };
  };
  var evaluateTxCall = mkOgmiosCallType(Aeson.encodeAesonRecord(Aeson.gEncodeAesonCons(Aeson.encodeAesonRecord(Aeson.gEncodeAesonCons(encodeAesonAdditionalUtxo)(Aeson.gEncodeAesonCons(Aeson.encodeAesonString)(Aeson.gEncodeAesonNil)({
      reflectSymbol: function () {
          return "evaluate";
      }
  })())({
      reflectSymbol: function () {
          return "additionalUtxoSet";
      }
  })())())(Aeson.gEncodeAesonCons(Aeson.encodeAesonString)(Aeson.gEncodeAesonCons(Aeson.encodeAesonString)(Aeson.gEncodeAesonCons(Aeson.encodeAesonString)(Aeson.gEncodeAesonCons(Aeson.encodeAesonString)(Aeson.gEncodeAesonCons(Aeson.encodeAesonString)(Aeson.gEncodeAesonNil)({
      reflectSymbol: function () {
          return "version";
      }
  })())({
      reflectSymbol: function () {
          return "type";
      }
  })())({
      reflectSymbol: function () {
          return "servicename";
      }
  })())({
      reflectSymbol: function () {
          return "mirror";
      }
  })())({
      reflectSymbol: function () {
          return "methodname";
      }
  })())({
      reflectSymbol: function () {
          return "args";
      }
  })())())({
      methodname: "EvaluateTx",
      args: function (v) {
          return {
              evaluate: Ctl_Internal_Types_CborBytes.cborBytesToHex(v.value0),
              additionalUtxoSet: v.value1
          };
      }
  });
  var decodeUnitInterval = function (aeson) {
      return Control_Bind.bind(Data_Either.bindEither)(Aeson.decodeAeson(Aeson.decodeAesonString)(aeson))(function (str) {
          var v = Data_String_Common.split("/")(str);
          if (v.length === 2) {
              return Control_Bind.bind(Data_Either.bindEither)(Data_Either.note(new Data_Argonaut_Decode_Error.TypeMismatch("BigNum"))(Ctl_Internal_Types_BigNum.fromString(v[0])))(function (numerator) {
                  return Control_Bind.bind(Data_Either.bindEither)(Data_Either.note(new Data_Argonaut_Decode_Error.TypeMismatch("BigNum"))(Ctl_Internal_Types_BigNum.fromString(v[1])))(function (denominator) {
                      return Control_Applicative.pure(Data_Either.applicativeEither)({
                          numerator: numerator,
                          denominator: denominator
                      });
                  });
              });
          };
          return new Data_Either.Left(new Data_Argonaut_Decode_Error.TypeMismatch("UnitInterval"));
      });
  };
  var decodeRedeemerPointer = function (redeemerPtrRaw) {
      return Data_Either.note(redeemerPtrTypeMismatch)((function () {
          var v = Data_String_Common.split(":")(redeemerPtrRaw);
          if (v.length === 2) {
              return Control_Apply.apply(Data_Maybe.applyMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(function (v1) {
                  return function (v2) {
                      return {
                          redeemerTag: v1,
                          redeemerIndex: v2
                      };
                  };
              })(Ctl_Internal_Types_RedeemerTag.fromString(v[0])))(Ctl_Internal_Types_Natural.fromString(v[1]));
          };
          return Data_Maybe.Nothing.value;
      })());
  };
  var decodePoolMetadata = function (aeson) {
      return Control_Bind.bind(Data_Either.bindEither)(Aeson.decodeAeson(Aeson.decodeAesonObject(Aeson.decodeAesonAeson))(aeson))(function (obj) {
          return Control_Bind.bind(Data_Either.bindEither)(Control_Bind.bind(Data_Either.bindEither)(Aeson.getField(Aeson.decodeAesonString)(obj)("hash"))((function () {
              var $396 = Data_Either.note(new Data_Argonaut_Decode_Error.TypeMismatch("PoolMetadataHash"));
              var $397 = Data_Functor.map(Data_Maybe.functorMaybe)(Ctl_Internal_Cardano_Types_Transaction.PoolMetadataHash);
              return function ($398) {
                  return $396($397(Ctl_Internal_Types_ByteArray.hexToByteArray($398)));
              };
          })()))(function (hash) {
              return Control_Bind.bind(Data_Either.bindEither)(Data_Functor.mapFlipped(Data_Either.functorEither)(Aeson.getField(Aeson.decodeAesonString)(obj)("url"))(Ctl_Internal_Cardano_Types_Transaction.URL))(function (url) {
                  return Control_Applicative.pure(Data_Either.applicativeEither)({
                      hash: hash,
                      url: url
                  });
              });
          });
      });
  };
  var decodeIpv6 = function (aeson) {
      return Control_Bind.bind(Data_Either.bindEither)(Aeson.decodeAeson(Aeson.decodeAesonString)(aeson))((function () {
          var $399 = Data_Either.note(new Data_Argonaut_Decode_Error.TypeMismatch("Ipv6"));
          return function ($400) {
              return $399(parseIpv6String($400));
          };
      })());
  };
  var decodeIpv4 = function (aeson) {
      return Control_Bind.bind(Data_Either.bindEither)(Aeson.decodeAeson(Aeson.decodeAesonString)(aeson))(function (str) {
          var v = Data_String_Common.split(".")(str);
          if (v.length === 4) {
              return Control_Bind.bind(Data_Either.bindEither)(Data_Traversable["for"](Data_Either.applicativeEither)(Data_Traversable.traversableArray)(v)((function () {
                  var $401 = Data_Either.note(new Data_Argonaut_Decode_Error.TypeMismatch("Ipv4"));
                  return function ($402) {
                      return $401(Data_Int.fromString($402));
                  };
              })()))(function (ints) {
                  return Data_Functor.map(Data_Either.functorEither)(Ctl_Internal_Cardano_Types_Transaction.Ipv4)(Data_Either.note(new Data_Argonaut_Decode_Error.TypeMismatch("Ipv4"))(Ctl_Internal_Types_ByteArray.byteArrayFromIntArray(ints)));
              });
          };
          return new Data_Either.Left(new Data_Argonaut_Decode_Error.TypeMismatch("Ipv4"));
      });
  };
  var decodeRelay = function (aeson) {
      return Control_Bind.bind(Data_Either.bindEither)(Aeson.decodeAeson(Aeson.decodeAesonObject(Aeson.decodeAesonAeson))(aeson))(function (obj) {
          var decodeSingleHostName = Control_Bind.bind(Data_Either.bindEither)(Aeson.getField(Aeson.decodeAesonMaybe(Aeson.decodeAesonInt))(obj)("port"))(function (port) {
              return Control_Bind.bind(Data_Either.bindEither)(Aeson.getField(Aeson.decodeAesonString)(obj)("hostname"))(function (dnsName) {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(new Ctl_Internal_Cardano_Types_Transaction.SingleHostName({
                      port: port,
                      dnsName: dnsName
                  }));
              });
          });
          var decodeSingleHostAddr = Control_Bind.bind(Data_Either.bindEither)(Aeson["getFieldOptional'"](Aeson.decodeAesonInt)(obj)("port"))(function (port) {
              return Control_Bind.bind(Data_Either.bindEither)(Control_Bind.bind(Data_Either.bindEither)(Aeson["getFieldOptional'"](Aeson.decodeAesonAeson)(obj)("ipv4"))(Data_Traversable.traverse(Data_Traversable.traversableMaybe)(Data_Either.applicativeEither)(decodeIpv4)))(function (ipv4) {
                  return Control_Bind.bind(Data_Either.bindEither)(Control_Bind.bind(Data_Either.bindEither)(Aeson["getFieldOptional'"](Aeson.decodeAesonAeson)(obj)("ipv6"))(Data_Traversable.traverse(Data_Traversable.traversableMaybe)(Data_Either.applicativeEither)(decodeIpv6)))(function (ipv6) {
                      return Control_Applicative.pure(Data_Either.applicativeEither)(new Ctl_Internal_Cardano_Types_Transaction.SingleHostAddr({
                          port: port,
                          ipv4: ipv4,
                          ipv6: ipv6
                      }));
                  });
              });
          });
          var decodeMultiHostName = Control_Bind.bind(Data_Either.bindEither)(Aeson.getField(Aeson.decodeAesonString)(obj)("hostname"))(function (dnsName) {
              return Control_Applicative.pure(Data_Either.applicativeEither)(new Ctl_Internal_Cardano_Types_Transaction.MultiHostName({
                  dnsName: dnsName
              }));
          });
          return Control_Alt.alt(Data_Either.altEither)(Control_Alt.alt(Data_Either.altEither)(decodeSingleHostName)(decodeSingleHostAddr))(decodeMultiHostName);
      });
  };
  var decodeAesonPoolParameters = {
      decodeAeson: function (aeson) {
          return Control_Bind.bind(Data_Either.bindEither)(Aeson.decodeAeson(Aeson.decodeAesonObject(Aeson.decodeAesonObject(Aeson.decodeAesonAeson)))(aeson))(function (v) {
              return Control_Bind.bind(Data_Either.bindEither)(Data_Traversable["for"](Data_Either.applicativeEither)(Data_Traversable.traversableArray)(Foreign_Object.toUnfoldable(Data_Unfoldable.unfoldableArray)(v))(function (v1) {
                  return Control_Bind.bind(Data_Either.bindEither)(Aeson.getField(Aeson.decodeAesonString)(v1.value1)("vrf"))(function (vrfKeyhashHex) {
                      return Control_Bind.bind(Data_Either.bindEither)(Data_Either.note(new Data_Argonaut_Decode_Error.TypeMismatch("VRFKeyHash"))(Ctl_Internal_Types_ByteArray.hexToByteArray(vrfKeyhashHex)))(function (vrfKeyhashBytes) {
                          return Control_Bind.bind(Data_Either.bindEither)(Data_Either.note(new Data_Argonaut_Decode_Error.TypeMismatch("VRFKeyHash"))(Data_Functor.map(Data_Maybe.functorMaybe)(Ctl_Internal_Types_VRFKeyHash.VRFKeyHash)(Ctl_Internal_Deserialization_FromBytes.fromBytes(Ctl_Internal_Deserialization_FromBytes.fromBytesVRFKeyHash)(Data_Newtype.wrap()(vrfKeyhashBytes)))))(function (vrfKeyhash) {
                              return Control_Bind.bind(Data_Either.bindEither)(Aeson.getField(Ctl_Internal_Types_BigNum.decodeAesonBigNum)(v1.value1)("pledge"))(function (pledge) {
                                  return Control_Bind.bind(Data_Either.bindEither)(Aeson.getField(Ctl_Internal_Types_BigNum.decodeAesonBigNum)(v1.value1)("cost"))(function (cost) {
                                      return Control_Bind.bind(Data_Either.bindEither)(Control_Bind.bindFlipped(Data_Either.bindEither)(decodeUnitInterval)(Aeson.getField(Aeson.decodeAesonAeson)(v1.value1)("margin")))(function (margin) {
                                          return Control_Bind.bind(Data_Either.bindEither)(Aeson.getField(Ctl_Internal_Types_RewardAddress.decodeAesonRewardAddress)(v1.value1)("rewardAccount"))(function (rewardAccount) {
                                              return Control_Bind.bind(Data_Either.bindEither)(Aeson.getField(Aeson.decodeAesonArray(Ctl_Internal_Serialization_Hash.decodeAesonEd25519KeyHash))(v1.value1)("owners"))(function (poolOwners) {
                                                  return Control_Bind.bind(Data_Either.bindEither)(Aeson.getField(Aeson.decodeAesonArray(Aeson.decodeAesonAeson))(v1.value1)("relays"))(function (relayArr) {
                                                      return Control_Bind.bind(Data_Either.bindEither)(Data_Traversable["for"](Data_Either.applicativeEither)(Data_Traversable.traversableArray)(relayArr)(decodeRelay))(function (relays) {
                                                          return Control_Bind.bind(Data_Either.bindEither)(Control_Bind.bind(Data_Either.bindEither)(Aeson["getFieldOptional'"](Aeson.decodeAesonAeson)(v1.value1)("metadata"))(Data_Traversable.traverse(Data_Traversable.traversableMaybe)(Data_Either.applicativeEither)(decodePoolMetadata)))(function (poolMetadata) {
                                                              return Control_Applicative.pure(Data_Either.applicativeEither)(new Data_Tuple.Tuple(v1.value0, {
                                                                  vrfKeyhash: vrfKeyhash,
                                                                  pledge: pledge,
                                                                  cost: cost,
                                                                  margin: margin,
                                                                  rewardAccount: rewardAccount,
                                                                  poolOwners: poolOwners,
                                                                  relays: relays,
                                                                  poolMetadata: poolMetadata
                                                              }));
                                                          });
                                                      });
                                                  });
                                              });
                                          });
                                      });
                                  });
                              });
                          });
                      });
                  });
              }))(function (kvs) {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(Data_Map_Internal.fromFoldable(Data_Ord.ordString)(Data_Foldable.foldableArray)(kvs));
              });
          });
      }
  };
  var aesonObject = Aeson.caseAesonObject(new Data_Either.Left(new Data_Argonaut_Decode_Error.TypeMismatch("Expected Object")));
  var decodeAesonMempoolSnapsho = {
      decodeAeson: (function () {
          var $403 = Data_Functor.map(Data_Either.functorEither)(AwaitAcquired);
          var $404 = aesonObject(Control_Bind.composeKleisli(Data_Either.bindEither)(Data_Function.flip(Aeson.getField(Aeson.decodeAesonObject(Aeson.decodeAesonAeson)))("AwaitAcquired"))(Data_Function.flip(Aeson.getField(Ctl_Internal_Serialization_Address.decodeAesonSlot))("slot")));
          return function ($405) {
              return $403($404($405));
          };
      })()
  };
  var decodeAesonScriptFailure = {
      decodeAeson: (function () {
          var defaultCase = Data_Function["const"](new Data_Either.Left(new Data_Argonaut_Decode_Error.TypeMismatch("Expected ScriptFailure")));
          var decodeValidatorFailed = liftField(Aeson.decodeAesonRecord(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Aeson.decodeAesonString))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Aeson.decodeAesonArray(Aeson.decodeAesonString)))(Aeson.gDecodeAesonRowNil)({
              reflectSymbol: function () {
                  return "traces";
              }
          })()())({
              reflectSymbol: function () {
                  return "error";
              }
          })()())())("validatorFailed")(function (o) {
              return Control_Applicative.pure(Data_Either.applicativeEither)(new ValidatorFailed(o));
          });
          var decodeUnknownInputReferencedByRedeemer = liftField(Aeson.decodeAesonRecord(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Aeson.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Aeson.decodeAesonString))(Aeson.gDecodeAesonRowNil)({
              reflectSymbol: function () {
                  return "txId";
              }
          })()())({
              reflectSymbol: function () {
                  return "index";
              }
          })()())())("unknownInputReferencedByRedeemer")(function (o) {
              return Control_Applicative.pure(Data_Either.applicativeEither)(new UnknownInputReferencedByRedeemer(o));
          });
          var decodeNonScriptInputReferencedByRedeemer = liftField(Aeson.decodeAesonRecord(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Aeson.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Aeson.decodeAesonString))(Aeson.gDecodeAesonRowNil)({
              reflectSymbol: function () {
                  return "txId";
              }
          })()())({
              reflectSymbol: function () {
                  return "index";
              }
          })()())())("nonScriptInputReferencedByRedeemer")(function (o) {
              return Control_Applicative.pure(Data_Either.applicativeEither)(new NonScriptInputReferencedByRedeemer(o));
          });
          var decodeNoCostModelForLanguage = liftField(Aeson.decodeAesonString)("noCostModelForLanguage")(function (o) {
              return Control_Applicative.pure(Data_Either.applicativeEither)(new NoCostModelForLanguage(o));
          });
          var decodeMissingRequiredScripts = liftField(Aeson.decodeAesonObject(Aeson.decodeAesonAeson))("missingRequiredScripts")(function (o) {
              return Control_Bind.bind(Data_Either.bindEither)(Data_Functor.map(Data_Either.functorEither)(Foreign_Object.toUnfoldable(Data_Unfoldable.unfoldableArray))(Aeson.getField(Aeson.decodeAesonObject(Aeson.decodeAesonString))(o)("resolved")))(function (resolvedKV) {
                  return Control_Bind.bind(Data_Either.bindEither)(Data_Functor.map(Data_Either.functorEither)(Data_Map_Internal.fromFoldable(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
                      reflectSymbol: function () {
                          return "redeemerTag";
                      }
                  })(Ctl_Internal_Types_RedeemerTag.ordRedeemerTag))()({
                      reflectSymbol: function () {
                          return "redeemerIndex";
                      }
                  })(Ctl_Internal_Types_Natural.ordNatural)))(Data_Foldable.foldableArray))(Data_Traversable["for"](Data_Either.applicativeEither)(Data_Traversable.traversableArray)(resolvedKV)(function (v) {
                      return Data_Functor.map(Data_Either.functorEither)(function (v2) {
                          return new Data_Tuple.Tuple(v2, v.value1);
                      })(decodeRedeemerPointer(v.value0));
                  })))(function (resolved) {
                      return Control_Bind.bind(Data_Either.bindEither)(Aeson.getField(Aeson.decodeAesonArray(Aeson.decodeAesonString))(o)("missing"))(function (missing) {
                          return Control_Applicative.pure(Data_Either.applicativeEither)(new MissingRequiredScripts({
                              resolved: resolved,
                              missing: missing
                          }));
                      });
                  });
              });
          });
          var decodeMissingRequiredDatums = liftField(Aeson.decodeAesonRecord(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Aeson.decodeAesonArray(Aeson.decodeAesonString)))(Aeson.gDecodeAesonCons(Aeson.decodeAesonFieldMaybe(Aeson.decodeAesonArray(Aeson.decodeAesonString)))(Aeson.gDecodeAesonRowNil)({
              reflectSymbol: function () {
                  return "provided";
              }
          })()())({
              reflectSymbol: function () {
                  return "missing";
              }
          })()())())("missingRequiredDatums")(function (o) {
              return Control_Applicative.pure(Data_Either.applicativeEither)(new MissingRequiredDatums(o));
          });
          var decodeIllFormedExecutionBudget = liftField(Aeson.decodeAesonMaybe(Aeson.decodeAesonRecord(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Natural.decodeAesonNatural))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Natural.decodeAesonNatural))(Aeson.gDecodeAesonRowNil)({
              reflectSymbol: function () {
                  return "steps";
              }
          })()())({
              reflectSymbol: function () {
                  return "memory";
              }
          })()())()))("illFormedExecutionBudget")(function (o) {
              return Control_Applicative.pure(Data_Either.applicativeEither)(new IllFormedExecutionBudget(o));
          });
          var decodeExtraRedeemers = Data_Functor.map(Control_Monad_Reader_Trans.functorReaderT(Data_Either.functorEither))(ExtraRedeemers.create)(liftField(Aeson.decodeAesonArray(Aeson.decodeAesonString))("extraRedeemers")(Data_Traversable.traverse(Data_Traversable.traversableArray)(Data_Either.applicativeEither)(decodeRedeemerPointer)));
          var cases = Control_Alt.alt(Control_Monad_Reader_Trans.altReaderT(Data_Either.altEither))(Control_Alt.alt(Control_Monad_Reader_Trans.altReaderT(Data_Either.altEither))(Control_Alt.alt(Control_Monad_Reader_Trans.altReaderT(Data_Either.altEither))(Control_Alt.alt(Control_Monad_Reader_Trans.altReaderT(Data_Either.altEither))(Control_Alt.alt(Control_Monad_Reader_Trans.altReaderT(Data_Either.altEither))(Control_Alt.alt(Control_Monad_Reader_Trans.altReaderT(Data_Either.altEither))(Control_Alt.alt(Control_Monad_Reader_Trans.altReaderT(Data_Either.altEither))(Control_Alt.alt(Control_Monad_Reader_Trans.altReaderT(Data_Either.altEither))(decodeExtraRedeemers)(decodeMissingRequiredDatums))(decodeMissingRequiredScripts))(decodeValidatorFailed))(decodeUnknownInputReferencedByRedeemer))(decodeNonScriptInputReferencedByRedeemer))(decodeIllFormedExecutionBudget))(decodeNoCostModelForLanguage))(defaultCase);
          return aesonObject(Control_Monad_Reader_Trans.runReaderT(cases));
      })()
  };
  var decodeAesonSubmitTxR = {
      decodeAeson: aesonObject(function (o) {
          return Control_Alt.alt(Data_Either.altEither)(Control_Bind.bind(Data_Either.bindEither)(Control_Bind.bind(Data_Either.bindEither)(Aeson.getField(Aeson.decodeAesonObject(Aeson.decodeAesonAeson))(o)("SubmitSuccess"))(Data_Function.flip(Aeson.getField(Aeson.decodeAesonString))("txId")))((function () {
              var $406 = Data_Maybe.maybe(new Data_Either.Left(new Data_Argonaut_Decode_Error.TypeMismatch("Expected hexstring")))((function () {
                  var $408 = Control_Applicative.pure(Data_Either.applicativeEither);
                  return function ($409) {
                      return $408(SubmitTxSuccess.create($409));
                  };
              })());
              return function ($407) {
                  return $406(Ctl_Internal_Types_ByteArray.hexToByteArray($407));
              };
          })()))(Data_Functor.map(Data_Either.functorEither)(SubmitFail.create)(Aeson.getField(Aeson.decodeAesonArray(Aeson.decodeAesonAeson))(o)("SubmitFail")));
      })
  };
  var decodeAesonTxEvaluationFa = {
      decodeAeson: (function () {
          var defaultCase = function (o) {
              return Control_Applicative.pure(Data_Either.applicativeEither)(new UnparsedError(Aeson.stringifyAeson(Aeson.encodeAeson(Aeson.encodeAesonObject(Aeson.encodeAesonAeson))(o))));
          };
          var decodeScriptFailures = function (o) {
              return Control_Bind.bind(Data_Either.bindEither)(Data_Functor.map(Data_Either.functorEither)(Foreign_Object.toUnfoldable(Data_Unfoldable.unfoldableArray))(Control_Bind.bind(Data_Either.bindEither)(Aeson.getField(Aeson.decodeAesonObject(Aeson.decodeAesonAeson))(o)("EvaluationFailure"))(Data_Function.flip(Aeson.getField(Aeson.decodeAesonObject(Aeson.decodeAesonAeson)))("ScriptFailures"))))(function (scriptFailuresKV) {
                  return Control_Bind.bind(Data_Either.bindEither)(Data_Functor.map(Data_Either.functorEither)(Data_Map_Internal.fromFoldable(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
                      reflectSymbol: function () {
                          return "redeemerTag";
                      }
                  })(Ctl_Internal_Types_RedeemerTag.ordRedeemerTag))()({
                      reflectSymbol: function () {
                          return "redeemerIndex";
                      }
                  })(Ctl_Internal_Types_Natural.ordNatural)))(Data_Foldable.foldableArray))(Data_Traversable["for"](Data_Either.applicativeEither)(Data_Traversable.traversableArray)(scriptFailuresKV)(function (v) {
                      return Control_Bind.bind(Data_Either.bindEither)(Aeson.decodeAeson(Aeson.decodeAesonArray(decodeAesonScriptFailure))(v.value1))(function (v$prime) {
                          return Data_Functor.map(Data_Either.functorEither)(function (v2) {
                              return new Data_Tuple.Tuple(v2, v$prime);
                          })(decodeRedeemerPointer(v.value0));
                      });
                  })))(function (scriptFailures) {
                      return Control_Applicative.pure(Data_Either.applicativeEither)(new ScriptFailures(scriptFailures));
                  });
              });
          };
          var cases = Control_Alt.alt(Control_Monad_Reader_Trans.altReaderT(Data_Either.altEither))(decodeScriptFailures)(defaultCase);
          return aesonObject(Control_Monad_Reader_Trans.runReaderT(cases));
      })()
  };
  var decodeAesonTxEvaluationRe = {
      decodeAeson: (function () {
          var decodeRdmrPtrExUnitsItem = function (v) {
              return Control_Bind.bind(Data_Either.bindEither)(decodeRedeemerPointer(v.value0))(function (redeemerPtr) {
                  return Data_Function.flip(aesonObject)(v.value1)(function (exUnitsObj) {
                      return Control_Bind.bind(Data_Either.bindEither)(Aeson.getField(Ctl_Internal_Types_Natural.decodeAesonNatural)(exUnitsObj)("memory"))(function (memory) {
                          return Control_Bind.bind(Data_Either.bindEither)(Aeson.getField(Ctl_Internal_Types_Natural.decodeAesonNatural)(exUnitsObj)("steps"))(function (steps) {
                              return Control_Applicative.pure(Data_Either.applicativeEither)(new Data_Tuple.Tuple(redeemerPtr, {
                                  memory: memory,
                                  steps: steps
                              }));
                          });
                      });
                  });
              });
          };
          return aesonObject(function (obj) {
              return Control_Bind.bind(Data_Either.bindEither)(Data_Functor.map(Data_Either.functorEither)(Foreign_Object.toUnfoldable(Data_Unfoldable.unfoldableArray))(Aeson.getField(Aeson.decodeAesonObject(Aeson.decodeAesonAeson))(obj)("EvaluationResult")))(function (v) {
                  return Data_Functor.map(Data_Either.functorEither)((function () {
                      var $410 = Data_Map_Internal.fromFoldable(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
                          reflectSymbol: function () {
                              return "redeemerTag";
                          }
                      })(Ctl_Internal_Types_RedeemerTag.ordRedeemerTag))()({
                          reflectSymbol: function () {
                              return "redeemerIndex";
                          }
                      })(Ctl_Internal_Types_Natural.ordNatural)))(Data_Foldable.foldableArray);
                      return function ($411) {
                          return TxEvaluationResult($410($411));
                      };
                  })())(Data_Traversable.traverse(Data_Traversable.traversableArray)(Data_Either.applicativeEither)(decodeRdmrPtrExUnitsItem)(v));
              });
          });
      })()
  };
  var decodeAesonTxEvaluationR = {
      decodeAeson: function (aeson) {
          return Control_Alt.alt(Data_Either.altEither)(Data_Functor.map(Data_Either.functorEither)((function () {
              var $412 = Data_Newtype.wrap();
              return function ($413) {
                  return $412(Data_Either.Right.create($413));
              };
          })())(Aeson.decodeAeson(decodeAesonTxEvaluationRe)(aeson)))(Data_Functor.map(Data_Either.functorEither)((function () {
              var $414 = Data_Newtype.wrap();
              return function ($415) {
                  return $414(Data_Either.Left.create($415));
              };
          })())(Aeson.decodeAeson(decodeAesonTxEvaluationFa)(aeson)));
      }
  };
  var aesonArray = Aeson.caseAesonArray(new Data_Either.Left(new Data_Argonaut_Decode_Error.TypeMismatch("Expected Array")));
  var decodeAesonOgmiosEraSumma = {
      decodeAeson: (function () {
          var decodeEraSummaryParameters = function (o) {
              return Control_Bind.bind(Data_Either.bindEither)(Aeson.getField(Ctl_Internal_Types_EraSummaries.decodeAesonEpochLength)(o)("epochLength"))(function (epochLength) {
                  return Control_Bind.bind(Data_Either.bindEither)(Data_Functor.map(Data_Either.functorEither)(Data_Newtype.wrap())(Data_Functor.map(Data_Either.functorEither)(Data_Semiring.mul(Data_Semiring.semiringNumber)(slotLengthFactor))(Aeson.getField(Aeson.decodeAesonNumber)(o)("slotLength"))))(function (slotLength) {
                      return Control_Bind.bind(Data_Either.bindEither)(Data_Functor.map(Data_Either.functorEither)(Data_Maybe.fromMaybe(Data_Semiring.zero(Ctl_Internal_Types_EraSummaries.semiringSafeZone)))(Aeson.getField(Aeson.decodeAesonMaybe(Ctl_Internal_Types_EraSummaries.decodeAesonSafeZone))(o)("safeZone")))(function (safeZone) {
                          return Control_Applicative.pure(Data_Either.applicativeEither)(Data_Newtype.wrap()({
                              epochLength: epochLength,
                              slotLength: slotLength,
                              safeZone: safeZone
                          }));
                      });
                  });
              });
          };
          var decodeEraSummary = aesonObject(function (o) {
              return Control_Bind.bind(Data_Either.bindEither)(Aeson.getField(Ctl_Internal_Types_EraSummaries.decodeAesonEraSummaryTime)(o)("start"))(function (start) {
                  return Control_Bind.bind(Data_Either.bindEither)(Aeson.getField(Aeson.decodeAesonAeson)(o)("end"))(function (end$prime) {
                      return Control_Bind.bind(Data_Either.bindEither)((function () {
                          var $383 = Aeson.isNull(end$prime);
                          if ($383) {
                              return Control_Applicative.pure(Data_Either.applicativeEither)(Data_Maybe.Nothing.value);
                          };
                          return Data_Functor.map(Data_Either.functorEither)(Data_Maybe.Just.create)(Aeson.decodeAeson(Ctl_Internal_Types_EraSummaries.decodeAesonEraSummaryTime)(end$prime));
                      })())(function (end) {
                          return Control_Bind.bind(Data_Either.bindEither)(Control_Bind.bindFlipped(Data_Either.bindEither)(decodeEraSummaryParameters)(Aeson.getField(Aeson.decodeAesonObject(Aeson.decodeAesonAeson))(o)("parameters")))(function (parameters) {
                              return Control_Applicative.pure(Data_Either.applicativeEither)(Data_Newtype.wrap()({
                                  start: start,
                                  end: end,
                                  parameters: parameters
                              }));
                          });
                      });
                  });
              });
          });
          return aesonArray((function () {
              var $428 = Data_Functor.map(Data_Either.functorEither)((function () {
                  var $431 = Data_Newtype.wrap();
                  var $432 = Data_Newtype.wrap();
                  return function ($433) {
                      return $431($432($433));
                  };
              })());
              var $429 = Data_Traversable.traverse(Data_Traversable.traversableArray)(Data_Either.applicativeEither)(decodeEraSummary);
              return function ($430) {
                  return $428($429($430));
              };
          })());
      })()
  };
  var acquireMempoolSnapshotCall = mkOgmiosCallTypeNoArgs("AwaitAcquire");
  exports["CtChainOrigin"] = CtChainOrigin;
  exports["CtChainPoint"] = CtChainPoint;
  exports["ExtraRedeemers"] = ExtraRedeemers;
  exports["MissingRequiredDatums"] = MissingRequiredDatums;
  exports["MissingRequiredScripts"] = MissingRequiredScripts;
  exports["ValidatorFailed"] = ValidatorFailed;
  exports["UnknownInputReferencedByRedeemer"] = UnknownInputReferencedByRedeemer;
  exports["NonScriptInputReferencedByRedeemer"] = NonScriptInputReferencedByRedeemer;
  exports["IllFormedExecutionBudget"] = IllFormedExecutionBudget;
  exports["NoCostModelForLanguage"] = NoCostModelForLanguage;
  exports["SubmitTxSuccess"] = SubmitTxSuccess;
  exports["SubmitFail"] = SubmitFail;
  exports["UnparsedError"] = UnparsedError;
  exports["ScriptFailures"] = ScriptFailures;
  exports["acquireMempoolSnapshotCall"] = acquireMempoolSnapshotCall;
  exports["aesonObject"] = aesonObject;
  exports["evaluateTxCall"] = evaluateTxCall;
  exports["queryPoolIdsCall"] = queryPoolIdsCall;
  exports["mempoolSnapshotHasTxCall"] = mempoolSnapshotHasTxCall;
  exports["queryChainTipCall"] = queryChainTipCall;
  exports["queryCurrentEpochCall"] = queryCurrentEpochCall;
  exports["queryEraSummariesCall"] = queryEraSummariesCall;
  exports["queryProtocolParametersCall"] = queryProtocolParametersCall;
  exports["querySystemStartCall"] = querySystemStartCall;
  exports["queryDelegationsAndRewards"] = queryDelegationsAndRewards;
  exports["submitTxCall"] = submitTxCall;
  exports["slotLengthFactor"] = slotLengthFactor;
  exports["decodeAesonMempoolSnapsho"] = decodeAesonMempoolSnapsho;
  exports["decodeAesonSubmitTxR"] = decodeAesonSubmitTxR;
  exports["decodeAesonOgmiosSystemSt"] = decodeAesonOgmiosSystemSt;
  exports["decodeAesonCurrentEpoch"] = decodeAesonCurrentEpoch;
  exports["decodeAesonOgmiosEraSumma"] = decodeAesonOgmiosEraSumma;
  exports["decodeAesonDelegationsAnd"] = decodeAesonDelegationsAnd;
  exports["decodeAesonPoolParameters"] = decodeAesonPoolParameters;
  exports["decodeAesonTxEvaluationR"] = decodeAesonTxEvaluationR;
  exports["showTxEvaluationFailure"] = showTxEvaluationFailure;
  exports["decodeAesonOgmiosProtocol"] = decodeAesonOgmiosProtocol;
  exports["decodeAesonChainTipQR"] = decodeAesonChainTipQR;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Ctl.Internal.Service.Error"] = $PS["Ctl.Internal.Service.Error"] || {};
  var exports = $PS["Ctl.Internal.Service.Error"];
  var Aeson = $PS["Aeson"];
  var Affjax = $PS["Affjax"];
  var Affjax_StatusCode = $PS["Affjax.StatusCode"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Ctl_Internal_Service_Helpers = $PS["Ctl.Internal.Service.Helpers"];
  var Data_Argonaut_Decode_Error = $PS["Data.Argonaut.Decode.Error"];
  var Data_Either = $PS["Data.Either"];
  var Data_Generic_Rep = $PS["Data.Generic.Rep"];
  var Data_Show = $PS["Data.Show"];
  var Data_Show_Generic = $PS["Data.Show.Generic"];
  var ServiceBlockfrostError = (function () {
      function ServiceBlockfrostError(value0) {
          this.value0 = value0;
      };
      ServiceBlockfrostError.create = function (value0) {
          return new ServiceBlockfrostError(value0);
      };
      return ServiceBlockfrostError;
  })();
  var ServiceOtherError = (function () {
      function ServiceOtherError(value0) {
          this.value0 = value0;
      };
      ServiceOtherError.create = function (value0) {
          return new ServiceOtherError(value0);
      };
      return ServiceOtherError;
  })();
  var ClientHttpError = (function () {
      function ClientHttpError(value0) {
          this.value0 = value0;
      };
      ClientHttpError.create = function (value0) {
          return new ClientHttpError(value0);
      };
      return ClientHttpError;
  })();
  var ClientHttpResponseError = (function () {
      function ClientHttpResponseError(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      ClientHttpResponseError.create = function (value0) {
          return function (value1) {
              return new ClientHttpResponseError(value0, value1);
          };
      };
      return ClientHttpResponseError;
  })();
  var ClientDecodeJsonError = (function () {
      function ClientDecodeJsonError(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      ClientDecodeJsonError.create = function (value0) {
          return function (value1) {
              return new ClientDecodeJsonError(value0, value1);
          };
      };
      return ClientDecodeJsonError;
  })();
  var ClientEncodingError = (function () {
      function ClientEncodingError(value0) {
          this.value0 = value0;
      };
      ClientEncodingError.create = function (value0) {
          return new ClientEncodingError(value0);
      };
      return ClientEncodingError;
  })();
  var ClientOtherError = (function () {
      function ClientOtherError(value0) {
          this.value0 = value0;
      };
      ClientOtherError.create = function (value0) {
          return new ClientOtherError(value0);
      };
      return ClientOtherError;
  })();
  var genericServiceError_ = {
      to: function (x) {
          if (x instanceof Data_Generic_Rep.Inl) {
              return new ServiceBlockfrostError(x.value0);
          };
          if (x instanceof Data_Generic_Rep.Inr) {
              return new ServiceOtherError(x.value0);
          };
          throw new Error("Failed pattern match at Ctl.Internal.Service.Error (line 87, column 1 - line 87, column 39): " + [ x.constructor.name ]);
      },
      from: function (x) {
          if (x instanceof ServiceBlockfrostError) {
              return new Data_Generic_Rep.Inl(x.value0);
          };
          if (x instanceof ServiceOtherError) {
              return new Data_Generic_Rep.Inr(x.value0);
          };
          throw new Error("Failed pattern match at Ctl.Internal.Service.Error (line 87, column 1 - line 87, column 39): " + [ x.constructor.name ]);
      }
  };
  var genericBlockfrostError_ = {
      to: function (x) {
          return x;
      },
      from: function (x) {
          return x;
      }
  };
  var showBlockfrostError = {
      show: Data_Show_Generic.genericShow(genericBlockfrostError_)(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "error";
          }
      })(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "message";
          }
      })(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "statusCode";
          }
      })(Data_Show.showRecordFieldsNil)(Data_Show.showInt))(Data_Show.showString))(Data_Show.showString))))({
          reflectSymbol: function () {
              return "BlockfrostError";
          }
      }))
  };
  var showServiceError = {
      show: Data_Show_Generic.genericShow(genericServiceError_)(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(showBlockfrostError))({
          reflectSymbol: function () {
              return "ServiceBlockfrostError";
          }
      }))(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Data_Show.showString))({
          reflectSymbol: function () {
              return "ServiceOtherError";
          }
      })))
  };
  var showClientError = {
      show: function (v) {
          if (v instanceof ClientHttpError) {
              return "(ClientHttpError " + (Affjax.printError(v.value0) + ")");
          };
          if (v instanceof ClientHttpResponseError) {
              return "(ClientHttpResponseError " + (Data_Show.show(Affjax_StatusCode.showStatusCode)(v.value0) + (" " + (Data_Show.show(showServiceError)(v.value1) + ")")));
          };
          if (v instanceof ClientDecodeJsonError) {
              return "(ClientDecodeJsonError (" + (Data_Show.show(Data_Show.showString)(v.value0) + (") " + (Data_Show.show(Data_Argonaut_Decode_Error.showJsonDecodeError)(v.value1) + ")")));
          };
          if (v instanceof ClientEncodingError) {
              return "(ClientEncodingError " + (v.value0 + ")");
          };
          if (v instanceof ClientOtherError) {
              return "(ClientOtherError " + (v.value0 + ")");
          };
          throw new Error("Failed pattern match at Ctl.Internal.Service.Error (line 54, column 1 - line 76, column 13): " + [ v.constructor.name ]);
      }
  };
  var decodeAesonBlockfrostErro = {
      decodeAeson: Ctl_Internal_Service_Helpers.aesonObject(function (obj) {
          return Control_Bind.bind(Data_Either.bindEither)(Aeson.getField(Aeson.decodeAesonInt)(obj)("status_code"))(function (statusCode) {
              return Control_Bind.bind(Data_Either.bindEither)(Aeson.getField(Aeson.decodeAesonString)(obj)("error"))(function (error) {
                  return Control_Bind.bind(Data_Either.bindEither)(Aeson.getField(Aeson.decodeAesonString)(obj)("message"))(function (message) {
                      return Control_Applicative.pure(Data_Either.applicativeEither)({
                          statusCode: statusCode,
                          error: error,
                          message: message
                      });
                  });
              });
          });
      })
  };
  exports["ClientHttpError"] = ClientHttpError;
  exports["ClientHttpResponseError"] = ClientHttpResponseError;
  exports["ClientDecodeJsonError"] = ClientDecodeJsonError;
  exports["ClientOtherError"] = ClientOtherError;
  exports["ServiceBlockfrostError"] = ServiceBlockfrostError;
  exports["ServiceOtherError"] = ServiceOtherError;
  exports["showClientError"] = showClientError;
  exports["decodeAesonBlockfrostErro"] = decodeAesonBlockfrostErro;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Ctl.Internal.Types.Chain"] = $PS["Ctl.Internal.Types.Chain"] || {};
  var exports = $PS["Ctl.Internal.Types.Chain"];
  var TipAtGenesis = (function () {
      function TipAtGenesis() {

      };
      TipAtGenesis.value = new TipAtGenesis();
      return TipAtGenesis;
  })();
  var Tip = (function () {
      function Tip(value0) {
          this.value0 = value0;
      };
      Tip.create = function (value0) {
          return new Tip(value0);
      };
      return Tip;
  })();
  exports["TipAtGenesis"] = TipAtGenesis;
  exports["Tip"] = Tip;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Ctl.Internal.QueryM"] = $PS["Ctl.Internal.QueryM"] || {};
  var exports = $PS["Ctl.Internal.QueryM"];
  var Aeson = $PS["Aeson"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Category = $PS["Control.Category"];
  var Control_Monad_Error_Class = $PS["Control.Monad.Error.Class"];
  var Control_Monad_Reader_Class = $PS["Control.Monad.Reader.Class"];
  var Control_Monad_Reader_Trans = $PS["Control.Monad.Reader.Trans"];
  var Control_Parallel_Class = $PS["Control.Parallel.Class"];
  var Ctl_Internal_Cardano_Types_Transaction = $PS["Ctl.Internal.Cardano.Types.Transaction"];
  var Ctl_Internal_Helpers = $PS["Ctl.Internal.Helpers"];
  var Ctl_Internal_JsWebSocket = $PS["Ctl.Internal.JsWebSocket"];
  var Ctl_Internal_Logging = $PS["Ctl.Internal.Logging"];
  var Ctl_Internal_QueryM_Dispatcher = $PS["Ctl.Internal.QueryM.Dispatcher"];
  var Ctl_Internal_QueryM_JsonWsp = $PS["Ctl.Internal.QueryM.JsonWsp"];
  var Ctl_Internal_QueryM_Ogmios = $PS["Ctl.Internal.QueryM.Ogmios"];
  var Ctl_Internal_ServerConfig = $PS["Ctl.Internal.ServerConfig"];
  var Ctl_Internal_Service_Error = $PS["Ctl.Internal.Service.Error"];
  var Ctl_Internal_Types_ByteArray = $PS["Ctl.Internal.Types.ByteArray"];
  var Ctl_Internal_Types_Chain = $PS["Ctl.Internal.Types.Chain"];
  var Data_Argonaut_Decode_Error = $PS["Data.Argonaut.Decode.Error"];
  var Data_Bifunctor = $PS["Data.Bifunctor"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Either = $PS["Data.Either"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Log_Level = $PS["Data.Log.Level"];
  var Data_Map_Internal = $PS["Data.Map.Internal"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Show = $PS["Data.Show"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unfoldable = $PS["Data.Unfoldable"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect = $PS["Effect"];
  var Effect_Aff = $PS["Effect.Aff"];
  var Effect_Aff_Class = $PS["Effect.Aff.Class"];
  var Effect_Class = $PS["Effect.Class"];
  var Effect_Exception = $PS["Effect.Exception"];
  var Effect_Ref = $PS["Effect.Ref"];                
  var WebSocket = (function () {
      function WebSocket(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      WebSocket.create = function (value0) {
          return function (value1) {
              return new WebSocket(value0, value1);
          };
      };
      return WebSocket;
  })();                                                                                              
  var monadQueryMTAff = Control_Monad_Reader_Trans.monadReaderT(Effect_Aff.monadAff);                    
  var monadEffectQueryMTAff = Control_Monad_Reader_Trans.monadEffectReader(Effect_Aff.monadEffectAff);
  var monadAskQueryEnvQueryMTAf = Control_Monad_Reader_Trans.monadAskReaderT(Effect_Aff.monadAff);
  var monadAffQueryMTAff = Effect_Aff_Class.monadAffReader(Effect_Aff_Class.monadAffAff);
  var functorQueryMT = function (dictFunctor) {
      return Control_Monad_Reader_Trans.functorReaderT(dictFunctor);
  };
  var bindQueryMT = function (dictBind) {
      return Control_Monad_Reader_Trans.bindReaderT(dictBind);
  };
  var monadLoggerQueryMTAff = {
      log: function (msg) {
          return Control_Bind.bind(bindQueryMT(Effect_Aff.bindAff))(Control_Monad_Reader_Class.asks(monadAskQueryEnvQueryMTAf)(function (v) {
              return v.config;
          }))(function (config) {
              var logFunction = Data_Maybe.fromMaybe(Ctl_Internal_Helpers.logWithLevel(Effect_Aff.monadEffectAff))((function (v) {
                  return v.customLogger;
              })(config));
              return Effect_Aff_Class.liftAff(monadAffQueryMTAff)(logFunction(config.logLevel)(msg));
          });
      },
      MonadEffect0: function () {
          return monadEffectQueryMTAff;
      }
  };
  var applicativeQueryMT = function (dictApplicative) {
      return Control_Monad_Reader_Trans.applicativeReaderT(dictApplicative);
  };
  var parallelQueryMTParAffQuer = {
      parallel: (function () {
          var $129 = Data_Newtype.wrap();
          var $130 = Control_Parallel_Class.parallel(Control_Parallel_Class.monadParReaderT(Effect_Aff.parallelAff));
          var $131 = Data_Newtype.unwrap();
          return function ($132) {
              return $129($130($131($132)));
          };
      })(),
      sequential: (function () {
          var $133 = Data_Newtype.wrap();
          var $134 = Control_Parallel_Class.sequential(Control_Parallel_Class.monadParReaderT(Effect_Aff.parallelAff));
          var $135 = Data_Newtype.unwrap();
          return function ($136) {
              return $133($134($135($136)));
          };
      })(),
      Monad0: function () {
          return monadQueryMTAff;
      },
      Applicative1: function () {
          return applicativeQueryMT(Effect_Aff.applicativeParAff);
      }
  };
  var underlyingWebSocket = function (v) {
      return v.value0;
  };
  var mkRequestAff = function (listeners$prime) {
      return function (webSocket) {
          return function (logger) {
              return function (jsonWspCall) {
                  return function (getLs) {
                      return function (input) {
                          return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Ctl_Internal_QueryM_JsonWsp.buildRequest(jsonWspCall)(input)))(function (v) {
                              var sBody = Aeson.stringifyAeson(v.body);
                              var respLs = getLs(listeners$prime);
                              var affFunc = function (cont) {
                                  return function __do() {
                                      respLs.addMessageListener(v.id)(function (result) {
                                          return function __do() {
                                              respLs.removeMessageListener(v.id)();
                                              if (result instanceof Data_Either.Left && result.value0 instanceof Ctl_Internal_QueryM_Dispatcher.ListenerCancelled) {
                                                  return Data_Unit.unit;
                                              };
                                              return cont(Data_Bifunctor.lmap(Data_Bifunctor.bifunctorEither)(Ctl_Internal_QueryM_Dispatcher.dispatchErrorToError)(result))();
                                          };
                                      })();
                                      respLs.addRequest(v.id)(new Data_Tuple.Tuple(sBody, input))();
                                      Ctl_Internal_JsWebSocket["_wsSend"](webSocket)(logger(Data_Log_Level.Debug.value))(sBody)();
                                      return function (err) {
                                          return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(respLs.removeMessageListener(v.id)))(function () {
                                              return Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Control_Monad_Error_Class.throwError(Control_Monad_Error_Class.monadThrowEffect)(err));
                                          });
                                      };
                                  };
                              };
                              return Effect_Aff.makeAff(affFunc);
                          });
                      };
                  };
              };
          };
      };
  };
  var mkRemoveMessageListener = function (dispatcher) {
      return function (pendingRequests) {
          return function (reflection) {
              return function __do() {
                  Effect_Ref.modify_(Data_Map_Internal["delete"](Data_Ord.ordString)(reflection))(dispatcher)();
                  return Effect_Ref.modify_(Data_Map_Internal["delete"](Data_Ord.ordString)(reflection))(pendingRequests)();
              };
          };
      };
  };
  var mkAddMessageListener = function (dictDecodeAeson) {
      return function (dispatcher) {
          return function (reflection) {
              return function (handler) {
                  return Data_Function.flip(Effect_Ref.modify_)(dispatcher)(Data_Map_Internal.insert(Data_Ord.ordString)(reflection)(function (aeson) {
                      return handler((function () {
                          var v = Ctl_Internal_QueryM_Ogmios.aesonObject(Data_Function.flip(Aeson.getFieldOptional(dictDecodeAeson))("result"))(aeson);
                          if (v instanceof Data_Either.Left) {
                              return new Data_Either.Left(new Ctl_Internal_QueryM_Dispatcher.JsonError(v.value0));
                          };
                          if (v instanceof Data_Either.Right && v.value0 instanceof Data_Maybe.Just) {
                              return new Data_Either.Right(v.value0.value0);
                          };
                          if (v instanceof Data_Either.Right && v.value0 instanceof Data_Maybe.Nothing) {
                              return new Data_Either.Left(new Ctl_Internal_QueryM_Dispatcher.FaultError(aeson));
                          };
                          throw new Error("Failed pattern match at Ctl.Internal.QueryM (line 667, column 9 - line 670, column 51): " + [ v.constructor.name ]);
                      })());
                  }));
              };
          };
      };
  };
  var mkListenerSet = function (dictDecodeAeson) {
      return function (dispatcher) {
          return function (pendingRequests) {
              return {
                  addMessageListener: mkAddMessageListener(dictDecodeAeson)(dispatcher),
                  removeMessageListener: mkRemoveMessageListener(dispatcher)(pendingRequests),
                  addRequest: function (reflection) {
                      return function (v) {
                          return Effect_Ref.modify_(Data_Map_Internal.insert(Data_Ord.ordString)(reflection)(v.value0))(pendingRequests);
                      };
                  }
              };
          };
      };
  };
  var mkSubmitTxListenerSet = function (dispatcher) {
      return function (pendingRequests) {
          return {
              addMessageListener: mkAddMessageListener(Ctl_Internal_QueryM_Ogmios.decodeAesonSubmitTxR)(dispatcher),
              removeMessageListener: mkRemoveMessageListener(dispatcher)(pendingRequests),
              addRequest: function (reflection) {
                  return function (v) {
                      return Effect_Ref.modify_(Data_Map_Internal.insert(Data_Ord.ordString)(reflection)(new Data_Tuple.Tuple(v.value0, v.value1.value0)))(pendingRequests);
                  };
              }
          };
      };
  };
  var messageFoldF = function (msg) {
      return function (acc$prime) {
          return function (func) {
              return function __do() {
                  var acc = acc$prime();
                  var $99 = Data_Either.isRight(acc);
                  if ($99) {
                      return acc$prime();
                  };
                  return func(msg)();
              };
          };
      };
  };
  var listeners = function (v) {
      return v.value1;
  };
  var mkOgmiosRequestAff = function (ogmiosWs) {
      return mkRequestAff(listeners(ogmiosWs))(underlyingWebSocket(ogmiosWs));
  };
  var mempoolSnapshotHasTxAff = function (ogmiosWs) {
      return function (logger) {
          return function (ms) {
              return mkOgmiosRequestAff(ogmiosWs)(logger)(Ctl_Internal_QueryM_Ogmios.mempoolSnapshotHasTxCall(ms))(function (v) {
                  return v.mempoolHasTx;
              });
          };
      };
  };
  var submitTxOgmios = function (txHash) {
      return function (tx) {
          return Control_Bind.bind(bindQueryMT(Effect_Aff.bindAff))(Control_Monad_Reader_Class.asks(monadAskQueryEnvQueryMTAf)(function ($140) {
              return underlyingWebSocket((function (v) {
                  return v.ogmiosWs;
              })((function (v) {
                  return v.runtime;
              })($140)));
          }))(function (ws) {
              return Control_Bind.bind(bindQueryMT(Effect_Aff.bindAff))(Control_Monad_Reader_Class.asks(monadAskQueryEnvQueryMTAf)(function ($141) {
                  return listeners((function (v) {
                      return v.ogmiosWs;
                  })((function (v) {
                      return v.runtime;
                  })($141)));
              }))(function (listeners$prime) {
                  return Control_Bind.bind(bindQueryMT(Effect_Aff.bindAff))(Control_Monad_Reader_Class.asks(monadAskQueryEnvQueryMTAf)(function (v) {
                      return v.config;
                  }))(function (cfg) {
                      return Effect_Aff_Class.liftAff(monadAffQueryMTAff)(mkRequestAff(listeners$prime)(ws)(Ctl_Internal_Logging.mkLogger(cfg.logLevel)(cfg.customLogger))(Ctl_Internal_QueryM_Ogmios.submitTxCall)(function (v) {
                          return v.submit;
                      })(new Data_Tuple.Tuple(txHash, tx)));
                  });
              });
          });
      };
  };
  var handleAffjaxResponse = function (dictDecodeAeson) {
      return function (v) {
          if (v instanceof Data_Either.Left) {
              return new Data_Either.Left(new Ctl_Internal_Service_Error.ClientHttpError(v.value0));
          };
          if (v instanceof Data_Either.Right) {
              if (v.value0.status < 200 || v.value0.status > 299) {
                  return new Data_Either.Left(new Ctl_Internal_Service_Error.ClientHttpResponseError(Data_Newtype.wrap()(v.value0.status), new Ctl_Internal_Service_Error.ServiceOtherError(v.value0.body)));
              };
              if (Data_Boolean.otherwise) {
                  return Data_Bifunctor.lmap(Data_Bifunctor.bifunctorEither)(Ctl_Internal_Service_Error.ClientDecodeJsonError.create(v.value0.body))(Control_Bind.composeKleisliFlipped(Data_Either.bindEither)(Aeson.decodeAeson(dictDecodeAeson))(Aeson.parseJsonStringToAeson)(v.value0.body));
              };
          };
          throw new Error("Failed pattern match at Ctl.Internal.QueryM (line 366, column 1 - line 370, column 31): " + [ v.constructor.name ]);
      };
  };
  var getSystemStartAff = function (ogmiosWs) {
      return function (logger) {
          return Data_Functor.map(Effect_Aff.functorAff)(Data_Newtype.unwrap())(mkOgmiosRequestAff(ogmiosWs)(logger)(Ctl_Internal_QueryM_Ogmios.querySystemStartCall)(function (v) {
              return v.systemStart;
          })(Data_Unit.unit));
      };
  };
  var getProtocolParametersAff = function (ogmiosWs) {
      return function (logger) {
          return mkOgmiosRequestAff(ogmiosWs)(logger)(Ctl_Internal_QueryM_Ogmios.queryProtocolParametersCall)(function (v) {
              return v.getProtocolParameters;
          })(Data_Unit.unit);
      };
  };
  var getLogger = Control_Bind.bind(bindQueryMT(Effect_Aff.bindAff))(Control_Monad_Reader_Class.asks(monadAskQueryEnvQueryMTAf)(function ($142) {
      return (function (v) {
          return v.logLevel;
      })((function (v) {
          return v.config;
      })($142));
  }))(function (logLevel) {
      return Control_Bind.bind(bindQueryMT(Effect_Aff.bindAff))(Control_Monad_Reader_Class.asks(monadAskQueryEnvQueryMTAf)(function ($143) {
          return (function (v) {
              return v.customLogger;
          })((function (v) {
              return v.config;
          })($143));
      }))(function (mbCustomLogger) {
          return Control_Applicative.pure(applicativeQueryMT(Effect_Aff.applicativeAff))(Ctl_Internal_Logging.mkLogger(logLevel)(mbCustomLogger));
      });
  });
  var mkRequest = function (listeners$prime) {
      return function (ws) {
          return function (jsonWspCall) {
              return function (getLs) {
                  return function (inp) {
                      return Control_Bind.bind(bindQueryMT(Effect_Aff.bindAff))(getLogger)(function (logger) {
                          return Effect_Aff_Class.liftAff(monadAffQueryMTAff)(mkRequestAff(listeners$prime)(ws)(logger)(jsonWspCall)(getLs)(inp));
                      });
                  };
              };
          };
      };
  };
  var mkOgmiosRequest = function (jsonWspCall) {
      return function (getLs) {
          return function (inp) {
              return Control_Bind.bind(bindQueryMT(Effect_Aff.bindAff))(Control_Monad_Reader_Class.asks(monadAskQueryEnvQueryMTAf)(function ($144) {
                  return listeners((function (v) {
                      return v.ogmiosWs;
                  })((function (v) {
                      return v.runtime;
                  })($144)));
              }))(function (listeners$prime) {
                  return Control_Bind.bind(bindQueryMT(Effect_Aff.bindAff))(Control_Monad_Reader_Class.asks(monadAskQueryEnvQueryMTAf)(function ($145) {
                      return underlyingWebSocket((function (v) {
                          return v.ogmiosWs;
                      })((function (v) {
                          return v.runtime;
                      })($145)));
                  }))(function (websocket) {
                      return mkRequest(listeners$prime)(websocket)(jsonWspCall)(getLs)(inp);
                  });
              });
          };
      };
  };
  var getChainTip = (function () {
      var ogmiosChainTipToTip = function (v) {
          if (v instanceof Ctl_Internal_QueryM_Ogmios.CtChainOrigin) {
              return Ctl_Internal_Types_Chain.TipAtGenesis.value;
          };
          if (v instanceof Ctl_Internal_QueryM_Ogmios.CtChainPoint) {
              return new Ctl_Internal_Types_Chain.Tip(Data_Newtype.wrap()({
                  slot: v.value0.slot,
                  blockHeaderHash: Data_Newtype.wrap()(Data_Newtype.unwrap()(v.value0.hash))
              }));
          };
          throw new Error("Failed pattern match at Ctl.Internal.QueryM (line 292, column 25 - line 295, column 52): " + [ v.constructor.name ]);
      };
      return Data_Functor.map(functorQueryMT(Effect_Aff.functorAff))(ogmiosChainTipToTip)(mkOgmiosRequest(Ctl_Internal_QueryM_Ogmios.queryChainTipCall)(function (v) {
          return v.chainTip;
      })(Data_Unit.unit));
  })();
  var evaluateTxOgmios = function (cbor) {
      return function (additionalUtxos) {
          return Control_Bind.bind(bindQueryMT(Effect_Aff.bindAff))(Control_Monad_Reader_Class.asks(monadAskQueryEnvQueryMTAf)(function ($146) {
              return underlyingWebSocket((function (v) {
                  return v.ogmiosWs;
              })((function (v) {
                  return v.runtime;
              })($146)));
          }))(function (ws) {
              return Control_Bind.bind(bindQueryMT(Effect_Aff.bindAff))(Control_Monad_Reader_Class.asks(monadAskQueryEnvQueryMTAf)(function ($147) {
                  return listeners((function (v) {
                      return v.ogmiosWs;
                  })((function (v) {
                      return v.runtime;
                  })($147)));
              }))(function (listeners$prime) {
                  return Control_Bind.bind(bindQueryMT(Effect_Aff.bindAff))(Control_Monad_Reader_Class.asks(monadAskQueryEnvQueryMTAf)(function (v) {
                      return v.config;
                  }))(function (cfg) {
                      return Effect_Aff_Class.liftAff(monadAffQueryMTAff)(mkRequestAff(listeners$prime)(ws)(Ctl_Internal_Logging.mkLogger(cfg.logLevel)(cfg.customLogger))(Ctl_Internal_QueryM_Ogmios.evaluateTxCall)(function (v) {
                          return v.evaluate;
                      })(new Data_Tuple.Tuple(cbor, additionalUtxos)));
                  });
              });
          });
      };
  };
  var defaultErr = new Data_Argonaut_Decode_Error.TypeMismatch("default error");
  var defaultMessageListener = function (logger) {
      return function (dispatchArray) {
          return function (msg) {
              return function __do() {
                  var aeson = Control_Monad_Error_Class.liftEither(Control_Monad_Error_Class.monadThrowEffect)(Data_Bifunctor.lmap(Data_Bifunctor.bifunctorEither)(Data_Function["const"](Effect_Exception.error("Unable to parse response")))(Aeson.parseJsonStringToAeson(msg)))();
                  var v = Data_Foldable.foldl(Data_Foldable.foldableArray)(messageFoldF(aeson))(Control_Applicative.pure(Effect.applicativeEffect)(new Data_Either.Left(new Ctl_Internal_QueryM_Dispatcher.JsonError(defaultErr))))(dispatchArray)();
                  return Data_Either.either(function (err) {
                      return Control_Applicative.unless(Effect.applicativeEffect)((function () {
                          if (err instanceof Ctl_Internal_QueryM_Dispatcher.JsonError) {
                              return Data_Eq.eq(Data_Argonaut_Decode_Error.eqJsonDecodeError)(err.value0)(defaultErr);
                          };
                          return false;
                      })())(logger(Data_Log_Level["Error"].value)("unexpected error on input: " + (msg + (" Error:" + Data_Show.show(Ctl_Internal_QueryM_Dispatcher.showDispatchError)(err)))));
                  })(Control_Category.identity(Control_Category.categoryFn))(v)();
              };
          };
      };
  };
  var mkServiceWebSocket = function (lens) {
      return function (url) {
          return function ($$continue) {
              return function __do() {
                  var ws = Ctl_Internal_JsWebSocket["_mkWebSocket"](lens.logger(Data_Log_Level.Debug.value))(url)();
                  var onFirstConnectionError = function (errMessage) {
                      return function __do() {
                          Ctl_Internal_JsWebSocket["_wsFinalize"](ws)();
                          Ctl_Internal_JsWebSocket["_wsClose"](ws)();
                          lens.logger(Data_Log_Level["Error"].value)("First connection to " + (lens.serviceName + (" WebSocket failed. " + ("Terminating. Error: " + errMessage))))();
                          return $$continue(new Data_Either.Left(Effect_Exception.error(errMessage)))();
                      };
                  };
                  var messageDispatch = Ctl_Internal_QueryM_Dispatcher.mkWebsocketDispatch(lens.dispatcher);
                  var firstConnectionErrorRef = Ctl_Internal_JsWebSocket["_onWsError"](ws)(onFirstConnectionError)();
                  var hasConnectedOnceRef = Effect_Ref["new"](false)();
                  Ctl_Internal_JsWebSocket["_onWsConnect"](ws)(function __do() {
                      var v = Effect_Ref.read(hasConnectedOnceRef)();
                      if (v) {
                          lens.logger(Data_Log_Level.Debug.value)(lens.serviceName + " WebSocket connection re-established, resending pending requests...")();
                          return lens.resendPendingRequests(ws)();
                      };
                      if (!v) {
                          lens.logger(Data_Log_Level.Debug.value)("Connection to " + (lens.serviceName + " established"))();
                          Effect_Ref.write(true)(hasConnectedOnceRef)();
                          Ctl_Internal_JsWebSocket["_removeOnWsError"](ws)(firstConnectionErrorRef)();
                          Ctl_Internal_JsWebSocket["_onWsMessage"](ws)(lens.logger(Data_Log_Level.Debug.value))(defaultMessageListener(lens.logger)([ messageDispatch ]))();
                          Data_Functor["void"](Effect.functorEffect)(Ctl_Internal_JsWebSocket["_onWsError"](ws)(function (err) {
                              return lens.logger(Data_Log_Level.Debug.value)(lens.serviceName + (" WebSocket error (" + (err + "). Reconnecting...")));
                          }))();
                          return $$continue(new Data_Either.Right(lens.typedWebSocket(ws)))();
                      };
                      throw new Error("Failed pattern match at Ctl.Internal.QueryM (line 456, column 54 - line 473, column 48): " + [ v.constructor.name ]);
                  })();
                  return function (err) {
                      return Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(function __do() {
                          Ctl_Internal_JsWebSocket["_wsFinalize"](ws)();
                          Ctl_Internal_JsWebSocket["_wsClose"](ws)();
                          return $$continue(new Data_Either.Left(err))();
                      });
                  };
              };
          };
      };
  };
  var acquireMempoolSnapshotAff = function (ogmiosWs) {
      return function (logger) {
          return mkOgmiosRequestAff(ogmiosWs)(logger)(Ctl_Internal_QueryM_Ogmios.acquireMempoolSnapshotCall)(function (v) {
              return v.acquireMempool;
          })(Data_Unit.unit);
      };
  };
  var withMempoolSnapshot = function (ogmiosWs) {
      return function (logger) {
          return function (cont) {
              return Data_Function.flip(Effect_Aff.runAff_)(acquireMempoolSnapshotAff(ogmiosWs)(logger))(function (v) {
                  if (v instanceof Data_Either.Left) {
                      return function __do() {
                          logger(Data_Log_Level["Error"].value)("Failed to acquire a mempool snapshot: Error: " + Data_Show.show(Effect_Exception.showError)(v.value0))();
                          return Effect_Aff.launchAff_(cont(Data_Maybe.Nothing.value))();
                      };
                  };
                  if (v instanceof Data_Either.Right) {
                      return Effect_Aff.launchAff_(cont(new Data_Maybe.Just(v.value0)));
                  };
                  throw new Error("Failed pattern match at Ctl.Internal.QueryM (line 339, column 62 - line 345, column 47): " + [ v.constructor.name ]);
              });
          };
      };
  };
  var resendPendingSubmitRequests = function (ogmiosWs) {
      return function (isTxConfirmed) {
          return function (logger) {
              return function (sendRequest) {
                  return function (dispatcher) {
                      return function (pr) {
                          var log = function (label) {
                              return function (value) {
                                  return function (txHash) {
                                      return Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(logger(Data_Log_Level.Debug.value)(label + (": " + (Data_Show.show(Data_Show.showBoolean)(value) + (" TxHash: " + Data_Show.show(Ctl_Internal_Types_ByteArray.showByteArray)(txHash))))));
                                  };
                              };
                          };
                          var handlePendingSubmitRequest = function (ms) {
                              return function (listenerId) {
                                  return function (requestBody) {
                                      return function (txHash) {
                                          var submitSuccessPartialResp = Aeson.encodeAeson(Aeson.encodeAesonRecord(Aeson.gEncodeAesonCons(Aeson.encodeAesonRecord(Aeson.gEncodeAesonCons(Aeson.encodeAesonRecord(Aeson.gEncodeAesonCons(Ctl_Internal_Types_ByteArray.encodeAesonByteArray)(Aeson.gEncodeAesonNil)({
                                              reflectSymbol: function () {
                                                  return "txId";
                                              }
                                          })())())(Aeson.gEncodeAesonNil)({
                                              reflectSymbol: function () {
                                                  return "SubmitSuccess";
                                              }
                                          })())())(Aeson.gEncodeAesonNil)({
                                              reflectSymbol: function () {
                                                  return "result";
                                              }
                                          })())())({
                                              result: {
                                                  SubmitSuccess: {
                                                      txId: txHash
                                                  }
                                              }
                                          });
                                          return Control_Bind.bind(Effect_Aff.bindAff)(mempoolSnapshotHasTxAff(ogmiosWs)(logger)(ms)(txHash))(function (txInMempool) {
                                              return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(log("Tx in the mempool")(txInMempool)(txHash))(function () {
                                                  return Control_Bind.bind(Effect_Aff.bindAff)((function () {
                                                      if (txInMempool) {
                                                          return Control_Applicative.pure(Effect_Aff.applicativeAff)(false);
                                                      };
                                                      return Control_Bind.bind(Effect_Aff.bindAff)(isTxConfirmed(txHash))(function (txConfirmed) {
                                                          return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(log("Tx confirmed")(txConfirmed)(txHash))(function () {
                                                              return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Control_Applicative.unless(Effect_Aff.applicativeAff)(txConfirmed)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(sendRequest(requestBody))))(function () {
                                                                  return Control_Applicative.pure(Effect_Aff.applicativeAff)(!txConfirmed);
                                                              });
                                                          });
                                                      });
                                                  })())(function (retrySubmitTx) {
                                                      return Control_Applicative.unless(Effect_Aff.applicativeAff)(retrySubmitTx)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(function __do() {
                                                          Effect_Ref.modify_(Data_Map_Internal["delete"](Data_Ord.ordString)(listenerId))(pr)();
                                                          var dispatchMap = Effect_Ref.read(dispatcher)();
                                                          Effect_Ref.modify_(Data_Map_Internal["delete"](Data_Ord.ordString)(listenerId))(dispatcher)();
                                                          return Data_Maybe.maybe(Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit))(function (v) {
                                                              return v(submitSuccessPartialResp);
                                                          })(Data_Map_Internal.lookup(Data_Ord.ordString)(listenerId)(dispatchMap))();
                                                      }));
                                                  });
                                              });
                                          });
                                      };
                                  };
                              };
                          };
                          return function __do() {
                              var submitTxPendingRequests = Effect_Ref.read(pr)();
                              return Control_Applicative.unless(Effect.applicativeEffect)(Data_Map_Internal.isEmpty(submitTxPendingRequests))(withMempoolSnapshot(ogmiosWs)(logger)(function (v) {
                                  if (v instanceof Data_Maybe.Nothing) {
                                      return Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Data_Foldable.traverse_(Effect.applicativeEffect)(Data_Map_Internal.foldableMap)(function ($148) {
                                          return sendRequest(Data_Tuple.fst($148));
                                      })(submitTxPendingRequests));
                                  };
                                  if (v instanceof Data_Maybe.Just) {
                                      return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Effect_Aff.delay(Data_Newtype.wrap()(5000.0)))(function () {
                                          var v1 = Data_Map_Internal.toUnfoldable(Data_Unfoldable.unfoldableArray)(submitTxPendingRequests);
                                          return Data_Foldable.for_(Effect_Aff.applicativeAff)(Data_Foldable.foldableArray)(v1)(function (v2) {
                                              return handlePendingSubmitRequest(v.value0)(v2.value0)(v2.value1.value0)(v2.value1.value1);
                                          });
                                      });
                                  };
                                  throw new Error("Failed pattern match at Ctl.Internal.QueryM (line 505, column 41 - line 514, column 70): " + [ v.constructor.name ]);
                              }))();
                          };
                      };
                  };
              };
          };
      };
  };
  var mkOgmiosWebSocketLens = function (logger) {
      return function (isTxConfirmed) {
          return function __do() {
              var dispatcher = Ctl_Internal_QueryM_Dispatcher.newDispatcher();
              var pendingRequests = Ctl_Internal_QueryM_Dispatcher.newPendingRequests();
              var pendingSubmitTxRequests = Ctl_Internal_QueryM_Dispatcher.newPendingRequests();
              var ogmiosWebSocket = function (ws) {
                  return new WebSocket(ws, {
                      chainTip: mkListenerSet(Ctl_Internal_QueryM_Ogmios.decodeAesonChainTipQR)(dispatcher)(pendingRequests),
                      evaluate: mkListenerSet(Ctl_Internal_QueryM_Ogmios.decodeAesonTxEvaluationR)(dispatcher)(pendingRequests),
                      getProtocolParameters: mkListenerSet(Ctl_Internal_QueryM_Ogmios.decodeAesonOgmiosProtocol)(dispatcher)(pendingRequests),
                      eraSummaries: mkListenerSet(Ctl_Internal_QueryM_Ogmios.decodeAesonOgmiosEraSumma)(dispatcher)(pendingRequests),
                      currentEpoch: mkListenerSet(Ctl_Internal_QueryM_Ogmios.decodeAesonCurrentEpoch)(dispatcher)(pendingRequests),
                      systemStart: mkListenerSet(Ctl_Internal_QueryM_Ogmios.decodeAesonOgmiosSystemSt)(dispatcher)(pendingRequests),
                      acquireMempool: mkListenerSet(Ctl_Internal_QueryM_Ogmios.decodeAesonMempoolSnapsho)(dispatcher)(pendingRequests),
                      mempoolHasTx: mkListenerSet(Aeson.decodeAesonBoolean)(dispatcher)(pendingRequests),
                      submit: mkSubmitTxListenerSet(dispatcher)(pendingSubmitTxRequests),
                      poolIds: mkListenerSet(Aeson.decodeAesonArray(Ctl_Internal_Cardano_Types_Transaction.decodeAesonPoolPubKeyHash))(dispatcher)(pendingRequests),
                      poolParameters: mkListenerSet(Ctl_Internal_QueryM_Ogmios.decodeAesonPoolParameters)(dispatcher)(pendingRequests),
                      delegationsAndRewards: mkListenerSet(Ctl_Internal_QueryM_Ogmios.decodeAesonDelegationsAnd)(dispatcher)(pendingRequests)
                  });
              };
              var resendPendingRequests = function (ws) {
                  var sendRequest = Ctl_Internal_JsWebSocket["_wsSend"](ws)(logger(Data_Log_Level.Debug.value));
                  return function __do() {
                      Control_Bind.bind(Effect.bindEffect)(Effect_Ref.read(pendingRequests))(Data_Foldable.traverse_(Effect.applicativeEffect)(Data_Map_Internal.foldableMap)(sendRequest))();
                      return resendPendingSubmitRequests(ogmiosWebSocket(ws))(isTxConfirmed)(logger)(sendRequest)(dispatcher)(pendingSubmitTxRequests)();
                  };
              };
              return {
                  serviceName: "ogmios",
                  dispatcher: dispatcher,
                  logger: logger,
                  typedWebSocket: ogmiosWebSocket,
                  resendPendingRequests: resendPendingRequests
              };
          };
      };
  };
  var mkOgmiosWebSocketAff = function (isTxConfirmed) {
      return function (logger) {
          return function (serverConfig) {
              return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(mkOgmiosWebSocketLens(logger)(isTxConfirmed)))(function (lens) {
                  return Effect_Aff.makeAff(mkServiceWebSocket(lens)(Ctl_Internal_ServerConfig.mkWsUrl(serverConfig)));
              });
          };
      };
  };
  exports["evaluateTxOgmios"] = evaluateTxOgmios;
  exports["getChainTip"] = getChainTip;
  exports["getProtocolParametersAff"] = getProtocolParametersAff;
  exports["getSystemStartAff"] = getSystemStartAff;
  exports["handleAffjaxResponse"] = handleAffjaxResponse;
  exports["mkOgmiosRequest"] = mkOgmiosRequest;
  exports["mkOgmiosWebSocketAff"] = mkOgmiosWebSocketAff;
  exports["submitTxOgmios"] = submitTxOgmios;
  exports["underlyingWebSocket"] = underlyingWebSocket;
  exports["functorQueryMT"] = functorQueryMT;
  exports["applicativeQueryMT"] = applicativeQueryMT;
  exports["bindQueryMT"] = bindQueryMT;
  exports["monadQueryMTAff"] = monadQueryMTAff;
  exports["monadEffectQueryMTAff"] = monadEffectQueryMTAff;
  exports["monadAffQueryMTAff"] = monadAffQueryMTAff;
  exports["monadAskQueryEnvQueryMTAf"] = monadAskQueryEnvQueryMTAf;
  exports["monadLoggerQueryMTAff"] = monadLoggerQueryMTAff;
  exports["parallelQueryMTParAffQuer"] = parallelQueryMTParAffQuer;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Ctl.Internal.Contract.QueryHandle.Error"] = $PS["Ctl.Internal.Contract.QueryHandle.Error"] || {};
  var exports = $PS["Ctl.Internal.Contract.QueryHandle.Error"];
  var GetTxMetadataTxNotFoundError = (function () {
      function GetTxMetadataTxNotFoundError() {

      };
      GetTxMetadataTxNotFoundError.value = new GetTxMetadataTxNotFoundError();
      return GetTxMetadataTxNotFoundError;
  })();
  var GetTxMetadataMetadataEmptyOrMissingError = (function () {
      function GetTxMetadataMetadataEmptyOrMissingError() {

      };
      GetTxMetadataMetadataEmptyOrMissingError.value = new GetTxMetadataMetadataEmptyOrMissingError();
      return GetTxMetadataMetadataEmptyOrMissingError;
  })();
  var GetTxMetadataClientError = (function () {
      function GetTxMetadataClientError(value0) {
          this.value0 = value0;
      };
      GetTxMetadataClientError.create = function (value0) {
          return new GetTxMetadataClientError(value0);
      };
      return GetTxMetadataClientError;
  })();
  exports["GetTxMetadataTxNotFoundError"] = GetTxMetadataTxNotFoundError;
  exports["GetTxMetadataMetadataEmptyOrMissingError"] = GetTxMetadataMetadataEmptyOrMissingError;
  exports["GetTxMetadataClientError"] = GetTxMetadataClientError;
})(PS);
(function(exports) {
  /* global BROWSER_RUNTIME */

  let lib;
  if (typeof BROWSER_RUNTIME != "undefined" && BROWSER_RUNTIME) {
    lib = require("@emurgo/cardano-serialization-lib-browser");
  } else {
    lib = require("@emurgo/cardano-serialization-lib-nodejs");
  }
  lib = require("@mlabs-haskell/csl-gc-wrapper")(lib);

  const call = property => object => object[property]();
  const callMaybe = property => maybe => object => {
    const res = object[property]();
    return res != null ? maybe.just(res) : maybe.nothing;
  };                                             
  exports._txBody = tx => tx.body();

  const maybeGetter_ = fmap => propstr => maybe => obj => {
    if (typeof propstr != "string") {
      const s = "maybeGetter_ propstr must be a string, got " + propstr;
      throw s;
    }
    const res = obj[propstr]();
    return res == null ? maybe.nothing : maybe.just(fmap(res));
  };
  const maybeGetter = maybeGetter_(a => a);
  const maybeGetterMulti = propstr => containerHelper =>
    maybeGetter_(o => containerHelper.unpack(o))(propstr);

  exports._unpackMetadatums = containerHelper => containerHelper.unpackKeyIndexed;

  exports._unpackMetadataMap = containerHelper =>
    containerHelper.unpackKeyIndexed;

  exports._unpackMetadataList = containerHelper => containerHelper.unpack;

  exports._convertMetadatum = metadataCtors => cslMetadatum => {
    switch (cslMetadatum.kind()) {
      case lib.TransactionMetadatumKind.MetadataMap:
        return metadataCtors.from_map(cslMetadatum.as_map());
      case lib.TransactionMetadatumKind.MetadataList:
        return metadataCtors.from_list(cslMetadatum.as_list());
      case lib.TransactionMetadatumKind.Int:
        return metadataCtors.from_int(cslMetadatum.as_int());
      case lib.TransactionMetadatumKind.Bytes:
        return metadataCtors.from_bytes(cslMetadatum.as_bytes());
      case lib.TransactionMetadatumKind.Text:
        return metadataCtors.from_text(cslMetadatum.as_text());
      default:
        throw "Could not convert to known types.";
    }
  };
})(PS["Ctl.Internal.Deserialization.Transaction"] = PS["Ctl.Internal.Deserialization.Transaction"] || {});
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Ctl.Internal.Deserialization.Transaction"] = $PS["Ctl.Internal.Deserialization.Transaction"] || {};
  var exports = $PS["Ctl.Internal.Deserialization.Transaction"];
  var $foreign = $PS["Ctl.Internal.Deserialization.Transaction"];
  var Ctl_Internal_FfiHelpers = $PS["Ctl.Internal.FfiHelpers"];
  var Ctl_Internal_Types_BigNum = $PS["Ctl.Internal.Types.BigNum"];
  var Ctl_Internal_Types_TransactionMetadata = $PS["Ctl.Internal.Types.TransactionMetadata"];
  var Data_Bifunctor = $PS["Data.Bifunctor"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Map_Internal = $PS["Data.Map.Internal"];
  var Data_Newtype = $PS["Data.Newtype"];
  var convertMetadatum = function (tm) {
      return $foreign["_convertMetadatum"]({
          from_bytes: Ctl_Internal_Types_TransactionMetadata.Bytes.create,
          from_int: Ctl_Internal_Types_TransactionMetadata.Int.create,
          from_text: Ctl_Internal_Types_TransactionMetadata.Text.create,
          from_map: convertMetadataMap,
          from_list: convertMetadataList
      })(tm);
  };
  var convertMetadataMap = function (mm) {
      return new Ctl_Internal_Types_TransactionMetadata.MetadataMap(Data_Map_Internal.fromFoldable(Ctl_Internal_Types_TransactionMetadata.ordTransactionMetadatum)(Data_Foldable.foldableArray)(Data_Functor.map(Data_Functor.functorArray)(Data_Bifunctor.bimap(Data_Bifunctor.bifunctorTuple)(convertMetadatum)(convertMetadatum))($foreign["_unpackMetadataMap"](Ctl_Internal_FfiHelpers.containerHelper)(mm))));
  };
  var convertMetadataList = function (ml) {
      return new Ctl_Internal_Types_TransactionMetadata.MetadataList(Data_Functor.map(Data_Functor.functorArray)(convertMetadatum)($foreign["_unpackMetadataList"](Ctl_Internal_FfiHelpers.containerHelper)(ml)));
  };
  var convertGeneralTransactionMetadata = function (gtm) {
      return Data_Newtype.wrap()(Data_Map_Internal.fromFoldable(Ctl_Internal_Types_TransactionMetadata.ordTransactionMetadatumLa)(Data_Foldable.foldableArray)(Data_Functor.map(Data_Functor.functorArray)(Data_Bifunctor.bimap(Data_Bifunctor.bifunctorTuple)(function ($43) {
          return Ctl_Internal_Types_TransactionMetadata.TransactionMetadatumLabel(Ctl_Internal_Types_BigNum.toBigInt($43));
      })(convertMetadatum))($foreign["_unpackMetadatums"](Ctl_Internal_FfiHelpers.containerHelper)(gtm))));
  };
  exports["convertGeneralTransactionMetadata"] = convertGeneralTransactionMetadata;
  exports["_txBody"] = $foreign["_txBody"];
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Ctl.Internal.QueryM.Kupo"] = $PS["Ctl.Internal.QueryM.Kupo"] || {};
  var exports = $PS["Ctl.Internal.QueryM.Kupo"];
  var Aeson = $PS["Aeson"];
  var Affjax = $PS["Affjax"];
  var Affjax_ResponseFormat = $PS["Affjax.ResponseFormat"];
  var Control_Alt = $PS["Control.Alt"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_Error_Class = $PS["Control.Monad.Error.Class"];
  var Control_Monad_Except_Trans = $PS["Control.Monad.Except.Trans"];
  var Control_Monad_Reader_Class = $PS["Control.Monad.Reader.Class"];
  var Control_Parallel = $PS["Control.Parallel"];
  var Control_Parallel_Class = $PS["Control.Parallel.Class"];
  var Ctl_Internal_Cardano_Types_ScriptRef = $PS["Ctl.Internal.Cardano.Types.ScriptRef"];
  var Ctl_Internal_Cardano_Types_Value = $PS["Ctl.Internal.Cardano.Types.Value"];
  var Ctl_Internal_Contract_QueryHandle_Error = $PS["Ctl.Internal.Contract.QueryHandle.Error"];
  var Ctl_Internal_Deserialization_FromBytes = $PS["Ctl.Internal.Deserialization.FromBytes"];
  var Ctl_Internal_Deserialization_NativeScript = $PS["Ctl.Internal.Deserialization.NativeScript"];
  var Ctl_Internal_Deserialization_PlutusData = $PS["Ctl.Internal.Deserialization.PlutusData"];
  var Ctl_Internal_Deserialization_Transaction = $PS["Ctl.Internal.Deserialization.Transaction"];
  var Ctl_Internal_QueryM = $PS["Ctl.Internal.QueryM"];
  var Ctl_Internal_Serialization_Address = $PS["Ctl.Internal.Serialization.Address"];
  var Ctl_Internal_Serialization_Hash = $PS["Ctl.Internal.Serialization.Hash"];
  var Ctl_Internal_ServerConfig = $PS["Ctl.Internal.ServerConfig"];
  var Ctl_Internal_Service_Error = $PS["Ctl.Internal.Service.Error"];
  var Ctl_Internal_Service_Helpers = $PS["Ctl.Internal.Service.Helpers"];
  var Ctl_Internal_Types_BigNum = $PS["Ctl.Internal.Types.BigNum"];
  var Ctl_Internal_Types_ByteArray = $PS["Ctl.Internal.Types.ByteArray"];
  var Ctl_Internal_Types_CborBytes = $PS["Ctl.Internal.Types.CborBytes"];
  var Ctl_Internal_Types_Datum = $PS["Ctl.Internal.Types.Datum"];
  var Ctl_Internal_Types_OutputDatum = $PS["Ctl.Internal.Types.OutputDatum"];
  var Ctl_Internal_Types_RawBytes = $PS["Ctl.Internal.Types.RawBytes"];
  var Ctl_Internal_Types_Scripts = $PS["Ctl.Internal.Types.Scripts"];
  var Ctl_Internal_Types_TokenName = $PS["Ctl.Internal.Types.TokenName"];
  var Ctl_Internal_Types_Transaction = $PS["Ctl.Internal.Types.Transaction"];
  var Data_Argonaut_Decode_Error = $PS["Data.Argonaut.Decode.Error"];
  var Data_Array = $PS["Data.Array"];
  var Data_Bifunctor = $PS["Data.Bifunctor"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Either = $PS["Data.Either"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_HTTP_Method = $PS["Data.HTTP.Method"];
  var Data_Map_Internal = $PS["Data.Map.Internal"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_String_CodePoints = $PS["Data.String.CodePoints"];
  var Data_Traversable = $PS["Data.Traversable"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_UInt = $PS["Data.UInt"];
  var Data_Unfoldable = $PS["Data.Unfoldable"];
  var Effect_Aff = $PS["Effect.Aff"];
  var Effect_Aff_Class = $PS["Effect.Aff.Class"];
  var Foreign_Object = $PS["Foreign.Object"];                
  var KupoUtxoSlot = function (x) {
      return x;
  };
  var KupoScriptRef = function (x) {
      return x;
  };
  var NativeScript = (function () {
      function NativeScript() {

      };
      NativeScript.value = new NativeScript();
      return NativeScript;
  })();
  var PlutusV1Script = (function () {
      function PlutusV1Script() {

      };
      PlutusV1Script.value = new PlutusV1Script();
      return PlutusV1Script;
  })();
  var PlutusV2Script = (function () {
      function PlutusV2Script() {

      };
      PlutusV2Script.value = new PlutusV2Script();
      return PlutusV2Script;
  })();
  var DatumHash = (function () {
      function DatumHash() {

      };
      DatumHash.value = new DatumHash();
      return DatumHash;
  })();
  var InlineDatum = (function () {
      function InlineDatum() {

      };
      InlineDatum.value = new InlineDatum();
      return InlineDatum;
  })();
  var KupoDatum = function (x) {
      return x;
  };
  var decodeAesonKupoUtxoSlot = {
      decodeAeson: (function () {
          var slot = function (v) {
              return v.created_at.slot_no;
          };
          var $143 = Data_Functor.map(Data_Either.functorEither)(function ($146) {
              return KupoUtxoSlot(slot($146));
          });
          var $144 = Aeson.decodeAeson(Aeson.decodeAesonRecord(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Aeson.decodeAesonRecord(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Serialization_Address.decodeAesonSlot))(Aeson.gDecodeAesonRowNil)({
              reflectSymbol: function () {
                  return "slot_no";
              }
          })()())()))(Aeson.gDecodeAesonRowNil)({
              reflectSymbol: function () {
                  return "created_at";
              }
          })()())());
          return function ($145) {
              return $143($144($145));
          };
      })()
  };
  var decodeAesonKupoScriptLang = {
      decodeAeson: Ctl_Internal_Service_Helpers.aesonString(function (v) {
          if (v === "native") {
              return Control_Applicative.pure(Data_Either.applicativeEither)(NativeScript.value);
          };
          if (v === "plutus:v1") {
              return Control_Applicative.pure(Data_Either.applicativeEither)(PlutusV1Script.value);
          };
          if (v === "plutus:v2") {
              return Control_Applicative.pure(Data_Either.applicativeEither)(PlutusV2Script.value);
          };
          return new Data_Either.Left(new Data_Argonaut_Decode_Error.TypeMismatch("language: expected 'native' or 'plutus:v{1|2}', got: " + v));
      })
  };
  var decodeAesonKupoScriptRef = {
      decodeAeson: function (aeson) {
          if (Aeson.isNull(aeson)) {
              return Control_Applicative.pure(Data_Either.applicativeEither)(Data_Maybe.Nothing.value);
          };
          if (Data_Boolean.otherwise) {
              return Ctl_Internal_Service_Helpers.aesonObject(function (obj) {
                  return Control_Bind.bind(Data_Either.bindEither)(Aeson.getField(decodeAesonKupoScriptLang)(obj)("language"))(function (language) {
                      return Control_Bind.bind(Data_Either.bindEither)(Aeson.getField(Ctl_Internal_Types_ByteArray.decodeAesonByteArray)(obj)("script"))(function (scriptBytes) {
                          return Data_Functor.map(Data_Either.functorEither)(function ($147) {
                              return KupoScriptRef(Data_Maybe.Just.create($147));
                          })((function () {
                              if (language instanceof NativeScript) {
                                  return Data_Functor.map(Data_Either.functorEither)(Ctl_Internal_Cardano_Types_ScriptRef.NativeScriptRef.create)(Ctl_Internal_Deserialization_NativeScript.decodeNativeScript(scriptBytes));
                              };
                              if (language instanceof PlutusV1Script) {
                                  return Control_Applicative.pure(Data_Either.applicativeEither)(new Ctl_Internal_Cardano_Types_ScriptRef.PlutusScriptRef(Ctl_Internal_Types_Scripts.plutusV1Script(scriptBytes)));
                              };
                              if (language instanceof PlutusV2Script) {
                                  return Control_Applicative.pure(Data_Either.applicativeEither)(new Ctl_Internal_Cardano_Types_ScriptRef.PlutusScriptRef(Ctl_Internal_Types_Scripts.plutusV2Script(scriptBytes)));
                              };
                              throw new Error("Failed pattern match at Ctl.Internal.QueryM.Kupo (line 396, column 13 - line 402, column 68): " + [ language.constructor.name ]);
                          })());
                      });
                  });
              })(aeson);
          };
          throw new Error("Failed pattern match at Ctl.Internal.QueryM.Kupo (line 388, column 1 - line 402, column 68): " + [ aeson.constructor.name ]);
      }
  };
  var decodeAesonKupoMetadata = {
      decodeAeson: Control_Bind.composeKleisli(Data_Either.bindEither)(Aeson.decodeAeson(Aeson.decodeAesonArray(Aeson.decodeAesonRecord(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_CborBytes.decodeAesonCborBytes))(Aeson.gDecodeAesonRowNil)({
          reflectSymbol: function () {
              return "raw";
          }
      })()())())))(function (v) {
          if (v.length === 1) {
              return Control_Bind.bind(Data_Either.bindEither)(Data_Function.flip(Data_Either.note)(Ctl_Internal_Deserialization_FromBytes.fromBytes(Ctl_Internal_Deserialization_FromBytes.fromBytesGeneralTransacti)(v[0].raw))(new Data_Argonaut_Decode_Error.TypeMismatch("Hexadecimal encoded Metadata")))(function (metadata) {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(new Data_Maybe.Just(Ctl_Internal_Deserialization_Transaction.convertGeneralTransactionMetadata(metadata)));
              });
          };
          if (v.length === 0) {
              return new Data_Either.Right(Data_Maybe.Nothing.value);
          };
          return new Data_Either.Left(new Data_Argonaut_Decode_Error.TypeMismatch("Singleton or Empty Array"));
      })
  };
  var decodeAesonKupoDatumType = {
      decodeAeson: Ctl_Internal_Service_Helpers.aesonString(function (v) {
          if (v === "hash") {
              return Control_Applicative.pure(Data_Either.applicativeEither)(DatumHash.value);
          };
          if (v === "inline") {
              return Control_Applicative.pure(Data_Either.applicativeEither)(InlineDatum.value);
          };
          return new Data_Either.Left(new Data_Argonaut_Decode_Error.TypeMismatch("datum_type: expected 'hash' or 'inline', got: " + v));
      })
  };
  var decodeAesonKupoTransactio = {
      decodeAeson: (function () {
          var decodeValue = (function () {
              var decodeNonAdaAsset = function (v) {
                  var assetStringTypeMismatch = function (t) {
                      return function (actual) {
                          return new Data_Argonaut_Decode_Error.TypeMismatch("In " + (v.value0 + (": Expected hex-encoded " + t)) + (", got: " + actual));
                      };
                  };
                  var v1 = (function () {
                      var v2 = Data_String_CodePoints.indexOf(".")(v.value0);
                      if (v2 instanceof Data_Maybe.Nothing) {
                          return new Data_Tuple.Tuple(v.value0, Data_Monoid.mempty(Data_Monoid.monoidString));
                      };
                      if (v2 instanceof Data_Maybe.Just) {
                          return (function (v3) {
                              return new Data_Tuple.Tuple(v3.before, Data_String_CodePoints.drop(1)(v3.after));
                          })(Data_String_CodePoints.splitAt(v2.value0)(v.value0));
                      };
                      throw new Error("Failed pattern match at Ctl.Internal.QueryM.Kupo (line 255, column 13 - line 260, column 72): " + [ v2.constructor.name ]);
                  })();
                  return Control_Apply.apply(Data_Either.applyEither)(Control_Apply.apply(Data_Either.applyEither)(Data_Functor.map(Data_Either.functorEither)(Ctl_Internal_Cardano_Types_Value.mkSingletonNonAdaAsset)(Data_Either.note(assetStringTypeMismatch("CurrencySymbol")(v1.value0))(Control_Bind.bindFlipped(Data_Maybe.bindMaybe)(Ctl_Internal_Cardano_Types_Value.mkCurrencySymbol)(Ctl_Internal_Types_ByteArray.hexToByteArray(v1.value0)))))(Data_Either.note(assetStringTypeMismatch("TokenName")(v1.value1))(Control_Bind.bindFlipped(Data_Maybe.bindMaybe)(Ctl_Internal_Types_TokenName.mkTokenName)(Ctl_Internal_Types_ByteArray.hexToByteArray(v1.value1)))))(Control_Applicative.pure(Data_Either.applicativeEither)(v.value1));
              };
              return Control_Bind.composeKleisli(Data_Either.bindEither)(Data_Function.flip(Aeson.getField(Aeson.decodeAesonAeson))("value"))(Ctl_Internal_Service_Helpers.aesonObject(function (obj) {
                  return Control_Bind.bind(Data_Either.bindEither)(Aeson.getField(Ctl_Internal_Cardano_Types_Value.decodeAesonCoin)(obj)("coins"))(function (coins) {
                      return Control_Bind.bind(Data_Either.bindEither)(Data_Functor.mapFlipped(Data_Either.functorEither)(Aeson.getFieldOptional(Aeson.decodeAesonObject(Aeson.decodeAesonBigInt))(obj)("assets"))((function () {
                          var $148 = Data_Maybe.fromMaybe(Data_Monoid.mempty(Data_Monoid.monoidArray));
                          var $149 = Data_Functor.map(Data_Maybe.functorMaybe)(Foreign_Object.toUnfoldable(Data_Unfoldable.unfoldableArray));
                          return function ($150) {
                              return $148($149($150));
                          };
                      })()))(function (assets) {
                          return Data_Functor.map(Data_Either.functorEither)((function () {
                              var $151 = Ctl_Internal_Cardano_Types_Value.mkValue(coins);
                              var $152 = Data_Foldable.fold(Data_Foldable.foldableArray)(Ctl_Internal_Cardano_Types_Value.monoidNonAdaAsset);
                              return function ($153) {
                                  return $151($152($153));
                              };
                          })())(Data_Traversable.traverse(Data_Traversable.traversableArray)(Data_Either.applicativeEither)(decodeNonAdaAsset)(assets));
                      });
                  });
              }));
          })();
          var decodeDatumHash = function (obj) {
              return Control_Bind.bind(Data_Either.bindEither)(Aeson["getFieldOptional'"](Ctl_Internal_Types_Transaction.decodeAesonDataHash)(obj)("datum_hash"))(Data_Traversable.traverse(Data_Traversable.traversableMaybe)(Data_Either.applicativeEither)(function (x) {
                  return Data_Functor.map(Data_Either.functorEither)(Data_Tuple.Tuple.create(x))(Aeson.getField(decodeAesonKupoDatumType)(obj)("datum_type"));
              }));
          };
          var decodeAddress = function (obj) {
              return Control_Bind.bind(Data_Either.bindEither)(Aeson.getField(Aeson.decodeAesonString)(obj)("address"))(function (x) {
                  return Data_Either.note(new Data_Argonaut_Decode_Error.TypeMismatch("Expected bech32 or base16 encoded Shelley address"))(Control_Alt.alt(Data_Maybe.altMaybe)(Ctl_Internal_Serialization_Address.addressFromBech32(x))(Control_Bind.bindFlipped(Data_Maybe.bindMaybe)(Ctl_Internal_Deserialization_FromBytes.fromBytes(Ctl_Internal_Deserialization_FromBytes.fromBytesAddress))(Ctl_Internal_Types_CborBytes.hexToCborBytes(x))));
              });
          };
          return Ctl_Internal_Service_Helpers.aesonObject(function (obj) {
              return Control_Bind.bind(Data_Either.bindEither)(decodeAddress(obj))(function (address) {
                  return Control_Bind.bind(Data_Either.bindEither)(decodeValue(obj))(function (amount) {
                      return Control_Bind.bind(Data_Either.bindEither)(decodeDatumHash(obj))(function (datumHash) {
                          return Control_Bind.bind(Data_Either.bindEither)(Aeson["getFieldOptional'"](Ctl_Internal_Serialization_Hash.decodeAesonScriptHash)(obj)("script_hash"))(function (scriptHash) {
                              return Control_Applicative.pure(Data_Either.applicativeEither)(Data_Newtype.wrap()({
                                  address: address,
                                  amount: amount,
                                  datumHash: datumHash,
                                  scriptHash: scriptHash
                              }));
                          });
                      });
                  });
              });
          });
      })()
  };
  var decodeAesonKupoUtxoMap = {
      decodeAeson: (function () {
          var decodeTxHash = Control_Bind.composeKleisli(Data_Either.bindEither)(Data_Function.flip(Aeson.getField(Aeson.decodeAesonString))("transaction_id"))(function ($154) {
              return (function (v) {
                  if (v instanceof Data_Maybe.Nothing) {
                      return new Data_Either.Left(new Data_Argonaut_Decode_Error.TypeMismatch("Expected hexstring"));
                  };
                  if (v instanceof Data_Maybe.Just) {
                      return Control_Applicative.pure(Data_Either.applicativeEither)(v.value0);
                  };
                  throw new Error("Failed pattern match at Ctl.Internal.QueryM.Kupo (line 305, column 61 - line 307, column 63): " + [ v.constructor.name ]);
              })(Ctl_Internal_Types_ByteArray.hexToByteArray($154));
          });
          var decodeTxOref = Ctl_Internal_Service_Helpers.aesonObject(function (obj) {
              return Control_Bind.bind(Data_Either.bindEither)(decodeTxHash(obj))(function (transactionId) {
                  return Control_Bind.bind(Data_Either.bindEither)(Aeson.getField(Aeson.decodeAesonUInt)(obj)("output_index"))(function (index) {
                      return Control_Applicative.pure(Data_Either.applicativeEither)({
                          transactionId: transactionId,
                          index: index
                      });
                  });
              });
          });
          var decodeUtxoEntry = function (utxoAeson) {
              return Control_Apply.apply(Data_Either.applyEither)(Data_Functor.map(Data_Either.functorEither)(Data_Tuple.Tuple.create)(decodeTxOref(utxoAeson)))(Aeson.decodeAeson(decodeAesonKupoTransactio)(utxoAeson));
          };
          return Ctl_Internal_Service_Helpers.aesonArray((function () {
              var $155 = Data_Functor.map(Data_Either.functorEither)((function () {
                  var $158 = Data_Newtype.wrap();
                  var $159 = Data_Map_Internal.fromFoldable(Ctl_Internal_Types_Transaction.ordTransactionInput)(Data_Foldable.foldableArray);
                  return function ($160) {
                      return $158($159($160));
                  };
              })());
              var $156 = Data_Traversable.traverse(Data_Traversable.traversableArray)(Data_Either.applicativeEither)(decodeUtxoEntry);
              return function ($157) {
                  return $155($156($157));
              };
          })());
      })()
  };
  var decodeAesonKupoDatum = {
      decodeAeson: function (aeson) {
          if (Aeson.isNull(aeson)) {
              return Control_Applicative.pure(Data_Either.applicativeEither)(Data_Maybe.Nothing.value);
          };
          if (Data_Boolean.otherwise) {
              return Control_Bind.bind(Data_Either.bindEither)(Ctl_Internal_Service_Helpers.aesonObject(Data_Function.flip(Aeson.getFieldOptional(Ctl_Internal_Types_CborBytes.decodeAesonCborBytes))("datum"))(aeson))((function () {
                  var $161 = Control_Applicative.pure(Data_Either.applicativeEither);
                  var $162 = Control_Bind.bindFlipped(Data_Maybe.bindMaybe)(Ctl_Internal_Deserialization_PlutusData.deserializeData(Ctl_Internal_Types_Datum.fromDataDatum));
                  return function ($163) {
                      return $161(KupoDatum($162($163)));
                  };
              })());
          };
          throw new Error("Failed pattern match at Ctl.Internal.QueryM.Kupo (line 354, column 1 - line 359, column 65): " + [ aeson.constructor.name ]);
      }
  };
  var unwrapKupoUtxoSlot = function (v) {
      return v;
  };
  var unwrapKupoScriptRef = Data_Newtype.unwrap();
  var unwrapKupoMetadata = function (v) {
      return v;
  };
  var unwrapKupoDatum = Data_Newtype.unwrap();
  var kupoGetRequestAff = function (config) {
      return function (endpoint) {
          return Affjax.request({
              method: new Data_Either.Left(Data_HTTP_Method.GET.value),
              url: Ctl_Internal_ServerConfig.mkHttpUrl(config) + endpoint,
              headers: Affjax.defaultRequest.headers,
              content: Affjax.defaultRequest.content,
              username: Affjax.defaultRequest.username,
              password: Affjax.defaultRequest.password,
              withCredentials: Affjax.defaultRequest.withCredentials,
              responseFormat: Affjax_ResponseFormat.string,
              timeout: Affjax.defaultRequest.timeout
          });
      };
  };
  var kupoGetRequest = function (endpoint) {
      return Control_Bind.bind(Ctl_Internal_QueryM.bindQueryMT(Effect_Aff.bindAff))(Control_Monad_Reader_Class.asks(Ctl_Internal_QueryM.monadAskQueryEnvQueryMTAf)(function ($164) {
          return (function (v) {
              return v.kupoConfig;
          })((function (v) {
              return v.config;
          })($164));
      }))(function (config) {
          return Effect_Aff_Class.liftAff(Ctl_Internal_QueryM.monadAffQueryMTAff)(kupoGetRequestAff(config)(endpoint));
      });
  };
  var isTxConfirmedAff = function (config) {
      return function (v) {
          return Control_Monad_Except_Trans.runExceptT((function () {
              var endpoint = "/matches/*@" + Ctl_Internal_Types_ByteArray.byteArrayToHex(v);
              return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Effect_Aff.monadAff))(Data_Functor.map(Effect_Aff.functorAff)(Ctl_Internal_QueryM.handleAffjaxResponse(Aeson.decodeAesonArray(decodeAesonKupoUtxoSlot)))(kupoGetRequestAff(config)(endpoint)))(function (utxos) {
                  return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Effect_Aff.monadAff))(Data_Functor.mapFlipped(Data_Maybe.functorMaybe)(Data_Array.uncons(utxos))(function ($165) {
                      return unwrapKupoUtxoSlot((function (v1) {
                          return v1.head;
                      })($165));
                  }));
              });
          })());
      };
  };
  var isTxConfirmed = function (th) {
      return Control_Bind.bind(Ctl_Internal_QueryM.bindQueryMT(Effect_Aff.bindAff))(Control_Monad_Reader_Class.asks(Ctl_Internal_QueryM.monadAskQueryEnvQueryMTAf)(function ($166) {
          return (function (v) {
              return v.kupoConfig;
          })((function (v) {
              return v.config;
          })($166));
      }))(function (config) {
          return Effect_Aff_Class.liftAff(Ctl_Internal_QueryM.monadAffQueryMTAff)(isTxConfirmedAff(config)(th));
      });
  };
  var getTxMetadata = function (txHash) {
      return Control_Monad_Except_Trans.runExceptT(Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Ctl_Internal_QueryM.monadQueryMTAff))(Data_Functor.map(Ctl_Internal_QueryM.functorQueryMT(Effect_Aff.functorAff))(Data_Bifunctor.lmap(Data_Bifunctor.bifunctorEither)(Ctl_Internal_Contract_QueryHandle_Error.GetTxMetadataClientError.create))(isTxConfirmed(txHash)))(function (v) {
          if (v instanceof Data_Maybe.Nothing) {
              return Control_Monad_Error_Class.throwError(Control_Monad_Except_Trans.monadThrowExceptT(Ctl_Internal_QueryM.monadQueryMTAff))(Ctl_Internal_Contract_QueryHandle_Error.GetTxMetadataTxNotFoundError.value);
          };
          if (v instanceof Data_Maybe.Just) {
              var endpoint = "/metadata/" + (Ctl_Internal_Types_BigNum.toString(Data_Newtype.unwrap()(v.value0)) + ("?transaction_id=" + Ctl_Internal_Types_ByteArray.byteArrayToHex(Data_Newtype.unwrap()(txHash))));
              return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Ctl_Internal_QueryM.monadQueryMTAff))(Data_Functor.map(Ctl_Internal_QueryM.functorQueryMT(Effect_Aff.functorAff))((function () {
                  var $167 = Data_Bifunctor.lmap(Data_Bifunctor.bifunctorEither)(Ctl_Internal_Contract_QueryHandle_Error.GetTxMetadataClientError.create);
                  var $168 = Ctl_Internal_QueryM.handleAffjaxResponse(decodeAesonKupoMetadata);
                  return function ($169) {
                      return $167($168($169));
                  };
              })())(kupoGetRequest(endpoint)))(function (kupoMetadata) {
                  var v1 = unwrapKupoMetadata(kupoMetadata);
                  if (v1 instanceof Data_Maybe.Nothing) {
                      return Control_Monad_Error_Class.throwError(Control_Monad_Except_Trans.monadThrowExceptT(Ctl_Internal_QueryM.monadQueryMTAff))(Ctl_Internal_Contract_QueryHandle_Error.GetTxMetadataMetadataEmptyOrMissingError.value);
                  };
                  if (v1 instanceof Data_Maybe.Just) {
                      if (Data_Map_Internal.isEmpty(Data_Newtype.unwrap()(v1.value0))) {
                          return Control_Monad_Error_Class.throwError(Control_Monad_Except_Trans.monadThrowExceptT(Ctl_Internal_QueryM.monadQueryMTAff))(Ctl_Internal_Contract_QueryHandle_Error.GetTxMetadataMetadataEmptyOrMissingError.value);
                      };
                      if (Data_Boolean.otherwise) {
                          return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Ctl_Internal_QueryM.monadQueryMTAff))(v1.value0);
                      };
                  };
                  throw new Error("Failed pattern match at Ctl.Internal.QueryM.Kupo (line 178, column 7 - line 183, column 39): " + [ v1.constructor.name ]);
              });
          };
          throw new Error("Failed pattern match at Ctl.Internal.QueryM.Kupo (line 167, column 72 - line 183, column 39): " + [ v.constructor.name ]);
      }));
  };
  var getScriptByHash = function (scriptHash) {
      var endpoint = "/scripts/" + Ctl_Internal_Types_RawBytes.rawBytesToHex(Ctl_Internal_Serialization_Hash.scriptHashToBytes(scriptHash));
      return Data_Functor.mapFlipped(Ctl_Internal_QueryM.functorQueryMT(Effect_Aff.functorAff))(kupoGetRequest(endpoint))((function () {
          var $170 = Data_Functor.map(Data_Either.functorEither)(unwrapKupoScriptRef);
          var $171 = Ctl_Internal_QueryM.handleAffjaxResponse(decodeAesonKupoScriptRef);
          return function ($172) {
              return $170($171($172));
          };
      })());
  };
  var getDatumByHash = function (v) {
      var endpoint = "/datums/" + Ctl_Internal_Types_ByteArray.byteArrayToHex(v);
      return Data_Functor.mapFlipped(Ctl_Internal_QueryM.functorQueryMT(Effect_Aff.functorAff))(kupoGetRequest(endpoint))((function () {
          var $173 = Data_Functor.map(Data_Either.functorEither)(unwrapKupoDatum);
          var $174 = Ctl_Internal_QueryM.handleAffjaxResponse(decodeAesonKupoDatum);
          return function ($175) {
              return $173($174($175));
          };
      })());
  };
  var resolveKupoTxOutput = function (v) {
      var resolveScriptRef = (function () {
          if (v.scriptHash instanceof Data_Maybe.Nothing) {
              return Control_Applicative.pure(Ctl_Internal_QueryM.applicativeQueryMT(Effect_Aff.applicativeAff))(new Data_Either.Right(Data_Maybe.Nothing.value));
          };
          if (v.scriptHash instanceof Data_Maybe.Just) {
              return Control_Monad_Except_Trans.runExceptT(Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Ctl_Internal_QueryM.monadQueryMTAff))(getScriptByHash(v.scriptHash.value0))(function (scriptRef) {
                  return Control_Monad_Except_Trans.except(Ctl_Internal_QueryM.applicativeQueryMT(Effect_Aff.applicativeAff))(Data_Functor.map(Data_Either.functorEither)(Data_Maybe.Just.create)(Data_Function.flip(Data_Either.note)(scriptRef)(new Ctl_Internal_Service_Error.ClientOtherError("Kupo: Failed to resolve reference script"))));
              }));
          };
          throw new Error("Failed pattern match at Ctl.Internal.QueryM.Kupo (line 336, column 5 - line 341, column 72): " + [ v.scriptHash.constructor.name ]);
      })();
      var resolveDatum = (function () {
          if (v.datumHash instanceof Data_Maybe.Nothing) {
              return Control_Applicative.pure(Ctl_Internal_QueryM.applicativeQueryMT(Effect_Aff.applicativeAff))(new Data_Either.Right(Ctl_Internal_Types_OutputDatum.NoOutputDatum.value));
          };
          if (v.datumHash instanceof Data_Maybe.Just && v.datumHash.value0.value1 instanceof DatumHash) {
              return Control_Applicative.pure(Ctl_Internal_QueryM.applicativeQueryMT(Effect_Aff.applicativeAff))(new Data_Either.Right(new Ctl_Internal_Types_OutputDatum.OutputDatumHash(v.datumHash.value0.value0)));
          };
          if (v.datumHash instanceof Data_Maybe.Just && v.datumHash.value0.value1 instanceof InlineDatum) {
              return Control_Monad_Except_Trans.runExceptT(Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Ctl_Internal_QueryM.monadQueryMTAff))(getDatumByHash(v.datumHash.value0.value0))(function (datum) {
                  return Control_Monad_Except_Trans.except(Ctl_Internal_QueryM.applicativeQueryMT(Effect_Aff.applicativeAff))(Data_Functor.map(Data_Either.functorEither)(Ctl_Internal_Types_OutputDatum.OutputDatum.create)(Data_Function.flip(Data_Either.note)(datum)(new Ctl_Internal_Service_Error.ClientOtherError("Kupo: Failed to resolve inline datum"))));
              }));
          };
          throw new Error("Failed pattern match at Ctl.Internal.QueryM.Kupo (line 325, column 5 - line 332, column 68): " + [ v.datumHash.constructor.name ]);
      })();
      var mkTxOutput = function (datum) {
          return function (scriptRef) {
              return {
                  address: v.address,
                  amount: v.amount,
                  datum: datum,
                  scriptRef: scriptRef
              };
          };
      };
      return Control_Monad_Except_Trans.runExceptT(Control_Apply.apply(Control_Monad_Except_Trans.applyExceptT(Ctl_Internal_QueryM.monadQueryMTAff))(Data_Functor.map(Control_Monad_Except_Trans.functorExceptT(Ctl_Internal_QueryM.functorQueryMT(Effect_Aff.functorAff)))(mkTxOutput)(resolveDatum))(resolveScriptRef));
  };
  var resolveKupoUtxoMap = function (v) {
      return Control_Monad_Except_Trans.runExceptT(Control_Parallel.parTraverse(Control_Parallel_Class.monadParExceptT(Ctl_Internal_QueryM.parallelQueryMTParAffQuer))(Data_Map_Internal.traversableMap)(function ($176) {
          return Control_Monad_Except_Trans.ExceptT(resolveKupoTxOutput($176));
      })(v));
  };
  var getUtxoByOref = function (oref) {
      var endpoint = (function () {
          var txHashHex = Ctl_Internal_Types_ByteArray.byteArrayToHex(Data_Newtype.unwrap()(oref.transactionId));
          var outputIndex = Data_UInt.toString(oref.index);
          return "/matches/" + (outputIndex + ("@" + (txHashHex + "?unspent")));
      })();
      return Control_Monad_Except_Trans.runExceptT(Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Ctl_Internal_QueryM.monadQueryMTAff))(Data_Functor.map(Ctl_Internal_QueryM.functorQueryMT(Effect_Aff.functorAff))(Ctl_Internal_QueryM.handleAffjaxResponse(decodeAesonKupoUtxoMap))(kupoGetRequest(endpoint)))(function (kupoUtxoMap) {
          return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Ctl_Internal_QueryM.monadQueryMTAff))(resolveKupoUtxoMap(kupoUtxoMap))(function (utxoMap) {
              return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Ctl_Internal_QueryM.monadQueryMTAff))(Data_Map_Internal.lookup(Ctl_Internal_Types_Transaction.ordTransactionInput)(oref)(utxoMap));
          });
      }));
  };
  var utxosAt = function (address) {
      return Control_Monad_Except_Trans.runExceptT((function () {
          var endpoint = "/matches/" + (Ctl_Internal_Serialization_Address.addressBech32(address) + "?unspent");
          return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Ctl_Internal_QueryM.monadQueryMTAff))(Data_Functor.map(Ctl_Internal_QueryM.functorQueryMT(Effect_Aff.functorAff))(Ctl_Internal_QueryM.handleAffjaxResponse(decodeAesonKupoUtxoMap))(kupoGetRequest(endpoint)))(function (kupoUtxoMap) {
              return resolveKupoUtxoMap(kupoUtxoMap);
          });
      })());
  };
  exports["getDatumByHash"] = getDatumByHash;
  exports["getScriptByHash"] = getScriptByHash;
  exports["getTxMetadata"] = getTxMetadata;
  exports["getUtxoByOref"] = getUtxoByOref;
  exports["isTxConfirmed"] = isTxConfirmed;
  exports["isTxConfirmedAff"] = isTxConfirmedAff;
  exports["utxosAt"] = utxosAt;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Control.Monad.Maybe.Trans"] = $PS["Control.Monad.Maybe.Trans"] || {};
  var exports = $PS["Control.Monad.Maybe.Trans"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad = $PS["Control.Monad"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];                    
  var MaybeT = function (x) {
      return x;
  };
  var runMaybeT = function (v) {
      return v;
  };
  var functorMaybeT = function (dictFunctor) {
      return {
          map: function (f) {
              return function (v) {
                  return Data_Functor.map(dictFunctor)(Data_Functor.map(Data_Maybe.functorMaybe)(f))(v);
              };
          }
      };
  };
  var monadMaybeT = function (dictMonad) {
      return {
          Applicative0: function () {
              return applicativeMaybeT(dictMonad);
          },
          Bind1: function () {
              return bindMaybeT(dictMonad);
          }
      };
  };
  var bindMaybeT = function (dictMonad) {
      return {
          bind: function (v) {
              return function (f) {
                  return Control_Bind.bind(dictMonad.Bind1())(v)(function (v1) {
                      if (v1 instanceof Data_Maybe.Nothing) {
                          return Control_Applicative.pure(dictMonad.Applicative0())(Data_Maybe.Nothing.value);
                      };
                      if (v1 instanceof Data_Maybe.Just) {
                          var v2 = f(v1.value0);
                          return v2;
                      };
                      throw new Error("Failed pattern match at Control.Monad.Maybe.Trans (line 55, column 11 - line 57, column 42): " + [ v1.constructor.name ]);
                  });
              };
          },
          Apply0: function () {
              return applyMaybeT(dictMonad);
          }
      };
  };
  var applyMaybeT = function (dictMonad) {
      return {
          apply: Control_Monad.ap(monadMaybeT(dictMonad)),
          Functor0: function () {
              return functorMaybeT(((dictMonad.Bind1()).Apply0()).Functor0());
          }
      };
  };
  var applicativeMaybeT = function (dictMonad) {
      return {
          pure: (function () {
              var $74 = Control_Applicative.pure(dictMonad.Applicative0());
              return function ($75) {
                  return MaybeT($74(Data_Maybe.Just.create($75)));
              };
          })(),
          Apply0: function () {
              return applyMaybeT(dictMonad);
          }
      };
  };
  exports["runMaybeT"] = runMaybeT;
  exports["functorMaybeT"] = functorMaybeT;
  exports["bindMaybeT"] = bindMaybeT;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Data.MediaType"] = $PS["Data.MediaType"] || {};
  var exports = $PS["Data.MediaType"];
  var Data_Show = $PS["Data.Show"];
  var showMediaType = {
      show: function (v) {
          return "(MediaType " + (Data_Show.show(Data_Show.showString)(v) + ")");
      }
  };
  exports["showMediaType"] = showMediaType;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Data.Time.Duration"] = $PS["Data.Time.Duration"] || {};
  var exports = $PS["Data.Time.Duration"];
  var Control_Category = $PS["Control.Category"];
  var Data_Newtype = $PS["Data.Newtype"];          
  var Seconds = function (x) {
      return x;
  };
  var Milliseconds = function (x) {
      return x;
  };
  var toDuration = function (dict) {
      return dict.toDuration;
  };
  var fromDuration = function (dict) {
      return dict.fromDuration;
  };                            
  var durationSeconds = {
      fromDuration: Data_Newtype.over()()(Seconds)(function (v) {
          return v * 1000.0;
      }),
      toDuration: Data_Newtype.over()()(Milliseconds)(function (v) {
          return v / 1000.0;
      })
  };
  var durationMilliseconds = {
      fromDuration: Control_Category.identity(Control_Category.categoryFn),
      toDuration: Control_Category.identity(Control_Category.categoryFn)
  };
  var convertDuration = function (dictDuration) {
      return function (dictDuration1) {
          var $47 = toDuration(dictDuration1);
          var $48 = fromDuration(dictDuration);
          return function ($49) {
              return $47($48($49));
          };
      };
  };
  exports["fromDuration"] = fromDuration;
  exports["Seconds"] = Seconds;
  exports["convertDuration"] = convertDuration;
  exports["durationMilliseconds"] = durationMilliseconds;
  exports["durationSeconds"] = durationSeconds;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Ctl.Internal.Service.Blockfrost"] = $PS["Ctl.Internal.Service.Blockfrost"] || {};
  var exports = $PS["Ctl.Internal.Service.Blockfrost"];
  var Aeson = $PS["Aeson"];
  var Affjax = $PS["Affjax"];
  var Affjax_RequestBody = $PS["Affjax.RequestBody"];
  var Affjax_RequestHeader = $PS["Affjax.RequestHeader"];
  var Affjax_ResponseFormat = $PS["Affjax.ResponseFormat"];
  var Affjax_ResponseHeader = $PS["Affjax.ResponseHeader"];
  var Affjax_StatusCode = $PS["Affjax.StatusCode"];
  var Control_Alt = $PS["Control.Alt"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_Error_Class = $PS["Control.Monad.Error.Class"];
  var Control_Monad_Except_Trans = $PS["Control.Monad.Except.Trans"];
  var Control_Monad_Logger_Class = $PS["Control.Monad.Logger.Class"];
  var Control_Monad_Logger_Trans = $PS["Control.Monad.Logger.Trans"];
  var Control_Monad_Maybe_Trans = $PS["Control.Monad.Maybe.Trans"];
  var Control_Monad_Reader_Class = $PS["Control.Monad.Reader.Class"];
  var Control_Monad_Reader_Trans = $PS["Control.Monad.Reader.Trans"];
  var Control_Parallel = $PS["Control.Parallel"];
  var Control_Parallel_Class = $PS["Control.Parallel.Class"];
  var Ctl_Internal_Cardano_Types_NativeScript = $PS["Ctl.Internal.Cardano.Types.NativeScript"];
  var Ctl_Internal_Cardano_Types_ScriptRef = $PS["Ctl.Internal.Cardano.Types.ScriptRef"];
  var Ctl_Internal_Cardano_Types_Transaction = $PS["Ctl.Internal.Cardano.Types.Transaction"];
  var Ctl_Internal_Cardano_Types_Value = $PS["Ctl.Internal.Cardano.Types.Value"];
  var Ctl_Internal_Contract_QueryHandle_Error = $PS["Ctl.Internal.Contract.QueryHandle.Error"];
  var Ctl_Internal_Deserialization_FromBytes = $PS["Ctl.Internal.Deserialization.FromBytes"];
  var Ctl_Internal_Deserialization_PlutusData = $PS["Ctl.Internal.Deserialization.PlutusData"];
  var Ctl_Internal_Deserialization_Transaction = $PS["Ctl.Internal.Deserialization.Transaction"];
  var Ctl_Internal_QueryM_Ogmios = $PS["Ctl.Internal.QueryM.Ogmios"];
  var Ctl_Internal_Serialization = $PS["Ctl.Internal.Serialization"];
  var Ctl_Internal_Serialization_Address = $PS["Ctl.Internal.Serialization.Address"];
  var Ctl_Internal_Serialization_Hash = $PS["Ctl.Internal.Serialization.Hash"];
  var Ctl_Internal_Serialization_ToBytes = $PS["Ctl.Internal.Serialization.ToBytes"];
  var Ctl_Internal_ServerConfig = $PS["Ctl.Internal.ServerConfig"];
  var Ctl_Internal_Service_Error = $PS["Ctl.Internal.Service.Error"];
  var Ctl_Internal_Service_Helpers = $PS["Ctl.Internal.Service.Helpers"];
  var Ctl_Internal_Types_BigNum = $PS["Ctl.Internal.Types.BigNum"];
  var Ctl_Internal_Types_ByteArray = $PS["Ctl.Internal.Types.ByteArray"];
  var Ctl_Internal_Types_CborBytes = $PS["Ctl.Internal.Types.CborBytes"];
  var Ctl_Internal_Types_Chain = $PS["Ctl.Internal.Types.Chain"];
  var Ctl_Internal_Types_Datum = $PS["Ctl.Internal.Types.Datum"];
  var Ctl_Internal_Types_EraSummaries = $PS["Ctl.Internal.Types.EraSummaries"];
  var Ctl_Internal_Types_Int = $PS["Ctl.Internal.Types.Int"];
  var Ctl_Internal_Types_OutputDatum = $PS["Ctl.Internal.Types.OutputDatum"];
  var Ctl_Internal_Types_ProtocolParameters = $PS["Ctl.Internal.Types.ProtocolParameters"];
  var Ctl_Internal_Types_PubKeyHash = $PS["Ctl.Internal.Types.PubKeyHash"];
  var Ctl_Internal_Types_Rational = $PS["Ctl.Internal.Types.Rational"];
  var Ctl_Internal_Types_RawBytes = $PS["Ctl.Internal.Types.RawBytes"];
  var Ctl_Internal_Types_RewardAddress = $PS["Ctl.Internal.Types.RewardAddress"];
  var Ctl_Internal_Types_Scripts = $PS["Ctl.Internal.Types.Scripts"];
  var Ctl_Internal_Types_Transaction = $PS["Ctl.Internal.Types.Transaction"];
  var Ctl_Internal_Types_TransactionMetadata = $PS["Ctl.Internal.Types.TransactionMetadata"];
  var Data_Argonaut_Decode_Error = $PS["Data.Argonaut.Decode.Error"];
  var Data_Array = $PS["Data.Array"];
  var Data_Bifunctor = $PS["Data.Bifunctor"];
  var Data_BigInt = $PS["Data.BigInt"];
  var Data_BigNumber = $PS["Data.BigNumber"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_DateTime_Instant = $PS["Data.DateTime.Instant"];
  var Data_Either = $PS["Data.Either"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Generic_Rep = $PS["Data.Generic.Rep"];
  var Data_HTTP_Method = $PS["Data.HTTP.Method"];
  var Data_JSDate = $PS["Data.JSDate"];
  var Data_Log_Level = $PS["Data.Log.Level"];
  var Data_Map_Internal = $PS["Data.Map.Internal"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_MediaType = $PS["Data.MediaType"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Number = $PS["Data.Number"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Semiring = $PS["Data.Semiring"];
  var Data_Show = $PS["Data.Show"];
  var Data_Show_Generic = $PS["Data.Show.Generic"];
  var Data_String_CodePoints = $PS["Data.String.CodePoints"];
  var Data_Time_Duration = $PS["Data.Time.Duration"];
  var Data_Traversable = $PS["Data.Traversable"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Effect_Aff = $PS["Effect.Aff"];
  var Effect_Aff_Class = $PS["Effect.Aff.Class"];
  var Effect_Class = $PS["Effect.Class"];
  var Effect_Exception = $PS["Effect.Exception"];                
  var Stringed = function (x) {
      return x;
  };
  var BlockfrostStakeCredential = (function () {
      function BlockfrostStakeCredential(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      BlockfrostStakeCredential.create = function (value0) {
          return function (value1) {
              return new BlockfrostStakeCredential(value0, value1);
          };
      };
      return BlockfrostStakeCredential;
  })();
  var NativeScript = (function () {
      function NativeScript() {

      };
      NativeScript.value = new NativeScript();
      return NativeScript;
  })();
  var PlutusV1Script = (function () {
      function PlutusV1Script() {

      };
      PlutusV1Script.value = new PlutusV1Script();
      return PlutusV1Script;
  })();
  var PlutusV2Script = (function () {
      function PlutusV2Script() {

      };
      PlutusV2Script.value = new PlutusV2Script();
      return PlutusV2Script;
  })();
  var BlockfrostEvaluateTx = (function () {
      function BlockfrostEvaluateTx(value0) {
          this.value0 = value0;
      };
      BlockfrostEvaluateTx.create = function (value0) {
          return new BlockfrostEvaluateTx(value0);
      };
      return BlockfrostEvaluateTx;
  })();
  var BlockchainGenesis = (function () {
      function BlockchainGenesis() {

      };
      BlockchainGenesis.value = new BlockchainGenesis();
      return BlockchainGenesis;
  })();
  var DatumCbor = (function () {
      function DatumCbor(value0) {
          this.value0 = value0;
      };
      DatumCbor.create = function (value0) {
          return new DatumCbor(value0);
      };
      return DatumCbor;
  })();
  var EraSummaries = (function () {
      function EraSummaries() {

      };
      EraSummaries.value = new EraSummaries();
      return EraSummaries;
  })();
  var EvaluateTransaction = (function () {
      function EvaluateTransaction() {

      };
      EvaluateTransaction.value = new EvaluateTransaction();
      return EvaluateTransaction;
  })();
  var LatestBlock = (function () {
      function LatestBlock() {

      };
      LatestBlock.value = new LatestBlock();
      return LatestBlock;
  })();
  var LatestEpoch = (function () {
      function LatestEpoch() {

      };
      LatestEpoch.value = new LatestEpoch();
      return LatestEpoch;
  })();
  var LatestProtocolParameters = (function () {
      function LatestProtocolParameters() {

      };
      LatestProtocolParameters.value = new LatestProtocolParameters();
      return LatestProtocolParameters;
  })();
  var NativeScriptByHash = (function () {
      function NativeScriptByHash(value0) {
          this.value0 = value0;
      };
      NativeScriptByHash.create = function (value0) {
          return new NativeScriptByHash(value0);
      };
      return NativeScriptByHash;
  })();
  var PlutusScriptCborByHash = (function () {
      function PlutusScriptCborByHash(value0) {
          this.value0 = value0;
      };
      PlutusScriptCborByHash.create = function (value0) {
          return new PlutusScriptCborByHash(value0);
      };
      return PlutusScriptCborByHash;
  })();
  var ScriptInfo = (function () {
      function ScriptInfo(value0) {
          this.value0 = value0;
      };
      ScriptInfo.create = function (value0) {
          return new ScriptInfo(value0);
      };
      return ScriptInfo;
  })();
  var SubmitTransaction = (function () {
      function SubmitTransaction() {

      };
      SubmitTransaction.value = new SubmitTransaction();
      return SubmitTransaction;
  })();
  var Transaction = (function () {
      function Transaction(value0) {
          this.value0 = value0;
      };
      Transaction.create = function (value0) {
          return new Transaction(value0);
      };
      return Transaction;
  })();
  var TransactionMetadata = (function () {
      function TransactionMetadata(value0) {
          this.value0 = value0;
      };
      TransactionMetadata.create = function (value0) {
          return new TransactionMetadata(value0);
      };
      return TransactionMetadata;
  })();
  var UtxosAtAddress = (function () {
      function UtxosAtAddress(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      UtxosAtAddress.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new UtxosAtAddress(value0, value1, value2);
              };
          };
      };
      return UtxosAtAddress;
  })();
  var UtxosOfTransaction = (function () {
      function UtxosOfTransaction(value0) {
          this.value0 = value0;
      };
      UtxosOfTransaction.create = function (value0) {
          return new UtxosOfTransaction(value0);
      };
      return UtxosOfTransaction;
  })();
  var PoolIds = (function () {
      function PoolIds(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      PoolIds.create = function (value0) {
          return function (value1) {
              return new PoolIds(value0, value1);
          };
      };
      return PoolIds;
  })();
  var PoolParameters = (function () {
      function PoolParameters(value0) {
          this.value0 = value0;
      };
      PoolParameters.create = function (value0) {
          return new PoolParameters(value0);
      };
      return PoolParameters;
  })();
  var DelegationsAndRewards = (function () {
      function DelegationsAndRewards(value0) {
          this.value0 = value0;
      };
      DelegationsAndRewards.create = function (value0) {
          return new DelegationsAndRewards(value0);
      };
      return DelegationsAndRewards;
  })();
  var BlockfrostGetRequestData = (function () {
      function BlockfrostGetRequestData(value0) {
          this.value0 = value0;
      };
      BlockfrostGetRequestData.create = function (value0) {
          return new BlockfrostGetRequestData(value0);
      };
      return BlockfrostGetRequestData;
  })();
  var BlockfrostPostRequestData = (function () {
      function BlockfrostPostRequestData(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      BlockfrostPostRequestData.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new BlockfrostPostRequestData(value0, value1, value2);
              };
          };
      };
      return BlockfrostPostRequestData;
  })();                                                         
  var semigroupBlockfrostUtxosA = Data_Semigroup.semigroupArray;
  var monoidBlockfrostUtxosOfTr = Data_Monoid.monoidArray;
  var monoidBlockfrostUtxosAtAd = Data_Monoid.monoidArray;
  var genericBlockfrostStakeCre = {
      to: function (x) {
          return new BlockfrostStakeCredential(x.value0, x.value1);
      },
      from: function (x) {
          return new Data_Generic_Rep.Product(x.value0, x.value1);
      }
  };
  var showBlockfrostStakeCreden = {
      show: Data_Show_Generic.genericShow(genericBlockfrostStakeCre)(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsProduct(Data_Show_Generic.genericShowArgsArgument(Ctl_Internal_Serialization_Address.showNetworkId))(Data_Show_Generic.genericShowArgsArgument(Data_Either.showEither(Ctl_Internal_Types_PubKeyHash.showStakePubKeyHash)(Ctl_Internal_Types_Scripts.showStakeValidatorHash))))({
          reflectSymbol: function () {
              return "BlockfrostStakeCredential";
          }
      }))
  };
  var genericBlockfrostEndpoint = {
      to: function (x) {
          if (x instanceof Data_Generic_Rep.Inl) {
              return BlockchainGenesis.value;
          };
          if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inl) {
              return new DatumCbor(x.value0.value0);
          };
          if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0 instanceof Data_Generic_Rep.Inl)) {
              return EraSummaries.value;
          };
          if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0 instanceof Data_Generic_Rep.Inl))) {
              return EvaluateTransaction.value;
          };
          if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl)))) {
              return LatestBlock.value;
          };
          if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl))))) {
              return LatestEpoch.value;
          };
          if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl)))))) {
              return LatestProtocolParameters.value;
          };
          if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl))))))) {
              return new NativeScriptByHash(x.value0.value0.value0.value0.value0.value0.value0.value0);
          };
          if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl)))))))) {
              return new PlutusScriptCborByHash(x.value0.value0.value0.value0.value0.value0.value0.value0.value0);
          };
          if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl))))))))) {
              return new ScriptInfo(x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0);
          };
          if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl)))))))))) {
              return SubmitTransaction.value;
          };
          if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl))))))))))) {
              return new Transaction(x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0);
          };
          if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl)))))))))))) {
              return new TransactionMetadata(x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0);
          };
          if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl))))))))))))) {
              return new UtxosAtAddress(x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0, x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value1.value0, x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value1.value1);
          };
          if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl)))))))))))))) {
              return new UtxosOfTransaction(x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0);
          };
          if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl))))))))))))))) {
              return new PoolIds(x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0, x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value1);
          };
          if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl)))))))))))))))) {
              return new PoolParameters(x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0);
          };
          if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr)))))))))))))))) {
              return new DelegationsAndRewards(x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0);
          };
          throw new Error("Failed pattern match at Ctl.Internal.Service.Blockfrost (line 347, column 1 - line 347, column 45): " + [ x.constructor.name ]);
      },
      from: function (x) {
          if (x instanceof BlockchainGenesis) {
              return new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value);
          };
          if (x instanceof DatumCbor) {
              return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0));
          };
          if (x instanceof EraSummaries) {
              return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value)));
          };
          if (x instanceof EvaluateTransaction) {
              return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value))));
          };
          if (x instanceof LatestBlock) {
              return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value)))));
          };
          if (x instanceof LatestEpoch) {
              return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value))))));
          };
          if (x instanceof LatestProtocolParameters) {
              return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value)))))));
          };
          if (x instanceof NativeScriptByHash) {
              return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0))))))));
          };
          if (x instanceof PlutusScriptCborByHash) {
              return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0)))))))));
          };
          if (x instanceof ScriptInfo) {
              return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0))))))))));
          };
          if (x instanceof SubmitTransaction) {
              return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value)))))))))));
          };
          if (x instanceof Transaction) {
              return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0))))))))))));
          };
          if (x instanceof TransactionMetadata) {
              return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0)))))))))))));
          };
          if (x instanceof UtxosAtAddress) {
              return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(new Data_Generic_Rep.Product(x.value0, new Data_Generic_Rep.Product(x.value1, x.value2))))))))))))))));
          };
          if (x instanceof UtxosOfTransaction) {
              return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0)))))))))))))));
          };
          if (x instanceof PoolIds) {
              return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(new Data_Generic_Rep.Product(x.value0, x.value1)))))))))))))))));
          };
          if (x instanceof PoolParameters) {
              return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0)))))))))))))))));
          };
          if (x instanceof DelegationsAndRewards) {
              return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(x.value0)))))))))))))))));
          };
          throw new Error("Failed pattern match at Ctl.Internal.Service.Blockfrost (line 347, column 1 - line 347, column 45): " + [ x.constructor.name ]);
      }
  };
  var showBlockfrostEndpoint = {
      show: Data_Show_Generic.genericShow(genericBlockfrostEndpoint)(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsNoArguments)({
          reflectSymbol: function () {
              return "BlockchainGenesis";
          }
      }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Ctl_Internal_Types_Transaction.showDataHash))({
          reflectSymbol: function () {
              return "DatumCbor";
          }
      }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsNoArguments)({
          reflectSymbol: function () {
              return "EraSummaries";
          }
      }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsNoArguments)({
          reflectSymbol: function () {
              return "EvaluateTransaction";
          }
      }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsNoArguments)({
          reflectSymbol: function () {
              return "LatestBlock";
          }
      }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsNoArguments)({
          reflectSymbol: function () {
              return "LatestEpoch";
          }
      }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsNoArguments)({
          reflectSymbol: function () {
              return "LatestProtocolParameters";
          }
      }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Ctl_Internal_Serialization_Hash.showScriptHash))({
          reflectSymbol: function () {
              return "NativeScriptByHash";
          }
      }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Ctl_Internal_Serialization_Hash.showScriptHash))({
          reflectSymbol: function () {
              return "PlutusScriptCborByHash";
          }
      }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Ctl_Internal_Serialization_Hash.showScriptHash))({
          reflectSymbol: function () {
              return "ScriptInfo";
          }
      }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsNoArguments)({
          reflectSymbol: function () {
              return "SubmitTransaction";
          }
      }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Ctl_Internal_Types_Transaction.showTransactionHash))({
          reflectSymbol: function () {
              return "Transaction";
          }
      }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Ctl_Internal_Types_Transaction.showTransactionHash))({
          reflectSymbol: function () {
              return "TransactionMetadata";
          }
      }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsProduct(Data_Show_Generic.genericShowArgsArgument(Ctl_Internal_Serialization_Address.showAddress))(Data_Show_Generic.genericShowArgsProduct(Data_Show_Generic.genericShowArgsArgument(Data_Show.showInt))(Data_Show_Generic.genericShowArgsArgument(Data_Show.showInt))))({
          reflectSymbol: function () {
              return "UtxosAtAddress";
          }
      }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Ctl_Internal_Types_Transaction.showTransactionHash))({
          reflectSymbol: function () {
              return "UtxosOfTransaction";
          }
      }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsProduct(Data_Show_Generic.genericShowArgsArgument(Data_Show.showInt))(Data_Show_Generic.genericShowArgsArgument(Data_Show.showInt)))({
          reflectSymbol: function () {
              return "PoolIds";
          }
      }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Ctl_Internal_Cardano_Types_Transaction.showPoolPubKeyHash))({
          reflectSymbol: function () {
              return "PoolParameters";
          }
      }))(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(showBlockfrostStakeCreden))({
          reflectSymbol: function () {
              return "DelegationsAndRewards";
          }
      })))))))))))))))))))
  };
  var decodeAesonStringed = function (dictDecodeAeson) {
      return {
          decodeAeson: Control_Bind.composeKleisli(Data_Either.bindEither)(Aeson.decodeAeson(Aeson.decodeAesonString))(Control_Bind.composeKleisli(Data_Either.bindEither)(Aeson.decodeJsonString(dictDecodeAeson))((function () {
              var $708 = Control_Applicative.pure(Data_Either.applicativeEither);
              return function ($709) {
                  return $708(Stringed($709));
              };
          })()))
      };
  };
  var decodeAesonBlockfrostTran = {
      decodeAeson: (function () {
          var decodeValue = (function () {
              var decodeAsset = Ctl_Internal_Service_Helpers.aesonObject(function (obj) {
                  return Control_Bind.bind(Data_Either.bindEither)(Control_Bind.bind(Data_Either.bindEither)(Aeson.getField(Aeson.decodeAesonString)(obj)("quantity"))((function () {
                      var $710 = Data_Either.note(new Data_Argonaut_Decode_Error.TypeMismatch("Expected string repr of BigInt"));
                      return function ($711) {
                          return $710(Data_BigInt.fromString($711));
                      };
                  })()))(function (quantity) {
                      return Control_Bind.bind(Data_Either.bindEither)(Aeson.getField(Aeson.decodeAesonString)(obj)("unit"))(function (v) {
                          if (v === "lovelace") {
                              return Control_Applicative.pure(Data_Either.applicativeEither)(Ctl_Internal_Cardano_Types_Value.lovelaceValueOf(quantity));
                          };
                          var v1 = Data_String_CodePoints.splitAt(56)(v);
                          return Data_Functor.mapFlipped(Data_Either.functorEither)(Ctl_Internal_Service_Helpers.decodeAssetClass(v)(v1.before)(v1.after))(function (v2) {
                              return Ctl_Internal_Cardano_Types_Value.mkValue(Data_Monoid.mempty(Ctl_Internal_Cardano_Types_Value.monoidCoin))(Ctl_Internal_Cardano_Types_Value.mkSingletonNonAdaAsset(v2.value0)(v2.value1)(quantity));
                          });
                      });
                  });
              });
              return Control_Bind.composeKleisli(Data_Either.bindEither)(Data_Function.flip(Aeson.getField(Aeson.decodeAesonAeson))("amount"))(Ctl_Internal_Service_Helpers.aesonArray((function () {
                  var $712 = Data_Functor.map(Data_Either.functorEither)(Data_Foldable.fold(Data_Foldable.foldableArray)(Ctl_Internal_Cardano_Types_Value.monoidValue));
                  var $713 = Data_Traversable.traverse(Data_Traversable.traversableArray)(Data_Either.applicativeEither)(decodeAsset);
                  return function ($714) {
                      return $712($713($714));
                  };
              })()));
          })();
          var decodeOutputDatum = function (obj) {
              return Control_Bind.bind(Data_Either.bindEither)(Aeson["getFieldOptional'"](Ctl_Internal_Types_CborBytes.decodeAesonCborBytes)(obj)("inline_datum"))(function (v) {
                  if (v instanceof Data_Maybe.Just) {
                      return Data_Either.note(new Data_Argonaut_Decode_Error.TypeMismatch("Expected CBOR encoded inline datum"))(Data_Functor.map(Data_Maybe.functorMaybe)(Ctl_Internal_Types_OutputDatum.OutputDatum.create)(Ctl_Internal_Deserialization_PlutusData.deserializeData(Ctl_Internal_Types_Datum.fromDataDatum)(v.value0)));
                  };
                  if (v instanceof Data_Maybe.Nothing) {
                      return Data_Functor.map(Data_Either.functorEither)(Data_Maybe.maybe(Ctl_Internal_Types_OutputDatum.NoOutputDatum.value)(Ctl_Internal_Types_OutputDatum.OutputDatumHash.create))(Aeson["getFieldOptional'"](Ctl_Internal_Types_Transaction.decodeAesonDataHash)(obj)("data_hash"));
                  };
                  throw new Error("Failed pattern match at Ctl.Internal.Service.Blockfrost (line 996, column 48 - line 1002, column 50): " + [ v.constructor.name ]);
              });
          };
          var decodeAddress = function (obj) {
              return Control_Bind.bind(Data_Either.bindEither)(Aeson.getField(Aeson.decodeAesonString)(obj)("address"))(function (address) {
                  return Data_Either.note(new Data_Argonaut_Decode_Error.TypeMismatch("Expected bech32 encoded address"))(Ctl_Internal_Serialization_Address.addressFromBech32(address));
              });
          };
          return Ctl_Internal_Service_Helpers.aesonObject(function (obj) {
              return Control_Bind.bind(Data_Either.bindEither)(decodeAddress(obj))(function (address) {
                  return Control_Bind.bind(Data_Either.bindEither)(decodeValue(obj))(function (amount) {
                      return Control_Bind.bind(Data_Either.bindEither)(decodeOutputDatum(obj))(function (datum) {
                          return Control_Bind.bind(Data_Either.bindEither)(Aeson["getFieldOptional'"](Ctl_Internal_Serialization_Hash.decodeAesonScriptHash)(obj)("reference_script_hash"))(function (scriptHash) {
                              return Control_Applicative.pure(Data_Either.applicativeEither)(Data_Newtype.wrap()({
                                  address: address,
                                  amount: amount,
                                  datum: datum,
                                  scriptHash: scriptHash
                              }));
                          });
                      });
                  });
              });
          });
      })()
  };
  var decodeAesonBlockfrostUtxo = {
      decodeAeson: (function () {
          var decodeTxOref = Ctl_Internal_Service_Helpers.aesonObject(function (obj) {
              return Control_Bind.bind(Data_Either.bindEither)(Aeson.getField(Ctl_Internal_Types_Transaction.decodeAesonTransactionHas)(obj)("tx_hash"))(function (transactionId) {
                  return Control_Bind.bind(Data_Either.bindEither)(Aeson.getField(Aeson.decodeAesonUInt)(obj)("output_index"))(function (index) {
                      return Control_Applicative.pure(Data_Either.applicativeEither)({
                          transactionId: transactionId,
                          index: index
                      });
                  });
              });
          });
          var decodeUtxoEntry = function (utxoAeson) {
              return Control_Apply.apply(Data_Either.applyEither)(Data_Functor.map(Data_Either.functorEither)(Data_Tuple.Tuple.create)(decodeTxOref(utxoAeson)))(Aeson.decodeAeson(decodeAesonBlockfrostTran)(utxoAeson));
          };
          return Ctl_Internal_Service_Helpers.aesonArray((function () {
              var $715 = Data_Functor.map(Data_Either.functorEither)(Data_Newtype.wrap());
              var $716 = Data_Traversable.traverse(Data_Traversable.traversableArray)(Data_Either.applicativeEither)(decodeUtxoEntry);
              return function ($717) {
                  return $715($716($717));
              };
          })());
      })()
  };
  var decodeAesonBlockfrostUtxo1 = {
      decodeAeson: (function () {
          var decodeTxOref = function (txHash) {
              return Ctl_Internal_Service_Helpers.aesonObject((function () {
                  var $718 = Data_Functor.map(Data_Either.functorEither)(function (index) {
                      return {
                          transactionId: txHash,
                          index: index
                      };
                  });
                  var $719 = Data_Function.flip(Aeson.getField(Aeson.decodeAesonUInt))("output_index");
                  return function ($720) {
                      return $718($719($720));
                  };
              })());
          };
          var decodeUtxoEntry = function (txHash) {
              return function (utxoAeson) {
                  return Control_Apply.apply(Data_Either.applyEither)(Data_Functor.map(Data_Either.functorEither)(Data_Tuple.Tuple.create)(decodeTxOref(txHash)(utxoAeson)))(Aeson.decodeAeson(decodeAesonBlockfrostTran)(utxoAeson));
              };
          };
          return Ctl_Internal_Service_Helpers.aesonObject(function (obj) {
              return Control_Bind.bind(Data_Either.bindEither)(Aeson.getField(Ctl_Internal_Types_Transaction.decodeAesonTransactionHas)(obj)("hash"))(function (txHash) {
                  return Control_Bind.bind(Data_Either.bindEither)(Aeson.getField(Aeson.decodeAesonAeson)(obj)("outputs"))(Ctl_Internal_Service_Helpers.aesonArray((function () {
                      var $721 = Data_Functor.map(Data_Either.functorEither)(Data_Newtype.wrap());
                      var $722 = Data_Traversable.traverse(Data_Traversable.traversableArray)(Data_Either.applicativeEither)(decodeUtxoEntry(txHash));
                      return function ($723) {
                          return $721($722($723));
                      };
                  })()));
              });
          });
      })()
  };
  var decodeAesonBlockfrostSyst = {
      decodeAeson: Ctl_Internal_Service_Helpers.aesonObject(function (obj) {
          return Control_Bind.bind(Data_Either.bindEither)(Data_Functor.map(Data_Either.functorEither)(function ($724) {
              return Data_Time_Duration.Seconds(Data_BigInt.toNumber($724));
          })(Aeson.getField(Aeson.decodeAesonBigInt)(obj)("system_start")))(function (systemStart) {
              return Data_Either.note(new Data_Argonaut_Decode_Error.TypeMismatch("Unix timestamp"))(Data_Functor.map(Data_Maybe.functorMaybe)((function () {
                  var $725 = Data_Newtype.wrap();
                  var $726 = Data_Newtype.wrap();
                  return function ($727) {
                      return $725($726(Data_DateTime_Instant.toDateTime($727)));
                  };
              })())(Data_DateTime_Instant.instant(Data_Time_Duration.convertDuration(Data_Time_Duration.durationSeconds)(Data_Time_Duration.durationMilliseconds)(systemStart))));
          });
      })
  };
  var decodeAesonBlockfrostScri = {
      decodeAeson: Ctl_Internal_Service_Helpers.aesonString(function (v) {
          if (v === "timelock") {
              return Control_Applicative.pure(Data_Either.applicativeEither)(NativeScript.value);
          };
          if (v === "plutusV1") {
              return Control_Applicative.pure(Data_Either.applicativeEither)(PlutusV1Script.value);
          };
          if (v === "plutusV2") {
              return Control_Applicative.pure(Data_Either.applicativeEither)(PlutusV2Script.value);
          };
          return new Data_Either.Left(new Data_Argonaut_Decode_Error.TypeMismatch("language: expected 'native' or 'plutusV{1|2}', got: " + v));
      })
  };
  var decodeAesonBlockfrostScri1 = {
      decodeAeson: Ctl_Internal_Service_Helpers.aesonObject((function () {
          var $728 = Data_Functor.map(Data_Either.functorEither)((function () {
              var $731 = Data_Newtype.wrap();
              return function ($732) {
                  return $731((function (v) {
                      return {
                          language: v
                      };
                  })($732));
              };
          })());
          var $729 = Data_Function.flip(Aeson.getField(decodeAesonBlockfrostScri))("type");
          return function ($730) {
              return $728($729($730));
          };
      })())
  };
  var decodeAesonBlockfrostRewa = {
      decodeAeson: function (aeson) {
          return Control_Bind.bind(Data_Either.bindEither)(Aeson.decodeAeson(Aeson.decodeAesonObject(Aeson.decodeAesonAeson))(aeson))(function (obj) {
              return Control_Bind.bind(Data_Either.bindEither)(Aeson.getField(Aeson.decodeAesonMaybe(Ctl_Internal_Cardano_Types_Transaction.decodeAesonPoolPubKeyHash))(obj)("pool_id"))(function (pool_id) {
                  return Control_Bind.bind(Data_Either.bindEither)(Aeson.getFieldOptional(Aeson.decodeAesonString)(obj)("withdrawable_amount"))(function (withdrawable_amount_mb_str) {
                      return Control_Bind.bind(Data_Either.bindEither)(Data_Traversable["for"](Data_Either.applicativeEither)(Data_Traversable.traversableMaybe)(withdrawable_amount_mb_str)(function (withdrawable_amount_str) {
                          return Data_Either.note(new Data_Argonaut_Decode_Error.TypeMismatch("BigInt"))(Data_Functor.map(Data_Maybe.functorMaybe)(Ctl_Internal_Cardano_Types_Value.Coin)(Data_BigInt.fromString(withdrawable_amount_str)));
                      }))(function (withdrawable_amount) {
                          return Control_Applicative.pure(Data_Either.applicativeEither)({
                              pool_id: pool_id,
                              withdrawable_amount: withdrawable_amount
                          });
                      });
                  });
              });
          });
      }
  };
  var decodeAesonBlockfrostNati = {
      decodeAeson: (function () {
          var decodeNativeScript = function (obj) {
              var decodeScripts = Control_Bind.bind(Data_Either.bindEither)(Aeson.getField(Aeson.decodeAesonArray(Aeson.decodeAesonAeson))(obj)("scripts"))(Data_Traversable.traverse(Data_Traversable.traversableArray)(Data_Either.applicativeEither)(Ctl_Internal_Service_Helpers.aesonObject(decodeNativeScript)));
              return Control_Bind.bind(Data_Either.bindEither)(Aeson.getField(Aeson.decodeAesonString)(obj)("type"))(function (v) {
                  if (v === "sig") {
                      return Data_Functor.map(Data_Either.functorEither)(Ctl_Internal_Cardano_Types_NativeScript.ScriptPubkey.create)(Control_Bind.bind(Data_Either.bindEither)(Aeson.getField(Ctl_Internal_Types_ByteArray.decodeAesonByteArray)(obj)("keyHash"))((function () {
                          var $733 = Data_Either.note(new Data_Argonaut_Decode_Error.TypeMismatch("Ed25519KeyHash"));
                          return function ($734) {
                              return $733(Ctl_Internal_Serialization_Hash.ed25519KeyHashFromBytes($734));
                          };
                      })()));
                  };
                  if (v === "before") {
                      return Data_Functor.map(Data_Either.functorEither)(Ctl_Internal_Cardano_Types_NativeScript.TimelockExpiry.create)(Aeson.getField(Ctl_Internal_Serialization_Address.decodeAesonSlot)(obj)("slot"));
                  };
                  if (v === "after") {
                      return Data_Functor.map(Data_Either.functorEither)(Ctl_Internal_Cardano_Types_NativeScript.TimelockStart.create)(Aeson.getField(Ctl_Internal_Serialization_Address.decodeAesonSlot)(obj)("slot"));
                  };
                  if (v === "all") {
                      return Data_Functor.map(Data_Either.functorEither)(Ctl_Internal_Cardano_Types_NativeScript.ScriptAll.create)(decodeScripts);
                  };
                  if (v === "any") {
                      return Data_Functor.map(Data_Either.functorEither)(Ctl_Internal_Cardano_Types_NativeScript.ScriptAny.create)(decodeScripts);
                  };
                  if (v === "atLeast") {
                      return Control_Apply.apply(Data_Either.applyEither)(Data_Functor.map(Data_Either.functorEither)(Ctl_Internal_Cardano_Types_NativeScript.ScriptNOfK.create)(Aeson.getField(Aeson.decodeAesonInt)(obj)("required")))(decodeScripts);
                  };
                  return new Data_Either.Left(new Data_Argonaut_Decode_Error.TypeMismatch("Native script constructor"));
              });
          };
          return Control_Bind.composeKleisli(Data_Either.bindEither)(Ctl_Internal_Service_Helpers.aesonObject(Data_Function.flip(Aeson.getField(Aeson.decodeAesonObject(Aeson.decodeAesonAeson)))("json")))((function () {
              var $735 = Data_Functor.map(Data_Either.functorEither)(Data_Newtype.wrap());
              return function ($736) {
                  return $735(decodeNativeScript($736));
              };
          })());
      })()
  };
  var decodeAesonBlockfrostMeta = {
      decodeAeson: Control_Bind.composeKleisli(Data_Either.bindEither)(Aeson.decodeAeson(Aeson.decodeAesonArray(Aeson.decodeAesonRecord(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_CborBytes.decodeAesonCborBytes))(Aeson.gDecodeAesonRowNil)({
          reflectSymbol: function () {
              return "metadata";
          }
      })()())())))(function (v) {
          return Control_Bind.bind(Data_Either.bindEither)(Data_Traversable["for"](Data_Either.applicativeEither)(Data_Traversable.traversableArray)(v)(function (v1) {
              return Data_Functor.map(Data_Functor.functorFn)(Data_Functor.map(Data_Either.functorEither)((function () {
                  var $737 = Data_Newtype.unwrap();
                  return function ($738) {
                      return $737(Ctl_Internal_Deserialization_Transaction.convertGeneralTransactionMetadata($738));
                  };
              })()))(Data_Function.flip(Data_Either.note)(Ctl_Internal_Deserialization_FromBytes.fromBytes(Ctl_Internal_Deserialization_FromBytes.fromBytesGeneralTransacti)(v1.metadata)))(new Data_Argonaut_Decode_Error.TypeMismatch("Hexadecimal encoded Metadata"));
          }))(function (metadatas$prime) {
              return Control_Applicative.pure(Data_Either.applicativeEither)(Data_Map_Internal.unions(Ctl_Internal_Types_TransactionMetadata.ordTransactionMetadatumLa)(Data_Foldable.foldableArray)(metadatas$prime));
          });
      })
  };
  var decodeAesonBlockfrostEval = {
      decodeAeson: function (aeson) {
          var success = Control_Bind.bind(Data_Either.bindEither)(Aeson.decodeAeson(Aeson.decodeAesonRecord(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_QueryM_Ogmios.decodeAesonTxEvaluationR))(Aeson.gDecodeAesonRowNil)({
              reflectSymbol: function () {
                  return "result";
              }
          })()())())(aeson))(function (v) {
              return Control_Applicative.pure(Data_Either.applicativeEither)(new Data_Either.Right(v.result));
          });
          var failure = Control_Applicative.pure(Data_Either.applicativeEither)(new Data_Either.Left(aeson));
          return Data_Functor.mapFlipped(Data_Either.functorEither)(Control_Alt.alt(Data_Either.altEither)(success)(failure))(BlockfrostEvaluateTx.create);
      }
  };
  var decodeAesonBlockfrostEraS = {
      decodeAeson: (function () {
          var decodeEraSummaryParameters = function (obj) {
              return Control_Bind.bind(Data_Either.bindEither)(Aeson.getField(Ctl_Internal_Types_EraSummaries.decodeAesonEpochLength)(obj)("epoch_length"))(function (epochLength) {
                  return Control_Bind.bind(Data_Either.bindEither)(Data_Functor.map(Data_Either.functorEither)(Data_Functor.map(Data_Functor.functorFn)(Data_Newtype.wrap())(Data_Semiring.mul(Data_Semiring.semiringNumber)(1000.0)))(Aeson.getField(Aeson.decodeAesonNumber)(obj)("slot_length")))(function (slotLength) {
                      return Control_Bind.bind(Data_Either.bindEither)(Aeson.getField(Ctl_Internal_Types_EraSummaries.decodeAesonSafeZone)(obj)("safe_zone"))(function (safeZone) {
                          return Control_Applicative.pure(Data_Either.applicativeEither)(Data_Newtype.wrap()({
                              epochLength: epochLength,
                              slotLength: slotLength,
                              safeZone: safeZone
                          }));
                      });
                  });
              });
          };
          var decodeEraSummary = Ctl_Internal_Service_Helpers.aesonObject(function (obj) {
              return Control_Bind.bind(Data_Either.bindEither)(Aeson.getField(Ctl_Internal_Types_EraSummaries.decodeAesonEraSummaryTime)(obj)("start"))(function (start) {
                  return Control_Bind.bind(Data_Either.bindEither)(Aeson.getField(Aeson.decodeAesonMaybe(Ctl_Internal_Types_EraSummaries.decodeAesonEraSummaryTime))(obj)("end"))(function (end) {
                      return Control_Bind.bind(Data_Either.bindEither)(Control_Bind.bindFlipped(Data_Either.bindEither)(decodeEraSummaryParameters)(Aeson.getField(Aeson.decodeAesonObject(Aeson.decodeAesonAeson))(obj)("parameters")))(function (parameters) {
                          return Control_Applicative.pure(Data_Either.applicativeEither)(Data_Newtype.wrap()({
                              start: start,
                              end: end,
                              parameters: parameters
                          }));
                      });
                  });
              });
          });
          return Ctl_Internal_Service_Helpers.aesonArray((function () {
              var $739 = Data_Functor.map(Data_Either.functorEither)((function () {
                  var $742 = Data_Newtype.wrap();
                  var $743 = Data_Newtype.wrap();
                  return function ($744) {
                      return $742($743($744));
                  };
              })());
              var $740 = Data_Traversable.traverse(Data_Traversable.traversableArray)(Data_Either.applicativeEither)(decodeEraSummary);
              return function ($741) {
                  return $739($740($741));
              };
          })());
      })()
  };
  var decodeAesonBlockfrostDatu = {
      decodeAeson: function (aeson) {
          if (Aeson.isNull(aeson)) {
              return Control_Applicative.pure(Data_Either.applicativeEither)(Data_Maybe.Nothing.value);
          };
          if (Data_Boolean.otherwise) {
              return Control_Bind.bind(Data_Either.bindEither)(Ctl_Internal_Service_Helpers.aesonObject(Data_Function.flip(Aeson.getFieldOptional(Ctl_Internal_Types_CborBytes.decodeAesonCborBytes))("cbor"))(aeson))(function (cbor) {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(Control_Bind.bindFlipped(Data_Maybe.bindMaybe)(Ctl_Internal_Deserialization_PlutusData.deserializeData(Ctl_Internal_Types_Datum.fromDataDatum))(cbor));
              });
          };
          throw new Error("Failed pattern match at Ctl.Internal.Service.Blockfrost (line 1145, column 1 - line 1150, column 58): " + [ aeson.constructor.name ]);
      }
  };
  var decodeAesonBlockfrostCurr = {
      decodeAeson: function (a) {
          return Data_Functor.mapFlipped(Data_Either.functorEither)(Aeson.decodeAeson(Aeson.decodeAesonRecord(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Aeson.decodeAesonBigInt))(Aeson.gDecodeAesonRowNil)({
              reflectSymbol: function () {
                  return "epoch";
              }
          })()())())(a))(function (v) {
              return Data_Newtype.wrap()(v.epoch);
          });
      }
  };
  var decodeAesonBlockfrostChai = {
      decodeAeson: Ctl_Internal_Service_Helpers.aesonObject(function (obj) {
          return Control_Bind.bind(Data_Either.bindEither)(Data_Functor.map(Data_Either.functorEither)(Data_Newtype.wrap())(Aeson.getField(Aeson.decodeAesonString)(obj)("hash")))(function (blockHeaderHash) {
              return Data_Functor.mapFlipped(Data_Either.functorEither)(Aeson["getFieldOptional'"](Ctl_Internal_Serialization_Address.decodeAesonSlot)(obj)("slot"))((function () {
                  var $745 = Data_Newtype.wrap();
                  var $746 = Data_Maybe.maybe(Ctl_Internal_Types_Chain.TipAtGenesis.value)((function () {
                      var $748 = Data_Newtype.wrap();
                      return function ($749) {
                          return Ctl_Internal_Types_Chain.Tip.create($748((function (v) {
                              return {
                                  blockHeaderHash: blockHeaderHash,
                                  slot: v
                              };
                          })($749)));
                      };
                  })());
                  return function ($747) {
                      return $745($746($747));
                  };
              })());
          });
      })
  };
  var decodeAesonBlockfrostCbor = {
      decodeAeson: function (aeson) {
          if (Aeson.isNull(aeson)) {
              return Control_Applicative.pure(Data_Either.applicativeEither)(Data_Maybe.Nothing.value);
          };
          if (Data_Boolean.otherwise) {
              return Control_Bind.bind(Data_Either.bindEither)(Ctl_Internal_Service_Helpers.aesonObject(Data_Function.flip(Aeson.getFieldOptional(Ctl_Internal_Types_ByteArray.decodeAesonByteArray))("cbor"))(aeson))(function (cbor) {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(cbor);
              });
          };
          throw new Error("Failed pattern match at Ctl.Internal.Service.Blockfrost (line 1123, column 1 - line 1128, column 35): " + [ aeson.constructor.name ]);
      }
  };
  var withOnRawPostResponseHook = function (endpoint) {
      return function (mediaType) {
          return function (requestBody) {
              return function (result) {
                  return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Logger_Trans.bindLoggerT(Control_Monad_Reader_Trans.monadReaderT(Effect_Aff.monadAff)))(Data_Foldable.for_(Control_Monad_Logger_Trans.applicativeLoggerT(Control_Monad_Reader_Trans.monadReaderT(Effect_Aff.monadAff)))(Data_Foldable.foldableEither)(result)(function (v) {
                      var data_ = {
                          endpoint: endpoint,
                          mediaType: mediaType,
                          requestBody: requestBody,
                          rawResponse: v.body
                      };
                      return Control_Bind.bind(Control_Monad_Logger_Trans.bindLoggerT(Control_Monad_Reader_Trans.monadReaderT(Effect_Aff.monadAff)))(Control_Monad_Reader_Class.asks(Control_Monad_Logger_Trans.monadAskLoggerT(Control_Monad_Reader_Trans.monadAskReaderT(Effect_Aff.monadAff)))(function (v1) {
                          return v1.onBlockfrostRawPostResponse;
                      }))(function (onRawPostResponse) {
                          return Effect_Aff_Class.liftAff(Control_Monad_Logger_Trans.monadAffLoggerT(Effect_Aff_Class.monadAffReader(Effect_Aff_Class.monadAffAff)))(Data_Foldable.for_(Effect_Aff.applicativeAff)(Data_Foldable.foldableMaybe)(onRawPostResponse)(function (f) {
                              return f(data_);
                          }));
                      });
                  }))(function () {
                      return Control_Applicative.pure(Control_Monad_Logger_Trans.applicativeLoggerT(Control_Monad_Reader_Trans.monadReaderT(Effect_Aff.monadAff)))(result);
                  });
              };
          };
      };
  };
  var withOnRawGetResponseHook = function (endpoint) {
      return function (result) {
          return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Logger_Trans.bindLoggerT(Control_Monad_Reader_Trans.monadReaderT(Effect_Aff.monadAff)))(Data_Foldable.for_(Control_Monad_Logger_Trans.applicativeLoggerT(Control_Monad_Reader_Trans.monadReaderT(Effect_Aff.monadAff)))(Data_Foldable.foldableEither)(result)(function (v) {
              return Control_Bind.bind(Control_Monad_Logger_Trans.bindLoggerT(Control_Monad_Reader_Trans.monadReaderT(Effect_Aff.monadAff)))(Control_Monad_Reader_Class.asks(Control_Monad_Logger_Trans.monadAskLoggerT(Control_Monad_Reader_Trans.monadAskReaderT(Effect_Aff.monadAff)))(function (v1) {
                  return v1.onBlockfrostRawGetResponse;
              }))(function (onRawGetResponse) {
                  return Effect_Aff_Class.liftAff(Control_Monad_Logger_Trans.monadAffLoggerT(Effect_Aff_Class.monadAffReader(Effect_Aff_Class.monadAffAff)))(Data_Foldable.for_(Effect_Aff.applicativeAff)(Data_Foldable.foldableMaybe)(onRawGetResponse)(function (f) {
                      return f(endpoint)(v.body);
                  }));
              });
          }))(function () {
              return Control_Applicative.pure(Control_Monad_Logger_Trans.applicativeLoggerT(Control_Monad_Reader_Trans.monadReaderT(Effect_Aff.monadAff)))(result);
          });
      };
  };
  var unwrapBlockfrostProtocolParameters = Data_Newtype.unwrap();
  var unwrapBlockfrostNativeScript = Data_Newtype.unwrap();
  var unwrapBlockfrostMetadata = function (v) {
      return v;
  };
  var unwrapBlockfrostEvaluateTx = function (v) {
      return v.value0;
  };
  var unwrapBlockfrostDatum = Data_Newtype.unwrap();
  var unwrapBlockfrostCurrentEpoch = Data_Newtype.unwrap();
  var unwrapBlockfrostCbor = Data_Newtype.unwrap();
  var toFraction$prime = function (bn) {
      var v = Data_BigNumber.toFraction(Aeson.unpackFinite(bn))(Data_BigNumber.fromNumber(Data_Number.infinity));
      return new Data_Tuple.Tuple(Data_BigNumber.toString(v.value0), Data_BigNumber.toString(v.value1));
  };
  var scriptLanguage = (function () {
      var $750 = Data_Newtype.unwrap();
      return function ($751) {
          return (function (v) {
              return v.language;
          })($750($751));
      };
  })();
  var mkServiceParams = function (onBlockfrostRawGetResponse) {
      return function (onBlockfrostRawPostResponse) {
          return function (backend) {
              return {
                  blockfrostConfig: backend.blockfrostConfig,
                  blockfrostApiKey: backend.blockfrostApiKey,
                  onBlockfrostRawGetResponse: onBlockfrostRawGetResponse,
                  onBlockfrostRawPostResponse: onBlockfrostRawPostResponse
              };
          };
      };
  };
  var runBlockfrostServiceM = function (logger) {
      return function (backend) {
          var $752 = Data_Function.flip(Control_Monad_Reader_Trans.runReaderT)(mkServiceParams(Data_Maybe.Nothing.value)(Data_Maybe.Nothing.value)(backend));
          var $753 = Data_Function.flip(Control_Monad_Logger_Trans.runLoggerT)((function () {
              var $755 = Effect_Aff_Class.liftAff(Effect_Aff_Class.monadAffReader(Effect_Aff_Class.monadAffAff));
              return function ($756) {
                  return $755(logger($756));
              };
          })());
          return function ($754) {
              return $752($753($754));
          };
      };
  };
  var handleBlockfrostResponse = function (dictDecodeAeson) {
      return function (v) {
          if (v instanceof Data_Either.Left) {
              return new Data_Either.Left(new Ctl_Internal_Service_Error.ClientHttpError(v.value0));
          };
          if (v instanceof Data_Either.Right) {
              if (v.value0.status < 200 || v.value0.status > 299) {
                  return Control_Bind.bind(Data_Either.bindEither)(Data_Bifunctor.lmap(Data_Bifunctor.bifunctorEither)(Ctl_Internal_Service_Error.ClientDecodeJsonError.create(v.value0.body))(Control_Bind.composeKleisliFlipped(Data_Either.bindEither)(Aeson.decodeAeson(Ctl_Internal_Service_Error.decodeAesonBlockfrostErro))(Aeson.parseJsonStringToAeson)(v.value0.body)))(function (blockfrostError) {
                      return new Data_Either.Left(new Ctl_Internal_Service_Error.ClientHttpResponseError(Data_Newtype.wrap()(v.value0.status), new Ctl_Internal_Service_Error.ServiceBlockfrostError(blockfrostError)));
                  });
              };
              if (Data_Boolean.otherwise) {
                  return Data_Bifunctor.lmap(Data_Bifunctor.bifunctorEither)(Ctl_Internal_Service_Error.ClientDecodeJsonError.create(v.value0.body))(Control_Bind.composeKleisliFlipped(Data_Either.bindEither)(Aeson.decodeAeson(dictDecodeAeson))(Aeson.parseJsonStringToAeson)(v.value0.body));
              };
          };
          throw new Error("Failed pattern match at Ctl.Internal.Service.Blockfrost (line 494, column 1 - line 498, column 31): " + [ v.constructor.name ]);
      };
  };
  var handle404AsNothing = function (v) {
      if (v instanceof Data_Either.Left && (v.value0 instanceof Ctl_Internal_Service_Error.ClientHttpResponseError && v.value0.value0 === 404)) {
          return new Data_Either.Right(Data_Maybe.Nothing.value);
      };
      return v;
  };
  var handle404AsMempty = function (dictMonoid) {
      var $762 = Data_Functor.map(Data_Either.functorEither)(Data_Maybe.fromMaybe(Data_Monoid.mempty(dictMonoid)));
      return function ($763) {
          return $762(handle404AsNothing($763));
      };
  };
  var blockfrostStakeCredentialToBech32 = function (v) {
      if (v.value1 instanceof Data_Either.Left) {
          return Ctl_Internal_Types_RewardAddress.rewardAddressToBech32(Ctl_Internal_Types_RewardAddress.stakePubKeyHashRewardAddress(v.value0)(v.value1.value0));
      };
      if (v.value1 instanceof Data_Either.Right) {
          return Ctl_Internal_Types_RewardAddress.rewardAddressToBech32(Ctl_Internal_Types_RewardAddress.stakeValidatorHashRewardAddress(v.value0)(v.value1.value0));
      };
      throw new Error("Failed pattern match at Ctl.Internal.Service.Blockfrost (line 1210, column 37 - line 1216, column 25): " + [ v.constructor.name ]);
  };
  var realizeEndpoint = function (endpoint) {
      if (endpoint instanceof BlockchainGenesis) {
          return "/genesis";
      };
      if (endpoint instanceof DatumCbor) {
          return "/scripts/datum/" + (Ctl_Internal_Types_ByteArray.byteArrayToHex(endpoint.value0) + "/cbor");
      };
      if (endpoint instanceof EraSummaries) {
          return "/network/eras";
      };
      if (endpoint instanceof EvaluateTransaction) {
          return "/utils/txs/evaluate";
      };
      if (endpoint instanceof LatestBlock) {
          return "/blocks/latest";
      };
      if (endpoint instanceof LatestEpoch) {
          return "/epochs/latest";
      };
      if (endpoint instanceof LatestProtocolParameters) {
          return "/epochs/latest/parameters";
      };
      if (endpoint instanceof NativeScriptByHash) {
          return "/scripts/" + (Ctl_Internal_Types_RawBytes.rawBytesToHex(Ctl_Internal_Serialization_Hash.scriptHashToBytes(endpoint.value0)) + "/json");
      };
      if (endpoint instanceof PlutusScriptCborByHash) {
          return "/scripts/" + (Ctl_Internal_Types_RawBytes.rawBytesToHex(Ctl_Internal_Serialization_Hash.scriptHashToBytes(endpoint.value0)) + "/cbor");
      };
      if (endpoint instanceof ScriptInfo) {
          return "/scripts/" + Ctl_Internal_Types_RawBytes.rawBytesToHex(Ctl_Internal_Serialization_Hash.scriptHashToBytes(endpoint.value0));
      };
      if (endpoint instanceof SubmitTransaction) {
          return "/tx/submit";
      };
      if (endpoint instanceof Transaction) {
          return "/txs/" + Ctl_Internal_Types_ByteArray.byteArrayToHex(Data_Newtype.unwrap()(endpoint.value0));
      };
      if (endpoint instanceof TransactionMetadata) {
          return "/txs/" + (Ctl_Internal_Types_ByteArray.byteArrayToHex(Data_Newtype.unwrap()(endpoint.value0)) + "/metadata/cbor");
      };
      if (endpoint instanceof UtxosAtAddress) {
          return "/addresses/" + (Ctl_Internal_Serialization_Address.addressBech32(endpoint.value0) + ("/utxos?page=" + (Data_Show.show(Data_Show.showInt)(endpoint.value1) + ("&count=" + Data_Show.show(Data_Show.showInt)(endpoint.value2)))));
      };
      if (endpoint instanceof UtxosOfTransaction) {
          return "/txs/" + (Ctl_Internal_Types_ByteArray.byteArrayToHex(Data_Newtype.unwrap()(endpoint.value0)) + "/utxos");
      };
      if (endpoint instanceof PoolIds) {
          return "/pools?page=" + (Data_Show.show(Data_Show.showInt)(endpoint.value0) + ("&count=" + (Data_Show.show(Data_Show.showInt)(endpoint.value1) + "&order=asc")));
      };
      if (endpoint instanceof PoolParameters) {
          return "/pool/" + Ctl_Internal_Cardano_Types_Transaction.poolPubKeyHashToBech32(endpoint.value0);
      };
      if (endpoint instanceof DelegationsAndRewards) {
          return "/accounts/" + blockfrostStakeCredentialToBech32(endpoint.value0);
      };
      throw new Error("Failed pattern match at Ctl.Internal.Service.Blockfrost (line 356, column 3 - line 393, column 67): " + [ endpoint.constructor.name ]);
  };
  var withRequestResponseTracing = function (requestData) {
      return function (performRequest) {
          var trace = function (timestamp) {
              return function (message) {
                  return Control_Monad_Logger_Class.log(Control_Monad_Logger_Trans.monadLoggerLoggerT(Control_Monad_Reader_Trans.monadEffectReader(Effect_Aff.monadEffectAff)))({
                      level: Data_Log_Level.Trace.value,
                      message: message,
                      tags: Data_Map_Internal.empty,
                      timestamp: timestamp
                  });
              };
          };
          var requestMessage = (function () {
              if (requestData instanceof BlockfrostGetRequestData) {
                  return Data_Show.show(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
                      reflectSymbol: function () {
                          return "endpoint";
                      }
                  })(Data_Show.showRecordFieldsCons({
                      reflectSymbol: function () {
                          return "url";
                      }
                  })(Data_Show.showRecordFieldsNil)(Data_Show.showString))(showBlockfrostEndpoint)))({
                      endpoint: requestData.value0,
                      url: realizeEndpoint(requestData.value0)
                  });
              };
              if (requestData instanceof BlockfrostPostRequestData) {
                  return Data_Show.show(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
                      reflectSymbol: function () {
                          return "endpoint";
                      }
                  })(Data_Show.showRecordFieldsCons({
                      reflectSymbol: function () {
                          return "mediaType";
                      }
                  })(Data_Show.showRecordFieldsCons({
                      reflectSymbol: function () {
                          return "url";
                      }
                  })(Data_Show.showRecordFieldsNil)(Data_Show.showString))(Data_MediaType.showMediaType))(showBlockfrostEndpoint)))({
                      endpoint: requestData.value0,
                      mediaType: requestData.value1,
                      url: realizeEndpoint(requestData.value0)
                  });
              };
              throw new Error("Failed pattern match at Ctl.Internal.Service.Blockfrost (line 483, column 20 - line 488, column 80): " + [ requestData.constructor.name ]);
          })();
          return Control_Bind.bind(Control_Monad_Logger_Trans.bindLoggerT(Control_Monad_Reader_Trans.monadReaderT(Effect_Aff.monadAff)))(Effect_Class.liftEffect(Control_Monad_Logger_Trans.monadEffectLoggerT(Control_Monad_Reader_Trans.monadEffectReader(Effect_Aff.monadEffectAff)))(Data_JSDate.now))(function (timestamp) {
              return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Logger_Trans.bindLoggerT(Control_Monad_Reader_Trans.monadReaderT(Effect_Aff.monadAff)))(trace(timestamp)(requestMessage))(function () {
                  return Control_Bind.bind(Control_Monad_Logger_Trans.bindLoggerT(Control_Monad_Reader_Trans.monadReaderT(Effect_Aff.monadAff)))(performRequest)(function (response) {
                      return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Logger_Trans.bindLoggerT(Control_Monad_Reader_Trans.monadReaderT(Effect_Aff.monadAff)))(trace(timestamp)(Data_Either.either(Affjax.printError)(Data_Show.show(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
                          reflectSymbol: function () {
                              return "body";
                          }
                      })(Data_Show.showRecordFieldsCons({
                          reflectSymbol: function () {
                              return "headers";
                          }
                      })(Data_Show.showRecordFieldsCons({
                          reflectSymbol: function () {
                              return "status";
                          }
                      })(Data_Show.showRecordFieldsCons({
                          reflectSymbol: function () {
                              return "statusText";
                          }
                      })(Data_Show.showRecordFieldsNil)(Data_Show.showString))(Affjax_StatusCode.showStatusCode))(Data_Show.showArray(Affjax_ResponseHeader.showResponseHeader)))(Data_Show.showString))))(response)))(function () {
                          return Control_Applicative.pure(Control_Monad_Logger_Trans.applicativeLoggerT(Control_Monad_Reader_Trans.monadReaderT(Effect_Aff.monadAff)))(response);
                      });
                  });
              });
          });
      };
  };
  var blockfrostPostRequest = function (endpoint) {
      return function (mediaType) {
          return function (mbContent) {
              return withRequestResponseTracing(new BlockfrostPostRequestData(endpoint, mediaType, mbContent))(Control_Bind.bind(Control_Monad_Logger_Trans.bindLoggerT(Control_Monad_Reader_Trans.monadReaderT(Effect_Aff.monadAff)))(Control_Monad_Reader_Class.ask(Control_Monad_Logger_Trans.monadAskLoggerT(Control_Monad_Reader_Trans.monadAskReaderT(Effect_Aff.monadAff))))(function (params) {
                  return Control_Bind.bindFlipped(Control_Monad_Logger_Trans.bindLoggerT(Control_Monad_Reader_Trans.monadReaderT(Effect_Aff.monadAff)))(withOnRawPostResponseHook(endpoint)(mediaType)(mbContent))(Effect_Aff_Class.liftAff(Control_Monad_Logger_Trans.monadAffLoggerT(Effect_Aff_Class.monadAffReader(Effect_Aff_Class.monadAffAff)))(Affjax.request({
                      method: new Data_Either.Left(Data_HTTP_Method.POST.value),
                      url: Ctl_Internal_ServerConfig.mkHttpUrl(params.blockfrostConfig) + realizeEndpoint(endpoint),
                      headers: Data_Semigroup.append(Data_Semigroup.semigroupArray)([ new Affjax_RequestHeader.ContentType(mediaType) ])(Data_Maybe.maybe(Data_Monoid.mempty(Data_Monoid.monoidArray))(function (apiKey) {
                          return [ new Affjax_RequestHeader.RequestHeader("project_id", apiKey) ];
                      })(params.blockfrostApiKey)),
                      content: mbContent,
                      username: Affjax.defaultRequest.username,
                      password: Affjax.defaultRequest.password,
                      withCredentials: Affjax.defaultRequest.withCredentials,
                      responseFormat: Affjax_ResponseFormat.string,
                      timeout: Affjax.defaultRequest.timeout
                  })));
              }));
          };
      };
  };
  var evaluateTx = function (tx) {
      var request = function (cbor) {
          return blockfrostPostRequest(EvaluateTransaction.value)("application/cbor")(new Data_Maybe.Just(Affjax_RequestBody.string(Ctl_Internal_Types_CborBytes.cborBytesToHex(cbor))));
      };
      return Control_Bind.bind(Control_Monad_Logger_Trans.bindLoggerT(Control_Monad_Reader_Trans.monadReaderT(Effect_Aff.monadAff)))(Effect_Class.liftEffect(Control_Monad_Logger_Trans.monadEffectLoggerT(Control_Monad_Reader_Trans.monadEffectReader(Effect_Aff.monadEffectAff)))(Ctl_Internal_Serialization.convertTransaction(tx)))(function (cslTx) {
          return Control_Bind.bind(Control_Monad_Logger_Trans.bindLoggerT(Control_Monad_Reader_Trans.monadReaderT(Effect_Aff.monadAff)))(Data_Functor.map(Control_Monad_Logger_Trans.functorLoggerT(Control_Monad_Reader_Trans.functorReaderT(Effect_Aff.functorAff)))(handleBlockfrostResponse(decodeAesonBlockfrostEval))(request(Ctl_Internal_Serialization_ToBytes.toBytes()(cslTx))))(function (resp) {
              var v = Data_Functor.map(Data_Either.functorEither)(unwrapBlockfrostEvaluateTx)(resp);
              if (v instanceof Data_Either.Left) {
                  return Control_Monad_Error_Class.throwError(Control_Monad_Logger_Trans.monadThrowLoggerT(Control_Monad_Reader_Trans.monadThrowReaderT(Effect_Aff.monadThrowAff)))(Effect_Exception.error(Data_Show.show(Ctl_Internal_Service_Error.showClientError)(v.value0)));
              };
              if (v instanceof Data_Either.Right && v.value0 instanceof Data_Either.Left) {
                  return Control_Monad_Error_Class.throwError(Control_Monad_Logger_Trans.monadThrowLoggerT(Control_Monad_Reader_Trans.monadThrowReaderT(Effect_Aff.monadThrowAff)))(Effect_Exception.error("Server responded with `fault`: " + Aeson.stringifyAeson(v.value0.value0)));
              };
              if (v instanceof Data_Either.Right && v.value0 instanceof Data_Either.Right) {
                  return Control_Applicative.pure(Control_Monad_Logger_Trans.applicativeLoggerT(Control_Monad_Reader_Trans.monadReaderT(Effect_Aff.monadAff)))(v.value0.value0);
              };
              throw new Error("Failed pattern match at Ctl.Internal.Service.Blockfrost (line 632, column 3 - line 638, column 36): " + [ v.constructor.name ]);
          });
      });
  };
  var submitTx = function (tx) {
      var request = function (cbor) {
          return blockfrostPostRequest(SubmitTransaction.value)("application/cbor")(new Data_Maybe.Just(Affjax_RequestBody.arrayView(Data_Newtype.unwrap()(Data_Newtype.unwrap()(cbor)))));
      };
      return Control_Bind.bind(Control_Monad_Logger_Trans.bindLoggerT(Control_Monad_Reader_Trans.monadReaderT(Effect_Aff.monadAff)))(Effect_Class.liftEffect(Control_Monad_Logger_Trans.monadEffectLoggerT(Control_Monad_Reader_Trans.monadEffectReader(Effect_Aff.monadEffectAff)))(Ctl_Internal_Serialization.convertTransaction(tx)))(function (cslTx) {
          return Data_Functor.map(Control_Monad_Logger_Trans.functorLoggerT(Control_Monad_Reader_Trans.functorReaderT(Effect_Aff.functorAff)))(handleBlockfrostResponse(Ctl_Internal_Types_Transaction.decodeAesonTransactionHas))(request(Ctl_Internal_Serialization_ToBytes.toBytes()(cslTx)));
      });
  };
  var blockfrostGetRequest = function (endpoint) {
      return withRequestResponseTracing(new BlockfrostGetRequestData(endpoint))(Control_Bind.bind(Control_Monad_Logger_Trans.bindLoggerT(Control_Monad_Reader_Trans.monadReaderT(Effect_Aff.monadAff)))(Control_Monad_Reader_Class.ask(Control_Monad_Logger_Trans.monadAskLoggerT(Control_Monad_Reader_Trans.monadAskReaderT(Effect_Aff.monadAff))))(function (params) {
          return Control_Bind.bindFlipped(Control_Monad_Logger_Trans.bindLoggerT(Control_Monad_Reader_Trans.monadReaderT(Effect_Aff.monadAff)))(withOnRawGetResponseHook(endpoint))(Effect_Aff_Class.liftAff(Control_Monad_Logger_Trans.monadAffLoggerT(Effect_Aff_Class.monadAffReader(Effect_Aff_Class.monadAffAff)))(Affjax.request({
              method: new Data_Either.Left(Data_HTTP_Method.GET.value),
              url: Ctl_Internal_ServerConfig.mkHttpUrl(params.blockfrostConfig) + realizeEndpoint(endpoint),
              headers: Data_Maybe.maybe(Data_Monoid.mempty(Data_Monoid.monoidArray))(function (apiKey) {
                  return [ new Affjax_RequestHeader.RequestHeader("project_id", apiKey) ];
              })(params.blockfrostApiKey),
              content: Affjax.defaultRequest.content,
              username: Affjax.defaultRequest.username,
              password: Affjax.defaultRequest.password,
              withCredentials: Affjax.defaultRequest.withCredentials,
              responseFormat: Affjax_ResponseFormat.string,
              timeout: Affjax.defaultRequest.timeout
          })));
      }));
  };
  var doesTxExist = function (txHash) {
      return Control_Bind.bind(Control_Monad_Logger_Trans.bindLoggerT(Control_Monad_Reader_Trans.monadReaderT(Effect_Aff.monadAff)))(blockfrostGetRequest(new Transaction(txHash)))(function (response) {
          return Control_Applicative.pure(Control_Monad_Logger_Trans.applicativeLoggerT(Control_Monad_Reader_Trans.monadReaderT(Effect_Aff.monadAff)))((function () {
              var v = handleBlockfrostResponse(Aeson.decodeAesonAeson)(response);
              if (v instanceof Data_Either.Right) {
                  return new Data_Either.Right(true);
              };
              if (v instanceof Data_Either.Left && (v.value0 instanceof Ctl_Internal_Service_Error.ClientHttpResponseError && v.value0.value0 === 404)) {
                  return new Data_Either.Right(false);
              };
              if (v instanceof Data_Either.Left) {
                  return new Data_Either.Left(v.value0);
              };
              throw new Error("Failed pattern match at Ctl.Internal.Service.Blockfrost (line 657, column 8 - line 660, column 21): " + [ v.constructor.name ]);
          })());
      });
  };
  var getChainTip = Control_Monad_Except_Trans.runExceptT(Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_Logger_Trans.monadLoggerT(Control_Monad_Reader_Trans.monadReaderT(Effect_Aff.monadAff))))(Data_Functor.map(Control_Monad_Logger_Trans.functorLoggerT(Control_Monad_Reader_Trans.functorReaderT(Effect_Aff.functorAff)))(handleBlockfrostResponse(decodeAesonBlockfrostChai))(blockfrostGetRequest(LatestBlock.value)))(function (v) {
      return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Control_Monad_Logger_Trans.monadLoggerT(Control_Monad_Reader_Trans.monadReaderT(Effect_Aff.monadAff))))(Data_Newtype.unwrap()(v));
  }));
  var getCurrentEpoch = Data_Functor.mapFlipped(Control_Monad_Logger_Trans.functorLoggerT(Control_Monad_Reader_Trans.functorReaderT(Effect_Aff.functorAff)))(blockfrostGetRequest(LatestEpoch.value))((function () {
      var $764 = Data_Functor.map(Data_Either.functorEither)(unwrapBlockfrostCurrentEpoch);
      var $765 = handleBlockfrostResponse(decodeAesonBlockfrostCurr);
      return function ($766) {
          return $764($765($766));
      };
  })());
  var getDatumByHash = function (dataHash) {
      return Data_Functor.mapFlipped(Control_Monad_Logger_Trans.functorLoggerT(Control_Monad_Reader_Trans.functorReaderT(Effect_Aff.functorAff)))(blockfrostGetRequest(new DatumCbor(dataHash)))(function (response) {
          return handle404AsNothing(Data_Functor.map(Data_Either.functorEither)(unwrapBlockfrostDatum)(handleBlockfrostResponse(decodeAesonBlockfrostDatu)(response)));
      });
  };
  var getEraSummaries = Control_Monad_Except_Trans.runExceptT(Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_Logger_Trans.monadLoggerT(Control_Monad_Reader_Trans.monadReaderT(Effect_Aff.monadAff))))(Data_Functor.map(Control_Monad_Logger_Trans.functorLoggerT(Control_Monad_Reader_Trans.functorReaderT(Effect_Aff.functorAff)))(handleBlockfrostResponse(decodeAesonBlockfrostEraS))(blockfrostGetRequest(EraSummaries.value)))(function (v) {
      return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Control_Monad_Logger_Trans.monadLoggerT(Control_Monad_Reader_Trans.monadReaderT(Effect_Aff.monadAff))))(Data_Newtype.unwrap()(v));
  }));
  var getPoolIds = (function () {
      var poolsOnPage = function (page) {
          return Control_Monad_Except_Trans.runExceptT(Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_Logger_Trans.monadLoggerT(Control_Monad_Reader_Trans.monadReaderT(Effect_Aff.monadAff))))(Data_Functor.mapFlipped(Control_Monad_Logger_Trans.functorLoggerT(Control_Monad_Reader_Trans.functorReaderT(Effect_Aff.functorAff)))(blockfrostGetRequest(new PoolIds(page, 100)))((function () {
              var $767 = handle404AsMempty(Data_Monoid.monoidArray);
              var $768 = handleBlockfrostResponse(Aeson.decodeAesonMaybe(Aeson.decodeAesonArray(Ctl_Internal_Cardano_Types_Transaction.decodeAesonPoolPubKeyHash)));
              return function ($769) {
                  return $767($768($769));
              };
          })()))(function (poolIds) {
              var $681 = Data_Array.length(poolIds) < 100;
              if ($681) {
                  return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Control_Monad_Logger_Trans.monadLoggerT(Control_Monad_Reader_Trans.monadReaderT(Effect_Aff.monadAff))))(poolIds);
              };
              return Data_Functor.map(Control_Monad_Except_Trans.functorExceptT(Control_Monad_Logger_Trans.functorLoggerT(Control_Monad_Reader_Trans.functorReaderT(Effect_Aff.functorAff))))(Data_Semigroup.append(Data_Semigroup.semigroupArray)(poolIds))(poolsOnPage(page + 1 | 0));
          }));
      };
      return Control_Monad_Except_Trans.runExceptT(poolsOnPage(1));
  })();
  var getPubKeyHashDelegationsAndRewards = function (networkId) {
      return function (stakePubKeyHash) {
          return Control_Monad_Except_Trans.runExceptT(Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_Logger_Trans.monadLoggerT(Control_Monad_Reader_Trans.monadReaderT(Effect_Aff.monadAff))))(Data_Functor.mapFlipped(Control_Monad_Logger_Trans.functorLoggerT(Control_Monad_Reader_Trans.functorReaderT(Effect_Aff.functorAff)))(blockfrostGetRequest(new DelegationsAndRewards(new BlockfrostStakeCredential(networkId, new Data_Either.Left(stakePubKeyHash)))))((function () {
              var $770 = handleBlockfrostResponse(Aeson.decodeAesonMaybe(decodeAesonBlockfrostRewa));
              return function ($771) {
                  return handle404AsNothing($770($771));
              };
          })()))(function (rewards) {
              return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Control_Monad_Logger_Trans.monadLoggerT(Control_Monad_Reader_Trans.monadReaderT(Effect_Aff.monadAff))))(Data_Functor.mapFlipped(Data_Maybe.functorMaybe)(rewards)(function (v) {
                  return {
                      rewards: v.withdrawable_amount,
                      delegate: v.pool_id
                  };
              }));
          }));
      };
  };
  var getScriptInfo = function (scriptHash) {
      return Data_Functor.mapFlipped(Control_Monad_Logger_Trans.functorLoggerT(Control_Monad_Reader_Trans.functorReaderT(Effect_Aff.functorAff)))(blockfrostGetRequest(new ScriptInfo(scriptHash)))(function (response) {
          return handle404AsNothing(handleBlockfrostResponse(Aeson.decodeAesonMaybe(decodeAesonBlockfrostScri1))(response));
      });
  };
  var getScriptByHash = function (scriptHash) {
      var getPlutusScriptCborByHash = Data_Functor.mapFlipped(Control_Monad_Logger_Trans.functorLoggerT(Control_Monad_Reader_Trans.functorReaderT(Effect_Aff.functorAff)))(blockfrostGetRequest(new PlutusScriptCborByHash(scriptHash)))(function (response) {
          return handle404AsNothing(Data_Functor.map(Data_Either.functorEither)(unwrapBlockfrostCbor)(handleBlockfrostResponse(decodeAesonBlockfrostCbor)(response)));
      });
      var getNativeScriptByHash = Data_Functor.mapFlipped(Control_Monad_Logger_Trans.functorLoggerT(Control_Monad_Reader_Trans.functorReaderT(Effect_Aff.functorAff)))(blockfrostGetRequest(new NativeScriptByHash(scriptHash)))(function (response) {
          return Data_Functor.map(Data_Either.functorEither)(Data_Functor.map(Data_Maybe.functorMaybe)(unwrapBlockfrostNativeScript))(handle404AsNothing(handleBlockfrostResponse(Aeson.decodeAesonMaybe(decodeAesonBlockfrostNati))(response)));
      });
      return Control_Monad_Except_Trans.runExceptT(Control_Monad_Maybe_Trans.runMaybeT(Control_Bind.bind(Control_Monad_Maybe_Trans.bindMaybeT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Logger_Trans.monadLoggerT(Control_Monad_Reader_Trans.monadReaderT(Effect_Aff.monadAff)))))(getScriptInfo(scriptHash))(function (scriptInfo) {
          var v = scriptLanguage(scriptInfo);
          if (v instanceof NativeScript) {
              return Data_Functor.map(Control_Monad_Maybe_Trans.functorMaybeT(Control_Monad_Except_Trans.functorExceptT(Control_Monad_Logger_Trans.functorLoggerT(Control_Monad_Reader_Trans.functorReaderT(Effect_Aff.functorAff)))))(Ctl_Internal_Cardano_Types_ScriptRef.NativeScriptRef.create)(getNativeScriptByHash);
          };
          if (v instanceof PlutusV1Script) {
              return Data_Functor.map(Control_Monad_Maybe_Trans.functorMaybeT(Control_Monad_Except_Trans.functorExceptT(Control_Monad_Logger_Trans.functorLoggerT(Control_Monad_Reader_Trans.functorReaderT(Effect_Aff.functorAff)))))(function ($772) {
                  return Ctl_Internal_Cardano_Types_ScriptRef.PlutusScriptRef.create(Ctl_Internal_Types_Scripts.plutusV1Script($772));
              })(getPlutusScriptCborByHash);
          };
          if (v instanceof PlutusV2Script) {
              return Data_Functor.map(Control_Monad_Maybe_Trans.functorMaybeT(Control_Monad_Except_Trans.functorExceptT(Control_Monad_Logger_Trans.functorLoggerT(Control_Monad_Reader_Trans.functorReaderT(Effect_Aff.functorAff)))))(function ($773) {
                  return Ctl_Internal_Cardano_Types_ScriptRef.PlutusScriptRef.create(Ctl_Internal_Types_Scripts.plutusV2Script($773));
              })(getPlutusScriptCborByHash);
          };
          throw new Error("Failed pattern match at Ctl.Internal.Service.Blockfrost (line 578, column 3 - line 587, column 51): " + [ v.constructor.name ]);
      })));
  };
  var resolveBlockfrostTxOutput = function (v) {
      var resolveScriptRef = Control_Monad_Except_Trans.runExceptT(Data_Traversable["for"](Control_Monad_Except_Trans.applicativeExceptT(Control_Monad_Logger_Trans.monadLoggerT(Control_Monad_Reader_Trans.monadReaderT(Effect_Aff.monadAff))))(Data_Traversable.traversableMaybe)(v.scriptHash)(function (scriptHash) {
          return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_Logger_Trans.monadLoggerT(Control_Monad_Reader_Trans.monadReaderT(Effect_Aff.monadAff))))(getScriptByHash(scriptHash))(function (scriptRef) {
              return Data_Function.flip(Control_Monad_Error_Class.liftMaybe(Control_Monad_Except_Trans.monadThrowExceptT(Control_Monad_Logger_Trans.monadLoggerT(Control_Monad_Reader_Trans.monadReaderT(Effect_Aff.monadAff)))))(scriptRef)(new Ctl_Internal_Service_Error.ClientOtherError("Blockfrost: Failed to resolve reference script"));
          });
      }));
      var mkTxOutput = function (scriptRef) {
          return {
              address: v.address,
              amount: v.amount,
              datum: v.datum,
              scriptRef: scriptRef
          };
      };
      return Data_Functor.map(Control_Monad_Logger_Trans.functorLoggerT(Control_Monad_Reader_Trans.functorReaderT(Effect_Aff.functorAff)))(Data_Functor.map(Data_Either.functorEither)(mkTxOutput))(resolveScriptRef);
  };
  var resolveBlockfrostUtxosAtAddress = function (v) {
      return function (logger) {
          var resolve = (function () {
              var $774 = Data_Function.flip(Control_Monad_Logger_Trans.runLoggerT)(logger);
              return function ($775) {
                  return Control_Monad_Except_Trans.ExceptT($774(resolveBlockfrostTxOutput($775)));
              };
          })();
          return Control_Monad_Except_Trans.runExceptT(Data_Functor.map(Control_Monad_Except_Trans.functorExceptT(Control_Monad_Reader_Trans.functorReaderT(Effect_Aff.functorAff)))(Data_Map_Internal.fromFoldable(Ctl_Internal_Types_Transaction.ordTransactionInput)(Data_Foldable.foldableArray))(Control_Parallel.parTraverse(Control_Parallel_Class.monadParExceptT(Control_Parallel_Class.monadParReaderT(Effect_Aff.parallelAff)))(Data_Traversable.traversableArray)(Data_Traversable.traverse(Data_Traversable.traversableTuple)(Control_Monad_Except_Trans.applicativeExceptT(Control_Monad_Reader_Trans.monadReaderT(Effect_Aff.monadAff)))(resolve))(v)));
      };
  };
  var getSystemStart = Control_Monad_Except_Trans.runExceptT(Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_Logger_Trans.monadLoggerT(Control_Monad_Reader_Trans.monadReaderT(Effect_Aff.monadAff))))(Data_Functor.map(Control_Monad_Logger_Trans.functorLoggerT(Control_Monad_Reader_Trans.functorReaderT(Effect_Aff.functorAff)))(handleBlockfrostResponse(decodeAesonBlockfrostSyst))(blockfrostGetRequest(BlockchainGenesis.value)))(function (v) {
      return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Control_Monad_Logger_Trans.monadLoggerT(Control_Monad_Reader_Trans.monadReaderT(Effect_Aff.monadAff))))(Data_Newtype.unwrap()(v));
  }));
  var getTxMetadata = function (txHash) {
      return Control_Bind.bind(Control_Monad_Logger_Trans.bindLoggerT(Control_Monad_Reader_Trans.monadReaderT(Effect_Aff.monadAff)))(blockfrostGetRequest(new TransactionMetadata(txHash)))(function (response) {
          return Control_Applicative.pure(Control_Monad_Logger_Trans.applicativeLoggerT(Control_Monad_Reader_Trans.monadReaderT(Effect_Aff.monadAff)))((function () {
              var v = Data_Functor.map(Data_Either.functorEither)(unwrapBlockfrostMetadata)(handleBlockfrostResponse(decodeAesonBlockfrostMeta)(response));
              if (v instanceof Data_Either.Left && (v.value0 instanceof Ctl_Internal_Service_Error.ClientHttpResponseError && v.value0.value0 === 404)) {
                  return new Data_Either.Left(Ctl_Internal_Contract_QueryHandle_Error.GetTxMetadataTxNotFoundError.value);
              };
              if (v instanceof Data_Either.Left) {
                  return new Data_Either.Left(new Ctl_Internal_Contract_QueryHandle_Error.GetTxMetadataClientError(v.value0));
              };
              if (v instanceof Data_Either.Right) {
                  if (Data_Map_Internal.isEmpty(Data_Newtype.unwrap()(v.value0))) {
                      return new Data_Either.Left(Ctl_Internal_Contract_QueryHandle_Error.GetTxMetadataMetadataEmptyOrMissingError.value);
                  };
                  if (Data_Boolean.otherwise) {
                      return new Data_Either.Right(v.value0);
                  };
              };
              throw new Error("Failed pattern match at Ctl.Internal.Service.Blockfrost (line 671, column 8 - line 679, column 36): " + [ v.constructor.name ]);
          })());
      });
  };
  var getUtxoByOref = function (v) {
      return Control_Monad_Except_Trans.runExceptT(Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_Logger_Trans.monadLoggerT(Control_Monad_Reader_Trans.monadReaderT(Effect_Aff.monadAff))))(Data_Functor.mapFlipped(Control_Monad_Logger_Trans.functorLoggerT(Control_Monad_Reader_Trans.functorReaderT(Effect_Aff.functorAff)))(blockfrostGetRequest(new UtxosOfTransaction(v.transactionId)))((function () {
          var $776 = handle404AsMempty(monoidBlockfrostUtxosOfTr);
          var $777 = handleBlockfrostResponse(Aeson.decodeAesonMaybe(decodeAesonBlockfrostUtxo1));
          return function ($778) {
              return $776($777($778));
          };
      })()))(function (v1) {
          return Data_Traversable.traverse(Data_Traversable.traversableMaybe)(Control_Monad_Except_Trans.applicativeExceptT(Control_Monad_Logger_Trans.monadLoggerT(Control_Monad_Reader_Trans.monadReaderT(Effect_Aff.monadAff))))(function ($779) {
              return Control_Monad_Except_Trans.ExceptT(resolveBlockfrostTxOutput($779));
          })(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Tuple.snd)(Data_Array.find((function () {
              var $780 = Data_Eq.eq(Ctl_Internal_Types_Transaction.eqTransactionInput)(v);
              return function ($781) {
                  return $780(Data_Tuple.fst($781));
              };
          })())(Data_Newtype.unwrap()(v1))));
      }));
  };
  var getValidatorHashDelegationsAndRewards = function (networkId) {
      return function (stakeValidatorHash) {
          return Control_Monad_Except_Trans.runExceptT(Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_Logger_Trans.monadLoggerT(Control_Monad_Reader_Trans.monadReaderT(Effect_Aff.monadAff))))(Data_Functor.mapFlipped(Control_Monad_Logger_Trans.functorLoggerT(Control_Monad_Reader_Trans.functorReaderT(Effect_Aff.functorAff)))(blockfrostGetRequest(new DelegationsAndRewards(new BlockfrostStakeCredential(networkId, new Data_Either.Right(stakeValidatorHash)))))((function () {
              var $782 = handleBlockfrostResponse(Aeson.decodeAesonMaybe(decodeAesonBlockfrostRewa));
              return function ($783) {
                  return handle404AsNothing($782($783));
              };
          })()))(function (rewards) {
              return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Control_Monad_Logger_Trans.monadLoggerT(Control_Monad_Reader_Trans.monadReaderT(Effect_Aff.monadAff))))(Data_Functor.mapFlipped(Data_Maybe.functorMaybe)(rewards)(function (v) {
                  return {
                      rewards: v.withdrawable_amount,
                      delegate: v.pool_id
                  };
              }));
          }));
      };
  };
  var utxosAt = function (address) {
      var utxosAtAddressOnPage = function (page) {
          return Control_Monad_Except_Trans.runExceptT(Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_Logger_Trans.monadLoggerT(Control_Monad_Reader_Trans.monadReaderT(Effect_Aff.monadAff))))(Data_Functor.mapFlipped(Control_Monad_Logger_Trans.functorLoggerT(Control_Monad_Reader_Trans.functorReaderT(Effect_Aff.functorAff)))(blockfrostGetRequest(new UtxosAtAddress(address, page, 100)))((function () {
              var $784 = handle404AsMempty(monoidBlockfrostUtxosAtAd);
              var $785 = handleBlockfrostResponse(Aeson.decodeAesonMaybe(decodeAesonBlockfrostUtxo));
              return function ($786) {
                  return $784($785($786));
              };
          })()))(function (utxos) {
              var v = Data_Array.length(Data_Newtype.unwrap()(utxos)) < 100;
              if (v) {
                  return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Control_Monad_Logger_Trans.monadLoggerT(Control_Monad_Reader_Trans.monadReaderT(Effect_Aff.monadAff))))(utxos);
              };
              if (!v) {
                  return Data_Functor.map(Control_Monad_Except_Trans.functorExceptT(Control_Monad_Logger_Trans.functorLoggerT(Control_Monad_Reader_Trans.functorReaderT(Effect_Aff.functorAff))))(Data_Semigroup.append(semigroupBlockfrostUtxosA)(utxos))(utxosAtAddressOnPage(page + 1 | 0));
              };
              throw new Error("Failed pattern match at Ctl.Internal.Service.Blockfrost (line 544, column 5 - line 546, column 74): " + [ v.constructor.name ]);
          }));
      };
      return Control_Monad_Except_Trans.runExceptT(Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_Logger_Trans.monadLoggerT(Control_Monad_Reader_Trans.monadReaderT(Effect_Aff.monadAff))))(utxosAtAddressOnPage(1))(function ($787) {
          return Control_Monad_Except_Trans.ExceptT(resolveBlockfrostUtxosAtAddress($787));
      }));
  };
  var bigNumberToRational = function (bn) {
      var v = toFraction$prime(bn);
      return Data_Either.note(new Data_Argonaut_Decode_Error.TypeMismatch("Rational"))(Control_Bind.bind(Data_Maybe.bindMaybe)(Data_BigInt.fromString(v.value0))(function (numerator) {
          return Control_Bind.bind(Data_Maybe.bindMaybe)(Data_BigInt.fromString(v.value1))(function (denominator) {
              return Ctl_Internal_Types_Rational.reduce(Ctl_Internal_Types_Rational.rationalComponentBigInt)(numerator)(denominator);
          });
      }));
  };
  var bigNumberToPrice = function (bn) {
      var v = toFraction$prime(bn);
      return Data_Either.note(new Data_Argonaut_Decode_Error.TypeMismatch("Rational"))(Control_Bind.bind(Data_Maybe.bindMaybe)(Ctl_Internal_Types_BigNum.fromString(v.value0))(function (numerator) {
          return Control_Bind.bind(Data_Maybe.bindMaybe)(Ctl_Internal_Types_BigNum.fromString(v.value1))(function (denominator) {
              return Control_Applicative.pure(Data_Maybe.applicativeMaybe)({
                  numerator: numerator,
                  denominator: denominator
              });
          });
      }));
  };
  var decodeAesonBlockfrostProt = {
      decodeAeson: Control_Bind.composeKleisli(Data_Either.bindEither)(Aeson.decodeAeson(Aeson.decodeAesonRecord(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Aeson.decodeAesonFiniteBigNumbe))(Aeson.gDecodeAesonCons(Aeson.decodeAesonFieldMaybe(decodeAesonStringed(Aeson.decodeAesonBigInt)))(Aeson.gDecodeAesonCons(Aeson.decodeAesonFieldMaybe(decodeAesonStringed(Aeson.decodeAesonBigInt)))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Aeson.decodeAesonUInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Aeson.decodeAesonRecord(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Aeson.decodeAesonRecord(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonRowNil)({
          reflectSymbol: function () {
              return "verifyEd25519Signature-memory-arguments";
          }
      })()())({
          reflectSymbol: function () {
              return "verifyEd25519Signature-cpu-arguments-slope";
          }
      })()())({
          reflectSymbol: function () {
              return "verifyEd25519Signature-cpu-arguments-intercept";
          }
      })()())({
          reflectSymbol: function () {
              return "unMapData-memory-arguments";
          }
      })()())({
          reflectSymbol: function () {
              return "unMapData-cpu-arguments";
          }
      })()())({
          reflectSymbol: function () {
              return "unListData-memory-arguments";
          }
      })()())({
          reflectSymbol: function () {
              return "unListData-cpu-arguments";
          }
      })()())({
          reflectSymbol: function () {
              return "unIData-memory-arguments";
          }
      })()())({
          reflectSymbol: function () {
              return "unIData-cpu-arguments";
          }
      })()())({
          reflectSymbol: function () {
              return "unConstrData-memory-arguments";
          }
      })()())({
          reflectSymbol: function () {
              return "unConstrData-cpu-arguments";
          }
      })()())({
          reflectSymbol: function () {
              return "unBData-memory-arguments";
          }
      })()())({
          reflectSymbol: function () {
              return "unBData-cpu-arguments";
          }
      })()())({
          reflectSymbol: function () {
              return "trace-memory-arguments";
          }
      })()())({
          reflectSymbol: function () {
              return "trace-cpu-arguments";
          }
      })()())({
          reflectSymbol: function () {
              return "tailList-memory-arguments";
          }
      })()())({
          reflectSymbol: function () {
              return "tailList-cpu-arguments";
          }
      })()())({
          reflectSymbol: function () {
              return "subtractInteger-memory-arguments-slope";
          }
      })()())({
          reflectSymbol: function () {
              return "subtractInteger-memory-arguments-intercept";
          }
      })()())({
          reflectSymbol: function () {
              return "subtractInteger-cpu-arguments-slope";
          }
      })()())({
          reflectSymbol: function () {
              return "subtractInteger-cpu-arguments-intercept";
          }
      })()())({
          reflectSymbol: function () {
              return "sndPair-memory-arguments";
          }
      })()())({
          reflectSymbol: function () {
              return "sndPair-cpu-arguments";
          }
      })()())({
          reflectSymbol: function () {
              return "sliceByteString-memory-arguments-slope";
          }
      })()())({
          reflectSymbol: function () {
              return "sliceByteString-memory-arguments-intercept";
          }
      })()())({
          reflectSymbol: function () {
              return "sliceByteString-cpu-arguments-slope";
          }
      })()())({
          reflectSymbol: function () {
              return "sliceByteString-cpu-arguments-intercept";
          }
      })()())({
          reflectSymbol: function () {
              return "sha3_256-memory-arguments";
          }
      })()())({
          reflectSymbol: function () {
              return "sha3_256-cpu-arguments-slope";
          }
      })()())({
          reflectSymbol: function () {
              return "sha3_256-cpu-arguments-intercept";
          }
      })()())({
          reflectSymbol: function () {
              return "sha2_256-memory-arguments";
          }
      })()())({
          reflectSymbol: function () {
              return "sha2_256-cpu-arguments-slope";
          }
      })()())({
          reflectSymbol: function () {
              return "sha2_256-cpu-arguments-intercept";
          }
      })()())({
          reflectSymbol: function () {
              return "remainderInteger-memory-arguments-slope";
          }
      })()())({
          reflectSymbol: function () {
              return "remainderInteger-memory-arguments-minimum";
          }
      })()())({
          reflectSymbol: function () {
              return "remainderInteger-memory-arguments-intercept";
          }
      })()())({
          reflectSymbol: function () {
              return "remainderInteger-cpu-arguments-model-arguments-slope";
          }
      })()())({
          reflectSymbol: function () {
              return "remainderInteger-cpu-arguments-model-arguments-intercept";
          }
      })()())({
          reflectSymbol: function () {
              return "remainderInteger-cpu-arguments-constant";
          }
      })()())({
          reflectSymbol: function () {
              return "quotientInteger-memory-arguments-slope";
          }
      })()())({
          reflectSymbol: function () {
              return "quotientInteger-memory-arguments-minimum";
          }
      })()())({
          reflectSymbol: function () {
              return "quotientInteger-memory-arguments-intercept";
          }
      })()())({
          reflectSymbol: function () {
              return "quotientInteger-cpu-arguments-model-arguments-slope";
          }
      })()())({
          reflectSymbol: function () {
              return "quotientInteger-cpu-arguments-model-arguments-intercept";
          }
      })()())({
          reflectSymbol: function () {
              return "quotientInteger-cpu-arguments-constant";
          }
      })()())({
          reflectSymbol: function () {
              return "nullList-memory-arguments";
          }
      })()())({
          reflectSymbol: function () {
              return "nullList-cpu-arguments";
          }
      })()())({
          reflectSymbol: function () {
              return "multiplyInteger-memory-arguments-slope";
          }
      })()())({
          reflectSymbol: function () {
              return "multiplyInteger-memory-arguments-intercept";
          }
      })()())({
          reflectSymbol: function () {
              return "multiplyInteger-cpu-arguments-slope";
          }
      })()())({
          reflectSymbol: function () {
              return "multiplyInteger-cpu-arguments-intercept";
          }
      })()())({
          reflectSymbol: function () {
              return "modInteger-memory-arguments-slope";
          }
      })()())({
          reflectSymbol: function () {
              return "modInteger-memory-arguments-minimum";
          }
      })()())({
          reflectSymbol: function () {
              return "modInteger-memory-arguments-intercept";
          }
      })()())({
          reflectSymbol: function () {
              return "modInteger-cpu-arguments-model-arguments-slope";
          }
      })()())({
          reflectSymbol: function () {
              return "modInteger-cpu-arguments-model-arguments-intercept";
          }
      })()())({
          reflectSymbol: function () {
              return "modInteger-cpu-arguments-constant";
          }
      })()())({
          reflectSymbol: function () {
              return "mkPairData-memory-arguments";
          }
      })()())({
          reflectSymbol: function () {
              return "mkPairData-cpu-arguments";
          }
      })()())({
          reflectSymbol: function () {
              return "mkNilPairData-memory-arguments";
          }
      })()())({
          reflectSymbol: function () {
              return "mkNilPairData-cpu-arguments";
          }
      })()())({
          reflectSymbol: function () {
              return "mkNilData-memory-arguments";
          }
      })()())({
          reflectSymbol: function () {
              return "mkNilData-cpu-arguments";
          }
      })()())({
          reflectSymbol: function () {
              return "mkCons-memory-arguments";
          }
      })()())({
          reflectSymbol: function () {
              return "mkCons-cpu-arguments";
          }
      })()())({
          reflectSymbol: function () {
              return "mapData-memory-arguments";
          }
      })()())({
          reflectSymbol: function () {
              return "mapData-cpu-arguments";
          }
      })()())({
          reflectSymbol: function () {
              return "listData-memory-arguments";
          }
      })()())({
          reflectSymbol: function () {
              return "listData-cpu-arguments";
          }
      })()())({
          reflectSymbol: function () {
              return "lessThanInteger-memory-arguments";
          }
      })()())({
          reflectSymbol: function () {
              return "lessThanInteger-cpu-arguments-slope";
          }
      })()())({
          reflectSymbol: function () {
              return "lessThanInteger-cpu-arguments-intercept";
          }
      })()())({
          reflectSymbol: function () {
              return "lessThanEqualsInteger-memory-arguments";
          }
      })()())({
          reflectSymbol: function () {
              return "lessThanEqualsInteger-cpu-arguments-slope";
          }
      })()())({
          reflectSymbol: function () {
              return "lessThanEqualsInteger-cpu-arguments-intercept";
          }
      })()())({
          reflectSymbol: function () {
              return "lessThanEqualsByteString-memory-arguments";
          }
      })()())({
          reflectSymbol: function () {
              return "lessThanEqualsByteString-cpu-arguments-slope";
          }
      })()())({
          reflectSymbol: function () {
              return "lessThanEqualsByteString-cpu-arguments-intercept";
          }
      })()())({
          reflectSymbol: function () {
              return "lessThanByteString-memory-arguments";
          }
      })()())({
          reflectSymbol: function () {
              return "lessThanByteString-cpu-arguments-slope";
          }
      })()())({
          reflectSymbol: function () {
              return "lessThanByteString-cpu-arguments-intercept";
          }
      })()())({
          reflectSymbol: function () {
              return "lengthOfByteString-memory-arguments";
          }
      })()())({
          reflectSymbol: function () {
              return "lengthOfByteString-cpu-arguments";
          }
      })()())({
          reflectSymbol: function () {
              return "indexByteString-memory-arguments";
          }
      })()())({
          reflectSymbol: function () {
              return "indexByteString-cpu-arguments";
          }
      })()())({
          reflectSymbol: function () {
              return "ifThenElse-memory-arguments";
          }
      })()())({
          reflectSymbol: function () {
              return "ifThenElse-cpu-arguments";
          }
      })()())({
          reflectSymbol: function () {
              return "iData-memory-arguments";
          }
      })()())({
          reflectSymbol: function () {
              return "iData-cpu-arguments";
          }
      })()())({
          reflectSymbol: function () {
              return "headList-memory-arguments";
          }
      })()())({
          reflectSymbol: function () {
              return "headList-cpu-arguments";
          }
      })()())({
          reflectSymbol: function () {
              return "fstPair-memory-arguments";
          }
      })()())({
          reflectSymbol: function () {
              return "fstPair-cpu-arguments";
          }
      })()())({
          reflectSymbol: function () {
              return "equalsString-memory-arguments";
          }
      })()())({
          reflectSymbol: function () {
              return "equalsString-cpu-arguments-slope";
          }
      })()())({
          reflectSymbol: function () {
              return "equalsString-cpu-arguments-intercept";
          }
      })()())({
          reflectSymbol: function () {
              return "equalsString-cpu-arguments-constant";
          }
      })()())({
          reflectSymbol: function () {
              return "equalsInteger-memory-arguments";
          }
      })()())({
          reflectSymbol: function () {
              return "equalsInteger-cpu-arguments-slope";
          }
      })()())({
          reflectSymbol: function () {
              return "equalsInteger-cpu-arguments-intercept";
          }
      })()())({
          reflectSymbol: function () {
              return "equalsData-memory-arguments";
          }
      })()())({
          reflectSymbol: function () {
              return "equalsData-cpu-arguments-slope";
          }
      })()())({
          reflectSymbol: function () {
              return "equalsData-cpu-arguments-intercept";
          }
      })()())({
          reflectSymbol: function () {
              return "equalsByteString-memory-arguments";
          }
      })()())({
          reflectSymbol: function () {
              return "equalsByteString-cpu-arguments-slope";
          }
      })()())({
          reflectSymbol: function () {
              return "equalsByteString-cpu-arguments-intercept";
          }
      })()())({
          reflectSymbol: function () {
              return "equalsByteString-cpu-arguments-constant";
          }
      })()())({
          reflectSymbol: function () {
              return "encodeUtf8-memory-arguments-slope";
          }
      })()())({
          reflectSymbol: function () {
              return "encodeUtf8-memory-arguments-intercept";
          }
      })()())({
          reflectSymbol: function () {
              return "encodeUtf8-cpu-arguments-slope";
          }
      })()())({
          reflectSymbol: function () {
              return "encodeUtf8-cpu-arguments-intercept";
          }
      })()())({
          reflectSymbol: function () {
              return "divideInteger-memory-arguments-slope";
          }
      })()())({
          reflectSymbol: function () {
              return "divideInteger-memory-arguments-minimum";
          }
      })()())({
          reflectSymbol: function () {
              return "divideInteger-memory-arguments-intercept";
          }
      })()())({
          reflectSymbol: function () {
              return "divideInteger-cpu-arguments-model-arguments-slope";
          }
      })()())({
          reflectSymbol: function () {
              return "divideInteger-cpu-arguments-model-arguments-intercept";
          }
      })()())({
          reflectSymbol: function () {
              return "divideInteger-cpu-arguments-constant";
          }
      })()())({
          reflectSymbol: function () {
              return "decodeUtf8-memory-arguments-slope";
          }
      })()())({
          reflectSymbol: function () {
              return "decodeUtf8-memory-arguments-intercept";
          }
      })()())({
          reflectSymbol: function () {
              return "decodeUtf8-cpu-arguments-slope";
          }
      })()())({
          reflectSymbol: function () {
              return "decodeUtf8-cpu-arguments-intercept";
          }
      })()())({
          reflectSymbol: function () {
              return "constrData-memory-arguments";
          }
      })()())({
          reflectSymbol: function () {
              return "constrData-cpu-arguments";
          }
      })()())({
          reflectSymbol: function () {
              return "consByteString-memory-arguments-slope";
          }
      })()())({
          reflectSymbol: function () {
              return "consByteString-memory-arguments-intercept";
          }
      })()())({
          reflectSymbol: function () {
              return "consByteString-cpu-arguments-slope";
          }
      })()())({
          reflectSymbol: function () {
              return "consByteString-cpu-arguments-intercept";
          }
      })()())({
          reflectSymbol: function () {
              return "chooseUnit-memory-arguments";
          }
      })()())({
          reflectSymbol: function () {
              return "chooseUnit-cpu-arguments";
          }
      })()())({
          reflectSymbol: function () {
              return "chooseList-memory-arguments";
          }
      })()())({
          reflectSymbol: function () {
              return "chooseList-cpu-arguments";
          }
      })()())({
          reflectSymbol: function () {
              return "chooseData-memory-arguments";
          }
      })()())({
          reflectSymbol: function () {
              return "chooseData-cpu-arguments";
          }
      })()())({
          reflectSymbol: function () {
              return "cekVarCost-exBudgetMemory";
          }
      })()())({
          reflectSymbol: function () {
              return "cekVarCost-exBudgetCPU";
          }
      })()())({
          reflectSymbol: function () {
              return "cekStartupCost-exBudgetMemory";
          }
      })()())({
          reflectSymbol: function () {
              return "cekStartupCost-exBudgetCPU";
          }
      })()())({
          reflectSymbol: function () {
              return "cekLamCost-exBudgetMemory";
          }
      })()())({
          reflectSymbol: function () {
              return "cekLamCost-exBudgetCPU";
          }
      })()())({
          reflectSymbol: function () {
              return "cekForceCost-exBudgetMemory";
          }
      })()())({
          reflectSymbol: function () {
              return "cekForceCost-exBudgetCPU";
          }
      })()())({
          reflectSymbol: function () {
              return "cekDelayCost-exBudgetMemory";
          }
      })()())({
          reflectSymbol: function () {
              return "cekDelayCost-exBudgetCPU";
          }
      })()())({
          reflectSymbol: function () {
              return "cekConstCost-exBudgetMemory";
          }
      })()())({
          reflectSymbol: function () {
              return "cekConstCost-exBudgetCPU";
          }
      })()())({
          reflectSymbol: function () {
              return "cekBuiltinCost-exBudgetMemory";
          }
      })()())({
          reflectSymbol: function () {
              return "cekBuiltinCost-exBudgetCPU";
          }
      })()())({
          reflectSymbol: function () {
              return "cekApplyCost-exBudgetMemory";
          }
      })()())({
          reflectSymbol: function () {
              return "cekApplyCost-exBudgetCPU";
          }
      })()())({
          reflectSymbol: function () {
              return "blake2b_256-memory-arguments";
          }
      })()())({
          reflectSymbol: function () {
              return "blake2b_256-cpu-arguments-slope";
          }
      })()())({
          reflectSymbol: function () {
              return "blake2b_256-cpu-arguments-intercept";
          }
      })()())({
          reflectSymbol: function () {
              return "bData-memory-arguments";
          }
      })()())({
          reflectSymbol: function () {
              return "bData-cpu-arguments";
          }
      })()())({
          reflectSymbol: function () {
              return "appendString-memory-arguments-slope";
          }
      })()())({
          reflectSymbol: function () {
              return "appendString-memory-arguments-intercept";
          }
      })()())({
          reflectSymbol: function () {
              return "appendString-cpu-arguments-slope";
          }
      })()())({
          reflectSymbol: function () {
              return "appendString-cpu-arguments-intercept";
          }
      })()())({
          reflectSymbol: function () {
              return "appendByteString-memory-arguments-slope";
          }
      })()())({
          reflectSymbol: function () {
              return "appendByteString-memory-arguments-intercept";
          }
      })()())({
          reflectSymbol: function () {
              return "appendByteString-cpu-arguments-slope";
          }
      })()())({
          reflectSymbol: function () {
              return "appendByteString-cpu-arguments-intercept";
          }
      })()())({
          reflectSymbol: function () {
              return "addInteger-memory-arguments-slope";
          }
      })()())({
          reflectSymbol: function () {
              return "addInteger-memory-arguments-intercept";
          }
      })()())({
          reflectSymbol: function () {
              return "addInteger-cpu-arguments-slope";
          }
      })()())({
          reflectSymbol: function () {
              return "addInteger-cpu-arguments-intercept";
          }
      })()())()))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Aeson.decodeAesonRecord(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Ctl_Internal_Types_Int.decodeAesonInt))(Aeson.gDecodeAesonRowNil)({
          reflectSymbol: function () {
              return "verifySchnorrSecp256k1Signature-memory-arguments";
          }
      })()())({
          reflectSymbol: function () {
              return "verifySchnorrSecp256k1Signature-cpu-arguments-slope";
          }
      })()())({
          reflectSymbol: function () {
              return "verifySchnorrSecp256k1Signature-cpu-arguments-intercept";
          }
      })()())({
          reflectSymbol: function () {
              return "verifyEd25519Signature-memory-arguments";
          }
      })()())({
          reflectSymbol: function () {
              return "verifyEd25519Signature-cpu-arguments-slope";
          }
      })()())({
          reflectSymbol: function () {
              return "verifyEd25519Signature-cpu-arguments-intercept";
          }
      })()())({
          reflectSymbol: function () {
              return "verifyEcdsaSecp256k1Signature-memory-arguments";
          }
      })()())({
          reflectSymbol: function () {
              return "verifyEcdsaSecp256k1Signature-cpu-arguments";
          }
      })()())({
          reflectSymbol: function () {
              return "unMapData-memory-arguments";
          }
      })()())({
          reflectSymbol: function () {
              return "unMapData-cpu-arguments";
          }
      })()())({
          reflectSymbol: function () {
              return "unListData-memory-arguments";
          }
      })()())({
          reflectSymbol: function () {
              return "unListData-cpu-arguments";
          }
      })()())({
          reflectSymbol: function () {
              return "unIData-memory-arguments";
          }
      })()())({
          reflectSymbol: function () {
              return "unIData-cpu-arguments";
          }
      })()())({
          reflectSymbol: function () {
              return "unConstrData-memory-arguments";
          }
      })()())({
          reflectSymbol: function () {
              return "unConstrData-cpu-arguments";
          }
      })()())({
          reflectSymbol: function () {
              return "unBData-memory-arguments";
          }
      })()())({
          reflectSymbol: function () {
              return "unBData-cpu-arguments";
          }
      })()())({
          reflectSymbol: function () {
              return "trace-memory-arguments";
          }
      })()())({
          reflectSymbol: function () {
              return "trace-cpu-arguments";
          }
      })()())({
          reflectSymbol: function () {
              return "tailList-memory-arguments";
          }
      })()())({
          reflectSymbol: function () {
              return "tailList-cpu-arguments";
          }
      })()())({
          reflectSymbol: function () {
              return "subtractInteger-memory-arguments-slope";
          }
      })()())({
          reflectSymbol: function () {
              return "subtractInteger-memory-arguments-intercept";
          }
      })()())({
          reflectSymbol: function () {
              return "subtractInteger-cpu-arguments-slope";
          }
      })()())({
          reflectSymbol: function () {
              return "subtractInteger-cpu-arguments-intercept";
          }
      })()())({
          reflectSymbol: function () {
              return "sndPair-memory-arguments";
          }
      })()())({
          reflectSymbol: function () {
              return "sndPair-cpu-arguments";
          }
      })()())({
          reflectSymbol: function () {
              return "sliceByteString-memory-arguments-slope";
          }
      })()())({
          reflectSymbol: function () {
              return "sliceByteString-memory-arguments-intercept";
          }
      })()())({
          reflectSymbol: function () {
              return "sliceByteString-cpu-arguments-slope";
          }
      })()())({
          reflectSymbol: function () {
              return "sliceByteString-cpu-arguments-intercept";
          }
      })()())({
          reflectSymbol: function () {
              return "sha3_256-memory-arguments";
          }
      })()())({
          reflectSymbol: function () {
              return "sha3_256-cpu-arguments-slope";
          }
      })()())({
          reflectSymbol: function () {
              return "sha3_256-cpu-arguments-intercept";
          }
      })()())({
          reflectSymbol: function () {
              return "sha2_256-memory-arguments";
          }
      })()())({
          reflectSymbol: function () {
              return "sha2_256-cpu-arguments-slope";
          }
      })()())({
          reflectSymbol: function () {
              return "sha2_256-cpu-arguments-intercept";
          }
      })()())({
          reflectSymbol: function () {
              return "serialiseData-memory-arguments-slope";
          }
      })()())({
          reflectSymbol: function () {
              return "serialiseData-memory-arguments-intercept";
          }
      })()())({
          reflectSymbol: function () {
              return "serialiseData-cpu-arguments-slope";
          }
      })()())({
          reflectSymbol: function () {
              return "serialiseData-cpu-arguments-intercept";
          }
      })()())({
          reflectSymbol: function () {
              return "remainderInteger-memory-arguments-slope";
          }
      })()())({
          reflectSymbol: function () {
              return "remainderInteger-memory-arguments-minimum";
          }
      })()())({
          reflectSymbol: function () {
              return "remainderInteger-memory-arguments-intercept";
          }
      })()())({
          reflectSymbol: function () {
              return "remainderInteger-cpu-arguments-model-arguments-slope";
          }
      })()())({
          reflectSymbol: function () {
              return "remainderInteger-cpu-arguments-model-arguments-intercept";
          }
      })()())({
          reflectSymbol: function () {
              return "remainderInteger-cpu-arguments-constant";
          }
      })()())({
          reflectSymbol: function () {
              return "quotientInteger-memory-arguments-slope";
          }
      })()())({
          reflectSymbol: function () {
              return "quotientInteger-memory-arguments-minimum";
          }
      })()())({
          reflectSymbol: function () {
              return "quotientInteger-memory-arguments-intercept";
          }
      })()())({
          reflectSymbol: function () {
              return "quotientInteger-cpu-arguments-model-arguments-slope";
          }
      })()())({
          reflectSymbol: function () {
              return "quotientInteger-cpu-arguments-model-arguments-intercept";
          }
      })()())({
          reflectSymbol: function () {
              return "quotientInteger-cpu-arguments-constant";
          }
      })()())({
          reflectSymbol: function () {
              return "nullList-memory-arguments";
          }
      })()())({
          reflectSymbol: function () {
              return "nullList-cpu-arguments";
          }
      })()())({
          reflectSymbol: function () {
              return "multiplyInteger-memory-arguments-slope";
          }
      })()())({
          reflectSymbol: function () {
              return "multiplyInteger-memory-arguments-intercept";
          }
      })()())({
          reflectSymbol: function () {
              return "multiplyInteger-cpu-arguments-slope";
          }
      })()())({
          reflectSymbol: function () {
              return "multiplyInteger-cpu-arguments-intercept";
          }
      })()())({
          reflectSymbol: function () {
              return "modInteger-memory-arguments-slope";
          }
      })()())({
          reflectSymbol: function () {
              return "modInteger-memory-arguments-minimum";
          }
      })()())({
          reflectSymbol: function () {
              return "modInteger-memory-arguments-intercept";
          }
      })()())({
          reflectSymbol: function () {
              return "modInteger-cpu-arguments-model-arguments-slope";
          }
      })()())({
          reflectSymbol: function () {
              return "modInteger-cpu-arguments-model-arguments-intercept";
          }
      })()())({
          reflectSymbol: function () {
              return "modInteger-cpu-arguments-constant";
          }
      })()())({
          reflectSymbol: function () {
              return "mkPairData-memory-arguments";
          }
      })()())({
          reflectSymbol: function () {
              return "mkPairData-cpu-arguments";
          }
      })()())({
          reflectSymbol: function () {
              return "mkNilPairData-memory-arguments";
          }
      })()())({
          reflectSymbol: function () {
              return "mkNilPairData-cpu-arguments";
          }
      })()())({
          reflectSymbol: function () {
              return "mkNilData-memory-arguments";
          }
      })()())({
          reflectSymbol: function () {
              return "mkNilData-cpu-arguments";
          }
      })()())({
          reflectSymbol: function () {
              return "mkCons-memory-arguments";
          }
      })()())({
          reflectSymbol: function () {
              return "mkCons-cpu-arguments";
          }
      })()())({
          reflectSymbol: function () {
              return "mapData-memory-arguments";
          }
      })()())({
          reflectSymbol: function () {
              return "mapData-cpu-arguments";
          }
      })()())({
          reflectSymbol: function () {
              return "listData-memory-arguments";
          }
      })()())({
          reflectSymbol: function () {
              return "listData-cpu-arguments";
          }
      })()())({
          reflectSymbol: function () {
              return "lessThanInteger-memory-arguments";
          }
      })()())({
          reflectSymbol: function () {
              return "lessThanInteger-cpu-arguments-slope";
          }
      })()())({
          reflectSymbol: function () {
              return "lessThanInteger-cpu-arguments-intercept";
          }
      })()())({
          reflectSymbol: function () {
              return "lessThanEqualsInteger-memory-arguments";
          }
      })()())({
          reflectSymbol: function () {
              return "lessThanEqualsInteger-cpu-arguments-slope";
          }
      })()())({
          reflectSymbol: function () {
              return "lessThanEqualsInteger-cpu-arguments-intercept";
          }
      })()())({
          reflectSymbol: function () {
              return "lessThanEqualsByteString-memory-arguments";
          }
      })()())({
          reflectSymbol: function () {
              return "lessThanEqualsByteString-cpu-arguments-slope";
          }
      })()())({
          reflectSymbol: function () {
              return "lessThanEqualsByteString-cpu-arguments-intercept";
          }
      })()())({
          reflectSymbol: function () {
              return "lessThanByteString-memory-arguments";
          }
      })()())({
          reflectSymbol: function () {
              return "lessThanByteString-cpu-arguments-slope";
          }
      })()())({
          reflectSymbol: function () {
              return "lessThanByteString-cpu-arguments-intercept";
          }
      })()())({
          reflectSymbol: function () {
              return "lengthOfByteString-memory-arguments";
          }
      })()())({
          reflectSymbol: function () {
              return "lengthOfByteString-cpu-arguments";
          }
      })()())({
          reflectSymbol: function () {
              return "indexByteString-memory-arguments";
          }
      })()())({
          reflectSymbol: function () {
              return "indexByteString-cpu-arguments";
          }
      })()())({
          reflectSymbol: function () {
              return "ifThenElse-memory-arguments";
          }
      })()())({
          reflectSymbol: function () {
              return "ifThenElse-cpu-arguments";
          }
      })()())({
          reflectSymbol: function () {
              return "iData-memory-arguments";
          }
      })()())({
          reflectSymbol: function () {
              return "iData-cpu-arguments";
          }
      })()())({
          reflectSymbol: function () {
              return "headList-memory-arguments";
          }
      })()())({
          reflectSymbol: function () {
              return "headList-cpu-arguments";
          }
      })()())({
          reflectSymbol: function () {
              return "fstPair-memory-arguments";
          }
      })()())({
          reflectSymbol: function () {
              return "fstPair-cpu-arguments";
          }
      })()())({
          reflectSymbol: function () {
              return "equalsString-memory-arguments";
          }
      })()())({
          reflectSymbol: function () {
              return "equalsString-cpu-arguments-slope";
          }
      })()())({
          reflectSymbol: function () {
              return "equalsString-cpu-arguments-intercept";
          }
      })()())({
          reflectSymbol: function () {
              return "equalsString-cpu-arguments-constant";
          }
      })()())({
          reflectSymbol: function () {
              return "equalsInteger-memory-arguments";
          }
      })()())({
          reflectSymbol: function () {
              return "equalsInteger-cpu-arguments-slope";
          }
      })()())({
          reflectSymbol: function () {
              return "equalsInteger-cpu-arguments-intercept";
          }
      })()())({
          reflectSymbol: function () {
              return "equalsData-memory-arguments";
          }
      })()())({
          reflectSymbol: function () {
              return "equalsData-cpu-arguments-slope";
          }
      })()())({
          reflectSymbol: function () {
              return "equalsData-cpu-arguments-intercept";
          }
      })()())({
          reflectSymbol: function () {
              return "equalsByteString-memory-arguments";
          }
      })()())({
          reflectSymbol: function () {
              return "equalsByteString-cpu-arguments-slope";
          }
      })()())({
          reflectSymbol: function () {
              return "equalsByteString-cpu-arguments-intercept";
          }
      })()())({
          reflectSymbol: function () {
              return "equalsByteString-cpu-arguments-constant";
          }
      })()())({
          reflectSymbol: function () {
              return "encodeUtf8-memory-arguments-slope";
          }
      })()())({
          reflectSymbol: function () {
              return "encodeUtf8-memory-arguments-intercept";
          }
      })()())({
          reflectSymbol: function () {
              return "encodeUtf8-cpu-arguments-slope";
          }
      })()())({
          reflectSymbol: function () {
              return "encodeUtf8-cpu-arguments-intercept";
          }
      })()())({
          reflectSymbol: function () {
              return "divideInteger-memory-arguments-slope";
          }
      })()())({
          reflectSymbol: function () {
              return "divideInteger-memory-arguments-minimum";
          }
      })()())({
          reflectSymbol: function () {
              return "divideInteger-memory-arguments-intercept";
          }
      })()())({
          reflectSymbol: function () {
              return "divideInteger-cpu-arguments-model-arguments-slope";
          }
      })()())({
          reflectSymbol: function () {
              return "divideInteger-cpu-arguments-model-arguments-intercept";
          }
      })()())({
          reflectSymbol: function () {
              return "divideInteger-cpu-arguments-constant";
          }
      })()())({
          reflectSymbol: function () {
              return "decodeUtf8-memory-arguments-slope";
          }
      })()())({
          reflectSymbol: function () {
              return "decodeUtf8-memory-arguments-intercept";
          }
      })()())({
          reflectSymbol: function () {
              return "decodeUtf8-cpu-arguments-slope";
          }
      })()())({
          reflectSymbol: function () {
              return "decodeUtf8-cpu-arguments-intercept";
          }
      })()())({
          reflectSymbol: function () {
              return "constrData-memory-arguments";
          }
      })()())({
          reflectSymbol: function () {
              return "constrData-cpu-arguments";
          }
      })()())({
          reflectSymbol: function () {
              return "consByteString-memory-arguments-slope";
          }
      })()())({
          reflectSymbol: function () {
              return "consByteString-memory-arguments-intercept";
          }
      })()())({
          reflectSymbol: function () {
              return "consByteString-cpu-arguments-slope";
          }
      })()())({
          reflectSymbol: function () {
              return "consByteString-cpu-arguments-intercept";
          }
      })()())({
          reflectSymbol: function () {
              return "chooseUnit-memory-arguments";
          }
      })()())({
          reflectSymbol: function () {
              return "chooseUnit-cpu-arguments";
          }
      })()())({
          reflectSymbol: function () {
              return "chooseList-memory-arguments";
          }
      })()())({
          reflectSymbol: function () {
              return "chooseList-cpu-arguments";
          }
      })()())({
          reflectSymbol: function () {
              return "chooseData-memory-arguments";
          }
      })()())({
          reflectSymbol: function () {
              return "chooseData-cpu-arguments";
          }
      })()())({
          reflectSymbol: function () {
              return "cekVarCost-exBudgetMemory";
          }
      })()())({
          reflectSymbol: function () {
              return "cekVarCost-exBudgetCPU";
          }
      })()())({
          reflectSymbol: function () {
              return "cekStartupCost-exBudgetMemory";
          }
      })()())({
          reflectSymbol: function () {
              return "cekStartupCost-exBudgetCPU";
          }
      })()())({
          reflectSymbol: function () {
              return "cekLamCost-exBudgetMemory";
          }
      })()())({
          reflectSymbol: function () {
              return "cekLamCost-exBudgetCPU";
          }
      })()())({
          reflectSymbol: function () {
              return "cekForceCost-exBudgetMemory";
          }
      })()())({
          reflectSymbol: function () {
              return "cekForceCost-exBudgetCPU";
          }
      })()())({
          reflectSymbol: function () {
              return "cekDelayCost-exBudgetMemory";
          }
      })()())({
          reflectSymbol: function () {
              return "cekDelayCost-exBudgetCPU";
          }
      })()())({
          reflectSymbol: function () {
              return "cekConstCost-exBudgetMemory";
          }
      })()())({
          reflectSymbol: function () {
              return "cekConstCost-exBudgetCPU";
          }
      })()())({
          reflectSymbol: function () {
              return "cekBuiltinCost-exBudgetMemory";
          }
      })()())({
          reflectSymbol: function () {
              return "cekBuiltinCost-exBudgetCPU";
          }
      })()())({
          reflectSymbol: function () {
              return "cekApplyCost-exBudgetMemory";
          }
      })()())({
          reflectSymbol: function () {
              return "cekApplyCost-exBudgetCPU";
          }
      })()())({
          reflectSymbol: function () {
              return "blake2b_256-memory-arguments";
          }
      })()())({
          reflectSymbol: function () {
              return "blake2b_256-cpu-arguments-slope";
          }
      })()())({
          reflectSymbol: function () {
              return "blake2b_256-cpu-arguments-intercept";
          }
      })()())({
          reflectSymbol: function () {
              return "bData-memory-arguments";
          }
      })()())({
          reflectSymbol: function () {
              return "bData-cpu-arguments";
          }
      })()())({
          reflectSymbol: function () {
              return "appendString-memory-arguments-slope";
          }
      })()())({
          reflectSymbol: function () {
              return "appendString-memory-arguments-intercept";
          }
      })()())({
          reflectSymbol: function () {
              return "appendString-cpu-arguments-slope";
          }
      })()())({
          reflectSymbol: function () {
              return "appendString-cpu-arguments-intercept";
          }
      })()())({
          reflectSymbol: function () {
              return "appendByteString-memory-arguments-slope";
          }
      })()())({
          reflectSymbol: function () {
              return "appendByteString-memory-arguments-intercept";
          }
      })()())({
          reflectSymbol: function () {
              return "appendByteString-cpu-arguments-slope";
          }
      })()())({
          reflectSymbol: function () {
              return "appendByteString-cpu-arguments-intercept";
          }
      })()())({
          reflectSymbol: function () {
              return "addInteger-memory-arguments-slope";
          }
      })()())({
          reflectSymbol: function () {
              return "addInteger-memory-arguments-intercept";
          }
      })()())({
          reflectSymbol: function () {
              return "addInteger-cpu-arguments-slope";
          }
      })()())({
          reflectSymbol: function () {
              return "addInteger-cpu-arguments-intercept";
          }
      })()())()))(Aeson.gDecodeAesonRowNil)({
          reflectSymbol: function () {
              return "PlutusV2";
          }
      })()())({
          reflectSymbol: function () {
              return "PlutusV1";
          }
      })()())()))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Aeson.decodeAesonBigInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(decodeAesonStringed(Aeson.decodeAesonBigInt)))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(decodeAesonStringed(Aeson.decodeAesonBigInt)))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(decodeAesonStringed(Aeson.decodeAesonBigInt)))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Aeson.decodeAesonUInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Aeson.decodeAesonUInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Aeson.decodeAesonUInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(decodeAesonStringed(Aeson.decodeAesonBigInt)))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(decodeAesonStringed(Aeson.decodeAesonBigInt)))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Aeson.decodeAesonUInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(decodeAesonStringed(Aeson.decodeAesonUInt)))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Aeson.decodeAesonUInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Aeson.decodeAesonUInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(decodeAesonStringed(Aeson.decodeAesonBigInt)))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Aeson.decodeAesonUInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(decodeAesonStringed(Aeson.decodeAesonBigInt)))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Aeson.decodeAesonFiniteBigNumbe))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Aeson.decodeAesonFiniteBigNumbe))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Aeson.decodeAesonUInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Aeson.decodeAesonUInt))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Aeson.decodeAesonFiniteBigNumbe))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Aeson.decodeAesonFiniteBigNumbe))(Aeson.gDecodeAesonRowNil)({
          reflectSymbol: function () {
              return "tau";
          }
      })()())({
          reflectSymbol: function () {
              return "rho";
          }
      })()())({
          reflectSymbol: function () {
              return "protocol_minor_ver";
          }
      })()())({
          reflectSymbol: function () {
              return "protocol_major_ver";
          }
      })()())({
          reflectSymbol: function () {
              return "price_step";
          }
      })()())({
          reflectSymbol: function () {
              return "price_mem";
          }
      })()())({
          reflectSymbol: function () {
              return "pool_deposit";
          }
      })()())({
          reflectSymbol: function () {
              return "n_opt";
          }
      })()())({
          reflectSymbol: function () {
              return "min_pool_cost";
          }
      })()())({
          reflectSymbol: function () {
              return "min_fee_b";
          }
      })()())({
          reflectSymbol: function () {
              return "min_fee_a";
          }
      })()())({
          reflectSymbol: function () {
              return "max_val_size";
          }
      })()())({
          reflectSymbol: function () {
              return "max_tx_size";
          }
      })()())({
          reflectSymbol: function () {
              return "max_tx_ex_steps";
          }
      })()())({
          reflectSymbol: function () {
              return "max_tx_ex_mem";
          }
      })()())({
          reflectSymbol: function () {
              return "max_collateral_inputs";
          }
      })()())({
          reflectSymbol: function () {
              return "max_block_size";
          }
      })()())({
          reflectSymbol: function () {
              return "max_block_header_size";
          }
      })()())({
          reflectSymbol: function () {
              return "max_block_ex_steps";
          }
      })()())({
          reflectSymbol: function () {
              return "max_block_ex_mem";
          }
      })()())({
          reflectSymbol: function () {
              return "key_deposit";
          }
      })()())({
          reflectSymbol: function () {
              return "e_max";
          }
      })()())({
          reflectSymbol: function () {
              return "cost_models";
          }
      })()())({
          reflectSymbol: function () {
              return "collateral_percent";
          }
      })()())({
          reflectSymbol: function () {
              return "coins_per_utxo_word";
          }
      })()())({
          reflectSymbol: function () {
              return "coins_per_utxo_size";
          }
      })()())({
          reflectSymbol: function () {
              return "a0";
          }
      })()())()))(function (v) {
          return Control_Bind.bind(Data_Either.bindEither)(bigNumberToRational(v.a0))(function (poolPledgeInfluence) {
              return Control_Bind.bind(Data_Either.bindEither)(bigNumberToRational(v.rho))(function (monetaryExpansion) {
                  return Control_Bind.bind(Data_Either.bindEither)(bigNumberToRational(v.tau))(function (treasuryCut) {
                      return Control_Bind.bind(Data_Either.bindEither)(bigNumberToPrice(v.price_mem))(function (memPrice) {
                          return Control_Bind.bind(Data_Either.bindEither)(bigNumberToPrice(v.price_step))(function (stepPrice) {
                              var prices = {
                                  memPrice: memPrice,
                                  stepPrice: stepPrice
                              };
                              return Control_Bind.bind(Data_Either.bindEither)(Data_Maybe.maybe(new Data_Either.Left(new Data_Argonaut_Decode_Error.AtKey("coinsPerUtxoByte or coinsPerUtxoWord", Data_Argonaut_Decode_Error.MissingValue.value)))(Control_Applicative.pure(Data_Either.applicativeEither))(Control_Alt.alt(Data_Maybe.altMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)((function () {
                                  var $788 = Data_Newtype.unwrap();
                                  return function ($789) {
                                      return Ctl_Internal_Types_ProtocolParameters.CoinsPerUtxoByte.create(Ctl_Internal_Cardano_Types_Value.Coin($788($789)));
                                  };
                              })())(v.coins_per_utxo_size))(Data_Functor.map(Data_Maybe.functorMaybe)((function () {
                                  var $790 = Data_Newtype.unwrap();
                                  return function ($791) {
                                      return Ctl_Internal_Types_ProtocolParameters.CoinsPerUtxoWord.create(Ctl_Internal_Cardano_Types_Value.Coin($790($791)));
                                  };
                              })())(v.coins_per_utxo_word))))(function (coinsPerUtxoUnit) {
                                  return Control_Applicative.pure(Data_Either.applicativeEither)({
                                      protocolVersion: new Data_Tuple.Tuple(v.protocol_major_ver, v.protocol_minor_ver),
                                      decentralization: Data_Semiring.zero(Ctl_Internal_Types_Rational.semiringRational),
                                      extraPraosEntropy: Data_Maybe.Nothing.value,
                                      maxBlockHeaderSize: v.max_block_header_size,
                                      maxBlockBodySize: v.max_block_size,
                                      maxTxSize: v.max_tx_size,
                                      txFeeFixed: v.min_fee_b,
                                      txFeePerByte: v.min_fee_a,
                                      stakeAddressDeposit: Data_Newtype.unwrap()(v.key_deposit),
                                      stakePoolDeposit: Data_Newtype.unwrap()(v.pool_deposit),
                                      minPoolCost: Data_Newtype.unwrap()(v.min_pool_cost),
                                      poolRetireMaxEpoch: v.e_max,
                                      stakePoolTargetNum: v.n_opt,
                                      poolPledgeInfluence: poolPledgeInfluence,
                                      monetaryExpansion: monetaryExpansion,
                                      treasuryCut: treasuryCut,
                                      coinsPerUtxoUnit: coinsPerUtxoUnit,
                                      costModels: Data_Map_Internal.fromFoldable(Ctl_Internal_Types_Scripts.ordLanguage)(Data_Foldable.foldableArray)([ new Data_Tuple.Tuple(Ctl_Internal_Types_Scripts.PlutusV1.value, Ctl_Internal_Types_ProtocolParameters.convertPlutusV1CostModel(v.cost_models.PlutusV1)), new Data_Tuple.Tuple(Ctl_Internal_Types_Scripts.PlutusV2.value, Ctl_Internal_Types_ProtocolParameters.convertPlutusV2CostModel(v.cost_models.PlutusV2)) ]),
                                      prices: prices,
                                      maxTxExUnits: {
                                          mem: Data_Newtype.unwrap()(v.max_tx_ex_mem),
                                          steps: Data_Newtype.unwrap()(v.max_tx_ex_steps)
                                      },
                                      maxBlockExUnits: {
                                          mem: Data_Newtype.unwrap()(v.max_block_ex_mem),
                                          steps: Data_Newtype.unwrap()(v.max_block_ex_steps)
                                      },
                                      maxValueSize: Data_Newtype.unwrap()(v.max_val_size),
                                      collateralPercent: v.collateral_percent,
                                      maxCollateralInputs: v.max_collateral_inputs
                                  });
                              });
                          });
                      });
                  });
              });
          });
      })
  };
  var getProtocolParameters = Data_Functor.mapFlipped(Control_Monad_Logger_Trans.functorLoggerT(Control_Monad_Reader_Trans.functorReaderT(Effect_Aff.functorAff)))(blockfrostGetRequest(LatestProtocolParameters.value))((function () {
      var $792 = Data_Functor.map(Data_Either.functorEither)(unwrapBlockfrostProtocolParameters);
      var $793 = handleBlockfrostResponse(decodeAesonBlockfrostProt);
      return function ($794) {
          return $792($793($794));
      };
  })());
  exports["evaluateTx"] = evaluateTx;
  exports["getChainTip"] = getChainTip;
  exports["getCurrentEpoch"] = getCurrentEpoch;
  exports["getDatumByHash"] = getDatumByHash;
  exports["getEraSummaries"] = getEraSummaries;
  exports["getProtocolParameters"] = getProtocolParameters;
  exports["getScriptByHash"] = getScriptByHash;
  exports["getSystemStart"] = getSystemStart;
  exports["getTxMetadata"] = getTxMetadata;
  exports["getUtxoByOref"] = getUtxoByOref;
  exports["doesTxExist"] = doesTxExist;
  exports["runBlockfrostServiceM"] = runBlockfrostServiceM;
  exports["submitTx"] = submitTx;
  exports["utxosAt"] = utxosAt;
  exports["getPoolIds"] = getPoolIds;
  exports["getPubKeyHashDelegationsAndRewards"] = getPubKeyHashDelegationsAndRewards;
  exports["getValidatorHashDelegationsAndRewards"] = getValidatorHashDelegationsAndRewards;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Ctl.Internal.Types.UsedTxOuts"] = $PS["Ctl.Internal.Types.UsedTxOuts"] || {};
  var exports = $PS["Ctl.Internal.Types.UsedTxOuts"];
  var Control_Alternative = $PS["Control.Alternative"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_Reader_Class = $PS["Control.Monad.Reader.Class"];
  var Ctl_Internal_Types_Transaction = $PS["Ctl.Internal.Types.Transaction"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Map_Internal = $PS["Data.Map.Internal"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Set = $PS["Data.Set"];
  var Data_UInt = $PS["Data.UInt"];
  var Effect_Class = $PS["Effect.Class"];
  var Effect_Ref = $PS["Effect.Ref"];
  var UsedTxOuts = function (x) {
      return x;
  };
  var newUsedTxOuts = function (dictMonadEffect) {
      return Data_Functor.map((((dictMonadEffect.Monad0()).Bind1()).Apply0()).Functor0())(UsedTxOuts)(Effect_Class.liftEffect(dictMonadEffect)(Effect_Ref["new"](Data_Map_Internal.empty)));
  };
  var cacheContains = function (cache) {
      return function (v) {
          return Data_Maybe.isJust(Control_Bind.bind(Data_Maybe.bindMaybe)(Data_Map_Internal.lookup(Ctl_Internal_Types_Transaction.ordTransactionHash)(v.transactionId)(cache))(function (indices) {
              return Control_Alternative.guard(Data_Maybe.alternativeMaybe)(Data_Set.member(Data_UInt.uintOrd)(v.index)(indices));
          }));
      };
  };
  var isTxOutRefUsed = function (dictMonadAsk) {
      return function (dictMonadEffect) {
          return function (ref) {
              return Control_Bind.bind((dictMonadAsk.Monad0()).Bind1())(Control_Bind.bindFlipped((dictMonadAsk.Monad0()).Bind1())((function () {
                  var $62 = Effect_Class.liftEffect(dictMonadEffect);
                  var $63 = Data_Newtype.unwrap();
                  return function ($64) {
                      return $62(Effect_Ref.read($63($64)));
                  };
              })())(Control_Monad_Reader_Class.ask(dictMonadAsk)))(function (cache) {
                  return Control_Applicative.pure((dictMonadAsk.Monad0()).Applicative0())(cacheContains(cache)(ref));
              });
          };
      };
  };
  exports["isTxOutRefUsed"] = isTxOutRefUsed;
  exports["newUsedTxOuts"] = newUsedTxOuts;
})(PS);
(function(exports) {
  "use strict";

  exports.copyRecord = function(rec) {
    var copy = {};
    for (var key in rec) {
      if ({}.hasOwnProperty.call(rec, key)) {
        copy[key] = rec[key];
      }
    }
    return copy;
  };
})(PS["Record.Builder"] = PS["Record.Builder"] || {});
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Record.Builder"] = $PS["Record.Builder"] || {};
  var exports = $PS["Record.Builder"];
  var $foreign = $PS["Record.Builder"];
  var Control_Semigroupoid = $PS["Control.Semigroupoid"];
  var Record_Unsafe_Union = $PS["Record.Unsafe.Union"];
  var semigroupoidBuilder = Control_Semigroupoid.semigroupoidFn;
  var merge = function () {
      return function () {
          return function (r1) {
              return function (r2) {
                  return Record_Unsafe_Union.unsafeUnionFn(r1, r2);
              };
          };
      };
  };                                                
  var build = function (v) {
      return function (r1) {
          return v($foreign.copyRecord(r1));
      };
  };
  exports["build"] = build;
  exports["merge"] = merge;
  exports["semigroupoidBuilder"] = semigroupoidBuilder;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Ctl.Internal.Contract.Monad"] = $PS["Ctl.Internal.Contract.Monad"] || {};
  var exports = $PS["Ctl.Internal.Contract.Monad"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_Error_Class = $PS["Control.Monad.Error.Class"];
  var Control_Monad_Logger_Trans = $PS["Control.Monad.Logger.Trans"];
  var Control_Monad_Reader_Class = $PS["Control.Monad.Reader.Class"];
  var Control_Monad_Reader_Trans = $PS["Control.Monad.Reader.Trans"];
  var Control_Parallel_Class = $PS["Control.Parallel.Class"];
  var Control_Semigroupoid = $PS["Control.Semigroupoid"];
  var Ctl_Internal_Contract_QueryBackend = $PS["Ctl.Internal.Contract.QueryBackend"];
  var Ctl_Internal_Helpers = $PS["Ctl.Internal.Helpers"];
  var Ctl_Internal_JsWebSocket = $PS["Ctl.Internal.JsWebSocket"];
  var Ctl_Internal_Logging = $PS["Ctl.Internal.Logging"];
  var Ctl_Internal_QueryM = $PS["Ctl.Internal.QueryM"];
  var Ctl_Internal_QueryM_Kupo = $PS["Ctl.Internal.QueryM.Kupo"];
  var Ctl_Internal_Serialization_Address = $PS["Ctl.Internal.Serialization.Address"];
  var Ctl_Internal_Service_Blockfrost = $PS["Ctl.Internal.Service.Blockfrost"];
  var Ctl_Internal_Service_Error = $PS["Ctl.Internal.Service.Error"];
  var Ctl_Internal_Types_Transaction = $PS["Ctl.Internal.Types.Transaction"];
  var Ctl_Internal_Types_UsedTxOuts = $PS["Ctl.Internal.Types.UsedTxOuts"];
  var Ctl_Internal_Wallet = $PS["Ctl.Internal.Wallet"];
  var Ctl_Internal_Wallet_Spec = $PS["Ctl.Internal.Wallet.Spec"];
  var Data_Bifunctor = $PS["Data.Bifunctor"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Either = $PS["Data.Either"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_HeytingAlgebra = $PS["Data.HeytingAlgebra"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Show = $PS["Data.Show"];
  var Data_Traversable = $PS["Data.Traversable"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect = $PS["Effect"];
  var Effect_Aff = $PS["Effect.Aff"];
  var Effect_Aff_Class = $PS["Effect.Aff.Class"];
  var Effect_Class = $PS["Effect.Class"];
  var Effect_Exception = $PS["Effect.Exception"];
  var Record_Builder = $PS["Record.Builder"];
  var Contract = function (x) {
      return x;
  };
  var monadThrowErrorContract = Control_Monad_Reader_Trans.monadThrowReaderT(Effect_Aff.monadThrowAff);
  var monadErrorErrorContract = Control_Monad_Reader_Trans.monadErrorReaderT(Effect_Aff.monadErrorAff);
  var monadEffectContract = Control_Monad_Reader_Trans.monadEffectReader(Effect_Aff.monadEffectAff);
  var monadContract = Control_Monad_Reader_Trans.monadReaderT(Effect_Aff.monadAff);
  var monadAskContractEnvContra = Control_Monad_Reader_Trans.monadAskReaderT(Effect_Aff.monadAff);
  var monadAffContract = Effect_Aff_Class.monadAffReader(Effect_Aff_Class.monadAffAff);        
  var functorContract = Control_Monad_Reader_Trans.functorReaderT(Effect_Aff.functorAff);
  var bindContract = Control_Monad_Reader_Trans.bindReaderT(Effect_Aff.bindAff);
  var monadLoggerContract = {
      log: function (msg) {
          return Control_Bind.bind(bindContract)(Control_Monad_Reader_Class.ask(monadAskContractEnvContra))(function (config) {
              var logFunction = Data_Maybe.fromMaybe(Ctl_Internal_Helpers.logWithLevel(Effect_Aff.monadEffectAff))(config.customLogger);
              return Effect_Aff_Class.liftAff(monadAffContract)(logFunction(config.logLevel)(msg));
          });
      },
      MonadEffect0: function () {
          return monadEffectContract;
      }
  };                                                                               
  var applicativeParContract = Control_Monad_Reader_Trans.applicativeReaderT(Effect_Aff.applicativeParAff);
  var parallelParContractContra = {
      parallel: function (v) {
          return Control_Parallel_Class.parallel(Control_Parallel_Class.monadParReaderT(Effect_Aff.parallelAff))(v);
      },
      sequential: function (v) {
          return Control_Parallel_Class.sequential(Control_Parallel_Class.monadParReaderT(Effect_Aff.parallelAff))(v);
      },
      Monad0: function () {
          return monadContract;
      },
      Applicative1: function () {
          return applicativeParContract;
      }
  };
  var applicativeContract = Control_Monad_Reader_Trans.applicativeReaderT(Effect_Aff.applicativeAff);
  var alternativeParContract = Control_Monad_Reader_Trans.alternativeReaderT(Effect_Aff.alternativeParAff);
  var withTxRefsCache = (function () {
      var $81 = Control_Monad_Reader_Trans.withReaderT(function (v) {
          return v.usedTxOuts;
      });
      return function ($82) {
          return Contract($81($82));
      };
  })();
  var walletNetworkCheck = function (envNetworkId) {
      var intToNetworkId = function (v) {
          if (v === 0) {
              return Control_Applicative.pure(Effect_Aff.applicativeAff)(Ctl_Internal_Serialization_Address.TestnetId.value);
          };
          if (v === 1) {
              return Control_Applicative.pure(Effect_Aff.applicativeAff)(Ctl_Internal_Serialization_Address.MainnetId.value);
          };
          return Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Exception["throw"]("Unknown network id"));
      };
      var check = function (networkId) {
          return Control_Applicative.unless(Effect_Aff.applicativeAff)(Data_Eq.eq(Ctl_Internal_Serialization_Address.eqNetworkId)(envNetworkId)(networkId))(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Exception["throw"]("The networkId that is specified is not equal to the one from wallet." + (" The wallet is using " + (Data_Show.show(Ctl_Internal_Serialization_Address.showNetworkId)(networkId) + (" while " + (Data_Show.show(Ctl_Internal_Serialization_Address.showNetworkId)(envNetworkId) + " is specified in the config.")))))));
      };
      return Ctl_Internal_Wallet.actionBasedOnWallet(Effect_Aff_Class.monadAffAff)(function (w) {
          return Control_Bind.composeKleisliFlipped(Effect_Aff.bindAff)(check)(Control_Bind.composeKleisliFlipped(Effect_Aff.bindAff)(intToNetworkId)((function (v) {
              return v.getNetworkId;
          })(w)));
      })(Control_Applicative.pure(Control_Applicative.applicativeFn)(Control_Applicative.pure(Effect_Aff.applicativeAff)(Data_Unit.unit)));
  };
  var stopContractEnv = function (v) {
      var stopWebSocket = (function () {
          var $83 = Control_Apply.apply(Control_Apply.applyFn)(Data_Functor.map(Data_Functor.functorFn)(Control_Apply.applySecond(Effect.applyEffect))(Ctl_Internal_JsWebSocket["_wsFinalize"]))(Ctl_Internal_JsWebSocket["_wsClose"]);
          return function ($84) {
              return $83(Ctl_Internal_QueryM.underlyingWebSocket($84));
          };
      })();
      var stopCtlRuntime = function (v1) {
          return stopWebSocket(v1.ogmios.ws);
      };
      return Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Data_Foldable.traverse_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(stopCtlRuntime)(Ctl_Internal_Contract_QueryBackend.getCtlBackend(v.backend)));
  };
  var runContractInEnv = function (contractEnv) {
      var $85 = Data_Function.flip(Control_Monad_Reader_Trans.runReaderT)(contractEnv);
      var $86 = Data_Newtype.unwrap();
      return function ($87) {
          return $85($86($87));
      };
  };
  var mkQueryEnv = function (contractEnv) {
      return function (ctlBackend) {
          return {
              config: {
                  kupoConfig: ctlBackend.kupoConfig,
                  logLevel: contractEnv.logLevel,
                  customLogger: contractEnv.customLogger,
                  suppressLogs: contractEnv.suppressLogs
              },
              runtime: {
                  ogmiosWs: ctlBackend.ogmios.ws
              }
          };
      };
  };
  var runQueryM = function (contractEnv) {
      return function (ctlBackend) {
          var $88 = Data_Function.flip(Control_Monad_Reader_Trans.runReaderT)(mkQueryEnv(contractEnv)(ctlBackend));
          var $89 = Data_Newtype.unwrap();
          return function ($90) {
              return $88($89($90));
          };
      };
  };
  var wrapQueryM = function (qm) {
      return Control_Bind.bind(bindContract)(Control_Monad_Reader_Class.asks(monadAskContractEnvContra)(function (v) {
          return v.backend;
      }))(function (backend) {
          return Control_Bind.bind(bindContract)(Ctl_Internal_Helpers.liftM(monadErrorErrorContract)(Effect_Exception.error("Operation only supported on CTL backend"))(Ctl_Internal_Contract_QueryBackend.getCtlBackend(backend)))(function (ctlBackend) {
              return Control_Bind.bind(bindContract)(Control_Monad_Reader_Class.ask(monadAskContractEnvContra))(function (contractEnv) {
                  return Effect_Aff_Class.liftAff(monadAffContract)(runQueryM(contractEnv)(ctlBackend)(qm));
              });
          });
      });
  };
  var getLedgerConstants = function (params) {
      var withErrorOnLeft = Control_Bind.bindFlipped(Control_Monad_Logger_Trans.bindLoggerT(Control_Monad_Reader_Trans.monadReaderT(Effect_Aff.monadAff)))((function () {
          var $91 = Ctl_Internal_Helpers.liftEither(Control_Monad_Logger_Trans.monadErrorLoggerT(Control_Monad_Reader_Trans.monadErrorReaderT(Effect_Aff.monadErrorAff)));
          var $92 = Data_Bifunctor.lmap(Data_Bifunctor.bifunctorEither)((function () {
              var $94 = Data_Show.show(Ctl_Internal_Service_Error.showClientError);
              return function ($95) {
                  return Effect_Exception.error($94($95));
              };
          })());
          return function ($93) {
              return $91($92($93));
          };
      })());
      var logger = Ctl_Internal_Logging.mkLogger(params.logLevel)(params.customLogger);
      var blockfrostLogger = Data_Maybe.fromMaybe(Ctl_Internal_Helpers.logWithLevel(Effect_Aff.monadEffectAff))(params.customLogger)(params.logLevel);
      return function (v) {
          if (v instanceof Ctl_Internal_Contract_QueryBackend.CtlBackend) {
              return Control_Apply.apply(Effect_Aff.applyAff)(Data_Functor.map(Effect_Aff.functorAff)(function (v1) {
                  return function (v2) {
                      return {
                          pparams: v1,
                          systemStart: v2
                      };
                  };
              })(Data_Functor.map(Effect_Aff.functorAff)(Data_Newtype.unwrap())(Ctl_Internal_QueryM.getProtocolParametersAff(v.value0.ogmios.ws)(logger))))(Ctl_Internal_QueryM.getSystemStartAff(v.value0.ogmios.ws)(logger));
          };
          if (v instanceof Ctl_Internal_Contract_QueryBackend.BlockfrostBackend) {
              return Ctl_Internal_Service_Blockfrost.runBlockfrostServiceM(blockfrostLogger)(v.value0)(Control_Apply.apply(Control_Monad_Logger_Trans.applyLoggerT(Control_Monad_Reader_Trans.monadReaderT(Effect_Aff.monadAff)))(Data_Functor.map(Control_Monad_Logger_Trans.functorLoggerT(Control_Monad_Reader_Trans.functorReaderT(Effect_Aff.functorAff)))(function (v1) {
                  return function (v2) {
                      return {
                          pparams: v1,
                          systemStart: v2
                      };
                  };
              })(withErrorOnLeft(Ctl_Internal_Service_Blockfrost.getProtocolParameters)))(withErrorOnLeft(Ctl_Internal_Service_Blockfrost.getSystemStart)));
          };
          throw new Error("Failed pattern match at Ctl.Internal.Contract.Monad (line 248, column 29 - line 257, column 54): " + [ v.constructor.name ]);
      };
  };
  var filterLockedUtxos = function (utxos) {
      return withTxRefsCache(Data_Function.flip(Ctl_Internal_Helpers.filterMapWithKeyM(Ctl_Internal_Types_Transaction.ordTransactionInput)(Control_Monad_Reader_Trans.monadReaderT(Effect_Aff.monadAff)))(utxos)(function (k) {
          return function (v) {
              return Data_Functor.map(Control_Monad_Reader_Trans.functorReaderT(Effect_Aff.functorAff))(Data_HeytingAlgebra.not(Data_HeytingAlgebra.heytingAlgebraBoolean))(Ctl_Internal_Types_UsedTxOuts.isTxOutRefUsed(Control_Monad_Reader_Trans.monadAskReaderT(Effect_Aff.monadAff))(Control_Monad_Reader_Trans.monadEffectReader(Effect_Aff.monadEffectAff))(Data_Newtype.unwrap()(k)));
          };
      }));
  };
  var buildBackend = function (logger) {
      var buildCtlBackend = function (v) {
          var isTxConfirmed = (function () {
              var $96 = Data_Functor.map(Effect_Aff.functorAff)(Data_Either.isRight);
              var $97 = Ctl_Internal_QueryM_Kupo.isTxConfirmedAff(v.kupoConfig);
              var $98 = Data_Newtype.wrap();
              return function ($99) {
                  return $96($97($98($99)));
              };
          })();
          return Control_Bind.bind(Effect_Aff.bindAff)(Ctl_Internal_QueryM.mkOgmiosWebSocketAff(isTxConfirmed)(logger)(v.ogmiosConfig))(function (ogmiosWs) {
              return Control_Applicative.pure(Effect_Aff.applicativeAff)({
                  ogmios: {
                      config: v.ogmiosConfig,
                      ws: ogmiosWs
                  },
                  kupoConfig: v.kupoConfig
              });
          });
      };
      return function (v) {
          if (v instanceof Ctl_Internal_Contract_QueryBackend.CtlBackendParams) {
              return Data_Functor.map(Effect_Aff.functorAff)(Data_Function.flip(Ctl_Internal_Contract_QueryBackend.CtlBackend.create)(v.value1))(buildCtlBackend(v.value0));
          };
          if (v instanceof Ctl_Internal_Contract_QueryBackend.BlockfrostBackendParams) {
              return Data_Functor.map(Effect_Aff.functorAff)(Ctl_Internal_Contract_QueryBackend.BlockfrostBackend.create(v.value0))(Data_Traversable.traverse(Data_Traversable.traversableMaybe)(Effect_Aff.applicativeAff)(buildCtlBackend)(v.value1));
          };
          throw new Error("Failed pattern match at Ctl.Internal.Contract.Monad (line 221, column 23 - line 225, column 78): " + [ v.constructor.name ]);
      };
  };
  var mkContractEnv = function (params) {
      var logger = Ctl_Internal_Logging.mkLogger(params.logLevel)(params.customLogger);
      var constants = {
          networkId: params.networkId,
          logLevel: params.logLevel,
          walletSpec: params.walletSpec,
          customLogger: params.customLogger,
          suppressLogs: params.suppressLogs,
          hooks: params.hooks
      };
      var buildWallet = Data_Traversable.traverse(Data_Traversable.traversableMaybe)(Effect_Aff.applicativeAff)(Ctl_Internal_Wallet_Spec.mkWalletBySpec)(params.walletSpec);
      return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Data_Foldable.for_(Effect_Aff.applicativeAff)(Data_Foldable.foldableMaybe)(params.hooks.beforeInit)((function () {
          var $100 = Data_Functor["void"](Effect_Aff.functorAff);
          var $101 = Effect_Class.liftEffect(Effect_Aff.monadEffectAff);
          return function ($102) {
              return $100($101(Effect_Exception["try"]($102)));
          };
      })()))(function () {
          return Control_Bind.bind(Effect_Aff.bindAff)(Ctl_Internal_Types_UsedTxOuts.newUsedTxOuts(Effect_Aff.monadEffectAff))(function (usedTxOuts) {
              return Control_Bind.bind(Effect_Aff.bindAff)(Control_Parallel_Class.sequential(Effect_Aff.parallelAff)(Control_Apply.apply(Effect_Aff.applyParAff)(Data_Functor.map(Effect_Aff.functorParAff)(function (v) {
                  return function (v1) {
                      return Control_Semigroupoid.composeFlipped(Record_Builder.semigroupoidBuilder)(v)(Control_Semigroupoid.composeFlipped(Record_Builder.semigroupoidBuilder)(v1)(Record_Builder.merge()()({
                          usedTxOuts: usedTxOuts
                      })));
                  };
              })(Control_Parallel_Class.parallel(Effect_Aff.parallelAff)(Control_Bind.bind(Effect_Aff.bindAff)(buildBackend(logger)(params.backendParams))(function (backend) {
                  return Control_Bind.bind(Effect_Aff.bindAff)(getLedgerConstants(params)(backend))(function (ledgerConstants) {
                      return Control_Applicative.pure(Effect_Aff.applicativeAff)(Record_Builder.merge()()({
                          backend: backend,
                          ledgerConstants: ledgerConstants
                      }));
                  });
              }))))(Control_Parallel_Class.parallel(Effect_Aff.parallelAff)(Control_Bind.bind(Effect_Aff.bindAff)(buildWallet)(function (wallet) {
                  return Control_Applicative.pure(Effect_Aff.applicativeAff)(Record_Builder.merge()()({
                      wallet: wallet
                  }));
              })))))(function (envBuilder) {
                  return Control_Applicative.pure(Effect_Aff.applicativeAff)(Record_Builder.build(envBuilder)(constants));
              });
          });
      });
  };
  var withContractEnv = function (params) {
      return function (action) {
          return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Ctl_Internal_Logging.setupLogs(params.logLevel)(params.customLogger)))(function (v) {
              var customLogger = (function () {
                  if (params.suppressLogs) {
                      return new Data_Maybe.Just((function () {
                          var $103 = Data_Functor.map(Data_Functor.functorFn)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff));
                          return function ($104) {
                              return $103(v.addLogEntry($104));
                          };
                      })());
                  };
                  if (Data_Boolean.otherwise) {
                      return params.customLogger;
                  };
                  throw new Error("Failed pattern match at Ctl.Internal.Contract.Monad (line 321, column 5 - line 321, column 60): " + [  ]);
              })();
              return Control_Bind.bind(Effect_Aff.bindAff)(mkContractEnv({
                  backendParams: params.backendParams,
                  networkId: params.networkId,
                  logLevel: params.logLevel,
                  walletSpec: params.walletSpec,
                  customLogger: customLogger,
                  suppressLogs: params.suppressLogs,
                  hooks: params.hooks
              }))(function (contractEnv) {
                  return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Data_Foldable.for_(Effect_Aff.applicativeAff)(Data_Foldable.foldableMaybe)(contractEnv.wallet)(walletNetworkCheck(contractEnv.networkId)))(function () {
                      return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Aff.attempt(Data_Function.flip(Effect_Aff["finally"])(Effect_Aff.supervise(action(contractEnv)))(stopContractEnv(contractEnv))))(function (eiRes) {
                          return Effect_Class.liftEffect(Effect_Aff.monadEffectAff)((function () {
                              if (eiRes instanceof Data_Either.Left) {
                                  return function __do() {
                                      Data_Foldable.for_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(contractEnv.hooks.onError)(function (f) {
                                          return Data_Functor["void"](Effect.functorEffect)(Effect_Exception["try"](f(eiRes.value0)));
                                      })();
                                      Control_Applicative.when(Effect.applicativeEffect)(contractEnv.suppressLogs)(v.printLogs)();
                                      return Control_Monad_Error_Class.throwError(Control_Monad_Error_Class.monadThrowEffect)(eiRes.value0)();
                                  };
                              };
                              if (eiRes instanceof Data_Either.Right) {
                                  return function __do() {
                                      Data_Foldable.for_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(contractEnv.hooks.onSuccess)((function () {
                                          var $105 = Data_Functor["void"](Effect.functorEffect);
                                          return function ($106) {
                                              return $105(Effect_Exception["try"]($106));
                                          };
                                      })())();
                                      return eiRes.value0;
                                  };
                              };
                              throw new Error("Failed pattern match at Ctl.Internal.Contract.Monad (line 331, column 16 - line 338, column 15): " + [ eiRes.constructor.name ]);
                          })());
                      });
                  });
              });
          });
      };
  };
  var runContract = function (params) {
      return function (contract) {
          return withContractEnv(params)(function (config) {
              return runContractInEnv(config)(contract);
          });
      };
  };
  exports["mkContractEnv"] = mkContractEnv;
  exports["runContract"] = runContract;
  exports["runQueryM"] = runQueryM;
  exports["wrapQueryM"] = wrapQueryM;
  exports["stopContractEnv"] = stopContractEnv;
  exports["filterLockedUtxos"] = filterLockedUtxos;
  exports["functorContract"] = functorContract;
  exports["applicativeContract"] = applicativeContract;
  exports["bindContract"] = bindContract;
  exports["monadContract"] = monadContract;
  exports["monadEffectContract"] = monadEffectContract;
  exports["monadAffContract"] = monadAffContract;
  exports["monadAskContractEnvContra"] = monadAskContractEnvContra;
  exports["monadThrowErrorContract"] = monadThrowErrorContract;
  exports["monadErrorErrorContract"] = monadErrorErrorContract;
  exports["monadLoggerContract"] = monadLoggerContract;
  exports["parallelParContractContra"] = parallelParContractContra;
  exports["alternativeParContract"] = alternativeParContract;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Contract.Monad"] = $PS["Contract.Monad"] || {};
  var exports = $PS["Contract.Monad"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Ctl_Internal_Contract_Monad = $PS["Ctl.Internal.Contract.Monad"];
  var Data_Either = $PS["Data.Either"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Show = $PS["Data.Show"];
  var Effect_Class = $PS["Effect.Class"];
  var Effect_Exception = $PS["Effect.Exception"];                
  var throwContractError = function (dictShow) {
      var $3 = Effect_Class.liftEffect(Ctl_Internal_Contract_Monad.monadEffectContract);
      var $4 = Data_Show.show(dictShow);
      return function ($5) {
          return $3(Effect_Exception["throw"]($4($5)));
      };
  };
  var stopContractEnv = function () {
      return Ctl_Internal_Contract_Monad.stopContractEnv;
  };
  var mkContractEnv = function () {
      return Ctl_Internal_Contract_Monad.mkContractEnv;
  };
  var liftContractM = function (str) {
      return Data_Maybe.maybe(Effect_Class.liftEffect(Ctl_Internal_Contract_Monad.monadEffectContract)(Effect_Exception["throw"](str)))(Control_Applicative.pure(Ctl_Internal_Contract_Monad.applicativeContract));
  };
  var liftedM = function (str) {
      return Control_Bind.bindFlipped(Ctl_Internal_Contract_Monad.bindContract)(liftContractM(str));
  };
  var liftContractE = function (dictShow) {
      return Data_Either.either(throwContractError(dictShow))(Control_Applicative.pure(Ctl_Internal_Contract_Monad.applicativeContract));
  };
  var liftedE = function (dictShow) {
      return Control_Bind.bindFlipped(Ctl_Internal_Contract_Monad.bindContract)(liftContractE(dictShow));
  };
  exports["liftContractM"] = liftContractM;
  exports["liftedE"] = liftedE;
  exports["liftedM"] = liftedM;
  exports["mkContractEnv"] = mkContractEnv;
  exports["stopContractEnv"] = stopContractEnv;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Ctl.Internal.Address"] = $PS["Ctl.Internal.Address"] || {};
  var exports = $PS["Ctl.Internal.Address"];
  var Control_Alt = $PS["Control.Alt"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Ctl_Internal_Serialization_Address = $PS["Ctl.Internal.Serialization.Address"];
  var Ctl_Internal_Types_Scripts = $PS["Ctl.Internal.Types.Scripts"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];                                               
  var enterpriseAddressPaymentScriptHash = Control_Bind.composeKleisliFlipped(Data_Maybe.bindMaybe)(Ctl_Internal_Serialization_Address.stakeCredentialToScriptHash)(Control_Bind.composeKleisliFlipped(Data_Maybe.bindMaybe)((function () {
      var $0 = Control_Applicative.pure(Data_Maybe.applicativeMaybe);
      return function ($1) {
          return $0(Ctl_Internal_Serialization_Address.enterpriseAddressPaymentCred($1));
      };
  })())(Ctl_Internal_Serialization_Address.enterpriseAddressFromAddress));
  var baseAddressPaymentScriptHash = Control_Bind.composeKleisliFlipped(Data_Maybe.bindMaybe)(Ctl_Internal_Serialization_Address.stakeCredentialToScriptHash)(Control_Bind.composeKleisliFlipped(Data_Maybe.bindMaybe)((function () {
      var $2 = Control_Applicative.pure(Data_Maybe.applicativeMaybe);
      return function ($3) {
          return $2(Ctl_Internal_Serialization_Address.baseAddressPaymentCred($3));
      };
  })())(Ctl_Internal_Serialization_Address.baseAddressFromAddress));
  var addressToOgmiosAddress = Ctl_Internal_Serialization_Address.addressBech32;
  var addressPaymentScriptHash = function (addr) {
      return Control_Alt.alt(Data_Maybe.altMaybe)(baseAddressPaymentScriptHash(addr))(enterpriseAddressPaymentScriptHash(addr));
  };
  var addressPaymentValidatorHash = (function () {
      var $8 = Data_Functor.map(Data_Maybe.functorMaybe)(Ctl_Internal_Types_Scripts.ValidatorHash);
      return function ($9) {
          return $8(addressPaymentScriptHash($9));
      };
  })();
  exports["addressToOgmiosAddress"] = addressToOgmiosAddress;
  exports["addressPaymentValidatorHash"] = addressPaymentValidatorHash;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Ctl.Internal.Contract"] = $PS["Ctl.Internal.Contract"] || {};
  var exports = $PS["Ctl.Internal.Contract"];
  var Control_Monad_Reader_Class = $PS["Control.Monad.Reader.Class"];
  var Ctl_Internal_Contract_Monad = $PS["Ctl.Internal.Contract.Monad"];
  var getProtocolParameters = Control_Monad_Reader_Class.asks(Ctl_Internal_Contract_Monad.monadAskContractEnvContra)(function ($2) {
      return (function (v) {
          return v.pparams;
      })((function (v) {
          return v.ledgerConstants;
      })($2));
  });
  exports["getProtocolParameters"] = getProtocolParameters;
})(PS);
(function(exports) {
  /* global BROWSER_RUNTIME */

  const Blake2 = require("blakejs");
  const SHA256 = require("jssha/dist/sha256");
  const SHA3 = require("jssha/dist/sha3");

  let lib;
  if (typeof BROWSER_RUNTIME != "undefined" && BROWSER_RUNTIME) {
    lib = require("@emurgo/cardano-serialization-lib-browser");
  } else {
    lib = require("@emurgo/cardano-serialization-lib-nodejs");
  }
  lib = require("@mlabs-haskell/csl-gc-wrapper")(lib);

  exports.blake2b256Hash = bytesToHash => {
    return Blake2.blake2b(bytesToHash, null, 32);
  };

  exports.hashPlutusData = plutusData => {
    return lib.hash_plutus_data(plutusData);
  };

  exports.hashPlutusScript = script => script.hash();

  const SHA256_HASH_VARIANT = "SHA-256";
  const SHA3_256_HASH_VARIANT = "SHA3-256";

  const UINT8ARRAY_FORMAT = "UINT8ARRAY";
  const HEX_FORMAT = "HEX";
})(PS["Ctl.Internal.Hashing"] = PS["Ctl.Internal.Hashing"] || {});
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Ctl.Internal.Hashing"] = $PS["Ctl.Internal.Hashing"] || {};
  var exports = $PS["Ctl.Internal.Hashing"];
  var $foreign = $PS["Ctl.Internal.Hashing"];
  var Ctl_Internal_Cardano_Types_ScriptRef = $PS["Ctl.Internal.Cardano.Types.ScriptRef"];
  var Ctl_Internal_Deserialization_Transaction = $PS["Ctl.Internal.Deserialization.Transaction"];
  var Ctl_Internal_Serialization_Hash = $PS["Ctl.Internal.Serialization.Hash"];
  var Ctl_Internal_Serialization_NativeScript = $PS["Ctl.Internal.Serialization.NativeScript"];
  var Ctl_Internal_Serialization_PlutusData = $PS["Ctl.Internal.Serialization.PlutusData"];
  var Ctl_Internal_Serialization_PlutusScript = $PS["Ctl.Internal.Serialization.PlutusScript"];
  var Ctl_Internal_Serialization_ToBytes = $PS["Ctl.Internal.Serialization.ToBytes"];
  var Data_Newtype = $PS["Data.Newtype"];                  
  var transactionHash = (function () {
      var $4 = Data_Newtype.wrap();
      var $5 = Data_Newtype.unwrap();
      var $6 = Ctl_Internal_Serialization_ToBytes.toBytes();
      return function ($7) {
          return $4($foreign.blake2b256Hash($5($6(Ctl_Internal_Deserialization_Transaction["_txBody"]($7)))));
      };
  })();
  var plutusScriptHash = function ($8) {
      return $foreign.hashPlutusScript(Ctl_Internal_Serialization_PlutusScript.convertPlutusScript($8));
  };
  var scriptRefHash = function (v) {
      if (v instanceof Ctl_Internal_Cardano_Types_ScriptRef.PlutusScriptRef) {
          return plutusScriptHash(v.value0);
      };
      if (v instanceof Ctl_Internal_Cardano_Types_ScriptRef.NativeScriptRef) {
          return Ctl_Internal_Serialization_Hash.nativeScriptHash(Ctl_Internal_Serialization_NativeScript.convertNativeScript(v.value0));
      };
      throw new Error("Failed pattern match at Ctl.Internal.Hashing (line 86, column 1 - line 86, column 41): " + [ v.constructor.name ]);
  };
  var datumHash = (function () {
      var $9 = Data_Newtype.wrap();
      var $10 = Data_Newtype.unwrap();
      var $11 = Ctl_Internal_Serialization_ToBytes.toBytes();
      var $12 = Data_Newtype.unwrap();
      return function ($13) {
          return $9($10($11($foreign.hashPlutusData(Ctl_Internal_Serialization_PlutusData.convertPlutusData($12($13))))));
      };
  })();
  exports["datumHash"] = datumHash;
  exports["plutusScriptHash"] = plutusScriptHash;
  exports["transactionHash"] = transactionHash;
  exports["scriptRefHash"] = scriptRefHash;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Ctl.Internal.QueryM.CurrentEpoch"] = $PS["Ctl.Internal.QueryM.CurrentEpoch"] || {};
  var exports = $PS["Ctl.Internal.QueryM.CurrentEpoch"];
  var Ctl_Internal_QueryM = $PS["Ctl.Internal.QueryM"];
  var Ctl_Internal_QueryM_Ogmios = $PS["Ctl.Internal.QueryM.Ogmios"];
  var Data_Unit = $PS["Data.Unit"];                
  var getCurrentEpoch = Ctl_Internal_QueryM.mkOgmiosRequest(Ctl_Internal_QueryM_Ogmios.queryCurrentEpochCall)(function (v) {
      return v.currentEpoch;
  })(Data_Unit.unit);
  exports["getCurrentEpoch"] = getCurrentEpoch;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Ctl.Internal.QueryM.EraSummaries"] = $PS["Ctl.Internal.QueryM.EraSummaries"] || {};
  var exports = $PS["Ctl.Internal.QueryM.EraSummaries"];
  var Ctl_Internal_QueryM = $PS["Ctl.Internal.QueryM"];
  var Ctl_Internal_QueryM_Ogmios = $PS["Ctl.Internal.QueryM.Ogmios"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect_Aff = $PS["Effect.Aff"];                
  var getEraSummaries = Data_Functor.map(Ctl_Internal_QueryM.functorQueryMT(Effect_Aff.functorAff))(Data_Newtype.unwrap())(Ctl_Internal_QueryM.mkOgmiosRequest(Ctl_Internal_QueryM_Ogmios.queryEraSummariesCall)(function (v) {
      return v.eraSummaries;
  })(Data_Unit.unit));
  exports["getEraSummaries"] = getEraSummaries;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Ctl.Internal.QueryM.Pools"] = $PS["Ctl.Internal.QueryM.Pools"] || {};
  var exports = $PS["Ctl.Internal.QueryM.Pools"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Ctl_Internal_QueryM = $PS["Ctl.Internal.QueryM"];
  var Ctl_Internal_QueryM_Ogmios = $PS["Ctl.Internal.QueryM.Ogmios"];
  var Ctl_Internal_Serialization_Hash = $PS["Ctl.Internal.Serialization.Hash"];
  var Ctl_Internal_Types_ByteArray = $PS["Ctl.Internal.Types.ByteArray"];
  var Data_Map_Internal = $PS["Data.Map.Internal"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect_Aff = $PS["Effect.Aff"];                        
  var getValidatorHashDelegationsAndRewards = function (skh) {
      var stringRep = Ctl_Internal_Serialization_Hash.scriptHashToBech32Unsafe("script")(Data_Newtype.unwrap()(skh));
      var byteHex = Ctl_Internal_Types_ByteArray.byteArrayToHex(Data_Newtype.unwrap()(Ctl_Internal_Serialization_Hash.scriptHashToBytes(Data_Newtype.unwrap()(skh))));
      return Control_Bind.bind(Ctl_Internal_QueryM.bindQueryMT(Effect_Aff.bindAff))(Ctl_Internal_QueryM.mkOgmiosRequest(Ctl_Internal_QueryM_Ogmios.queryDelegationsAndRewards)(function (v) {
          return v.delegationsAndRewards;
      })([ stringRep ]))(function (v) {
          return Control_Applicative.pure(Ctl_Internal_QueryM.applicativeQueryMT(Effect_Aff.applicativeAff))(Data_Map_Internal.lookup(Data_Ord.ordString)(byteHex)(v));
      });
  };
  var getPubKeyHashDelegationsAndRewards = function (pkh) {
      var stringRep = Ctl_Internal_Serialization_Hash.ed25519KeyHashToBech32Unsafe("stake_vkh")(Data_Newtype.unwrap()(Data_Newtype.unwrap()(pkh)));
      var byteHex = Ctl_Internal_Types_ByteArray.byteArrayToHex(Data_Newtype.unwrap()(Ctl_Internal_Serialization_Hash.ed25519KeyHashToBytes(Data_Newtype.unwrap()(Data_Newtype.unwrap()(pkh)))));
      return Control_Bind.bind(Ctl_Internal_QueryM.bindQueryMT(Effect_Aff.bindAff))(Ctl_Internal_QueryM.mkOgmiosRequest(Ctl_Internal_QueryM_Ogmios.queryDelegationsAndRewards)(function (v) {
          return v.delegationsAndRewards;
      })([ stringRep ]))(function (v) {
          return Control_Applicative.pure(Ctl_Internal_QueryM.applicativeQueryMT(Effect_Aff.applicativeAff))(Data_Map_Internal.lookup(Data_Ord.ordString)(byteHex)(v));
      });
  };
  var getPoolIds = Ctl_Internal_QueryM.mkOgmiosRequest(Ctl_Internal_QueryM_Ogmios.queryPoolIdsCall)(function (v) {
      return v.poolIds;
  })(Data_Unit.unit);
  exports["getPoolIds"] = getPoolIds;
  exports["getPubKeyHashDelegationsAndRewards"] = getPubKeyHashDelegationsAndRewards;
  exports["getValidatorHashDelegationsAndRewards"] = getValidatorHashDelegationsAndRewards;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Ctl.Internal.Contract.QueryHandle"] = $PS["Ctl.Internal.Contract.QueryHandle"] || {};
  var exports = $PS["Ctl.Internal.Contract.QueryHandle"];
  var Aeson = $PS["Aeson"];
  var Contract_Log = $PS["Contract.Log"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_Error_Class = $PS["Control.Monad.Error.Class"];
  var Control_Monad_Logger_Trans = $PS["Control.Monad.Logger.Trans"];
  var Control_Monad_Reader_Class = $PS["Control.Monad.Reader.Class"];
  var Control_Monad_Reader_Trans = $PS["Control.Monad.Reader.Trans"];
  var Ctl_Internal_Contract_Monad = $PS["Ctl.Internal.Contract.Monad"];
  var Ctl_Internal_Contract_QueryBackend = $PS["Ctl.Internal.Contract.QueryBackend"];
  var Ctl_Internal_Hashing = $PS["Ctl.Internal.Hashing"];
  var Ctl_Internal_Helpers = $PS["Ctl.Internal.Helpers"];
  var Ctl_Internal_QueryM = $PS["Ctl.Internal.QueryM"];
  var Ctl_Internal_QueryM_CurrentEpoch = $PS["Ctl.Internal.QueryM.CurrentEpoch"];
  var Ctl_Internal_QueryM_EraSummaries = $PS["Ctl.Internal.QueryM.EraSummaries"];
  var Ctl_Internal_QueryM_Kupo = $PS["Ctl.Internal.QueryM.Kupo"];
  var Ctl_Internal_QueryM_Ogmios = $PS["Ctl.Internal.QueryM.Ogmios"];
  var Ctl_Internal_QueryM_Pools = $PS["Ctl.Internal.QueryM.Pools"];
  var Ctl_Internal_Serialization = $PS["Ctl.Internal.Serialization"];
  var Ctl_Internal_Serialization_ToBytes = $PS["Ctl.Internal.Serialization.ToBytes"];
  var Ctl_Internal_Service_Blockfrost = $PS["Ctl.Internal.Service.Blockfrost"];
  var Ctl_Internal_Service_Error = $PS["Ctl.Internal.Service.Error"];
  var Ctl_Internal_Types_Transaction = $PS["Ctl.Internal.Types.Transaction"];
  var Data_Either = $PS["Data.Either"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Map_Internal = $PS["Data.Map.Internal"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Show = $PS["Data.Show"];
  var Effect_Aff = $PS["Effect.Aff"];
  var Effect_Class = $PS["Effect.Class"];
  var Effect_Exception = $PS["Effect.Exception"];                
  var queryHandleForCtlBackend = function (contractEnv) {
      return function (backend) {
          var runQueryM$prime = Ctl_Internal_Contract_Monad.runQueryM(contractEnv)(backend);
          return {
              getDatumByHash: function ($14) {
                  return runQueryM$prime(Ctl_Internal_QueryM_Kupo.getDatumByHash($14));
              },
              getScriptByHash: function ($15) {
                  return runQueryM$prime(Ctl_Internal_QueryM_Kupo.getScriptByHash($15));
              },
              getUtxoByOref: function ($16) {
                  return runQueryM$prime(Ctl_Internal_QueryM_Kupo.getUtxoByOref($16));
              },
              doesTxExist: (function () {
                  var $17 = Data_Functor.map(Ctl_Internal_QueryM.functorQueryMT(Effect_Aff.functorAff))(Data_Functor.map(Data_Either.functorEither)(Data_Maybe.isJust));
                  return function ($18) {
                      return runQueryM$prime($17(Ctl_Internal_QueryM_Kupo.isTxConfirmed($18)));
                  };
              })(),
              getTxMetadata: function ($19) {
                  return runQueryM$prime(Ctl_Internal_QueryM_Kupo.getTxMetadata($19));
              },
              utxosAt: function ($20) {
                  return runQueryM$prime(Ctl_Internal_QueryM_Kupo.utxosAt($20));
              },
              getChainTip: Data_Functor.map(Effect_Aff.functorAff)(Data_Either.Right.create)(runQueryM$prime(Ctl_Internal_QueryM.getChainTip)),
              getCurrentEpoch: runQueryM$prime(Ctl_Internal_QueryM_CurrentEpoch.getCurrentEpoch),
              submitTx: function (tx) {
                  return runQueryM$prime(Control_Bind.bind(Ctl_Internal_QueryM.bindQueryMT(Effect_Aff.bindAff))(Effect_Class.liftEffect(Ctl_Internal_QueryM.monadEffectQueryMTAff)(Ctl_Internal_Serialization.convertTransaction(tx)))(function (cslTx) {
                      var txHash = Ctl_Internal_Hashing.transactionHash(cslTx);
                      return Control_Bind.discard(Control_Bind.discardUnit)(Ctl_Internal_QueryM.bindQueryMT(Effect_Aff.bindAff))(Contract_Log["logDebug'"](Ctl_Internal_QueryM.monadLoggerQueryMTAff)("Pre-calculated tx hash: " + Data_Show.show(Ctl_Internal_Types_Transaction.showTransactionHash)(txHash)))(function () {
                          var txCborBytes = Ctl_Internal_Serialization_ToBytes.toBytes()(cslTx);
                          return Control_Bind.bind(Ctl_Internal_QueryM.bindQueryMT(Effect_Aff.bindAff))(Ctl_Internal_QueryM.submitTxOgmios(Data_Newtype.unwrap()(txHash))(txCborBytes))(function (result) {
                              if (result instanceof Ctl_Internal_QueryM_Ogmios.SubmitTxSuccess) {
                                  return Control_Applicative.pure(Ctl_Internal_QueryM.applicativeQueryMT(Effect_Aff.applicativeAff))(Control_Applicative.pure(Data_Either.applicativeEither)(Data_Newtype.wrap()(result.value0)));
                              };
                              if (result instanceof Ctl_Internal_QueryM_Ogmios.SubmitFail) {
                                  return Control_Applicative.pure(Ctl_Internal_QueryM.applicativeQueryMT(Effect_Aff.applicativeAff))(new Data_Either.Left(new Ctl_Internal_Service_Error.ClientOtherError(Data_Show.show(Data_Show.showArray(Aeson.showAeson))(result.value0))));
                              };
                              throw new Error("Failed pattern match at Ctl.Internal.Contract.QueryHandle (line 124, column 7 - line 126, column 68): " + [ result.constructor.name ]);
                          });
                      });
                  }));
              },
              evaluateTx: function (tx) {
                  return function (additionalUtxos) {
                      return runQueryM$prime(Control_Bind.bind(Ctl_Internal_QueryM.bindQueryMT(Effect_Aff.bindAff))(Data_Functor.map(Ctl_Internal_QueryM.functorQueryMT(Effect_Aff.functorAff))(Ctl_Internal_Serialization_ToBytes.toBytes())(Effect_Class.liftEffect(Ctl_Internal_QueryM.monadEffectQueryMTAff)(Ctl_Internal_Serialization.convertTransaction(tx))))(function (txBytes) {
                          return Ctl_Internal_QueryM.evaluateTxOgmios(txBytes)(additionalUtxos);
                      }));
                  };
              },
              getEraSummaries: Data_Functor.map(Effect_Aff.functorAff)(Data_Either.Right.create)(runQueryM$prime(Ctl_Internal_QueryM_EraSummaries.getEraSummaries)),
              getPoolIds: Data_Functor.map(Effect_Aff.functorAff)(Data_Either.Right.create)(runQueryM$prime(Ctl_Internal_QueryM_Pools.getPoolIds)),
              getPubKeyHashDelegationsAndRewards: function (v) {
                  return function (pubKeyHash) {
                      return Data_Functor.map(Effect_Aff.functorAff)(Data_Either.Right.create)(runQueryM$prime(Ctl_Internal_QueryM_Pools.getPubKeyHashDelegationsAndRewards(pubKeyHash)));
                  };
              },
              getValidatorHashDelegationsAndRewards: function (v) {
                  return function (validatorHash) {
                      return Data_Functor.map(Effect_Aff.functorAff)(Data_Either.Right.create)(runQueryM$prime(Ctl_Internal_QueryM_Pools.getValidatorHashDelegationsAndRewards(validatorHash)));
                  };
              }
          };
      };
  };
  var queryHandleForBlockfrostBackend = function (contractEnv) {
      return function (backend) {
          var runBlockfrostServiceM$prime = Ctl_Internal_Service_Blockfrost.runBlockfrostServiceM(Data_Maybe.fromMaybe(Ctl_Internal_Helpers.logWithLevel(Effect_Aff.monadEffectAff))(contractEnv.customLogger)(contractEnv.logLevel))(backend);
          return {
              getDatumByHash: function ($21) {
                  return runBlockfrostServiceM$prime(Ctl_Internal_Service_Blockfrost.getDatumByHash($21));
              },
              getScriptByHash: function ($22) {
                  return runBlockfrostServiceM$prime(Ctl_Internal_Service_Blockfrost.getScriptByHash($22));
              },
              getUtxoByOref: function ($23) {
                  return runBlockfrostServiceM$prime(Ctl_Internal_Service_Blockfrost.getUtxoByOref($23));
              },
              doesTxExist: function ($24) {
                  return runBlockfrostServiceM$prime(Ctl_Internal_Service_Blockfrost.doesTxExist($24));
              },
              getTxMetadata: function ($25) {
                  return runBlockfrostServiceM$prime(Ctl_Internal_Service_Blockfrost.getTxMetadata($25));
              },
              utxosAt: function ($26) {
                  return runBlockfrostServiceM$prime(Ctl_Internal_Service_Blockfrost.utxosAt($26));
              },
              getChainTip: runBlockfrostServiceM$prime(Ctl_Internal_Service_Blockfrost.getChainTip),
              getCurrentEpoch: Control_Bind.bind(Effect_Aff.bindAff)(runBlockfrostServiceM$prime(Ctl_Internal_Service_Blockfrost.getCurrentEpoch))(function (v) {
                  if (v instanceof Data_Either.Right) {
                      return Control_Applicative.pure(Effect_Aff.applicativeAff)(Data_Newtype.wrap()(v.value0));
                  };
                  if (v instanceof Data_Either.Left) {
                      return Control_Monad_Error_Class.throwError(Effect_Aff.monadThrowAff)(Effect_Exception.error(Data_Show.show(Ctl_Internal_Service_Error.showClientError)(v.value0)));
                  };
                  throw new Error("Failed pattern match at Ctl.Internal.Contract.QueryHandle (line 156, column 61 - line 158, column 50): " + [ v.constructor.name ]);
              }),
              submitTx: function ($27) {
                  return runBlockfrostServiceM$prime(Ctl_Internal_Service_Blockfrost.submitTx($27));
              },
              evaluateTx: function (tx) {
                  return function (additionalUtxos) {
                      return runBlockfrostServiceM$prime(Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Logger_Trans.bindLoggerT(Control_Monad_Reader_Trans.monadReaderT(Effect_Aff.monadAff)))(Control_Applicative.unless(Control_Monad_Logger_Trans.applicativeLoggerT(Control_Monad_Reader_Trans.monadReaderT(Effect_Aff.monadAff)))(Data_Map_Internal.isEmpty(Data_Newtype.unwrap()(additionalUtxos)))(Contract_Log["logWarn'"](Control_Monad_Logger_Trans.monadLoggerLoggerT(Control_Monad_Reader_Trans.monadEffectReader(Effect_Aff.monadEffectAff)))("Blockfrost does not support explicit additional utxos")))(function () {
                          return Ctl_Internal_Service_Blockfrost.evaluateTx(tx);
                      }));
                  };
              },
              getEraSummaries: runBlockfrostServiceM$prime(Ctl_Internal_Service_Blockfrost.getEraSummaries),
              getPoolIds: runBlockfrostServiceM$prime(Ctl_Internal_Service_Blockfrost.getPoolIds),
              getPubKeyHashDelegationsAndRewards: function (networkId) {
                  return function (stakePubKeyHash) {
                      return runBlockfrostServiceM$prime(Ctl_Internal_Service_Blockfrost.getPubKeyHashDelegationsAndRewards(networkId)(stakePubKeyHash));
                  };
              },
              getValidatorHashDelegationsAndRewards: function (networkId) {
                  return function (stakeValidatorHash) {
                      return runBlockfrostServiceM$prime(Ctl_Internal_Service_Blockfrost.getValidatorHashDelegationsAndRewards(networkId)(stakeValidatorHash));
                  };
              }
          };
      };
  };
  var getQueryHandle = Data_Functor.mapFlipped(Ctl_Internal_Contract_Monad.functorContract)(Control_Monad_Reader_Class.ask(Ctl_Internal_Contract_Monad.monadAskContractEnvContra))(function (contractEnv) {
      if (contractEnv.backend instanceof Ctl_Internal_Contract_QueryBackend.CtlBackend) {
          return queryHandleForCtlBackend(contractEnv)(contractEnv.backend.value0);
      };
      if (contractEnv.backend instanceof Ctl_Internal_Contract_QueryBackend.BlockfrostBackend) {
          return queryHandleForBlockfrostBackend(contractEnv)(contractEnv.backend.value0);
      };
      throw new Error("Failed pattern match at Ctl.Internal.Contract.QueryHandle (line 102, column 3 - line 106, column 58): " + [ contractEnv.backend.constructor.name ]);
  });
  exports["getQueryHandle"] = getQueryHandle;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Ctl.Internal.NativeScripts"] = $PS["Ctl.Internal.NativeScripts"] || {};
  var exports = $PS["Ctl.Internal.NativeScripts"];
  var Control_Apply = $PS["Control.Apply"];
  var Ctl_Internal_Cardano_Types_NativeScript = $PS["Ctl.Internal.Cardano.Types.NativeScript"];
  var Ctl_Internal_Serialization_Hash = $PS["Ctl.Internal.Serialization.Hash"];
  var Ctl_Internal_Serialization_NativeScript = $PS["Ctl.Internal.Serialization.NativeScript"];
  var Data_Array = $PS["Data.Array"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_List = $PS["Data.List"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Set = $PS["Data.Set"];
  var Data_Unfoldable = $PS["Data.Unfoldable"];                         
  var sublists = function (n) {
      return function (xs) {
          var sublists$prime = function (v) {
              return function (v1) {
                  if (v1 instanceof Data_List_Types.Nil) {
                      return new Data_List_Types.Cons(Data_List_Types.Nil.value, Data_List_Types.Nil.value);
                  };
                  if (v1 instanceof Data_List_Types.Cons) {
                      return new Data_List_Types.Cons(Data_List.take(v)(v1), sublists$prime(v)(v1.value1));
                  };
                  throw new Error("Failed pattern match at Ctl.Internal.NativeScripts (line 64, column 3 - line 64, column 46): " + [ v.constructor.name, v1.constructor.name ]);
              };
          };
          return Data_List.take((Data_List.length(xs) - n | 0) + 1 | 0)(sublists$prime(n)(xs));
      };
  };
  var subsetsOfLength = function (n) {
      var $23 = Data_Functor.map(Data_Functor.functorArray)(Data_List.toUnfoldable(Data_Unfoldable.unfoldableArray));
      var $24 = Data_List.toUnfoldable(Data_Unfoldable.unfoldableArray);
      var $25 = sublists(n);
      var $26 = Data_List.fromFoldable(Data_Foldable.foldableArray);
      return function ($27) {
          return $23($24($25($26($27))));
      };
  };
  var nativeScriptHash = (function () {
      var $28 = Data_Newtype.wrap();
      return function ($29) {
          return $28(Ctl_Internal_Serialization_Hash.nativeScriptHash(Ctl_Internal_Serialization_NativeScript.convertNativeScript($29)));
      };
  })();
  var emptySetChoice = [ Data_Set.empty ];
  var anyChoice = function (dictOrd) {
      return function (as) {
          return function (bs) {
              return Data_Array.nub(Data_Set.ordSet(dictOrd))(Data_Semigroup.append(Data_Semigroup.semigroupArray)(as)(bs));
          };
      };
  };
  var allChoice = function (dictOrd) {
      return function (as) {
          return function (bs) {
              return Control_Apply.apply(Control_Apply.applyArray)(Data_Functor.map(Data_Functor.functorArray)(Data_Semigroup.append(Data_Set.semigroupSet(dictOrd)))(as))(bs);
          };
      };
  };
  var getMaximumSigners = function (alreadyCounted) {
      var sizes = function (v) {
          if (v instanceof Ctl_Internal_Cardano_Types_NativeScript.ScriptPubkey) {
              if (Data_Set.member(Ctl_Internal_Serialization_Hash.ordEd25519KeyHash)(v.value0)(alreadyCounted)) {
                  return emptySetChoice;
              };
              if (Data_Boolean.otherwise) {
                  return [ Data_Set.singleton(v.value0) ];
              };
          };
          if (v instanceof Ctl_Internal_Cardano_Types_NativeScript.ScriptAll) {
              return Data_Foldable.foldr(Data_Foldable.foldableArray)(allChoice(Ctl_Internal_Serialization_Hash.ordEd25519KeyHash))(emptySetChoice)(Data_Functor.map(Data_Functor.functorArray)(sizes)(v.value0));
          };
          if (v instanceof Ctl_Internal_Cardano_Types_NativeScript.ScriptAny) {
              return Data_Foldable.foldr(Data_Foldable.foldableArray)(anyChoice(Ctl_Internal_Serialization_Hash.ordEd25519KeyHash))(emptySetChoice)(Data_Functor.map(Data_Functor.functorArray)(sizes)(v.value0));
          };
          if (v instanceof Ctl_Internal_Cardano_Types_NativeScript.ScriptNOfK) {
              return sizes(new Ctl_Internal_Cardano_Types_NativeScript.ScriptAny(Data_Functor.map(Data_Functor.functorArray)(Ctl_Internal_Cardano_Types_NativeScript.ScriptAll.create)(subsetsOfLength(v.value0)(v.value1))));
          };
          if (v instanceof Ctl_Internal_Cardano_Types_NativeScript.TimelockStart) {
              return emptySetChoice;
          };
          if (v instanceof Ctl_Internal_Cardano_Types_NativeScript.TimelockExpiry) {
              return emptySetChoice;
          };
          throw new Error("Failed pattern match at Ctl.Internal.NativeScripts (line 79, column 11 - line 90, column 39): " + [ v.constructor.name ]);
      };
      var $30 = Data_Maybe.fromMaybe(0);
      var $31 = Data_Functor.map(Data_Maybe.functorMaybe)(Data_Set.size);
      var $32 = Data_Foldable.maximumBy(Data_Foldable.foldableArray)(Data_Function.on(Data_Ord.compare(Data_Ord.ordInt))(Data_Set.size));
      return function ($33) {
          return $30($31($32(sizes($33))));
      };
  };
  exports["nativeScriptHash"] = nativeScriptHash;
  exports["getMaximumSigners"] = getMaximumSigners;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Ctl.Internal.Plutus.Types.Credential"] = $PS["Ctl.Internal.Plutus.Types.Credential"] || {};
  var exports = $PS["Ctl.Internal.Plutus.Types.Credential"];
  var Ctl_Internal_Serialization_Address = $PS["Ctl.Internal.Serialization.Address"];
  var Ctl_Internal_Types_PubKeyHash = $PS["Ctl.Internal.Types.PubKeyHash"];
  var Ctl_Internal_Types_Scripts = $PS["Ctl.Internal.Types.Scripts"];
  var Data_Generic_Rep = $PS["Data.Generic.Rep"];
  var Data_Show = $PS["Data.Show"];
  var Data_Show_Generic = $PS["Data.Show.Generic"];  
  var PubKeyCredential = (function () {
      function PubKeyCredential(value0) {
          this.value0 = value0;
      };
      PubKeyCredential.create = function (value0) {
          return new PubKeyCredential(value0);
      };
      return PubKeyCredential;
  })();
  var ScriptCredential = (function () {
      function ScriptCredential(value0) {
          this.value0 = value0;
      };
      ScriptCredential.create = function (value0) {
          return new ScriptCredential(value0);
      };
      return ScriptCredential;
  })();
  var StakingHash = (function () {
      function StakingHash(value0) {
          this.value0 = value0;
      };
      StakingHash.create = function (value0) {
          return new StakingHash(value0);
      };
      return StakingHash;
  })();
  var StakingPtr = (function () {
      function StakingPtr(value0) {
          this.value0 = value0;
      };
      StakingPtr.create = function (value0) {
          return new StakingPtr(value0);
      };
      return StakingPtr;
  })();                              
  var genericStakingCredential_ = {
      to: function (x) {
          if (x instanceof Data_Generic_Rep.Inl) {
              return new StakingHash(x.value0);
          };
          if (x instanceof Data_Generic_Rep.Inr) {
              return new StakingPtr(x.value0);
          };
          throw new Error("Failed pattern match at Ctl.Internal.Plutus.Types.Credential (line 111, column 1 - line 111, column 44): " + [ x.constructor.name ]);
      },
      from: function (x) {
          if (x instanceof StakingHash) {
              return new Data_Generic_Rep.Inl(x.value0);
          };
          if (x instanceof StakingPtr) {
              return new Data_Generic_Rep.Inr(x.value0);
          };
          throw new Error("Failed pattern match at Ctl.Internal.Plutus.Types.Credential (line 111, column 1 - line 111, column 44): " + [ x.constructor.name ]);
      }
  };
  var genericCredential_ = {
      to: function (x) {
          if (x instanceof Data_Generic_Rep.Inl) {
              return new PubKeyCredential(x.value0);
          };
          if (x instanceof Data_Generic_Rep.Inr) {
              return new ScriptCredential(x.value0);
          };
          throw new Error("Failed pattern match at Ctl.Internal.Plutus.Types.Credential (line 59, column 1 - line 59, column 37): " + [ x.constructor.name ]);
      },
      from: function (x) {
          if (x instanceof PubKeyCredential) {
              return new Data_Generic_Rep.Inl(x.value0);
          };
          if (x instanceof ScriptCredential) {
              return new Data_Generic_Rep.Inr(x.value0);
          };
          throw new Error("Failed pattern match at Ctl.Internal.Plutus.Types.Credential (line 59, column 1 - line 59, column 37): " + [ x.constructor.name ]);
      }
  };
  var showCredential = {
      show: Data_Show_Generic.genericShow(genericCredential_)(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Ctl_Internal_Types_PubKeyHash.showPubKeyHash))({
          reflectSymbol: function () {
              return "PubKeyCredential";
          }
      }))(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Ctl_Internal_Types_Scripts.showValidatorHash))({
          reflectSymbol: function () {
              return "ScriptCredential";
          }
      })))
  };
  var showStakingCredential = {
      show: Data_Show_Generic.genericShow(genericStakingCredential_)(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(showCredential))({
          reflectSymbol: function () {
              return "StakingHash";
          }
      }))(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "certIx";
          }
      })(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "slot";
          }
      })(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "txIx";
          }
      })(Data_Show.showRecordFieldsNil)(Ctl_Internal_Serialization_Address.showTransactionIndex))(Ctl_Internal_Serialization_Address.showSlot))(Ctl_Internal_Serialization_Address.showCertificateIndex))))({
          reflectSymbol: function () {
              return "StakingPtr";
          }
      })))
  };
  exports["PubKeyCredential"] = PubKeyCredential;
  exports["ScriptCredential"] = ScriptCredential;
  exports["StakingHash"] = StakingHash;
  exports["StakingPtr"] = StakingPtr;
  exports["showCredential"] = showCredential;
  exports["showStakingCredential"] = showStakingCredential;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Ctl.Internal.Plutus.Types.Address"] = $PS["Ctl.Internal.Plutus.Types.Address"] || {};
  var exports = $PS["Ctl.Internal.Plutus.Types.Address"];
  var Control_Category = $PS["Control.Category"];
  var Ctl_Internal_Plutus_Types_Credential = $PS["Ctl.Internal.Plutus.Types.Credential"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Show = $PS["Data.Show"];
  var Data_Show_Generic = $PS["Data.Show.Generic"];
  var AddressWithNetworkTag = function (x) {
      return x;
  };
  var plutusAddressAddress = {
      getAddress: Control_Category.identity(Control_Category.categoryFn)
  };                                   
  var genericAddress_ = {
      to: function (x) {
          return x;
      },
      from: function (x) {
          return x;
      }
  };
  var showAddress = {
      show: Data_Show_Generic.genericShow(genericAddress_)(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "addressCredential";
          }
      })(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "addressStakingCredential";
          }
      })(Data_Show.showRecordFieldsNil)(Data_Maybe.showMaybe(Ctl_Internal_Plutus_Types_Credential.showStakingCredential)))(Ctl_Internal_Plutus_Types_Credential.showCredential))))({
          reflectSymbol: function () {
              return "Address";
          }
      }))
  };
  var scriptHashAddress = function (vh) {
      return function (mbStakeCredential) {
          return Data_Newtype.wrap()({
              addressCredential: new Ctl_Internal_Plutus_Types_Credential.ScriptCredential(vh),
              addressStakingCredential: Data_Functor.map(Data_Maybe.functorMaybe)(Ctl_Internal_Plutus_Types_Credential.StakingHash.create)(mbStakeCredential)
          });
      };
  };
  var getAddress = function (dict) {
      return dict.getAddress;
  };
  exports["AddressWithNetworkTag"] = AddressWithNetworkTag;
  exports["getAddress"] = getAddress;
  exports["scriptHashAddress"] = scriptHashAddress;
  exports["plutusAddressAddress"] = plutusAddressAddress;
  exports["showAddress"] = showAddress;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Ctl.Internal.Plutus.Conversion.Address"] = $PS["Ctl.Internal.Plutus.Conversion.Address"] || {};
  var exports = $PS["Ctl.Internal.Plutus.Conversion.Address"];
  var Control_Alt = $PS["Control.Alt"];
  var Control_Bind = $PS["Control.Bind"];
  var Ctl_Internal_Plutus_Types_Address = $PS["Ctl.Internal.Plutus.Types.Address"];
  var Ctl_Internal_Plutus_Types_Credential = $PS["Ctl.Internal.Plutus.Types.Credential"];
  var Ctl_Internal_Serialization_Address = $PS["Ctl.Internal.Serialization.Address"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Newtype = $PS["Data.Newtype"];                
  var toPlutusAddressWithNetworkTag = function (addressCsl) {
      var toPlutusBaseAddress = function (addr) {
          var worker = function (addressCredential) {
              return function (delegationCred) {
                  return new Data_Maybe.Just(Data_Newtype.wrap()({
                      addressCredential: addressCredential,
                      addressStakingCredential: Data_Function.flip(Ctl_Internal_Serialization_Address.withStakeCredential)(delegationCred)({
                          onKeyHash: function (skh) {
                              return new Data_Maybe.Just(new Ctl_Internal_Plutus_Types_Credential.StakingHash(new Ctl_Internal_Plutus_Types_Credential.PubKeyCredential(Data_Newtype.wrap()(skh))));
                          },
                          onScriptHash: function (sh) {
                              return new Data_Maybe.Just(new Ctl_Internal_Plutus_Types_Credential.StakingHash(new Ctl_Internal_Plutus_Types_Credential.ScriptCredential(Data_Newtype.wrap()(sh))));
                          }
                      })
                  }));
              };
          };
          return Control_Bind.bind(Data_Maybe.bindMaybe)(Ctl_Internal_Serialization_Address.baseAddressFromAddress(addr))(function (baseAddress) {
              var paymentCred = Ctl_Internal_Serialization_Address.baseAddressPaymentCred(baseAddress);
              var delegationCred = Ctl_Internal_Serialization_Address.baseAddressDelegationCred(baseAddress);
              return Data_Function.flip(Ctl_Internal_Serialization_Address.withStakeCredential)(paymentCred)({
                  onKeyHash: function (pkh) {
                      return worker(new Ctl_Internal_Plutus_Types_Credential.PubKeyCredential(Data_Newtype.wrap()(pkh)))(delegationCred);
                  },
                  onScriptHash: function (sh) {
                      return worker(new Ctl_Internal_Plutus_Types_Credential.ScriptCredential(Data_Newtype.wrap()(sh)))(delegationCred);
                  }
              });
          });
      };
      var mkAddressCredential = Ctl_Internal_Serialization_Address.withStakeCredential({
          onKeyHash: (function () {
              var $35 = Data_Newtype.wrap();
              return function ($36) {
                  return Ctl_Internal_Plutus_Types_Credential.PubKeyCredential.create($35($36));
              };
          })(),
          onScriptHash: (function () {
              var $37 = Data_Newtype.wrap();
              return function ($38) {
                  return Ctl_Internal_Plutus_Types_Credential.ScriptCredential.create($37($38));
              };
          })()
      });
      var toPlutusEnterpriseAddress = function (addr) {
          return Control_Bind.bind(Data_Maybe.bindMaybe)(Ctl_Internal_Serialization_Address.enterpriseAddressFromAddress(addr))(function (enterpriseAddress) {
              var paymentCred = Ctl_Internal_Serialization_Address.enterpriseAddressPaymentCred(enterpriseAddress);
              return new Data_Maybe.Just(Data_Newtype.wrap()({
                  addressCredential: mkAddressCredential(paymentCred),
                  addressStakingCredential: Data_Maybe.Nothing.value
              }));
          });
      };
      var toPlutusPointerAddress = function (addr) {
          return Control_Bind.bind(Data_Maybe.bindMaybe)(Ctl_Internal_Serialization_Address.pointerAddressFromAddress(addr))(function (pointerAddress) {
              var stakePointer = Ctl_Internal_Serialization_Address.pointerAddressStakePointer(pointerAddress);
              var paymentCred = Ctl_Internal_Serialization_Address.pointerAddressPaymentCred(pointerAddress);
              return new Data_Maybe.Just(Data_Newtype.wrap()({
                  addressCredential: mkAddressCredential(paymentCred),
                  addressStakingCredential: new Data_Maybe.Just(new Ctl_Internal_Plutus_Types_Credential.StakingPtr(stakePointer))
              }));
          });
      };
      var networkId = Ctl_Internal_Serialization_Address.addressNetworkId(addressCsl);
      return Data_Functor.map(Data_Maybe.functorMaybe)(function ($39) {
          return Ctl_Internal_Plutus_Types_Address.AddressWithNetworkTag((function (v) {
              return {
                  address: v,
                  networkId: networkId
              };
          })($39));
      })(Control_Alt.alt(Data_Maybe.altMaybe)(Control_Alt.alt(Data_Maybe.altMaybe)(toPlutusBaseAddress(addressCsl))(toPlutusPointerAddress(addressCsl)))(toPlutusEnterpriseAddress(addressCsl)));
  };
  var toPlutusAddress = (function () {
      var $40 = Data_Functor.map(Data_Maybe.functorMaybe)((function () {
          var $42 = Data_Newtype.unwrap();
          return function ($43) {
              return (function (v) {
                  return v.address;
              })($42($43));
          };
      })());
      return function ($41) {
          return $40(toPlutusAddressWithNetworkTag($41));
      };
  })();
  var fromPlutusAddress = function (networkId) {
      return function (v) {
          if (v.addressCredential instanceof Ctl_Internal_Plutus_Types_Credential.PubKeyCredential && (v.addressStakingCredential instanceof Data_Maybe.Just && (v.addressStakingCredential.value0 instanceof Ctl_Internal_Plutus_Types_Credential.StakingHash && v.addressStakingCredential.value0.value0 instanceof Ctl_Internal_Plutus_Types_Credential.PubKeyCredential))) {
              return Ctl_Internal_Serialization_Address.baseAddressToAddress(Ctl_Internal_Serialization_Address.paymentKeyHashStakeKeyHashAddress(networkId)(v.addressCredential.value0)(v.addressStakingCredential.value0.value0.value0));
          };
          if (v.addressCredential instanceof Ctl_Internal_Plutus_Types_Credential.ScriptCredential && (v.addressStakingCredential instanceof Data_Maybe.Just && (v.addressStakingCredential.value0 instanceof Ctl_Internal_Plutus_Types_Credential.StakingHash && v.addressStakingCredential.value0.value0 instanceof Ctl_Internal_Plutus_Types_Credential.PubKeyCredential))) {
              return Ctl_Internal_Serialization_Address.baseAddressToAddress(Ctl_Internal_Serialization_Address.scriptHashStakeKeyHashAddress(networkId)(v.addressCredential.value0)(v.addressStakingCredential.value0.value0.value0));
          };
          if (v.addressCredential instanceof Ctl_Internal_Plutus_Types_Credential.PubKeyCredential && (v.addressStakingCredential instanceof Data_Maybe.Just && (v.addressStakingCredential.value0 instanceof Ctl_Internal_Plutus_Types_Credential.StakingHash && v.addressStakingCredential.value0.value0 instanceof Ctl_Internal_Plutus_Types_Credential.ScriptCredential))) {
              return Ctl_Internal_Serialization_Address.baseAddressToAddress(Ctl_Internal_Serialization_Address.paymentKeyHashScriptHashAddress(networkId)(v.addressCredential.value0)(v.addressStakingCredential.value0.value0.value0));
          };
          if (v.addressCredential instanceof Ctl_Internal_Plutus_Types_Credential.ScriptCredential && (v.addressStakingCredential instanceof Data_Maybe.Just && (v.addressStakingCredential.value0 instanceof Ctl_Internal_Plutus_Types_Credential.StakingHash && v.addressStakingCredential.value0.value0 instanceof Ctl_Internal_Plutus_Types_Credential.ScriptCredential))) {
              return Ctl_Internal_Serialization_Address.baseAddressToAddress(Ctl_Internal_Serialization_Address.scriptHashScriptHashAddress(networkId)(v.addressCredential.value0)(v.addressStakingCredential.value0.value0.value0));
          };
          if (v.addressCredential instanceof Ctl_Internal_Plutus_Types_Credential.PubKeyCredential && (v.addressStakingCredential instanceof Data_Maybe.Just && v.addressStakingCredential.value0 instanceof Ctl_Internal_Plutus_Types_Credential.StakingPtr)) {
              return Ctl_Internal_Serialization_Address.pointerAddressToAddress(Ctl_Internal_Serialization_Address.paymentKeyHashPointerAddress(networkId)(v.addressCredential.value0)(v.addressStakingCredential.value0.value0));
          };
          if (v.addressCredential instanceof Ctl_Internal_Plutus_Types_Credential.ScriptCredential && (v.addressStakingCredential instanceof Data_Maybe.Just && v.addressStakingCredential.value0 instanceof Ctl_Internal_Plutus_Types_Credential.StakingPtr)) {
              return Ctl_Internal_Serialization_Address.pointerAddressToAddress(Ctl_Internal_Serialization_Address.scriptHashPointerAddress(networkId)(v.addressCredential.value0)(v.addressStakingCredential.value0.value0));
          };
          if (v.addressCredential instanceof Ctl_Internal_Plutus_Types_Credential.PubKeyCredential && v.addressStakingCredential instanceof Data_Maybe.Nothing) {
              return Ctl_Internal_Serialization_Address.enterpriseAddressToAddress(Ctl_Internal_Serialization_Address.paymentKeyHashEnterpriseAddress(networkId)(v.addressCredential.value0));
          };
          if (v.addressCredential instanceof Ctl_Internal_Plutus_Types_Credential.ScriptCredential && v.addressStakingCredential instanceof Data_Maybe.Nothing) {
              return Ctl_Internal_Serialization_Address.enterpriseAddressToAddress(Ctl_Internal_Serialization_Address.scriptHashEnterpriseAddress(networkId)(v.addressCredential.value0));
          };
          throw new Error("Failed pattern match at Ctl.Internal.Plutus.Conversion.Address (line 67, column 3 - line 110, column 53): " + [ v.addressCredential.constructor.name, v.addressStakingCredential.constructor.name ]);
      };
  };
  exports["fromPlutusAddress"] = fromPlutusAddress;
  exports["toPlutusAddress"] = toPlutusAddress;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Ctl.Internal.Plutus.Types.AssocMap"] = $PS["Ctl.Internal.Plutus.Types.AssocMap"] || {};
  var exports = $PS["Ctl.Internal.Plutus.Types.AssocMap"];
  var Data_Array = $PS["Data.Array"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Show = $PS["Data.Show"];
  var Data_Show_Generic = $PS["Data.Show.Generic"];
  var Data_These = $PS["Data.These"];
  var Data_Tuple = $PS["Data.Tuple"];
  var genericMap_ = {
      to: function (x) {
          return x;
      },
      from: function (x) {
          return x;
      }
  };
  var showMap = function (dictShow) {
      return function (dictShow1) {
          return {
              show: Data_Show_Generic.genericShow(genericMap_)(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Data_Show.showArray(Data_Tuple.showTuple(dictShow)(dictShow1))))({
                  reflectSymbol: function () {
                      return "Map";
                  }
              }))
          };
      };
  };
  var functorMap = {
      map: function (f) {
          return function (v) {
              return Data_Functor.map(Data_Functor.functorArray)(Data_Functor.map(Data_Tuple.functorTuple)(f))(v);
          };
      }
  };
  var singleton = function (k) {
      return function (v) {
          return Data_Array.singleton(new Data_Tuple.Tuple(k, v));
      };
  };
  var lookup = function (dictEq) {
      return function (k) {
          return function (v) {
              return Data_Foldable.lookup(Data_Foldable.foldableArray)(dictEq)(k)(v);
          };
      };
  };
  var union = function (dictEq) {
      return function (v) {
          return function (v1) {
              var rs$prime = Data_Array.filter(function (v2) {
                  return !Data_Array.any(function (v3) {
                      return Data_Eq.eq(dictEq)(v3.value0)(v2.value0);
                  })(v);
              })(v1);
              var rs$prime$prime = Data_Functor.map(Data_Functor.functorArray)(Data_Functor.map(Data_Tuple.functorTuple)(Data_These.That.create))(rs$prime);
              var f = function (a) {
                  return function (v2) {
                      if (v2 instanceof Data_Maybe.Nothing) {
                          return new Data_These.This(a);
                      };
                      if (v2 instanceof Data_Maybe.Just) {
                          return new Data_These.Both(a, v2.value0);
                      };
                      throw new Error("Failed pattern match at Ctl.Internal.Plutus.Types.AssocMap (line 155, column 11 - line 157, column 25): " + [ v2.constructor.name ]);
                  };
              };
              var ls$prime = Data_Functor.map(Data_Functor.functorArray)(function (v2) {
                  return new Data_Tuple.Tuple(v2.value0, f(v2.value1)(lookup(dictEq)(v2.value0)(v1)));
              })(v);
              return Data_Semigroup.append(Data_Semigroup.semigroupArray)(ls$prime)(rs$prime$prime);
          };
      };
  };
  var filter = function (f) {
      return function (v) {
          return Data_Array.filter(function ($158) {
              return f(Data_Tuple.snd($158));
          })(v);
      };
  };
  exports["lookup"] = lookup;
  exports["singleton"] = singleton;
  exports["union"] = union;
  exports["showMap"] = showMap;
  exports["functorMap"] = functorMap;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Ctl.Internal.Plutus.Types.CurrencySymbol"] = $PS["Ctl.Internal.Plutus.Types.CurrencySymbol"] || {};
  var exports = $PS["Ctl.Internal.Plutus.Types.CurrencySymbol"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Ctl_Internal_Serialization_Hash = $PS["Ctl.Internal.Serialization.Hash"];
  var Ctl_Internal_Types_ByteArray = $PS["Ctl.Internal.Types.ByteArray"];
  var Ctl_Internal_Types_Scripts = $PS["Ctl.Internal.Types.Scripts"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Show = $PS["Data.Show"];                              
  var showCurrencySymbol = {
      show: function (v) {
          return "(CurrencySymbol " + (Data_Show.show(Ctl_Internal_Types_ByteArray.showByteArray)(v) + ")");
      }
  };                                                                   
  var eqCurrencySymbol = Ctl_Internal_Types_ByteArray.eqByteArray;
  var getCurrencySymbol = function (v) {
      return v;
  };
  var currencyScriptHash = (function () {
      var $24 = Data_Maybe.fromJust();
      return function ($25) {
          return $24(Ctl_Internal_Serialization_Hash.scriptHashFromBytes(getCurrencySymbol($25)));
      };
  })();
  var currencyMPSHash = function ($26) {
      return Ctl_Internal_Types_Scripts.MintingPolicyHash(currencyScriptHash($26));
  };
  var adaSymbol = Data_Monoid.mempty(Ctl_Internal_Types_ByteArray.monoidByteArray);
  var mkCurrencySymbol = function (byteArr) {
      if (Data_Eq.eq(Ctl_Internal_Types_ByteArray.eqByteArray)(byteArr)(Data_Monoid.mempty(Ctl_Internal_Types_ByteArray.monoidByteArray))) {
          return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(adaSymbol);
      };
      if (Data_Boolean.otherwise) {
          return Data_Functor.voidLeft(Data_Maybe.functorMaybe)(Ctl_Internal_Serialization_Hash.scriptHashFromBytes(byteArr))(byteArr);
      };
      throw new Error("Failed pattern match at Ctl.Internal.Plutus.Types.CurrencySymbol (line 94, column 1 - line 94, column 54): " + [ byteArr.constructor.name ]);
  };
  var mpsSymbol = function (v) {
      return mkCurrencySymbol(Data_Newtype.unwrap()(Ctl_Internal_Serialization_Hash.scriptHashToBytes(v)));
  };
  exports["adaSymbol"] = adaSymbol;
  exports["currencyMPSHash"] = currencyMPSHash;
  exports["getCurrencySymbol"] = getCurrencySymbol;
  exports["mkCurrencySymbol"] = mkCurrencySymbol;
  exports["mpsSymbol"] = mpsSymbol;
  exports["eqCurrencySymbol"] = eqCurrencySymbol;
  exports["showCurrencySymbol"] = showCurrencySymbol;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Ctl.Internal.Plutus.Types.Value"] = $PS["Ctl.Internal.Plutus.Types.Value"] || {};
  var exports = $PS["Ctl.Internal.Plutus.Types.Value"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Category = $PS["Control.Category"];
  var Ctl_Internal_Plutus_Types_AssocMap = $PS["Ctl.Internal.Plutus.Types.AssocMap"];
  var Ctl_Internal_Plutus_Types_CurrencySymbol = $PS["Ctl.Internal.Plutus.Types.CurrencySymbol"];
  var Ctl_Internal_Types_ByteArray = $PS["Ctl.Internal.Types.ByteArray"];
  var Ctl_Internal_Types_TokenName = $PS["Ctl.Internal.Types.TokenName"];
  var Data_Array = $PS["Data.Array"];
  var Data_BigInt = $PS["Data.BigInt"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Semiring = $PS["Data.Semiring"];
  var Data_Show = $PS["Data.Show"];
  var Data_These = $PS["Data.These"];
  var Data_Tuple = $PS["Data.Tuple"];                                  
  var Value = function (x) {
      return x;
  };                                                                                                                                                                                                                                                          
  var showValue = {
      show: function (v) {
          return "(PlutusValue " + (Data_Show.show(Ctl_Internal_Plutus_Types_AssocMap.showMap(Ctl_Internal_Plutus_Types_CurrencySymbol.showCurrencySymbol)(Ctl_Internal_Plutus_Types_AssocMap.showMap(Ctl_Internal_Types_TokenName.showTokenName)(Data_BigInt.showBigInt)))(v) + ")");
      }
  };
  var unionVal = function (v) {
      return function (v1) {
          return Data_Functor.map(Ctl_Internal_Plutus_Types_AssocMap.functorMap)(Data_These.these(Data_Functor.map(Ctl_Internal_Plutus_Types_AssocMap.functorMap)(Data_These.This.create))(Data_Functor.map(Ctl_Internal_Plutus_Types_AssocMap.functorMap)(Data_These.That.create))(Ctl_Internal_Plutus_Types_AssocMap.union(Ctl_Internal_Types_TokenName.eqTokenName)))(Ctl_Internal_Plutus_Types_AssocMap.union(Ctl_Internal_Plutus_Types_CurrencySymbol.eqCurrencySymbol)(v)(v1));
      };
  };
  var unionWith = function (f) {
      return function (lhs) {
          var $91 = Data_Functor.map(Ctl_Internal_Plutus_Types_AssocMap.functorMap)(Data_Functor.map(Ctl_Internal_Plutus_Types_AssocMap.functorMap)(Data_These.these(Control_Category.identity(Control_Category.categoryFn))(Control_Category.identity(Control_Category.categoryFn))(f)));
          var $92 = unionVal(lhs);
          return function ($93) {
              return Value($91($92($93)));
          };
      };
  };
  var semigroupValue = {
      append: unionWith(Data_Semiring.add(Data_BigInt.semiringBigInt))
  };
  var monoidValue = {
      mempty: [  ],
      Semigroup0: function () {
          return semigroupValue;
      }
  };
  var singleton = function (cs) {
      return function (tn) {
          var $94 = Ctl_Internal_Plutus_Types_AssocMap.singleton(cs);
          var $95 = Ctl_Internal_Plutus_Types_AssocMap.singleton(tn);
          return function ($96) {
              return Value($94($95($96)));
          };
      };
  };
  var singleton$prime = function (cs) {
      return function (tn) {
          return function (amount) {
              if (Data_Eq.eq(Ctl_Internal_Types_ByteArray.eqByteArray)(cs)(Data_Monoid.mempty(Ctl_Internal_Types_ByteArray.monoidByteArray)) && Data_Eq.notEq(Ctl_Internal_Types_ByteArray.eqByteArray)(tn)(Data_Monoid.mempty(Ctl_Internal_Types_ByteArray.monoidByteArray))) {
                  return Data_Maybe.Nothing.value;
              };
              if (Data_Boolean.otherwise) {
                  return Control_Apply.lift3(Data_Maybe.applyMaybe)(singleton)(Ctl_Internal_Plutus_Types_CurrencySymbol.mkCurrencySymbol(cs))(Ctl_Internal_Types_TokenName.mkTokenName(tn))(Control_Applicative.pure(Data_Maybe.applicativeMaybe)(amount));
              };
              throw new Error("Failed pattern match at Ctl.Internal.Plutus.Types.Value (line 181, column 1 - line 181, column 62): " + [ cs.constructor.name, tn.constructor.name, amount.constructor.name ]);
          };
      };
  };
  var lovelaceValueOf = singleton(Ctl_Internal_Plutus_Types_CurrencySymbol.adaSymbol)(Ctl_Internal_Types_TokenName.adaToken);
  var getValue = function (v) {
      return v;
  };
  var flattenValue = function (v) {
      return Data_Function.flip(Data_Array.concatMap)(v)(function (v1) {
          return Data_Functor.mapFlipped(Data_Functor.functorArray)(v1.value1)(function (v2) {
              return new Data_Tuple.Tuple(v1.value0, new Data_Tuple.Tuple(v2.value0, v2.value1));
          });
      });
  };
  var flattenNonAdaAssets = (function () {
      var $100 = Data_Array.filter((function () {
          var $102 = Data_Eq.notEq(Ctl_Internal_Plutus_Types_CurrencySymbol.eqCurrencySymbol)(Ctl_Internal_Plutus_Types_CurrencySymbol.adaSymbol);
          return function ($103) {
              return $102(Data_Tuple.fst($103));
          };
      })());
      return function ($101) {
          return $100(flattenValue($101));
      };
  })();
  exports["flattenNonAdaAssets"] = flattenNonAdaAssets;
  exports["getValue"] = getValue;
  exports["lovelaceValueOf"] = lovelaceValueOf;
  exports["singleton"] = singleton;
  exports["singleton'"] = singleton$prime;
  exports["showValue"] = showValue;
  exports["semigroupValue"] = semigroupValue;
  exports["monoidValue"] = monoidValue;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Ctl.Internal.Plutus.Conversion.Value"] = $PS["Ctl.Internal.Plutus.Conversion.Value"] || {};
  var exports = $PS["Ctl.Internal.Plutus.Conversion.Value"];
  var Control_Bind = $PS["Control.Bind"];
  var Ctl_Internal_Cardano_Types_Value = $PS["Ctl.Internal.Cardano.Types.Value"];
  var Ctl_Internal_Plutus_Types_AssocMap = $PS["Ctl.Internal.Plutus.Types.AssocMap"];
  var Ctl_Internal_Plutus_Types_CurrencySymbol = $PS["Ctl.Internal.Plutus.Types.CurrencySymbol"];
  var Ctl_Internal_Plutus_Types_Value = $PS["Ctl.Internal.Plutus.Types.Value"];
  var Ctl_Internal_Types_TokenName = $PS["Ctl.Internal.Types.TokenName"];
  var Data_Array = $PS["Data.Array"];
  var Data_BigInt = $PS["Data.BigInt"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Map_Internal = $PS["Data.Map.Internal"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Semiring = $PS["Data.Semiring"];
  var Data_Traversable = $PS["Data.Traversable"];
  var Data_Tuple = $PS["Data.Tuple"];                
  var toPlutusValue = function (v) {
      var nonAdaValues = Data_Functor.mapFlipped(Data_List_Types.functorList)(Ctl_Internal_Cardano_Types_Value.flattenNonAdaValue(v.value1))(function (v1) {
          return Data_Maybe.fromJust()(Ctl_Internal_Plutus_Types_Value["singleton'"](Ctl_Internal_Cardano_Types_Value.getCurrencySymbol(v1.value0))(Ctl_Internal_Types_TokenName.getTokenName(v1.value1.value0))(v1.value1.value1));
      });
      var adaValue = (function () {
          if (Data_Eq.eq(Data_BigInt.eqBigInt)(v.value0)(Data_Semiring.zero(Data_BigInt.semiringBigInt))) {
              return Data_Monoid.mempty(Ctl_Internal_Plutus_Types_Value.monoidValue);
          };
          if (Data_Boolean.otherwise) {
              return Ctl_Internal_Plutus_Types_Value.lovelaceValueOf(v.value0);
          };
          throw new Error("Failed pattern match at Ctl.Internal.Plutus.Conversion.Value (line 72, column 3 - line 72, column 27): " + [  ]);
      })();
      return Data_Semigroup.append(Ctl_Internal_Plutus_Types_Value.semigroupValue)(adaValue)(Data_Foldable.fold(Data_List_Types.foldableList)(Ctl_Internal_Plutus_Types_Value.monoidValue)(nonAdaValues));
  };
  var fromPlutusValue = function (plutusValue) {
      var v = (function (x) {
          return {
              adaTokenMap: x.yes,
              nonAdaTokenMap: x.no
          };
      })(Data_Array.partition(function (v1) {
          return Data_Eq.eq(Ctl_Internal_Plutus_Types_CurrencySymbol.eqCurrencySymbol)(v1.value0)(Ctl_Internal_Plutus_Types_CurrencySymbol.adaSymbol);
      })(Data_Newtype.unwrap()(Ctl_Internal_Plutus_Types_Value.getValue(plutusValue))));
      var nonAdaAssets = Data_Maybe.fromJust()(Ctl_Internal_Cardano_Types_Value.mkNonAdaAssetsFromTokenMap(Data_Traversable.traversableArray)(Data_Functor.mapFlipped(Data_Functor.functorArray)(v.nonAdaTokenMap)(function (v1) {
          return new Data_Tuple.Tuple(Ctl_Internal_Plutus_Types_CurrencySymbol.getCurrencySymbol(v1.value0), Data_Map_Internal.fromFoldable(Ctl_Internal_Types_TokenName.ordTokenName)(Data_Foldable.foldableArray)(Data_Newtype.unwrap()(v1.value1)));
      })));
      var adaValue = Data_Function.flip(Ctl_Internal_Cardano_Types_Value.mkValue)(Data_Monoid.mempty(Ctl_Internal_Cardano_Types_Value.monoidNonAdaAsset))(Data_Newtype.wrap()(Data_Maybe.fromMaybe(Data_Semiring.zero(Data_BigInt.semiringBigInt))(Control_Bind.bind(Data_Maybe.bindMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Tuple.snd)(Data_Array.head(v.adaTokenMap)))(function (adaTokens) {
          return Ctl_Internal_Plutus_Types_AssocMap.lookup(Ctl_Internal_Types_TokenName.eqTokenName)(Ctl_Internal_Types_TokenName.adaToken)(adaTokens);
      }))));
      return Data_Semigroup.append(Ctl_Internal_Cardano_Types_Value.semigroupValue)(adaValue)(Ctl_Internal_Cardano_Types_Value.mkValue(Data_Monoid.mempty(Ctl_Internal_Cardano_Types_Value.monoidCoin))(nonAdaAssets));
  };
  exports["fromPlutusValue"] = fromPlutusValue;
  exports["toPlutusValue"] = toPlutusValue;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Ctl.Internal.Plutus.Conversion"] = $PS["Ctl.Internal.Plutus.Conversion"] || {};
  var exports = $PS["Ctl.Internal.Plutus.Conversion"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Ctl_Internal_Hashing = $PS["Ctl.Internal.Hashing"];
  var Ctl_Internal_Plutus_Conversion_Address = $PS["Ctl.Internal.Plutus.Conversion.Address"];
  var Ctl_Internal_Plutus_Conversion_Value = $PS["Ctl.Internal.Plutus.Conversion.Value"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Map_Internal = $PS["Data.Map.Internal"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Traversable = $PS["Data.Traversable"];                
  var toPlutusTxOutput = function (cardanoTxOut) {
      var rec = Data_Newtype.unwrap()(cardanoTxOut);
      return Control_Bind.bind(Data_Maybe.bindMaybe)(Ctl_Internal_Plutus_Conversion_Address.toPlutusAddress(rec.address))(function (address) {
          var referenceScript = Data_Functor.map(Data_Maybe.functorMaybe)(Ctl_Internal_Hashing.scriptRefHash)(rec.scriptRef);
          var amount = Ctl_Internal_Plutus_Conversion_Value.toPlutusValue(rec.amount);
          return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(Data_Newtype.wrap()({
              address: address,
              amount: amount,
              datum: rec.datum,
              referenceScript: referenceScript
          }));
      });
  };
  var toPlutusTxOutputWithRefScript = function (cTxOutput) {
      return Data_Functor.mapFlipped(Data_Maybe.functorMaybe)(toPlutusTxOutput(cTxOutput))((function () {
          var $6 = Data_Newtype.wrap();
          return function ($7) {
              return $6((function (v) {
                  return {
                      output: v,
                      scriptRef: (Data_Newtype.unwrap()(cTxOutput)).scriptRef
                  };
              })($7));
          };
      })());
  };
  var toPlutusUtxoMap = Data_Traversable.traverse(Data_Map_Internal.traversableMap)(Data_Maybe.applicativeMaybe)(toPlutusTxOutputWithRefScript);
  var fromPlutusTxOutput = function (networkId) {
      return function (scriptRef) {
          return function (plutusTxOut) {
              var rec = Data_Newtype.unwrap()(plutusTxOut);
              return Data_Newtype.wrap()({
                  address: Ctl_Internal_Plutus_Conversion_Address.fromPlutusAddress(networkId)(rec.address),
                  amount: Ctl_Internal_Plutus_Conversion_Value.fromPlutusValue(rec.amount),
                  datum: rec.datum,
                  scriptRef: scriptRef
              });
          };
      };
  };
  var fromPlutusTxOutputWithRefScript = function (networkId) {
      return function (v) {
          return fromPlutusTxOutput(networkId)(v.scriptRef)(v.output);
      };
  };
  var fromPlutusUtxoMap = function (networkId) {
      return Data_Functor.map(Data_Map_Internal.functorMap)(fromPlutusTxOutputWithRefScript(networkId));
  };
  exports["fromPlutusTxOutputWithRefScript"] = fromPlutusTxOutputWithRefScript;
  exports["fromPlutusUtxoMap"] = fromPlutusUtxoMap;
  exports["toPlutusUtxoMap"] = toPlutusUtxoMap;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Ctl.Internal.Scripts"] = $PS["Ctl.Internal.Scripts"] || {};
  var exports = $PS["Ctl.Internal.Scripts"];
  var Ctl_Internal_Hashing = $PS["Ctl.Internal.Hashing"];
  var Ctl_Internal_NativeScripts = $PS["Ctl.Internal.NativeScripts"];
  var Ctl_Internal_Plutus_Types_CurrencySymbol = $PS["Ctl.Internal.Plutus.Types.CurrencySymbol"];
  var Ctl_Internal_Serialization_Address = $PS["Ctl.Internal.Serialization.Address"];
  var Ctl_Internal_Types_Scripts = $PS["Ctl.Internal.Types.Scripts"];
  var Data_Newtype = $PS["Data.Newtype"];                
  var validatorHashEnterpriseAddress = function (network) {
      return function (valHash) {
          return Ctl_Internal_Serialization_Address.enterpriseAddressToAddress(Ctl_Internal_Serialization_Address.enterpriseAddress({
              network: network,
              paymentCred: Ctl_Internal_Serialization_Address.scriptHashCredential(Data_Newtype.unwrap()(valHash))
          }));
      };
  };
  var validatorHash = (function () {
      var $13 = Data_Newtype.wrap();
      var $14 = Data_Newtype.unwrap();
      return function ($15) {
          return $13(Ctl_Internal_Hashing.plutusScriptHash($14($15)));
      };
  })();
  var typedValidatorEnterpriseAddress = function (network) {
      return function (v) {
          return validatorHashEnterpriseAddress(network)(v.validatorHash);
      };
  };
  var plutusScriptStakeValidatorHash = (function () {
      var $16 = Data_Newtype.wrap();
      var $17 = Data_Newtype.unwrap();
      return function ($18) {
          return $16(Ctl_Internal_Hashing.plutusScriptHash($17($18)));
      };
  })();
  var nativeScriptStakeValidatorHash = (function () {
      var $19 = Data_Newtype.wrap();
      var $20 = Data_Newtype.unwrap();
      var $21 = Data_Newtype.unwrap();
      return function ($22) {
          return $19($20(Ctl_Internal_NativeScripts.nativeScriptHash($21($22))));
      };
  })();
  var mintingPolicyHash = function (v) {
      if (v instanceof Ctl_Internal_Types_Scripts.PlutusMintingPolicy) {
          return Data_Newtype.wrap()(Ctl_Internal_Hashing.plutusScriptHash(v.value0));
      };
      if (v instanceof Ctl_Internal_Types_Scripts.NativeMintingPolicy) {
          return Data_Newtype.wrap()(Data_Newtype.unwrap()(Ctl_Internal_NativeScripts.nativeScriptHash(v.value0)));
      };
      throw new Error("Failed pattern match at Ctl.Internal.Scripts (line 61, column 21 - line 63, column 74): " + [ v.constructor.name ]);
  };
  var scriptCurrencySymbol = function ($23) {
      return Ctl_Internal_Plutus_Types_CurrencySymbol.mpsSymbol(mintingPolicyHash($23));
  };
  exports["mintingPolicyHash"] = mintingPolicyHash;
  exports["nativeScriptStakeValidatorHash"] = nativeScriptStakeValidatorHash;
  exports["plutusScriptStakeValidatorHash"] = plutusScriptStakeValidatorHash;
  exports["scriptCurrencySymbol"] = scriptCurrencySymbol;
  exports["typedValidatorEnterpriseAddress"] = typedValidatorEnterpriseAddress;
  exports["validatorHash"] = validatorHash;
  exports["validatorHashEnterpriseAddress"] = validatorHashEnterpriseAddress;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Ctl.Internal.Transaction"] = $PS["Ctl.Internal.Transaction"] || {};
  var exports = $PS["Ctl.Internal.Transaction"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_Except_Trans = $PS["Control.Monad.Except.Trans"];
  var Ctl_Internal_Cardano_Types_Transaction = $PS["Ctl.Internal.Cardano.Types.Transaction"];
  var Ctl_Internal_Deserialization_WitnessSet = $PS["Ctl.Internal.Deserialization.WitnessSet"];
  var Ctl_Internal_Helpers = $PS["Ctl.Internal.Helpers"];
  var Ctl_Internal_Serialization = $PS["Ctl.Internal.Serialization"];
  var Ctl_Internal_Serialization_PlutusData = $PS["Ctl.Internal.Serialization.PlutusData"];
  var Ctl_Internal_Serialization_PlutusScript = $PS["Ctl.Internal.Serialization.PlutusScript"];
  var Ctl_Internal_Serialization_ToBytes = $PS["Ctl.Internal.Serialization.ToBytes"];
  var Ctl_Internal_Serialization_WitnessSet = $PS["Ctl.Internal.Serialization.WitnessSet"];
  var Data_Array = $PS["Data.Array"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Either = $PS["Data.Either"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Generic_Rep = $PS["Data.Generic.Rep"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Show_Generic = $PS["Data.Show.Generic"];
  var Data_Traversable = $PS["Data.Traversable"];
  var Effect = $PS["Effect"];
  var Effect_Class = $PS["Effect.Class"];                
  var ConvertWitnessesError = (function () {
      function ConvertWitnessesError() {

      };
      ConvertWitnessesError.value = new ConvertWitnessesError();
      return ConvertWitnessesError;
  })();
  var ConvertDatumError = (function () {
      function ConvertDatumError() {

      };
      ConvertDatumError.value = new ConvertDatumError();
      return ConvertDatumError;
  })();
  var genericModifyTxError_ = {
      to: function (x) {
          if (x instanceof Data_Generic_Rep.Inl) {
              return ConvertWitnessesError.value;
          };
          if (x instanceof Data_Generic_Rep.Inr) {
              return ConvertDatumError.value;
          };
          throw new Error("Failed pattern match at Ctl.Internal.Transaction (line 46, column 1 - line 46, column 40): " + [ x.constructor.name ]);
      },
      from: function (x) {
          if (x instanceof ConvertWitnessesError) {
              return new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value);
          };
          if (x instanceof ConvertDatumError) {
              return new Data_Generic_Rep.Inr(Data_Generic_Rep.NoArguments.value);
          };
          throw new Error("Failed pattern match at Ctl.Internal.Transaction (line 46, column 1 - line 46, column 40): " + [ x.constructor.name ]);
      }
  };
  var showModifyTxError = {
      show: Data_Show_Generic.genericShow(genericModifyTxError_)(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsNoArguments)({
          reflectSymbol: function () {
              return "ConvertWitnessesError";
          }
      }))(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsNoArguments)({
          reflectSymbol: function () {
              return "ConvertDatumError";
          }
      })))
  };
  var updateTxWithWitnesses = function (v) {
      return function (ws) {
          return Ctl_Internal_Helpers.liftEither(Control_Monad_Except_Trans.monadErrorExceptT(Effect.monadEffect))(new Data_Either.Right(Data_Newtype.over()()(Ctl_Internal_Cardano_Types_Transaction.Transaction)(function (v1) {
              return {
                  witnessSet: Data_Semigroup.append(Ctl_Internal_Cardano_Types_Transaction.semigroupTransactionWitne)(v.witnessSet)(ws),
                  auxiliaryData: v1.auxiliaryData,
                  body: v1.body,
                  isValid: v1.isValid
              };
          })(v)));
      };
  };
  var setScriptDataHash = function (costModels) {
      return function (rs) {
          return function (ds) {
              return function (v) {
                  var v1 = function (v2) {
                      if (Data_Boolean.otherwise) {
                          return function __do() {
                              var scriptDataHash = Data_Functor.map(Effect.functorEffect)((function () {
                                  var $50 = Data_Newtype.unwrap();
                                  var $51 = Ctl_Internal_Serialization_ToBytes.toBytes();
                                  return function ($52) {
                                      return Ctl_Internal_Cardano_Types_Transaction.ScriptDataHash($50($51($52)));
                                  };
                              })())(Ctl_Internal_Serialization.hashScriptData(costModels)(rs)(Data_Functor.map(Data_Functor.functorArray)(Data_Newtype.unwrap())(ds)))();
                              return Data_Newtype.over()()(Ctl_Internal_Cardano_Types_Transaction.Transaction)(function (v3) {
                                  return {
                                      body: Data_Newtype.over()()(Ctl_Internal_Cardano_Types_Transaction.TxBody)(function (v4) {
                                          return {
                                              scriptDataHash: new Data_Maybe.Just(scriptDataHash),
                                              auxiliaryDataHash: v4.auxiliaryDataHash,
                                              certs: v4.certs,
                                              collateral: v4.collateral,
                                              collateralReturn: v4.collateralReturn,
                                              fee: v4.fee,
                                              inputs: v4.inputs,
                                              mint: v4.mint,
                                              networkId: v4.networkId,
                                              outputs: v4.outputs,
                                              referenceInputs: v4.referenceInputs,
                                              requiredSigners: v4.requiredSigners,
                                              totalCollateral: v4.totalCollateral,
                                              ttl: v4.ttl,
                                              update: v4.update,
                                              validityStartInterval: v4.validityStartInterval,
                                              withdrawals: v4.withdrawals
                                          };
                                      })(v.body),
                                      auxiliaryData: v3.auxiliaryData,
                                      isValid: v3.isValid,
                                      witnessSet: v3.witnessSet
                                  };
                              })(v);
                          };
                      };
                      throw new Error("Failed pattern match at Ctl.Internal.Transaction (line 54, column 1 - line 59, column 24): " + [ costModels.constructor.name, rs.constructor.name, ds.constructor.name, v.constructor.name ]);
                  };
                  var $36 = Data_Foldable["null"](Data_Foldable.foldableMaybe)((Data_Newtype.unwrap()(v.witnessSet)).plutusScripts);
                  if ($36) {
                      var $37 = Data_Foldable["null"](Data_Foldable.foldableArray)(rs);
                      if ($37) {
                          var $38 = Data_Foldable["null"](Data_Foldable.foldableArray)(ds);
                          if ($38) {
                              return Control_Applicative.pure(Effect.applicativeEffect)(v);
                          };
                          return v1(true);
                      };
                      return v1(true);
                  };
                  return v1(true);
              };
          };
      };
  };
  var convertWitnessesWith = function (ws) {
      return function (act) {
          return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Effect.monadEffect))(Effect_Class.liftEffect(Control_Monad_Except_Trans.monadEffectExceptT(Effect_Class.monadEffectEffect))(Ctl_Internal_Serialization_WitnessSet.convertWitnessSet(ws)))(function (ws$prime) {
              return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Except_Trans.bindExceptT(Effect.monadEffect))(Effect_Class.liftEffect(Control_Monad_Except_Trans.monadEffectExceptT(Effect_Class.monadEffectEffect))(act(ws$prime)))(function () {
                  return Ctl_Internal_Helpers.liftEither(Control_Monad_Except_Trans.monadErrorExceptT(Effect.monadEffect))(Data_Either.note(ConvertWitnessesError.value)(Ctl_Internal_Deserialization_WitnessSet.convertWitnessSet(ws$prime)));
              });
          });
      };
  };
  var attachRedeemers = function (rs) {
      return function (v) {
          return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Effect.monadEffect))(Effect_Class.liftEffect(Control_Monad_Except_Trans.monadEffectExceptT(Effect_Class.monadEffectEffect))(Data_Traversable.traverse(Data_Traversable.traversableArray)(Effect.applicativeEffect)(Ctl_Internal_Serialization_WitnessSet.convertRedeemer)(rs)))(function (rs$prime) {
              return Control_Bind.bindFlipped(Control_Monad_Except_Trans.bindExceptT(Effect.monadEffect))(updateTxWithWitnesses(v))(convertWitnessesWith(v.witnessSet)(Ctl_Internal_Serialization_WitnessSet.setRedeemers(rs$prime)));
          });
      };
  };
  var attachRedeemer = function (r) {
      var $53 = attachRedeemers(Data_Array.singleton(r));
      return function ($54) {
          return Control_Monad_Except_Trans.runExceptT($53($54));
      };
  };
  var attachPlutusScripts = function (ps) {
      return function (v) {
          var ps$prime = Data_Functor.map(Data_Functor.functorArray)(Ctl_Internal_Serialization_PlutusScript.convertPlutusScript)(ps);
          return Control_Bind.bindFlipped(Control_Monad_Except_Trans.bindExceptT(Effect.monadEffect))(updateTxWithWitnesses(v))(convertWitnessesWith(v.witnessSet)(Ctl_Internal_Serialization_WitnessSet.setPlutusScripts(ps$prime)));
      };
  };
  var attachPlutusScript = function (ps) {
      var $55 = attachPlutusScripts(Data_Array.singleton(ps));
      return function ($56) {
          return Control_Monad_Except_Trans.runExceptT($55($56));
      };
  };
  var attachNativeScript = function (ns) {
      return function (tx) {
          return Control_Monad_Except_Trans.runExceptT(updateTxWithWitnesses(tx)(Data_Newtype.over()()(Ctl_Internal_Cardano_Types_Transaction.TransactionWitnessSet)(function (v) {
              return {
                  nativeScripts: new Data_Maybe.Just([ ns ]),
                  bootstraps: v.bootstraps,
                  plutusData: v.plutusData,
                  plutusScripts: v.plutusScripts,
                  redeemers: v.redeemers,
                  vkeys: v.vkeys
              };
          })(Data_Monoid.mempty(Ctl_Internal_Cardano_Types_Transaction.monoidTransactionWitnessS))));
      };
  };
  var attachDatums = function (v) {
      return function (v1) {
          if (v.length === 0) {
              return Ctl_Internal_Helpers.liftEither(Control_Monad_Except_Trans.monadErrorExceptT(Effect.monadEffect))(new Data_Either.Right(v1));
          };
          var ds = Data_Functor.map(Data_Functor.functorArray)((function () {
              var $57 = Data_Newtype.unwrap();
              return function ($58) {
                  return Ctl_Internal_Serialization_PlutusData.convertPlutusData($57($58));
              };
          })())(v);
          return Control_Bind.bindFlipped(Control_Monad_Except_Trans.bindExceptT(Effect.monadEffect))(updateTxWithWitnesses(v1))(convertWitnessesWith(v1.witnessSet)(Ctl_Internal_Serialization_WitnessSet.setPlutusData(ds)));
      };
  };
  var attachDatum = function (d) {
      var $59 = attachDatums(Data_Array.singleton(d));
      return function ($60) {
          return Control_Monad_Except_Trans.runExceptT($59($60));
      };
  };
  exports["attachDatum"] = attachDatum;
  exports["attachRedeemer"] = attachRedeemer;
  exports["attachPlutusScript"] = attachPlutusScript;
  exports["attachNativeScript"] = attachNativeScript;
  exports["setScriptDataHash"] = setScriptDataHash;
  exports["showModifyTxError"] = showModifyTxError;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Ctl.Internal.Types.Interval"] = $PS["Ctl.Internal.Types.Interval"] || {};
  var exports = $PS["Ctl.Internal.Types.Interval"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_Error_Class = $PS["Control.Monad.Error.Class"];
  var Control_Monad_Except_Trans = $PS["Control.Monad.Except.Trans"];
  var Ctl_Internal_Helpers = $PS["Ctl.Internal.Helpers"];
  var Ctl_Internal_QueryM_Ogmios = $PS["Ctl.Internal.QueryM.Ogmios"];
  var Ctl_Internal_Serialization_Address = $PS["Ctl.Internal.Serialization.Address"];
  var Ctl_Internal_Types_BigNum = $PS["Ctl.Internal.Types.BigNum"];
  var Ctl_Internal_Types_SystemStart = $PS["Ctl.Internal.Types.SystemStart"];
  var Data_Array = $PS["Data.Array"];
  var Data_BigInt = $PS["Data.BigInt"];
  var Data_Either = $PS["Data.Either"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Generic_Rep = $PS["Data.Generic.Rep"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Ring = $PS["Data.Ring"];
  var Data_Semiring = $PS["Data.Semiring"];
  var Data_Show = $PS["Data.Show"];
  var Data_Show_Generic = $PS["Data.Show.Generic"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Effect = $PS["Effect"];
  var $$Math = $PS["Math"];
  var FiniteInterval = (function () {
      function FiniteInterval(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      FiniteInterval.create = function (value0) {
          return function (value1) {
              return new FiniteInterval(value0, value1);
          };
      };
      return FiniteInterval;
  })();
  var StartAt = (function () {
      function StartAt(value0) {
          this.value0 = value0;
      };
      StartAt.create = function (value0) {
          return new StartAt(value0);
      };
      return StartAt;
  })();
  var EndAt = (function () {
      function EndAt(value0) {
          this.value0 = value0;
      };
      EndAt.create = function (value0) {
          return new EndAt(value0);
      };
      return EndAt;
  })();
  var AlwaysInterval = (function () {
      function AlwaysInterval() {

      };
      AlwaysInterval.value = new AlwaysInterval();
      return AlwaysInterval;
  })();
  var EmptyInterval = (function () {
      function EmptyInterval() {

      };
      EmptyInterval.value = new EmptyInterval();
      return EmptyInterval;
  })();
  var CannotFindTimeInEraSummaries = (function () {
      function CannotFindTimeInEraSummaries(value0) {
          this.value0 = value0;
      };
      CannotFindTimeInEraSummaries.create = function (value0) {
          return new CannotFindTimeInEraSummaries(value0);
      };
      return CannotFindTimeInEraSummaries;
  })();
  var PosixTimeBeforeSystemStart = (function () {
      function PosixTimeBeforeSystemStart(value0) {
          this.value0 = value0;
      };
      PosixTimeBeforeSystemStart.create = function (value0) {
          return new PosixTimeBeforeSystemStart(value0);
      };
      return PosixTimeBeforeSystemStart;
  })();
  var StartTimeGreaterThanTime = (function () {
      function StartTimeGreaterThanTime(value0) {
          this.value0 = value0;
      };
      StartTimeGreaterThanTime.create = function (value0) {
          return new StartTimeGreaterThanTime(value0);
      };
      return StartTimeGreaterThanTime;
  })();
  var EndSlotLessThanSlotOrModNonZero = (function () {
      function EndSlotLessThanSlotOrModNonZero(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      EndSlotLessThanSlotOrModNonZero.create = function (value0) {
          return function (value1) {
              return new EndSlotLessThanSlotOrModNonZero(value0, value1);
          };
      };
      return EndSlotLessThanSlotOrModNonZero;
  })();
  var CannotGetBigIntFromNumber$prime = (function () {
      function CannotGetBigIntFromNumber$prime() {

      };
      CannotGetBigIntFromNumber$prime.value = new CannotGetBigIntFromNumber$prime();
      return CannotGetBigIntFromNumber$prime;
  })();
  var CannotGetBigNumFromBigInt$prime = (function () {
      function CannotGetBigNumFromBigInt$prime() {

      };
      CannotGetBigNumFromBigInt$prime.value = new CannotGetBigNumFromBigInt$prime();
      return CannotGetBigNumFromBigInt$prime;
  })();
  var showPOSIXTime = {
      show: function (v) {
          return Ctl_Internal_Helpers.showWithParens(Data_BigInt.showBigInt)("POSIXTime")(v);
      }
  };
  var showModTime = {
      show: function (v) {
          return Ctl_Internal_Helpers.showWithParens(Data_BigInt.showBigInt)("ModTime")(v);
      }
  };
  var showInterval = function (dictShow) {
      return function (dictOrd) {
          return function (dictSemiring) {
              return {
                  show: function (v) {
                      if (v instanceof FiniteInterval) {
                          return "(FiniteInterval " + (Data_Show.show(dictShow)(v.value0) + (" " + (Data_Show.show(dictShow)(v.value1) + ")")));
                      };
                      if (v instanceof StartAt) {
                          return "(StartAt " + (Data_Show.show(dictShow)(v.value0) + ")");
                      };
                      if (v instanceof EndAt) {
                          return "(EndAt " + (Data_Show.show(dictShow)(v.value0) + ")");
                      };
                      if (v instanceof AlwaysInterval) {
                          return "AlwaysInterval";
                      };
                      if (v instanceof EmptyInterval) {
                          return "EmptyInterval";
                      };
                      throw new Error("Failed pattern match at Ctl.Internal.Types.Interval (line 264, column 1 - line 271, column 39): " + [ v.constructor.name ]);
                  }
              };
          };
      };
  };
  var showAbsTime = {
      show: function (v) {
          return Ctl_Internal_Helpers.showWithParens(Data_BigInt.showBigInt)("AbsTime")(v);
      }
  };
  var semiringPOSIXTime = Data_BigInt.semiringBigInt;
  var ordPOSIXTime = Data_BigInt.ordBigInt;
  var genericPosixTimeToSlotErr = {
      to: function (x) {
          if (x instanceof Data_Generic_Rep.Inl) {
              return new CannotFindTimeInEraSummaries(x.value0);
          };
          if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inl) {
              return new PosixTimeBeforeSystemStart(x.value0.value0);
          };
          if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0 instanceof Data_Generic_Rep.Inl)) {
              return new StartTimeGreaterThanTime(x.value0.value0.value0);
          };
          if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0 instanceof Data_Generic_Rep.Inl))) {
              return new EndSlotLessThanSlotOrModNonZero(x.value0.value0.value0.value0.value0, x.value0.value0.value0.value0.value1);
          };
          if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl)))) {
              return CannotGetBigIntFromNumber$prime.value;
          };
          if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr)))) {
              return CannotGetBigNumFromBigInt$prime.value;
          };
          throw new Error("Failed pattern match at Ctl.Internal.Types.Interval (line 859, column 1 - line 859, column 47): " + [ x.constructor.name ]);
      },
      from: function (x) {
          if (x instanceof CannotFindTimeInEraSummaries) {
              return new Data_Generic_Rep.Inl(x.value0);
          };
          if (x instanceof PosixTimeBeforeSystemStart) {
              return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0));
          };
          if (x instanceof StartTimeGreaterThanTime) {
              return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0)));
          };
          if (x instanceof EndSlotLessThanSlotOrModNonZero) {
              return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(new Data_Generic_Rep.Product(x.value0, x.value1)))));
          };
          if (x instanceof CannotGetBigIntFromNumber$prime) {
              return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value)))));
          };
          if (x instanceof CannotGetBigNumFromBigInt$prime) {
              return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(Data_Generic_Rep.NoArguments.value)))));
          };
          throw new Error("Failed pattern match at Ctl.Internal.Types.Interval (line 859, column 1 - line 859, column 47): " + [ x.constructor.name ]);
      }
  };
  var showPosixTimeToSlotError = {
      show: Data_Show_Generic.genericShow(genericPosixTimeToSlotErr)(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(showAbsTime))({
          reflectSymbol: function () {
              return "CannotFindTimeInEraSummaries";
          }
      }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(showPOSIXTime))({
          reflectSymbol: function () {
              return "PosixTimeBeforeSystemStart";
          }
      }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(showAbsTime))({
          reflectSymbol: function () {
              return "StartTimeGreaterThanTime";
          }
      }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsProduct(Data_Show_Generic.genericShowArgsArgument(Ctl_Internal_Serialization_Address.showSlot))(Data_Show_Generic.genericShowArgsArgument(showModTime)))({
          reflectSymbol: function () {
              return "EndSlotLessThanSlotOrModNonZero";
          }
      }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsNoArguments)({
          reflectSymbol: function () {
              return "CannotGetBigIntFromNumber'";
          }
      }))(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsNoArguments)({
          reflectSymbol: function () {
              return "CannotGetBigNumFromBigInt'";
          }
      })))))))
  };
  var functorInterval = {
      map: function (f) {
          return function (m) {
              if (m instanceof FiniteInterval) {
                  return new FiniteInterval(f(m.value0), f(m.value1));
              };
              if (m instanceof StartAt) {
                  return new StartAt(f(m.value0));
              };
              if (m instanceof EndAt) {
                  return new EndAt(f(m.value0));
              };
              if (m instanceof AlwaysInterval) {
                  return AlwaysInterval.value;
              };
              if (m instanceof EmptyInterval) {
                  return EmptyInterval.value;
              };
              throw new Error("Failed pattern match at Ctl.Internal.Types.Interval (line 262, column 1 - line 262, column 33): " + [ m.constructor.name ]);
          };
      }
  };
  var slotFromRelSlot = function (v) {
      return function (v1) {
          var startSlot = Ctl_Internal_Types_BigNum.toBigInt(Data_Newtype.unwrap()((Data_Newtype.unwrap()(v.start)).slot));
          var slot = Data_Semiring.add(Data_BigInt.semiringBigInt)(startSlot)(v1.value0);
          var endSlot = Data_Maybe.maybe(Data_Semiring.add(Data_BigInt.semiringBigInt)(slot)(Data_Semiring.one(Data_BigInt.semiringBigInt)))((function () {
              var $838 = Data_Newtype.unwrap();
              var $839 = Data_Newtype.unwrap();
              return function ($840) {
                  return Ctl_Internal_Types_BigNum.toBigInt($838((function (v2) {
                      return v2.slot;
                  })($839($840))));
              };
          })())(v.end);
          return Control_Bind.bind(Data_Either.bindEither)(Ctl_Internal_Helpers.liftM(Control_Monad_Error_Class.monadErrorEither)(CannotGetBigNumFromBigInt$prime.value)(Ctl_Internal_Types_BigNum.fromBigInt(slot)))(function (bnSlot) {
              return Control_Bind.discard(Control_Bind.discardUnit)(Data_Either.bindEither)(Control_Applicative.unless(Data_Either.applicativeEither)(Data_Ord.lessThan(Data_BigInt.ordBigInt)(slot)(endSlot) || Data_Eq.eq(Data_BigInt.eqBigInt)(slot)(endSlot) && Data_Eq.eq(Data_BigInt.eqBigInt)(v1.value1)(Data_Semiring.zero(Data_BigInt.semiringBigInt)))(Control_Monad_Error_Class.throwError(Control_Monad_Error_Class.monadThrowEither)(new EndSlotLessThanSlotOrModNonZero(Data_Newtype.wrap()(bnSlot), v1.value1))))(function () {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(Data_Newtype.wrap()(bnSlot));
              });
          });
      };
  };
  var sequenceInterval = function (dictApplicative) {
      return function (v) {
          if (v instanceof FiniteInterval) {
              return Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map((dictApplicative.Apply0()).Functor0())(FiniteInterval.create)(v.value0))(v.value1);
          };
          if (v instanceof StartAt) {
              return Data_Functor.map((dictApplicative.Apply0()).Functor0())(StartAt.create)(v.value0);
          };
          if (v instanceof EndAt) {
              return Data_Functor.map((dictApplicative.Apply0()).Functor0())(EndAt.create)(v.value0);
          };
          if (v instanceof EmptyInterval) {
              return Control_Applicative.pure(dictApplicative)(EmptyInterval.value);
          };
          if (v instanceof AlwaysInterval) {
              return Control_Applicative.pure(dictApplicative)(AlwaysInterval.value);
          };
          throw new Error("Failed pattern match at Ctl.Internal.Types.Interval (line 1043, column 1 - line 1047, column 20): " + [ v.constructor.name ]);
      };
  };
  var relTimeFromAbsTime = function (v) {
      return function (v1) {
          var startTime = Data_Newtype.unwrap()((Data_Newtype.unwrap()(v.start)).time) * Ctl_Internal_QueryM_Ogmios.slotLengthFactor;
          return Control_Bind.discard(Control_Bind.discardUnit)(Data_Either.bindEither)(Control_Applicative.unless(Data_Either.applicativeEither)(startTime <= Data_BigInt.toNumber(v1))(Control_Monad_Error_Class.throwError(Control_Monad_Error_Class.monadThrowEither)(new StartTimeGreaterThanTime(v1))))(function () {
              var relTime = Data_BigInt.toNumber(v1) - startTime;
              return Data_Functor.map(Data_Either.functorEither)(Data_Newtype.wrap())(Data_Either.note(CannotGetBigIntFromNumber$prime.value)(Data_BigInt.fromNumber($$Math.trunc(relTime))));
          });
      };
  };
  var mkFiniteInterval = function (dictOrd) {
      return function (x) {
          return function (y) {
              var $620 = Data_Ord.lessThanOrEq(dictOrd)(x)(y);
              if ($620) {
                  return new FiniteInterval(x, y);
              };
              return EmptyInterval.value;
          };
      };
  };
  var maxSlot = Data_Newtype.wrap()(Ctl_Internal_Types_BigNum.maxValue);
  var slotRangeToTransactionValidity = function (v) {
      if (v instanceof FiniteInterval) {
          return {
              validityStartInterval: Control_Applicative.pure(Data_Maybe.applicativeMaybe)(v.value0),
              timeToLive: Data_Functor.map(Data_Maybe.functorMaybe)(Data_Newtype.wrap())(Ctl_Internal_Types_BigNum.add(Ctl_Internal_Types_BigNum.one)(Data_Newtype.unwrap()(v.value1)))
          };
      };
      if (v instanceof StartAt) {
          return {
              validityStartInterval: Data_Maybe.Nothing.value,
              timeToLive: Data_Functor.map(Data_Maybe.functorMaybe)(Data_Newtype.wrap())(Ctl_Internal_Types_BigNum.add(Ctl_Internal_Types_BigNum.one)(Data_Newtype.unwrap()(v.value0)))
          };
      };
      if (v instanceof EndAt) {
          return {
              validityStartInterval: Control_Applicative.pure(Data_Maybe.applicativeMaybe)(v.value0),
              timeToLive: Data_Maybe.Nothing.value
          };
      };
      if (v instanceof AlwaysInterval) {
          return {
              validityStartInterval: Data_Maybe.Nothing.value,
              timeToLive: Data_Maybe.Nothing.value
          };
      };
      if (v instanceof EmptyInterval) {
          return {
              validityStartInterval: Control_Applicative.pure(Data_Maybe.applicativeMaybe)(maxSlot),
              timeToLive: Control_Applicative.pure(Data_Maybe.applicativeMaybe)(Data_Newtype.wrap()(Ctl_Internal_Types_BigNum.zero))
          };
      };
      throw new Error("Failed pattern match at Ctl.Internal.Types.Interval (line 1089, column 1 - line 1091, column 29): " + [ v.constructor.name ]);
  };                                                                                               
  var isEmpty = function (dictOrd) {
      return function (v) {
          if (v instanceof FiniteInterval) {
              return Data_Ord.lessThan(dictOrd)(v.value1)(v.value0);
          };
          if (v instanceof EmptyInterval) {
              return true;
          };
          return false;
      };
  };
  var intersection = function ($copy_dictOrd) {
      return function ($copy_v) {
          return function ($copy_v1) {
              var $tco_var_dictOrd = $copy_dictOrd;
              var $tco_var_v = $copy_v;
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(dictOrd, v, v1) {
                  if (v instanceof FiniteInterval && v1 instanceof FiniteInterval) {
                      $tco_done = true;
                      return mkFiniteInterval(dictOrd)(Data_Ord.max(dictOrd)(v.value0)(v1.value0))(Data_Ord.min(dictOrd)(v.value1)(v1.value1));
                  };
                  if (v instanceof FiniteInterval && v1 instanceof StartAt) {
                      $tco_done = true;
                      return mkFiniteInterval(dictOrd)(v.value0)(Data_Ord.min(dictOrd)(v.value1)(v1.value0));
                  };
                  if (v instanceof FiniteInterval && v1 instanceof EndAt) {
                      $tco_done = true;
                      return mkFiniteInterval(dictOrd)(Data_Ord.max(dictOrd)(v.value0)(v1.value0))(v.value1);
                  };
                  if (v instanceof StartAt && v1 instanceof StartAt) {
                      $tco_done = true;
                      return new StartAt(Data_Ord.min(dictOrd)(v.value0)(v1.value0));
                  };
                  if (v instanceof StartAt && v1 instanceof EndAt) {
                      $tco_done = true;
                      return mkFiniteInterval(dictOrd)(v1.value0)(v.value0);
                  };
                  if (v instanceof EndAt && v1 instanceof EndAt) {
                      $tco_done = true;
                      return new EndAt(Data_Ord.max(dictOrd)(v.value0)(v1.value0));
                  };
                  if (v instanceof AlwaysInterval) {
                      $tco_done = true;
                      return v1;
                  };
                  if (v instanceof EmptyInterval) {
                      $tco_done = true;
                      return EmptyInterval.value;
                  };
                  $tco_var_dictOrd = dictOrd;
                  $tco_var_v = v1;
                  $copy_v1 = v;
                  return;
              };
              while (!$tco_done) {
                  $tco_result = $tco_loop($tco_var_dictOrd, $tco_var_v, $copy_v1);
              };
              return $tco_result;
          };
      };
  };
  var getSlotLength = function (v) {
      return Data_Newtype.unwrap()((Data_Newtype.unwrap()(v.parameters)).slotLength);
  };
  var relSlotFromRelTime = function (eraSummary) {
      return function (v) {
          var slotLength = getSlotLength(eraSummary);
          var relSlot = Data_Functor.map(Data_Maybe.functorMaybe)(Data_Newtype.wrap())(Data_BigInt.fromNumber($$Math.trunc(Data_BigInt.toNumber(v) / slotLength)));
          var modTime = Data_Functor.map(Data_Maybe.functorMaybe)(Data_Newtype.wrap())(Data_BigInt.fromNumber($$Math.remainder(Data_BigInt.toNumber(v))(slotLength)));
          return Control_Apply.apply(Data_Maybe.applyMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Tuple.Tuple.create)(relSlot))(modTime);
      };
  };
  var findTimeEraSummary = function (v) {
      return function (v1) {
          var pred = function (v2) {
              var numberAt = Data_BigInt.toNumber(v1);
              return Data_Newtype.unwrap()((Data_Newtype.unwrap()(v2.start)).time) * Ctl_Internal_QueryM_Ogmios.slotLengthFactor <= numberAt && Data_Maybe.maybe(true)((function () {
                  var $844 = Data_Ord.lessThan(Data_Ord.ordNumber)(numberAt);
                  var $845 = Data_Semiring.mul(Data_Semiring.semiringNumber)(Ctl_Internal_QueryM_Ogmios.slotLengthFactor);
                  var $846 = Data_Newtype.unwrap();
                  var $847 = Data_Newtype.unwrap();
                  return function ($848) {
                      return $844($845($846((function (v3) {
                          return v3.time;
                      })($847($848)))));
                  };
              })())(v2.end);
          };
          return Data_Either.note(new CannotFindTimeInEraSummaries(v1))(Data_Array.find(pred)(v));
      };
  };
  var posixTimeToSlot = function (eraSummaries) {
      return function (sysStart) {
          return function (v) {
              return Control_Monad_Except_Trans.runExceptT(Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Effect.monadEffect))(Ctl_Internal_Helpers.liftM(Control_Monad_Except_Trans.monadErrorExceptT(Effect.monadEffect))(CannotGetBigIntFromNumber$prime.value)(Ctl_Internal_Types_SystemStart.sysStartUnixTime(sysStart)))(function (sysStartPosix) {
                  return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Except_Trans.bindExceptT(Effect.monadEffect))(Control_Applicative.unless(Control_Monad_Except_Trans.applicativeExceptT(Effect.monadEffect))(Data_Ord.lessThanOrEq(Data_BigInt.ordBigInt)(sysStartPosix)(v))(Control_Monad_Error_Class.throwError(Control_Monad_Except_Trans.monadThrowExceptT(Effect.monadEffect))(new PosixTimeBeforeSystemStart(v))))(function () {
                      var absTime = Data_Newtype.wrap()(Data_Ring.sub(Data_BigInt.ringBigInt)(v)(sysStartPosix));
                      return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Effect.monadEffect))(Ctl_Internal_Helpers.liftEither(Control_Monad_Except_Trans.monadErrorExceptT(Effect.monadEffect))(findTimeEraSummary(eraSummaries)(absTime)))(function (currentEra) {
                          return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Effect.monadEffect))(Ctl_Internal_Helpers.liftEither(Control_Monad_Except_Trans.monadErrorExceptT(Effect.monadEffect))(relTimeFromAbsTime(currentEra)(absTime)))(function (relTime) {
                              return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Effect.monadEffect))(Ctl_Internal_Helpers.liftM(Control_Monad_Except_Trans.monadErrorExceptT(Effect.monadEffect))(CannotGetBigIntFromNumber$prime.value)(relSlotFromRelTime(currentEra)(relTime)))(function (relSlotMod) {
                                  return Ctl_Internal_Helpers.liftEither(Control_Monad_Except_Trans.monadErrorExceptT(Effect.monadEffect))(slotFromRelSlot(currentEra)(relSlotMod));
                              });
                          });
                      });
                  });
              }));
          };
      };
  };
  var posixTimeRangeToSlotRange = function (eraSummaries) {
      return function (sysStart) {
          return function (range) {
              return Data_Functor.map(Effect.functorEffect)(sequenceInterval(Data_Either.applicativeEither))(sequenceInterval(Effect.applicativeEffect)(Data_Functor.map(functorInterval)(posixTimeToSlot(eraSummaries)(sysStart))(range)));
          };
      };
  };
  var posixTimeRangeToTransactionValidity = function (es) {
      return function (ss) {
          var $849 = Data_Functor.map(Effect.functorEffect)(Data_Functor.map(Data_Either.functorEither)(slotRangeToTransactionValidity));
          var $850 = posixTimeRangeToSlotRange(es)(ss);
          return function ($851) {
              return $849($850($851));
          };
      };
  };
  var always = function (dictOrd) {
      return AlwaysInterval.value;
  };
  exports["always"] = always;
  exports["intersection"] = intersection;
  exports["isEmpty"] = isEmpty;
  exports["posixTimeRangeToTransactionValidity"] = posixTimeRangeToTransactionValidity;
  exports["showInterval"] = showInterval;
  exports["ordPOSIXTime"] = ordPOSIXTime;
  exports["semiringPOSIXTime"] = semiringPOSIXTime;
  exports["showPOSIXTime"] = showPOSIXTime;
  exports["showPosixTimeToSlotError"] = showPosixTimeToSlotError;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Ctl.Internal.Types.TxConstraints"] = $PS["Ctl.Internal.Types.TxConstraints"] || {};
  var exports = $PS["Ctl.Internal.Types.TxConstraints"];
  var Ctl_Internal_Plutus_Types_CurrencySymbol = $PS["Ctl.Internal.Plutus.Types.CurrencySymbol"];
  var Ctl_Internal_Plutus_Types_Value = $PS["Ctl.Internal.Plutus.Types.Value"];
  var Data_Array = $PS["Data.Array"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Map_Internal = $PS["Data.Map.Internal"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var RefInput = (function () {
      function RefInput(value0) {
          this.value0 = value0;
      };
      RefInput.create = function (value0) {
          return new RefInput(value0);
      };
      return RefInput;
  })();
  var SpendInput = (function () {
      function SpendInput(value0) {
          this.value0 = value0;
      };
      SpendInput.create = function (value0) {
          return new SpendInput(value0);
      };
      return SpendInput;
  })();
  var DatumInline = (function () {
      function DatumInline() {

      };
      DatumInline.value = new DatumInline();
      return DatumInline;
  })();
  var DatumWitness = (function () {
      function DatumWitness() {

      };
      DatumWitness.value = new DatumWitness();
      return DatumWitness;
  })();
  var MustIncludeDatum = (function () {
      function MustIncludeDatum(value0) {
          this.value0 = value0;
      };
      MustIncludeDatum.create = function (value0) {
          return new MustIncludeDatum(value0);
      };
      return MustIncludeDatum;
  })();
  var MustValidateIn = (function () {
      function MustValidateIn(value0) {
          this.value0 = value0;
      };
      MustValidateIn.create = function (value0) {
          return new MustValidateIn(value0);
      };
      return MustValidateIn;
  })();
  var MustBeSignedBy = (function () {
      function MustBeSignedBy(value0) {
          this.value0 = value0;
      };
      MustBeSignedBy.create = function (value0) {
          return new MustBeSignedBy(value0);
      };
      return MustBeSignedBy;
  })();
  var MustSpendAtLeast = (function () {
      function MustSpendAtLeast(value0) {
          this.value0 = value0;
      };
      MustSpendAtLeast.create = function (value0) {
          return new MustSpendAtLeast(value0);
      };
      return MustSpendAtLeast;
  })();
  var MustProduceAtLeast = (function () {
      function MustProduceAtLeast(value0) {
          this.value0 = value0;
      };
      MustProduceAtLeast.create = function (value0) {
          return new MustProduceAtLeast(value0);
      };
      return MustProduceAtLeast;
  })();
  var MustSpendPubKeyOutput = (function () {
      function MustSpendPubKeyOutput(value0) {
          this.value0 = value0;
      };
      MustSpendPubKeyOutput.create = function (value0) {
          return new MustSpendPubKeyOutput(value0);
      };
      return MustSpendPubKeyOutput;
  })();
  var MustSpendNativeScriptOutput = (function () {
      function MustSpendNativeScriptOutput(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      MustSpendNativeScriptOutput.create = function (value0) {
          return function (value1) {
              return new MustSpendNativeScriptOutput(value0, value1);
          };
      };
      return MustSpendNativeScriptOutput;
  })();
  var MustSpendScriptOutput = (function () {
      function MustSpendScriptOutput(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      MustSpendScriptOutput.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new MustSpendScriptOutput(value0, value1, value2);
              };
          };
      };
      return MustSpendScriptOutput;
  })();
  var MustReferenceOutput = (function () {
      function MustReferenceOutput(value0) {
          this.value0 = value0;
      };
      MustReferenceOutput.create = function (value0) {
          return new MustReferenceOutput(value0);
      };
      return MustReferenceOutput;
  })();
  var MustMintValue = (function () {
      function MustMintValue(value0, value1, value2, value3, value4) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
          this.value4 = value4;
      };
      MustMintValue.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return function (value4) {
                          return new MustMintValue(value0, value1, value2, value3, value4);
                      };
                  };
              };
          };
      };
      return MustMintValue;
  })();
  var MustMintValueUsingNativeScript = (function () {
      function MustMintValueUsingNativeScript(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      MustMintValueUsingNativeScript.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new MustMintValueUsingNativeScript(value0, value1, value2);
              };
          };
      };
      return MustMintValueUsingNativeScript;
  })();
  var MustPayToPubKeyAddress = (function () {
      function MustPayToPubKeyAddress(value0, value1, value2, value3, value4) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
          this.value4 = value4;
      };
      MustPayToPubKeyAddress.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return function (value4) {
                          return new MustPayToPubKeyAddress(value0, value1, value2, value3, value4);
                      };
                  };
              };
          };
      };
      return MustPayToPubKeyAddress;
  })();
  var MustPayToNativeScript = (function () {
      function MustPayToNativeScript(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      MustPayToNativeScript.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new MustPayToNativeScript(value0, value1, value2);
              };
          };
      };
      return MustPayToNativeScript;
  })();
  var MustPayToScript = (function () {
      function MustPayToScript(value0, value1, value2, value3, value4, value5) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
          this.value4 = value4;
          this.value5 = value5;
      };
      MustPayToScript.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return function (value4) {
                          return function (value5) {
                              return new MustPayToScript(value0, value1, value2, value3, value4, value5);
                          };
                      };
                  };
              };
          };
      };
      return MustPayToScript;
  })();
  var MustHashDatum = (function () {
      function MustHashDatum(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      MustHashDatum.create = function (value0) {
          return function (value1) {
              return new MustHashDatum(value0, value1);
          };
      };
      return MustHashDatum;
  })();
  var MustRegisterStakePubKey = (function () {
      function MustRegisterStakePubKey(value0) {
          this.value0 = value0;
      };
      MustRegisterStakePubKey.create = function (value0) {
          return new MustRegisterStakePubKey(value0);
      };
      return MustRegisterStakePubKey;
  })();
  var MustDeregisterStakePubKey = (function () {
      function MustDeregisterStakePubKey(value0) {
          this.value0 = value0;
      };
      MustDeregisterStakePubKey.create = function (value0) {
          return new MustDeregisterStakePubKey(value0);
      };
      return MustDeregisterStakePubKey;
  })();
  var MustRegisterStakeScript = (function () {
      function MustRegisterStakeScript(value0) {
          this.value0 = value0;
      };
      MustRegisterStakeScript.create = function (value0) {
          return new MustRegisterStakeScript(value0);
      };
      return MustRegisterStakeScript;
  })();
  var MustDeregisterStakePlutusScript = (function () {
      function MustDeregisterStakePlutusScript(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      MustDeregisterStakePlutusScript.create = function (value0) {
          return function (value1) {
              return new MustDeregisterStakePlutusScript(value0, value1);
          };
      };
      return MustDeregisterStakePlutusScript;
  })();
  var MustDeregisterStakeNativeScript = (function () {
      function MustDeregisterStakeNativeScript(value0) {
          this.value0 = value0;
      };
      MustDeregisterStakeNativeScript.create = function (value0) {
          return new MustDeregisterStakeNativeScript(value0);
      };
      return MustDeregisterStakeNativeScript;
  })();
  var MustRegisterPool = (function () {
      function MustRegisterPool(value0) {
          this.value0 = value0;
      };
      MustRegisterPool.create = function (value0) {
          return new MustRegisterPool(value0);
      };
      return MustRegisterPool;
  })();
  var MustRetirePool = (function () {
      function MustRetirePool(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      MustRetirePool.create = function (value0) {
          return function (value1) {
              return new MustRetirePool(value0, value1);
          };
      };
      return MustRetirePool;
  })();
  var MustDelegateStakePubKey = (function () {
      function MustDelegateStakePubKey(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      MustDelegateStakePubKey.create = function (value0) {
          return function (value1) {
              return new MustDelegateStakePubKey(value0, value1);
          };
      };
      return MustDelegateStakePubKey;
  })();
  var MustDelegateStakePlutusScript = (function () {
      function MustDelegateStakePlutusScript(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      MustDelegateStakePlutusScript.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new MustDelegateStakePlutusScript(value0, value1, value2);
              };
          };
      };
      return MustDelegateStakePlutusScript;
  })();
  var MustDelegateStakeNativeScript = (function () {
      function MustDelegateStakeNativeScript(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      MustDelegateStakeNativeScript.create = function (value0) {
          return function (value1) {
              return new MustDelegateStakeNativeScript(value0, value1);
          };
      };
      return MustDelegateStakeNativeScript;
  })();
  var MustWithdrawStakePubKey = (function () {
      function MustWithdrawStakePubKey(value0) {
          this.value0 = value0;
      };
      MustWithdrawStakePubKey.create = function (value0) {
          return new MustWithdrawStakePubKey(value0);
      };
      return MustWithdrawStakePubKey;
  })();
  var MustWithdrawStakePlutusScript = (function () {
      function MustWithdrawStakePlutusScript(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      MustWithdrawStakePlutusScript.create = function (value0) {
          return function (value1) {
              return new MustWithdrawStakePlutusScript(value0, value1);
          };
      };
      return MustWithdrawStakePlutusScript;
  })();
  var MustWithdrawStakeNativeScript = (function () {
      function MustWithdrawStakeNativeScript(value0) {
          this.value0 = value0;
      };
      MustWithdrawStakeNativeScript.create = function (value0) {
          return new MustWithdrawStakeNativeScript(value0);
      };
      return MustWithdrawStakeNativeScript;
  })();
  var MustSatisfyAnyOf = (function () {
      function MustSatisfyAnyOf(value0) {
          this.value0 = value0;
      };
      MustSatisfyAnyOf.create = function (value0) {
          return new MustSatisfyAnyOf(value0);
      };
      return MustSatisfyAnyOf;
  })();
  var MustNotBeValid = (function () {
      function MustNotBeValid() {

      };
      MustNotBeValid.value = new MustNotBeValid();
      return MustNotBeValid;
  })();
  var TxConstraints = function (x) {
      return x;
  };
  var semigroupTxConstraints = Data_Semigroup.semigroupRecord()(Data_Semigroup.semigroupRecordCons({
      reflectSymbol: function () {
          return "constraints";
      }
  })()(Data_Semigroup.semigroupRecordCons({
      reflectSymbol: function () {
          return "ownInputs";
      }
  })()(Data_Semigroup.semigroupRecordCons({
      reflectSymbol: function () {
          return "ownOutputs";
      }
  })()(Data_Semigroup.semigroupRecordNil)(Data_Semigroup.semigroupArray))(Data_Semigroup.semigroupArray))(Data_Semigroup.semigroupArray));
  var monoidTxConstraints = Data_Monoid.monoidRecord()(Data_Monoid.monoidRecordCons({
      reflectSymbol: function () {
          return "constraints";
      }
  })(Data_Monoid.monoidArray)()(Data_Monoid.monoidRecordCons({
      reflectSymbol: function () {
          return "ownInputs";
      }
  })(Data_Monoid.monoidArray)()(Data_Monoid.monoidRecordCons({
      reflectSymbol: function () {
          return "ownOutputs";
      }
  })(Data_Monoid.monoidArray)()(Data_Monoid.monoidRecordNil))));
  var eqDatumPresence = {
      eq: function (x) {
          return function (y) {
              if (x instanceof DatumInline && y instanceof DatumInline) {
                  return true;
              };
              if (x instanceof DatumWitness && y instanceof DatumWitness) {
                  return true;
              };
              return false;
          };
      }
  };
  var utxoWithScriptRef = function (inputWithRefScript) {
      var v = (function () {
          if (inputWithRefScript instanceof RefInput) {
              return inputWithRefScript.value0;
          };
          if (inputWithRefScript instanceof SpendInput) {
              return inputWithRefScript.value0;
          };
          throw new Error("Failed pattern match at Ctl.Internal.Types.TxConstraints (line 227, column 5 - line 229, column 42): " + [ inputWithRefScript.constructor.name ]);
      })();
      return Data_Map_Internal.singleton(v.input)(v.output);
  };
  var singleton = function (a) {
      return Data_Newtype.over()()(TxConstraints)(function (v) {
          return {
              constraints: Data_Array.singleton(a),
              ownInputs: v.ownInputs,
              ownOutputs: v.ownOutputs
          };
      })(Data_Monoid.mempty(monoidTxConstraints));
  };
  var mustSpendScriptOutput = function (txOutRef) {
      return function (red) {
          return singleton(new MustSpendScriptOutput(txOutRef, red, Data_Maybe.Nothing.value));
      };
  };
  var mustPayToScript = function (vh) {
      return function (dt) {
          return function (dtp) {
              return function (vl) {
                  return Data_Semigroup.append(semigroupTxConstraints)(singleton(new MustPayToScript(vh, Data_Maybe.Nothing.value, dt, dtp, Data_Maybe.Nothing.value, vl)))(Data_Monoid.guard(monoidTxConstraints)(Data_Eq.eq(eqDatumPresence)(dtp)(DatumWitness.value))(singleton(new MustIncludeDatum(dt))));
              };
          };
      };
  };
  var mustMintCurrencyWithRedeemer = function (mph) {
      return function (red) {
          return function (tn) {
              return function (amount) {
                  return singleton(new MustMintValue(mph, red, tn, amount, Data_Maybe.Nothing.value));
              };
          };
      };
  };
  var mustMintValueWithRedeemer = function (redeemer) {
      var tokenConstraint = function (v) {
          var mintingPolicyHash = Ctl_Internal_Plutus_Types_CurrencySymbol.currencyMPSHash(v.value0);
          return mustMintCurrencyWithRedeemer(mintingPolicyHash)(redeemer)(v.value1.value0)(v.value1.value1);
      };
      var $1081 = Data_Array.fold(monoidTxConstraints);
      var $1082 = Data_Functor.map(Data_Functor.functorArray)(tokenConstraint);
      return function ($1083) {
          return $1081($1082(Ctl_Internal_Plutus_Types_Value.flattenNonAdaAssets($1083)));
      };
  };
  exports["DatumInline"] = DatumInline;
  exports["DatumWitness"] = DatumWitness;
  exports["RefInput"] = RefInput;
  exports["SpendInput"] = SpendInput;
  exports["MustBeSignedBy"] = MustBeSignedBy;
  exports["MustDelegateStakePlutusScript"] = MustDelegateStakePlutusScript;
  exports["MustDelegateStakeNativeScript"] = MustDelegateStakeNativeScript;
  exports["MustDelegateStakePubKey"] = MustDelegateStakePubKey;
  exports["MustDeregisterStakePlutusScript"] = MustDeregisterStakePlutusScript;
  exports["MustDeregisterStakeNativeScript"] = MustDeregisterStakeNativeScript;
  exports["MustDeregisterStakePubKey"] = MustDeregisterStakePubKey;
  exports["MustHashDatum"] = MustHashDatum;
  exports["MustIncludeDatum"] = MustIncludeDatum;
  exports["MustMintValue"] = MustMintValue;
  exports["MustMintValueUsingNativeScript"] = MustMintValueUsingNativeScript;
  exports["MustNotBeValid"] = MustNotBeValid;
  exports["MustPayToNativeScript"] = MustPayToNativeScript;
  exports["MustPayToPubKeyAddress"] = MustPayToPubKeyAddress;
  exports["MustPayToScript"] = MustPayToScript;
  exports["MustProduceAtLeast"] = MustProduceAtLeast;
  exports["MustReferenceOutput"] = MustReferenceOutput;
  exports["MustRegisterPool"] = MustRegisterPool;
  exports["MustRegisterStakePubKey"] = MustRegisterStakePubKey;
  exports["MustRegisterStakeScript"] = MustRegisterStakeScript;
  exports["MustRetirePool"] = MustRetirePool;
  exports["MustSatisfyAnyOf"] = MustSatisfyAnyOf;
  exports["MustSpendAtLeast"] = MustSpendAtLeast;
  exports["MustSpendNativeScriptOutput"] = MustSpendNativeScriptOutput;
  exports["MustSpendPubKeyOutput"] = MustSpendPubKeyOutput;
  exports["MustSpendScriptOutput"] = MustSpendScriptOutput;
  exports["MustValidateIn"] = MustValidateIn;
  exports["MustWithdrawStakePlutusScript"] = MustWithdrawStakePlutusScript;
  exports["MustWithdrawStakeNativeScript"] = MustWithdrawStakeNativeScript;
  exports["MustWithdrawStakePubKey"] = MustWithdrawStakePubKey;
  exports["mustMintValueWithRedeemer"] = mustMintValueWithRedeemer;
  exports["mustPayToScript"] = mustPayToScript;
  exports["mustSpendScriptOutput"] = mustSpendScriptOutput;
  exports["utxoWithScriptRef"] = utxoWithScriptRef;
  exports["eqDatumPresence"] = eqDatumPresence;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Ctl.Internal.Types.TypedTxOut"] = $PS["Ctl.Internal.Types.TypedTxOut"] || {};
  var exports = $PS["Ctl.Internal.Types.TypedTxOut"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_Error_Class = $PS["Control.Monad.Error.Class"];
  var Control_Monad_Except_Trans = $PS["Control.Monad.Except.Trans"];
  var Ctl_Internal_Contract_Monad = $PS["Ctl.Internal.Contract.Monad"];
  var Ctl_Internal_Contract_QueryHandle = $PS["Ctl.Internal.Contract.QueryHandle"];
  var Ctl_Internal_FromData = $PS["Ctl.Internal.FromData"];
  var Ctl_Internal_Hashing = $PS["Ctl.Internal.Hashing"];
  var Ctl_Internal_Helpers = $PS["Ctl.Internal.Helpers"];
  var Ctl_Internal_Scripts = $PS["Ctl.Internal.Scripts"];
  var Ctl_Internal_Serialization_Address = $PS["Ctl.Internal.Serialization.Address"];
  var Ctl_Internal_ToData = $PS["Ctl.Internal.ToData"];
  var Ctl_Internal_Types_OutputDatum = $PS["Ctl.Internal.Types.OutputDatum"];
  var Ctl_Internal_Types_PlutusData = $PS["Ctl.Internal.Types.PlutusData"];
  var Ctl_Internal_Types_Transaction = $PS["Ctl.Internal.Types.Transaction"];
  var Data_Either = $PS["Data.Either"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Generic_Rep = $PS["Data.Generic.Rep"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Show_Generic = $PS["Data.Show.Generic"];
  var Effect_Aff = $PS["Effect.Aff"];
  var Effect_Aff_Class = $PS["Effect.Aff.Class"];
  var WrongValidatorAddress = (function () {
      function WrongValidatorAddress(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      WrongValidatorAddress.create = function (value0) {
          return function (value1) {
              return new WrongValidatorAddress(value0, value1);
          };
      };
      return WrongValidatorAddress;
  })();
  var ExpectedScriptGotPubkey = (function () {
      function ExpectedScriptGotPubkey() {

      };
      ExpectedScriptGotPubkey.value = new ExpectedScriptGotPubkey();
      return ExpectedScriptGotPubkey;
  })();
  var WrongRedeemerType = (function () {
      function WrongRedeemerType(value0) {
          this.value0 = value0;
      };
      WrongRedeemerType.create = function (value0) {
          return new WrongRedeemerType(value0);
      };
      return WrongRedeemerType;
  })();
  var WrongDatumType = (function () {
      function WrongDatumType(value0) {
          this.value0 = value0;
      };
      WrongDatumType.create = function (value0) {
          return new WrongDatumType(value0);
      };
      return WrongDatumType;
  })();
  var CannotQueryDatum = (function () {
      function CannotQueryDatum(value0) {
          this.value0 = value0;
      };
      CannotQueryDatum.create = function (value0) {
          return new CannotQueryDatum(value0);
      };
      return CannotQueryDatum;
  })();
  var CannotMakeTypedTxOut = (function () {
      function CannotMakeTypedTxOut() {

      };
      CannotMakeTypedTxOut.value = new CannotMakeTypedTxOut();
      return CannotMakeTypedTxOut;
  })();
  var UnknownRef = (function () {
      function UnknownRef() {

      };
      UnknownRef.value = new UnknownRef();
      return UnknownRef;
  })();
  var genericTypeCheckError_ = {
      to: function (x) {
          if (x instanceof Data_Generic_Rep.Inl) {
              return new WrongValidatorAddress(x.value0.value0, x.value0.value1);
          };
          if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inl) {
              return ExpectedScriptGotPubkey.value;
          };
          if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0 instanceof Data_Generic_Rep.Inl)) {
              return new WrongRedeemerType(x.value0.value0.value0);
          };
          if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0 instanceof Data_Generic_Rep.Inl))) {
              return new WrongDatumType(x.value0.value0.value0.value0);
          };
          if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl)))) {
              return new CannotQueryDatum(x.value0.value0.value0.value0.value0);
          };
          if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl))))) {
              return CannotMakeTypedTxOut.value;
          };
          if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr))))) {
              return UnknownRef.value;
          };
          throw new Error("Failed pattern match at Ctl.Internal.Types.TypedTxOut (line 209, column 1 - line 209, column 41): " + [ x.constructor.name ]);
      },
      from: function (x) {
          if (x instanceof WrongValidatorAddress) {
              return new Data_Generic_Rep.Inl(new Data_Generic_Rep.Product(x.value0, x.value1));
          };
          if (x instanceof ExpectedScriptGotPubkey) {
              return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value));
          };
          if (x instanceof WrongRedeemerType) {
              return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0)));
          };
          if (x instanceof WrongDatumType) {
              return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0))));
          };
          if (x instanceof CannotQueryDatum) {
              return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0)))));
          };
          if (x instanceof CannotMakeTypedTxOut) {
              return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value))))));
          };
          if (x instanceof UnknownRef) {
              return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(Data_Generic_Rep.NoArguments.value))))));
          };
          throw new Error("Failed pattern match at Ctl.Internal.Types.TypedTxOut (line 209, column 1 - line 209, column 41): " + [ x.constructor.name ]);
      }
  };
  var showTypeCheckError = {
      show: Data_Show_Generic.genericShow(genericTypeCheckError_)(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsProduct(Data_Show_Generic.genericShowArgsArgument(Ctl_Internal_Serialization_Address.showAddress))(Data_Show_Generic.genericShowArgsArgument(Ctl_Internal_Serialization_Address.showAddress)))({
          reflectSymbol: function () {
              return "WrongValidatorAddress";
          }
      }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsNoArguments)({
          reflectSymbol: function () {
              return "ExpectedScriptGotPubkey";
          }
      }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Ctl_Internal_Types_PlutusData.showPlutusData))({
          reflectSymbol: function () {
              return "WrongRedeemerType";
          }
      }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Ctl_Internal_Types_PlutusData.showPlutusData))({
          reflectSymbol: function () {
              return "WrongDatumType";
          }
      }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Ctl_Internal_Types_Transaction.showDataHash))({
          reflectSymbol: function () {
              return "CannotQueryDatum";
          }
      }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsNoArguments)({
          reflectSymbol: function () {
              return "CannotMakeTypedTxOut";
          }
      }))(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsNoArguments)({
          reflectSymbol: function () {
              return "UnknownRef";
          }
      }))))))))
  };
  var typedTxOutValue = function () {
      return function (v) {
          return (Data_Newtype.unwrap()(v.txOut)).amount;
      };
  };
  var typedTxOutTxOut = function () {
      return function (v) {
          return v.txOut;
      };
  };
  var typedTxOutRefValue = function () {
      return function (v) {
          return typedTxOutValue()(v.typedTxOut);
      };
  };
  var typedTxOutDatumHash = function () {
      return function (v) {
          return Ctl_Internal_Types_OutputDatum.outputDatumDataHash((Data_Newtype.unwrap()(v.txOut)).datum);
      };
  };
  var mkTypedTxOut = function () {
      return function (dictToData) {
          return function (networkId) {
              return function (typedVal) {
                  return function (dt) {
                      return function (amount) {
                          var mkTypedTxOut$prime = function (dat) {
                              return function (txOut) {
                                  return {
                                      txOut: txOut,
                                      data: dat
                                  };
                              };
                          };
                          var dHash = Ctl_Internal_Hashing.datumHash(Ctl_Internal_ToData.toData(dictToData)(dt));
                          var address = Ctl_Internal_Scripts.typedValidatorEnterpriseAddress(networkId)(typedVal);
                          return mkTypedTxOut$prime(dt)(Data_Newtype.wrap()({
                              address: address,
                              amount: amount,
                              datum: new Ctl_Internal_Types_OutputDatum.OutputDatumHash(dHash),
                              scriptRef: Data_Maybe.Nothing.value
                          }));
                      };
                  };
              };
          };
      };
  };
  var checkValidatorAddress = function (dictMonad) {
      return function (networkId) {
          return function (typedVal) {
              return function (actualAddr) {
                  return Control_Monad_Except_Trans.runExceptT((function () {
                      var expectedAddr = Ctl_Internal_Scripts.typedValidatorEnterpriseAddress(networkId)(typedVal);
                      return Control_Applicative.unless(Control_Monad_Except_Trans.applicativeExceptT(dictMonad))(Data_Eq.eq(Ctl_Internal_Serialization_Address.eqAddress)(expectedAddr)(actualAddr))(Control_Monad_Error_Class.throwError(Control_Monad_Except_Trans.monadThrowExceptT(dictMonad))(new WrongValidatorAddress(expectedAddr, actualAddr)));
                  })());
              };
          };
      };
  };
  var checkDatum = function (dictMonad) {
      return function () {
          return function (dictFromData) {
              return function (v) {
                  return function (v1) {
                      return Control_Monad_Except_Trans.runExceptT(Ctl_Internal_Helpers.liftM(Control_Monad_Except_Trans.monadErrorExceptT(dictMonad))(new WrongDatumType(v1))(Ctl_Internal_FromData.fromData(dictFromData)(v1)));
                  };
              };
          };
      };
  };
  var typeTxOut = function () {
      return function (dictIsData) {
          return function (networkId) {
              return function (typedVal) {
                  return function (v) {
                      return Control_Bind.bind(Ctl_Internal_Contract_Monad.bindContract)(Ctl_Internal_Contract_QueryHandle.getQueryHandle)(function (queryHandle) {
                          return Control_Monad_Except_Trans.runExceptT(Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Ctl_Internal_Contract_Monad.monadContract))(Ctl_Internal_Helpers.liftM(Control_Monad_Except_Trans.monadErrorExceptT(Ctl_Internal_Contract_Monad.monadContract))(ExpectedScriptGotPubkey.value)(Ctl_Internal_Types_OutputDatum.outputDatumDataHash(v.datum)))(function (dHash) {
                              return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Except_Trans.bindExceptT(Ctl_Internal_Contract_Monad.monadContract))(Data_Functor["void"](Control_Monad_Except_Trans.functorExceptT(Ctl_Internal_Contract_Monad.functorContract))(checkValidatorAddress(Control_Monad_Except_Trans.monadExceptT(Ctl_Internal_Contract_Monad.monadContract))(networkId)(typedVal)(v.address)))(function () {
                                  return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Ctl_Internal_Contract_Monad.monadContract))(Effect_Aff_Class.liftAff(Ctl_Internal_Contract_Monad.monadAffContract)(Data_Functor.mapFlipped(Effect_Aff.functorAff)(queryHandle.getDatumByHash(dHash))((function () {
                                      var $152 = Data_Either.note(new CannotQueryDatum(dHash));
                                      var $153 = Control_Bind.join(Data_Maybe.bindMaybe);
                                      return function ($154) {
                                          return $152($153(Data_Either.hush($154)));
                                      };
                                  })())))(function (pd) {
                                      return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Ctl_Internal_Contract_Monad.monadContract))(checkDatum(Ctl_Internal_Contract_Monad.monadContract)()(dictIsData.FromData0())(typedVal)(pd))(function (dtOut) {
                                          return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Ctl_Internal_Contract_Monad.monadContract))(mkTypedTxOut()(dictIsData.ToData1())(networkId)(typedVal)(dtOut)(v.amount));
                                      });
                                  });
                              });
                          }));
                      });
                  };
              };
          };
      };
  };
  var typeTxOutRef = function () {
      return function (dictIsData) {
          return function (networkId) {
              return function (lookupRef) {
                  return function (typedVal) {
                      return function (txOutRef) {
                          return Control_Monad_Except_Trans.runExceptT(Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Ctl_Internal_Contract_Monad.monadContract))(Ctl_Internal_Helpers.liftM(Control_Monad_Except_Trans.monadErrorExceptT(Ctl_Internal_Contract_Monad.monadContract))(UnknownRef.value)(lookupRef(txOutRef)))(function (out) {
                              return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Ctl_Internal_Contract_Monad.monadContract))(typeTxOut()(dictIsData)(networkId)(typedVal)(out))(function (typedTxOut) {
                                  return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Ctl_Internal_Contract_Monad.monadContract))({
                                      txOutRef: txOutRef,
                                      typedTxOut: typedTxOut
                                  });
                              });
                          }));
                      };
                  };
              };
          };
      };
  };
  exports["mkTypedTxOut"] = mkTypedTxOut;
  exports["typeTxOutRef"] = typeTxOutRef;
  exports["typedTxOutDatumHash"] = typedTxOutDatumHash;
  exports["typedTxOutRefValue"] = typedTxOutRefValue;
  exports["typedTxOutTxOut"] = typedTxOutTxOut;
  exports["showTypeCheckError"] = showTypeCheckError;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Ctl.Internal.Types.UnbalancedTransaction"] = $PS["Ctl.Internal.Types.UnbalancedTransaction"] || {};
  var exports = $PS["Ctl.Internal.Types.UnbalancedTransaction"];
  var Ctl_Internal_Cardano_Types_Transaction = $PS["Ctl.Internal.Cardano.Types.Transaction"];
  var Ctl_Internal_Types_Transaction = $PS["Ctl.Internal.Types.Transaction"];
  var Data_Lens_Lens = $PS["Data.Lens.Lens"];
  var Data_Map_Internal = $PS["Data.Map.Internal"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Show = $PS["Data.Show"];
  var Data_Show_Generic = $PS["Data.Show.Generic"];
  var Data_Tuple = $PS["Data.Tuple"];
  var genericUnbalancedTx_ = {
      to: function (x) {
          return x;
      },
      from: function (x) {
          return x;
      }
  };
  var showUnbalancedTx = {
      show: Data_Show_Generic.genericShow(genericUnbalancedTx_)(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "transaction";
          }
      })(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "utxoIndex";
          }
      })(Data_Show.showRecordFieldsNil)(Data_Map_Internal.showMap(Ctl_Internal_Types_Transaction.showTransactionInput)(Ctl_Internal_Cardano_Types_Transaction.showTransactionOutput)))(Ctl_Internal_Cardano_Types_Transaction.showTransaction))))({
          reflectSymbol: function () {
              return "UnbalancedTx";
          }
      }))
  };
  var emptyUnbalancedTx = {
      transaction: Data_Monoid.mempty(Ctl_Internal_Cardano_Types_Transaction.monoidTransaction),
      utxoIndex: Data_Map_Internal.empty
  };
  var _utxoIndex = function (dictStrong) {
      return Data_Lens_Lens["lens'"](function (v) {
          return new Data_Tuple.Tuple(v.utxoIndex, function (utxoIx) {
              return {
                  transaction: v.transaction,
                  utxoIndex: utxoIx
              };
          });
      })(dictStrong);
  };
  var _transaction = function (dictStrong) {
      return Data_Lens_Lens["lens'"](function (v) {
          return new Data_Tuple.Tuple(v.transaction, function (tx) {
              return {
                  transaction: tx,
                  utxoIndex: v.utxoIndex
              };
          });
      })(dictStrong);
  };
  exports["_transaction"] = _transaction;
  exports["_utxoIndex"] = _utxoIndex;
  exports["emptyUnbalancedTx"] = emptyUnbalancedTx;
  exports["showUnbalancedTx"] = showUnbalancedTx;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Data.Lens.Getter"] = $PS["Data.Lens.Getter"] || {};
  var exports = $PS["Data.Lens.Getter"];
  var Control_Category = $PS["Control.Category"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Data_Newtype = $PS["Data.Newtype"];                                    
  var view = function (l) {
      return Data_Newtype.unwrap()(l(Control_Category.identity(Control_Category.categoryFn)));
  };
  var viewOn = function (s) {
      return function (l) {
          return view(l)(s);
      };
  };
  var use = function (dictMonadState) {
      return function (p) {
          return Control_Monad_State_Class.gets(dictMonadState)(function (v) {
              return viewOn(v)(p);
          });
      };
  };
  var to = function (f) {
      return function (p) {
          var $3 = Data_Newtype.unwrap()(p);
          return function ($4) {
              return $3(f($4));
          };
      };
  };
  exports["viewOn"] = viewOn;
  exports["view"] = view;
  exports["to"] = to;
  exports["use"] = use;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Data.Lens.Internal.Forget"] = $PS["Data.Lens.Internal.Forget"] || {};
  var exports = $PS["Data.Lens.Internal.Forget"];
  var Data_Tuple = $PS["Data.Tuple"];
  var profunctorForget = {
      dimap: function (f) {
          return function (v) {
              return function (v1) {
                  return function ($24) {
                      return v1(f($24));
                  };
              };
          };
      }
  };
  var strongForget = {
      first: function (v) {
          return function ($25) {
              return v(Data_Tuple.fst($25));
          };
      },
      second: function (v) {
          return function ($26) {
              return v(Data_Tuple.snd($26));
          };
      },
      Profunctor0: function () {
          return profunctorForget;
      }
  };
  exports["profunctorForget"] = profunctorForget;
  exports["strongForget"] = strongForget;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Ctl.Internal.Types.ScriptLookups"] = $PS["Ctl.Internal.Types.ScriptLookups"] || {};
  var exports = $PS["Ctl.Internal.Types.ScriptLookups"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_Error_Class = $PS["Control.Monad.Error.Class"];
  var Control_Monad_Except_Trans = $PS["Control.Monad.Except.Trans"];
  var Control_Monad_Reader_Class = $PS["Control.Monad.Reader.Class"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Control_Monad_State_Trans = $PS["Control.Monad.State.Trans"];
  var Control_Monad_Trans_Class = $PS["Control.Monad.Trans.Class"];
  var Ctl_Internal_Address = $PS["Ctl.Internal.Address"];
  var Ctl_Internal_Cardano_Types_ScriptRef = $PS["Ctl.Internal.Cardano.Types.ScriptRef"];
  var Ctl_Internal_Cardano_Types_Transaction = $PS["Ctl.Internal.Cardano.Types.Transaction"];
  var Ctl_Internal_Cardano_Types_Value = $PS["Ctl.Internal.Cardano.Types.Value"];
  var Ctl_Internal_Contract = $PS["Ctl.Internal.Contract"];
  var Ctl_Internal_Contract_Monad = $PS["Ctl.Internal.Contract.Monad"];
  var Ctl_Internal_Contract_QueryHandle = $PS["Ctl.Internal.Contract.QueryHandle"];
  var Ctl_Internal_Hashing = $PS["Ctl.Internal.Hashing"];
  var Ctl_Internal_Helpers = $PS["Ctl.Internal.Helpers"];
  var Ctl_Internal_NativeScripts = $PS["Ctl.Internal.NativeScripts"];
  var Ctl_Internal_Plutus_Conversion = $PS["Ctl.Internal.Plutus.Conversion"];
  var Ctl_Internal_Plutus_Conversion_Value = $PS["Ctl.Internal.Plutus.Conversion.Value"];
  var Ctl_Internal_Plutus_Types_Credential = $PS["Ctl.Internal.Plutus.Types.Credential"];
  var Ctl_Internal_QueryM_Pools = $PS["Ctl.Internal.QueryM.Pools"];
  var Ctl_Internal_Scripts = $PS["Ctl.Internal.Scripts"];
  var Ctl_Internal_Serialization_Address = $PS["Ctl.Internal.Serialization.Address"];
  var Ctl_Internal_Serialization_Hash = $PS["Ctl.Internal.Serialization.Hash"];
  var Ctl_Internal_Service_Error = $PS["Ctl.Internal.Service.Error"];
  var Ctl_Internal_Transaction = $PS["Ctl.Internal.Transaction"];
  var Ctl_Internal_Types_Datum = $PS["Ctl.Internal.Types.Datum"];
  var Ctl_Internal_Types_Interval = $PS["Ctl.Internal.Types.Interval"];
  var Ctl_Internal_Types_OutputDatum = $PS["Ctl.Internal.Types.OutputDatum"];
  var Ctl_Internal_Types_PubKeyHash = $PS["Ctl.Internal.Types.PubKeyHash"];
  var Ctl_Internal_Types_RedeemerTag = $PS["Ctl.Internal.Types.RedeemerTag"];
  var Ctl_Internal_Types_RewardAddress = $PS["Ctl.Internal.Types.RewardAddress"];
  var Ctl_Internal_Types_Scripts = $PS["Ctl.Internal.Types.Scripts"];
  var Ctl_Internal_Types_TokenName = $PS["Ctl.Internal.Types.TokenName"];
  var Ctl_Internal_Types_Transaction = $PS["Ctl.Internal.Types.Transaction"];
  var Ctl_Internal_Types_TxConstraints = $PS["Ctl.Internal.Types.TxConstraints"];
  var Ctl_Internal_Types_TypedTxOut = $PS["Ctl.Internal.Types.TypedTxOut"];
  var Ctl_Internal_Types_UnbalancedTransaction = $PS["Ctl.Internal.Types.UnbalancedTransaction"];
  var Data_Array = $PS["Data.Array"];
  var Data_Bifunctor = $PS["Data.Bifunctor"];
  var Data_BigInt = $PS["Data.BigInt"];
  var Data_Either = $PS["Data.Either"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Generic_Rep = $PS["Data.Generic.Rep"];
  var Data_Lattice = $PS["Data.Lattice"];
  var Data_Lens_Getter = $PS["Data.Lens.Getter"];
  var Data_Lens_Internal_Forget = $PS["Data.Lens.Internal.Forget"];
  var Data_Lens_Iso = $PS["Data.Lens.Iso"];
  var Data_Lens_Iso_Newtype = $PS["Data.Lens.Iso.Newtype"];
  var Data_Lens_Record = $PS["Data.Lens.Record"];
  var Data_Lens_Setter = $PS["Data.Lens.Setter"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Map_Internal = $PS["Data.Map.Internal"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Profunctor = $PS["Data.Profunctor"];
  var Data_Profunctor_Strong = $PS["Data.Profunctor.Strong"];
  var Data_Ring = $PS["Data.Ring"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Semiring = $PS["Data.Semiring"];
  var Data_Set = $PS["Data.Set"];
  var Data_Show = $PS["Data.Show"];
  var Data_Show_Generic = $PS["Data.Show.Generic"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Data_Traversable = $PS["Data.Traversable"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unfoldable = $PS["Data.Unfoldable"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect = $PS["Effect"];
  var Effect_Aff = $PS["Effect.Aff"];
  var Effect_Aff_Class = $PS["Effect.Aff.Class"];
  var Effect_Class = $PS["Effect.Class"];
  var Effect_Exception = $PS["Effect.Exception"];
  var Type_Proxy = $PS["Type.Proxy"];
  var ScriptLookups = function (x) {
      return x;
  };
  var CannotConvertPaymentPubKeyHash = (function () {
      function CannotConvertPaymentPubKeyHash(value0) {
          this.value0 = value0;
      };
      CannotConvertPaymentPubKeyHash.create = function (value0) {
          return new CannotConvertPaymentPubKeyHash(value0);
      };
      return CannotConvertPaymentPubKeyHash;
  })();
  var CannotFindDatum = (function () {
      function CannotFindDatum() {

      };
      CannotFindDatum.value = new CannotFindDatum();
      return CannotFindDatum;
  })();
  var CannotQueryDatum = (function () {
      function CannotQueryDatum(value0) {
          this.value0 = value0;
      };
      CannotQueryDatum.create = function (value0) {
          return new CannotQueryDatum(value0);
      };
      return CannotQueryDatum;
  })();
  var CannotConvertPOSIXTimeRange = (function () {
      function CannotConvertPOSIXTimeRange(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      CannotConvertPOSIXTimeRange.create = function (value0) {
          return function (value1) {
              return new CannotConvertPOSIXTimeRange(value0, value1);
          };
      };
      return CannotConvertPOSIXTimeRange;
  })();
  var CannotSolveTimeConstraints = (function () {
      function CannotSolveTimeConstraints(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      CannotSolveTimeConstraints.create = function (value0) {
          return function (value1) {
              return new CannotSolveTimeConstraints(value0, value1);
          };
      };
      return CannotSolveTimeConstraints;
  })();
  var CannotGetMintingPolicyScriptIndex = (function () {
      function CannotGetMintingPolicyScriptIndex() {

      };
      CannotGetMintingPolicyScriptIndex.value = new CannotGetMintingPolicyScriptIndex();
      return CannotGetMintingPolicyScriptIndex;
  })();
  var CannotGetValidatorHashFromAddress = (function () {
      function CannotGetValidatorHashFromAddress(value0) {
          this.value0 = value0;
      };
      CannotGetValidatorHashFromAddress.create = function (value0) {
          return new CannotGetValidatorHashFromAddress(value0);
      };
      return CannotGetValidatorHashFromAddress;
  })();
  var CannotHashDatum = (function () {
      function CannotHashDatum(value0) {
          this.value0 = value0;
      };
      CannotHashDatum.create = function (value0) {
          return new CannotHashDatum(value0);
      };
      return CannotHashDatum;
  })();
  var CannotHashMintingPolicy = (function () {
      function CannotHashMintingPolicy(value0) {
          this.value0 = value0;
      };
      CannotHashMintingPolicy.create = function (value0) {
          return new CannotHashMintingPolicy(value0);
      };
      return CannotHashMintingPolicy;
  })();
  var CannotHashValidator = (function () {
      function CannotHashValidator(value0) {
          this.value0 = value0;
      };
      CannotHashValidator.create = function (value0) {
          return new CannotHashValidator(value0);
      };
      return CannotHashValidator;
  })();
  var CannotMakeValue = (function () {
      function CannotMakeValue(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      CannotMakeValue.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new CannotMakeValue(value0, value1, value2);
              };
          };
      };
      return CannotMakeValue;
  })();
  var CannotWithdrawRewardsPubKey = (function () {
      function CannotWithdrawRewardsPubKey(value0) {
          this.value0 = value0;
      };
      CannotWithdrawRewardsPubKey.create = function (value0) {
          return new CannotWithdrawRewardsPubKey(value0);
      };
      return CannotWithdrawRewardsPubKey;
  })();
  var CannotWithdrawRewardsPlutusScript = (function () {
      function CannotWithdrawRewardsPlutusScript(value0) {
          this.value0 = value0;
      };
      CannotWithdrawRewardsPlutusScript.create = function (value0) {
          return new CannotWithdrawRewardsPlutusScript(value0);
      };
      return CannotWithdrawRewardsPlutusScript;
  })();
  var CannotWithdrawRewardsNativeScript = (function () {
      function CannotWithdrawRewardsNativeScript(value0) {
          this.value0 = value0;
      };
      CannotWithdrawRewardsNativeScript.create = function (value0) {
          return new CannotWithdrawRewardsNativeScript(value0);
      };
      return CannotWithdrawRewardsNativeScript;
  })();
  var DatumNotFound = (function () {
      function DatumNotFound(value0) {
          this.value0 = value0;
      };
      DatumNotFound.create = function (value0) {
          return new DatumNotFound(value0);
      };
      return DatumNotFound;
  })();
  var DatumWrongHash = (function () {
      function DatumWrongHash(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      DatumWrongHash.create = function (value0) {
          return function (value1) {
              return new DatumWrongHash(value0, value1);
          };
      };
      return DatumWrongHash;
  })();
  var MintingPolicyHashNotCurrencySymbol = (function () {
      function MintingPolicyHashNotCurrencySymbol(value0) {
          this.value0 = value0;
      };
      MintingPolicyHashNotCurrencySymbol.create = function (value0) {
          return new MintingPolicyHashNotCurrencySymbol(value0);
      };
      return MintingPolicyHashNotCurrencySymbol;
  })();
  var MintingPolicyNotFound = (function () {
      function MintingPolicyNotFound(value0) {
          this.value0 = value0;
      };
      MintingPolicyNotFound.create = function (value0) {
          return new MintingPolicyNotFound(value0);
      };
      return MintingPolicyNotFound;
  })();
  var ModifyTx = (function () {
      function ModifyTx(value0) {
          this.value0 = value0;
      };
      ModifyTx.create = function (value0) {
          return new ModifyTx(value0);
      };
      return ModifyTx;
  })();
  var OwnPubKeyAndStakeKeyMissing = (function () {
      function OwnPubKeyAndStakeKeyMissing() {

      };
      OwnPubKeyAndStakeKeyMissing.value = new OwnPubKeyAndStakeKeyMissing();
      return OwnPubKeyAndStakeKeyMissing;
  })();
  var TxOutRefNotFound = (function () {
      function TxOutRefNotFound(value0) {
          this.value0 = value0;
      };
      TxOutRefNotFound.create = function (value0) {
          return new TxOutRefNotFound(value0);
      };
      return TxOutRefNotFound;
  })();
  var TxOutRefWrongType = (function () {
      function TxOutRefWrongType(value0) {
          this.value0 = value0;
      };
      TxOutRefWrongType.create = function (value0) {
          return new TxOutRefWrongType(value0);
      };
      return TxOutRefWrongType;
  })();
  var TypeCheckFailed = (function () {
      function TypeCheckFailed(value0) {
          this.value0 = value0;
      };
      TypeCheckFailed.create = function (value0) {
          return new TypeCheckFailed(value0);
      };
      return TypeCheckFailed;
  })();
  var TypedTxOutHasNoDatumHash = (function () {
      function TypedTxOutHasNoDatumHash() {

      };
      TypedTxOutHasNoDatumHash.value = new TypedTxOutHasNoDatumHash();
      return TypedTxOutHasNoDatumHash;
  })();
  var TypedValidatorMissing = (function () {
      function TypedValidatorMissing() {

      };
      TypedValidatorMissing.value = new TypedValidatorMissing();
      return TypedValidatorMissing;
  })();
  var ValidatorHashNotFound = (function () {
      function ValidatorHashNotFound(value0) {
          this.value0 = value0;
      };
      ValidatorHashNotFound.create = function (value0) {
          return new ValidatorHashNotFound(value0);
      };
      return ValidatorHashNotFound;
  })();
  var WrongRefScriptHash = (function () {
      function WrongRefScriptHash(value0) {
          this.value0 = value0;
      };
      WrongRefScriptHash.create = function (value0) {
          return new WrongRefScriptHash(value0);
      };
      return WrongRefScriptHash;
  })();
  var CannotSatisfyAny = (function () {
      function CannotSatisfyAny() {

      };
      CannotSatisfyAny.value = new CannotSatisfyAny();
      return CannotSatisfyAny;
  })();
  var ExpectedPlutusScriptGotNativeScript = (function () {
      function ExpectedPlutusScriptGotNativeScript(value0) {
          this.value0 = value0;
      };
      ExpectedPlutusScriptGotNativeScript.create = function (value0) {
          return new ExpectedPlutusScriptGotNativeScript(value0);
      };
      return ExpectedPlutusScriptGotNativeScript;
  })();
  var CannotMintZero = (function () {
      function CannotMintZero(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      CannotMintZero.create = function (value0) {
          return function (value1) {
              return new CannotMintZero(value0, value1);
          };
      };
      return CannotMintZero;
  })();
  var semigroupValueSpentBalanc = {
      append: function (v) {
          return function (v1) {
              return {
                  required: Data_Lattice.join(Ctl_Internal_Cardano_Types_Value.joinSemilatticeValue)(v.required)(v1.required),
                  provided: Data_Lattice.join(Ctl_Internal_Cardano_Types_Value.joinSemilatticeValue)(v.provided)(v1.provided)
              };
          };
      }
  };
  var semigroupScriptLookups = {
      append: function (v) {
          return function (v1) {
              return {
                  mps: Data_Array.union(Ctl_Internal_Types_Scripts.eqMintingPolicy)(v.mps)(v1.mps),
                  txOutputs: Data_Map_Internal.union(Ctl_Internal_Types_Transaction.ordTransactionInput)(v.txOutputs)(v1.txOutputs),
                  scripts: Data_Array.union(Ctl_Internal_Types_Scripts.eqValidator)(v.scripts)(v1.scripts),
                  datums: Data_Map_Internal.union(Ctl_Internal_Types_Transaction.ordDataHash)(v.datums)(v1.datums),
                  paymentPubKeyHashes: Data_Map_Internal.union(Ctl_Internal_Types_PubKeyHash.ordPaymentPubKeyHash)(v.paymentPubKeyHashes)(v1.paymentPubKeyHashes),
                  typedValidator: Ctl_Internal_Helpers.appendFirstMaybe(v.typedValidator)(v1.typedValidator),
                  ownPaymentPubKeyHash: Ctl_Internal_Helpers.appendFirstMaybe(v.ownPaymentPubKeyHash)(v1.ownPaymentPubKeyHash),
                  ownStakePubKeyHash: Ctl_Internal_Helpers.appendFirstMaybe(v.ownStakePubKeyHash)(v1.ownStakePubKeyHash)
              };
          };
      }
  };
  var monoidScriptLookups = {
      mempty: {
          mps: Data_Monoid.mempty(Data_Monoid.monoidArray),
          txOutputs: Data_Map_Internal.empty,
          scripts: Data_Monoid.mempty(Data_Monoid.monoidArray),
          datums: Data_Map_Internal.empty,
          paymentPubKeyHashes: Data_Map_Internal.empty,
          typedValidator: Data_Maybe.Nothing.value,
          ownPaymentPubKeyHash: Data_Maybe.Nothing.value,
          ownStakePubKeyHash: Data_Maybe.Nothing.value
      },
      Semigroup0: function () {
          return semigroupScriptLookups;
      }
  };
  var genericUnattachedUnbalanc = {
      to: function (x) {
          return x;
      },
      from: function (x) {
          return x;
      }
  };
  var showUnattachedUnbalancedT = {
      show: Data_Show_Generic.genericShow(genericUnattachedUnbalanc)(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "datums";
          }
      })(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "redeemersTxIns";
          }
      })(Data_Show.showRecordFieldsCons({
          reflectSymbol: function () {
              return "unbalancedTx";
          }
      })(Data_Show.showRecordFieldsNil)(Ctl_Internal_Types_UnbalancedTransaction.showUnbalancedTx))(Data_Show.showArray(Data_Tuple.showTuple(Ctl_Internal_Cardano_Types_Transaction.showRedeemer)(Data_Maybe.showMaybe(Ctl_Internal_Types_Transaction.showTransactionInput)))))(Data_Show.showArray(Ctl_Internal_Types_Datum.showDatum)))))({
          reflectSymbol: function () {
              return "UnattachedUnbalancedTx";
          }
      }))
  };
  var genericMkUnbalancedTxErro = {
      to: function (x) {
          if (x instanceof Data_Generic_Rep.Inl) {
              return new CannotConvertPaymentPubKeyHash(x.value0);
          };
          if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inl) {
              return CannotFindDatum.value;
          };
          if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0 instanceof Data_Generic_Rep.Inl)) {
              return new CannotQueryDatum(x.value0.value0.value0);
          };
          if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0 instanceof Data_Generic_Rep.Inl))) {
              return new CannotConvertPOSIXTimeRange(x.value0.value0.value0.value0.value0, x.value0.value0.value0.value0.value1);
          };
          if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl)))) {
              return new CannotSolveTimeConstraints(x.value0.value0.value0.value0.value0.value0, x.value0.value0.value0.value0.value0.value1);
          };
          if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl))))) {
              return CannotGetMintingPolicyScriptIndex.value;
          };
          if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl)))))) {
              return new CannotGetValidatorHashFromAddress(x.value0.value0.value0.value0.value0.value0.value0);
          };
          if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl))))))) {
              return new CannotHashDatum(x.value0.value0.value0.value0.value0.value0.value0.value0);
          };
          if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl)))))))) {
              return new CannotHashMintingPolicy(x.value0.value0.value0.value0.value0.value0.value0.value0.value0);
          };
          if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl))))))))) {
              return new CannotHashValidator(x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0);
          };
          if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl)))))))))) {
              return new CannotMakeValue(x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0, x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value1.value0, x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value1.value1);
          };
          if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl))))))))))) {
              return new CannotWithdrawRewardsPubKey(x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0);
          };
          if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl)))))))))))) {
              return new CannotWithdrawRewardsPlutusScript(x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0);
          };
          if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl))))))))))))) {
              return new CannotWithdrawRewardsNativeScript(x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0);
          };
          if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl)))))))))))))) {
              return new DatumNotFound(x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0);
          };
          if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl))))))))))))))) {
              return new DatumWrongHash(x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0, x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value1);
          };
          if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl)))))))))))))))) {
              return new MintingPolicyHashNotCurrencySymbol(x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0);
          };
          if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl))))))))))))))))) {
              return new MintingPolicyNotFound(x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0);
          };
          if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl)))))))))))))))))) {
              return new ModifyTx(x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0);
          };
          if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl))))))))))))))))))) {
              return OwnPubKeyAndStakeKeyMissing.value;
          };
          if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl)))))))))))))))))))) {
              return new TxOutRefNotFound(x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0);
          };
          if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl))))))))))))))))))))) {
              return new TxOutRefWrongType(x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0);
          };
          if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl)))))))))))))))))))))) {
              return new TypeCheckFailed(x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0);
          };
          if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl))))))))))))))))))))))) {
              return TypedTxOutHasNoDatumHash.value;
          };
          if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl)))))))))))))))))))))))) {
              return TypedValidatorMissing.value;
          };
          if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl))))))))))))))))))))))))) {
              return new ValidatorHashNotFound(x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0);
          };
          if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl)))))))))))))))))))))))))) {
              return new WrongRefScriptHash(x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0);
          };
          if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl))))))))))))))))))))))))))) {
              return CannotSatisfyAny.value;
          };
          if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl)))))))))))))))))))))))))))) {
              return new ExpectedPlutusScriptGotNativeScript(x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0);
          };
          if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr)))))))))))))))))))))))))))) {
              return new CannotMintZero(x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0, x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value1);
          };
          throw new Error("Failed pattern match at Ctl.Internal.Types.ScriptLookups (line 922, column 1 - line 922, column 46): " + [ x.constructor.name ]);
      },
      from: function (x) {
          if (x instanceof CannotConvertPaymentPubKeyHash) {
              return new Data_Generic_Rep.Inl(x.value0);
          };
          if (x instanceof CannotFindDatum) {
              return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value));
          };
          if (x instanceof CannotQueryDatum) {
              return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0)));
          };
          if (x instanceof CannotConvertPOSIXTimeRange) {
              return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(new Data_Generic_Rep.Product(x.value0, x.value1)))));
          };
          if (x instanceof CannotSolveTimeConstraints) {
              return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(new Data_Generic_Rep.Product(x.value0, x.value1))))));
          };
          if (x instanceof CannotGetMintingPolicyScriptIndex) {
              return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value))))));
          };
          if (x instanceof CannotGetValidatorHashFromAddress) {
              return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0)))))));
          };
          if (x instanceof CannotHashDatum) {
              return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0))))))));
          };
          if (x instanceof CannotHashMintingPolicy) {
              return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0)))))))));
          };
          if (x instanceof CannotHashValidator) {
              return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0))))))))));
          };
          if (x instanceof CannotMakeValue) {
              return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(new Data_Generic_Rep.Product(x.value0, new Data_Generic_Rep.Product(x.value1, x.value2)))))))))))));
          };
          if (x instanceof CannotWithdrawRewardsPubKey) {
              return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0))))))))))));
          };
          if (x instanceof CannotWithdrawRewardsPlutusScript) {
              return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0)))))))))))));
          };
          if (x instanceof CannotWithdrawRewardsNativeScript) {
              return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0))))))))))))));
          };
          if (x instanceof DatumNotFound) {
              return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0)))))))))))))));
          };
          if (x instanceof DatumWrongHash) {
              return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(new Data_Generic_Rep.Product(x.value0, x.value1)))))))))))))))));
          };
          if (x instanceof MintingPolicyHashNotCurrencySymbol) {
              return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0)))))))))))))))));
          };
          if (x instanceof MintingPolicyNotFound) {
              return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0))))))))))))))))));
          };
          if (x instanceof ModifyTx) {
              return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0)))))))))))))))))));
          };
          if (x instanceof OwnPubKeyAndStakeKeyMissing) {
              return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value))))))))))))))))))));
          };
          if (x instanceof TxOutRefNotFound) {
              return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0)))))))))))))))))))));
          };
          if (x instanceof TxOutRefWrongType) {
              return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0))))))))))))))))))))));
          };
          if (x instanceof TypeCheckFailed) {
              return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0)))))))))))))))))))))));
          };
          if (x instanceof TypedTxOutHasNoDatumHash) {
              return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value))))))))))))))))))))))));
          };
          if (x instanceof TypedValidatorMissing) {
              return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value)))))))))))))))))))))))));
          };
          if (x instanceof ValidatorHashNotFound) {
              return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0))))))))))))))))))))))))));
          };
          if (x instanceof WrongRefScriptHash) {
              return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0)))))))))))))))))))))))))));
          };
          if (x instanceof CannotSatisfyAny) {
              return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value))))))))))))))))))))))))))));
          };
          if (x instanceof ExpectedPlutusScriptGotNativeScript) {
              return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0)))))))))))))))))))))))))))));
          };
          if (x instanceof CannotMintZero) {
              return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Product(x.value0, x.value1))))))))))))))))))))))))))))));
          };
          throw new Error("Failed pattern match at Ctl.Internal.Types.ScriptLookups (line 922, column 1 - line 922, column 46): " + [ x.constructor.name ]);
      }
  };
  var showMkUnbalancedTxError = {
      show: Data_Show_Generic.genericShow(genericMkUnbalancedTxErro)(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Ctl_Internal_Types_PubKeyHash.showPaymentPubKeyHash))({
          reflectSymbol: function () {
              return "CannotConvertPaymentPubKeyHash";
          }
      }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsNoArguments)({
          reflectSymbol: function () {
              return "CannotFindDatum";
          }
      }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Ctl_Internal_Types_Transaction.showDataHash))({
          reflectSymbol: function () {
              return "CannotQueryDatum";
          }
      }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsProduct(Data_Show_Generic.genericShowArgsArgument(Ctl_Internal_Types_Interval.showInterval(Ctl_Internal_Types_Interval.showPOSIXTime)(Ctl_Internal_Types_Interval.ordPOSIXTime)(Ctl_Internal_Types_Interval.semiringPOSIXTime)))(Data_Show_Generic.genericShowArgsArgument(Ctl_Internal_Types_Interval.showPosixTimeToSlotError)))({
          reflectSymbol: function () {
              return "CannotConvertPOSIXTimeRange";
          }
      }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsProduct(Data_Show_Generic.genericShowArgsArgument(Ctl_Internal_Types_Interval.showInterval(Ctl_Internal_Types_Interval.showPOSIXTime)(Ctl_Internal_Types_Interval.ordPOSIXTime)(Ctl_Internal_Types_Interval.semiringPOSIXTime)))(Data_Show_Generic.genericShowArgsArgument(Ctl_Internal_Types_Interval.showInterval(Ctl_Internal_Types_Interval.showPOSIXTime)(Ctl_Internal_Types_Interval.ordPOSIXTime)(Ctl_Internal_Types_Interval.semiringPOSIXTime))))({
          reflectSymbol: function () {
              return "CannotSolveTimeConstraints";
          }
      }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsNoArguments)({
          reflectSymbol: function () {
              return "CannotGetMintingPolicyScriptIndex";
          }
      }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Ctl_Internal_Serialization_Address.showAddress))({
          reflectSymbol: function () {
              return "CannotGetValidatorHashFromAddress";
          }
      }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Ctl_Internal_Types_Datum.showDatum))({
          reflectSymbol: function () {
              return "CannotHashDatum";
          }
      }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Ctl_Internal_Types_Scripts.showMintingPolicy))({
          reflectSymbol: function () {
              return "CannotHashMintingPolicy";
          }
      }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Ctl_Internal_Types_Scripts.showValidator))({
          reflectSymbol: function () {
              return "CannotHashValidator";
          }
      }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsProduct(Data_Show_Generic.genericShowArgsArgument(Ctl_Internal_Cardano_Types_Value.showCurrencySymbol))(Data_Show_Generic.genericShowArgsProduct(Data_Show_Generic.genericShowArgsArgument(Ctl_Internal_Types_TokenName.showTokenName))(Data_Show_Generic.genericShowArgsArgument(Data_BigInt.showBigInt))))({
          reflectSymbol: function () {
              return "CannotMakeValue";
          }
      }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Ctl_Internal_Types_PubKeyHash.showStakePubKeyHash))({
          reflectSymbol: function () {
              return "CannotWithdrawRewardsPubKey";
          }
      }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Ctl_Internal_Types_Scripts.showPlutusScriptStakeVali))({
          reflectSymbol: function () {
              return "CannotWithdrawRewardsPlutusScript";
          }
      }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Ctl_Internal_Types_Scripts.showNativeScriptStakeVali))({
          reflectSymbol: function () {
              return "CannotWithdrawRewardsNativeScript";
          }
      }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Ctl_Internal_Types_Transaction.showDataHash))({
          reflectSymbol: function () {
              return "DatumNotFound";
          }
      }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsProduct(Data_Show_Generic.genericShowArgsArgument(Ctl_Internal_Types_Transaction.showDataHash))(Data_Show_Generic.genericShowArgsArgument(Ctl_Internal_Types_Datum.showDatum)))({
          reflectSymbol: function () {
              return "DatumWrongHash";
          }
      }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Ctl_Internal_Types_Scripts.showMintingPolicyHash))({
          reflectSymbol: function () {
              return "MintingPolicyHashNotCurrencySymbol";
          }
      }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Ctl_Internal_Types_Scripts.showMintingPolicyHash))({
          reflectSymbol: function () {
              return "MintingPolicyNotFound";
          }
      }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Ctl_Internal_Transaction.showModifyTxError))({
          reflectSymbol: function () {
              return "ModifyTx";
          }
      }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsNoArguments)({
          reflectSymbol: function () {
              return "OwnPubKeyAndStakeKeyMissing";
          }
      }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Ctl_Internal_Types_Transaction.showTransactionInput))({
          reflectSymbol: function () {
              return "TxOutRefNotFound";
          }
      }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Ctl_Internal_Types_Transaction.showTransactionInput))({
          reflectSymbol: function () {
              return "TxOutRefWrongType";
          }
      }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Ctl_Internal_Types_TypedTxOut.showTypeCheckError))({
          reflectSymbol: function () {
              return "TypeCheckFailed";
          }
      }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsNoArguments)({
          reflectSymbol: function () {
              return "TypedTxOutHasNoDatumHash";
          }
      }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsNoArguments)({
          reflectSymbol: function () {
              return "TypedValidatorMissing";
          }
      }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Ctl_Internal_Types_Scripts.showValidatorHash))({
          reflectSymbol: function () {
              return "ValidatorHashNotFound";
          }
      }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Data_Maybe.showMaybe(Ctl_Internal_Serialization_Hash.showScriptHash)))({
          reflectSymbol: function () {
              return "WrongRefScriptHash";
          }
      }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsNoArguments)({
          reflectSymbol: function () {
              return "CannotSatisfyAny";
          }
      }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Ctl_Internal_Types_Scripts.showMintingPolicyHash))({
          reflectSymbol: function () {
              return "ExpectedPlutusScriptGotNativeScript";
          }
      }))(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsProduct(Data_Show_Generic.genericShowArgsArgument(Ctl_Internal_Cardano_Types_Value.showCurrencySymbol))(Data_Show_Generic.genericShowArgsArgument(Ctl_Internal_Types_TokenName.showTokenName)))({
          reflectSymbol: function () {
              return "CannotMintZero";
          }
      })))))))))))))))))))))))))))))))
  };      
  var validator = function (vl) {
      return Data_Newtype.over()()(ScriptLookups)(function (v) {
          return {
              scripts: Data_Array.singleton(vl),
              datums: v.datums,
              mps: v.mps,
              ownPaymentPubKeyHash: v.ownPaymentPubKeyHash,
              ownStakePubKeyHash: v.ownStakePubKeyHash,
              paymentPubKeyHashes: v.paymentPubKeyHashes,
              txOutputs: v.txOutputs,
              typedValidator: v.typedValidator
          };
      })(Data_Monoid.mempty(monoidScriptLookups));
  };   
  var unspentOutputs = function (mp) {
      return Data_Newtype.over()()(ScriptLookups)(function (v) {
          return {
              txOutputs: mp,
              datums: v.datums,
              mps: v.mps,
              ownPaymentPubKeyHash: v.ownPaymentPubKeyHash,
              ownStakePubKeyHash: v.ownStakePubKeyHash,
              paymentPubKeyHashes: v.paymentPubKeyHashes,
              scripts: v.scripts,
              typedValidator: v.typedValidator
          };
      })(Data_Monoid.mempty(monoidScriptLookups));
  };   
  var resumeTimeConstraints = function (constraints) {
      var mergeIntervals = function (interval1) {
          return function (interval2) {
              var newInterval = Ctl_Internal_Types_Interval.intersection(Ctl_Internal_Types_Interval.ordPOSIXTime)(interval1)(interval2);
              var $779 = Ctl_Internal_Types_Interval.isEmpty(Ctl_Internal_Types_Interval.ordPOSIXTime)(newInterval);
              if ($779) {
                  return new Data_Either.Left(new CannotSolveTimeConstraints(interval1, interval2));
              };
              return Control_Applicative.pure(Data_Either.applicativeEither)(newInterval);
          };
      };
      var isTimeConstraint = function (v) {
          if (v instanceof Ctl_Internal_Types_TxConstraints.MustValidateIn) {
              return true;
          };
          return false;
      };
      var constraintToInterval = function (v) {
          if (v instanceof Ctl_Internal_Types_TxConstraints.MustValidateIn) {
              return new Data_Maybe.Just(v.value0);
          };
          return Data_Maybe.Nothing.value;
      };
      var v = Data_Array.partition(isTimeConstraint)(constraints);
      var intervals = Data_Array.mapMaybe(constraintToInterval)(v.yes);
      return Control_Bind.bind(Data_Either.bindEither)(Data_Foldable.foldM(Data_Foldable.foldableArray)(Data_Either.monadEither)(mergeIntervals)(Ctl_Internal_Types_Interval.always(Ctl_Internal_Types_Interval.ordPOSIXTime))(intervals))(function (newInterval) {
          return Control_Applicative.pure(Data_Either.applicativeEither)(Data_Array.cons(new Ctl_Internal_Types_TxConstraints.MustValidateIn(newInterval))(v.no));
      });
  };
  var requireValue = function (required) {
      return {
          required: required,
          provided: Data_Monoid.mempty(Ctl_Internal_Cardano_Types_Value.monoidValue)
      };
  };
  var provideValue = function (provided) {
      return {
          provided: provided,
          required: Data_Monoid.mempty(Ctl_Internal_Cardano_Types_Value.monoidValue)
      };
  };
  var ownStakePubKeyHash = function (skh) {
      return Data_Newtype.over()()(ScriptLookups)(function (v) {
          return {
              ownStakePubKeyHash: new Data_Maybe.Just(skh),
              datums: v.datums,
              mps: v.mps,
              ownPaymentPubKeyHash: v.ownPaymentPubKeyHash,
              paymentPubKeyHashes: v.paymentPubKeyHashes,
              scripts: v.scripts,
              txOutputs: v.txOutputs,
              typedValidator: v.typedValidator
          };
      })(Data_Monoid.mempty(monoidScriptLookups));
  };   
  var ownPaymentPubKeyHash = function (pkh) {
      return Data_Newtype.over()()(ScriptLookups)(function (v) {
          return {
              ownPaymentPubKeyHash: new Data_Maybe.Just(pkh),
              datums: v.datums,
              mps: v.mps,
              ownStakePubKeyHash: v.ownStakePubKeyHash,
              paymentPubKeyHashes: v.paymentPubKeyHashes,
              scripts: v.scripts,
              txOutputs: v.txOutputs,
              typedValidator: v.typedValidator
          };
      })(Data_Monoid.mempty(monoidScriptLookups));
  };   
  var missingValueSpent = function (v) {
      var difference = Data_Semigroup.append(Ctl_Internal_Cardano_Types_Value.semigroupValue)(v.required)(Ctl_Internal_Cardano_Types_Value.negation(Ctl_Internal_Cardano_Types_Value.negateValue)(v.provided));
      var v1 = Ctl_Internal_Cardano_Types_Value.split(Ctl_Internal_Cardano_Types_Value.splitValue)(difference);
      return v1.value1;
  };
  var totalMissingValue = function (v) {
      return Data_Lattice.join(Ctl_Internal_Cardano_Types_Value.joinSemilatticeValue)(missingValueSpent(v.valueSpentBalancesInputs))(missingValueSpent(v.valueSpentBalancesOutputs));
  };
  var mintingPolicy = function (pl) {
      return Data_Newtype.over()()(ScriptLookups)(function (v) {
          return {
              mps: Data_Array.singleton(pl),
              datums: v.datums,
              ownPaymentPubKeyHash: v.ownPaymentPubKeyHash,
              ownStakePubKeyHash: v.ownStakePubKeyHash,
              paymentPubKeyHashes: v.paymentPubKeyHashes,
              scripts: v.scripts,
              txOutputs: v.txOutputs,
              typedValidator: v.typedValidator
          };
      })(Data_Monoid.mempty(monoidScriptLookups));
  };   
  var lookupValidator = function (vh) {
      return function (osMap) {
          return Data_Either.note(new ValidatorHashNotFound(vh))(Data_Map_Internal.lookup(Ctl_Internal_Types_Scripts.ordValidatorHash)(vh)(osMap));
      };
  };
  var lookupMintingPolicy = function (mph) {
      return function (mpsMap) {
          return Data_Either.note(new MintingPolicyNotFound(mph))(Data_Map_Internal.lookup(Ctl_Internal_Types_Scripts.ordMintingPolicyHash)(mph)(mpsMap));
      };
  };
  var datum = function (dt) {
      return Data_Newtype.over()()(ScriptLookups)(function (v) {
          return {
              datums: Data_Map_Internal.singleton(Ctl_Internal_Hashing.datumHash(dt))(dt),
              mps: v.mps,
              ownPaymentPubKeyHash: v.ownPaymentPubKeyHash,
              ownStakePubKeyHash: v.ownStakePubKeyHash,
              paymentPubKeyHashes: v.paymentPubKeyHashes,
              scripts: v.scripts,
              txOutputs: v.txOutputs,
              typedValidator: v.typedValidator
          };
      })(Data_Monoid.mempty(monoidScriptLookups));
  };
  var credentialToStakeCredential = function (cred) {
      if (cred instanceof Ctl_Internal_Plutus_Types_Credential.PubKeyCredential) {
          return Ctl_Internal_Serialization_Address.keyHashCredential(Data_Newtype.unwrap()(cred.value0));
      };
      if (cred instanceof Ctl_Internal_Plutus_Types_Credential.ScriptCredential) {
          return Ctl_Internal_Serialization_Address.scriptHashCredential(Data_Newtype.unwrap()(cred.value0));
      };
      throw new Error("Failed pattern match at Ctl.Internal.Types.ScriptLookups (line 1453, column 36 - line 1455, column 74): " + [ cred.constructor.name ]);
  };
  var checkRefNative = function (scriptRef) {
      var uout = (function () {
          if (scriptRef instanceof Ctl_Internal_Types_TxConstraints.RefInput) {
              return scriptRef.value0;
          };
          if (scriptRef instanceof Ctl_Internal_Types_TxConstraints.SpendInput) {
              return scriptRef.value0;
          };
          throw new Error("Failed pattern match at Ctl.Internal.Types.ScriptLookups (line 1034, column 10 - line 1036, column 28): " + [ scriptRef.constructor.name ]);
      })();
      var isNative = function (ref) {
          return Control_Bind.bind(Data_Maybe.bindMaybe)(ref)(function (v) {
              if (v instanceof Ctl_Internal_Cardano_Types_ScriptRef.NativeScriptRef) {
                  return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(true);
              };
              return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(false);
          });
      };
      return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Ctl_Internal_Contract_Monad.monadContract))(Data_Either.note(new WrongRefScriptHash(Data_Maybe.Nothing.value))(isNative((Data_Newtype.unwrap()((Data_Newtype.unwrap()(uout)).output)).scriptRef)));
  };
  var _valueSpentBalancesOutputs = function (dictStrong) {
      return Data_Lens_Record.prop({
          reflectSymbol: function () {
              return "valueSpentBalancesOutputs";
          }
      })()()(Data_Symbol.SProxy.value)(dictStrong);
  };
  var _valueSpentBalancesInputs = function (dictStrong) {
      return Data_Lens_Record.prop({
          reflectSymbol: function () {
              return "valueSpentBalancesInputs";
          }
      })()()(Data_Symbol.SProxy.value)(dictStrong);
  };
  var _unbalancedTx = function (dictStrong) {
      return Data_Lens_Record.prop({
          reflectSymbol: function () {
              return "unbalancedTx";
          }
      })()()(Data_Symbol.SProxy.value)(dictStrong);
  };
  var attachToCps = function (handler) {
      return function (object) {
          return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Ctl_Internal_Contract_Monad.monadContract))(Data_Lens_Getter.use(Control_Monad_State_Trans.monadStateStateT(Ctl_Internal_Contract_Monad.monadContract))((function () {
              var $978 = _unbalancedTx(Data_Lens_Internal_Forget.strongForget);
              var $979 = Ctl_Internal_Types_UnbalancedTransaction["_transaction"](Data_Lens_Internal_Forget.strongForget);
              return function ($980) {
                  return $978($979($980));
              };
          })()))(function (tx) {
              return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Ctl_Internal_Contract_Monad.monadContract))(Effect_Class.liftEffect(Control_Monad_State_Trans.monadEffectState(Ctl_Internal_Contract_Monad.monadEffectContract))(Data_Functor.mapFlipped(Effect.functorEffect)(handler(object)(tx))(Data_Bifunctor.lmap(Data_Bifunctor.bifunctorEither)(ModifyTx.create))))(function (newTx) {
                  return Data_Either.either((function () {
                      var $981 = Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Ctl_Internal_Contract_Monad.monadContract));
                      var $982 = Control_Monad_Error_Class.throwError(Control_Monad_Error_Class.monadThrowEither);
                      return function ($983) {
                          return $981($982($983));
                      };
                  })())((function () {
                      var $984 = Data_Functor.map(Control_Monad_State_Trans.functorStateT(Ctl_Internal_Contract_Monad.functorContract))(Data_Either.Right.create);
                      var $985 = Data_Lens_Setter.assign(Control_Monad_State_Trans.monadStateStateT(Ctl_Internal_Contract_Monad.monadContract))((function () {
                          var $987 = _unbalancedTx(Data_Profunctor_Strong.strongFn);
                          var $988 = Ctl_Internal_Types_UnbalancedTransaction["_transaction"](Data_Profunctor_Strong.strongFn);
                          return function ($989) {
                              return $987($988($989));
                          };
                      })());
                      return function ($986) {
                          return $984($985($986));
                      };
                  })())(newTx);
              });
          });
      };
  };
  var _refScriptsUtxoMap = function (dictStrong) {
      return Data_Lens_Record.prop({
          reflectSymbol: function () {
              return "refScriptsUtxoMap";
          }
      })()()(Data_Symbol.SProxy.value)(dictStrong);
  };
  var _redeemersTxIns = function (dictStrong) {
      return Data_Lens_Record.prop({
          reflectSymbol: function () {
              return "redeemersTxIns";
          }
      })()()(Data_Symbol.SProxy.value)(dictStrong);
  };
  var _mintRedeemers = function (dictStrong) {
      return Data_Lens_Record.prop({
          reflectSymbol: function () {
              return "mintRedeemers";
          }
      })()()(Data_Symbol.SProxy.value)(dictStrong);
  };
  var reindexMintRedeemers = function (mpsHash) {
      return function (redeemer) {
          return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_State_Trans.bindStateT(Ctl_Internal_Contract_Monad.monadContract))(Data_Lens_Setter.modifying(Control_Monad_State_Trans.monadStateStateT(Ctl_Internal_Contract_Monad.monadContract))(_mintRedeemers(Data_Profunctor_Strong.strongFn))(Data_Map_Internal.insert(Ctl_Internal_Types_Scripts.ordMintingPolicyHash)(mpsHash)(redeemer)))(function () {
              return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Ctl_Internal_Contract_Monad.monadContract))(Data_Functor.mapFlipped(Control_Monad_State_Trans.functorStateT(Ctl_Internal_Contract_Monad.functorContract))(Data_Lens_Getter.use(Control_Monad_State_Trans.monadStateStateT(Ctl_Internal_Contract_Monad.monadContract))(_mintRedeemers(Data_Lens_Internal_Forget.strongForget)))(Data_Map_Internal.toUnfoldable(Data_Unfoldable.unfoldableArray)))(function (v) {
                  return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Ctl_Internal_Contract_Monad.monadContract))(Data_Array.mapWithIndex(function (ix) {
                      return function (v1) {
                          return {
                              tag: v1.value1.tag,
                              index: Data_BigInt.fromInt(ix),
                              data: v1.value1.data,
                              exUnits: v1.value1.exUnits
                          };
                      };
                  })(v));
              });
          });
      };
  };
  var _lookups = function (dictStrong) {
      return Data_Lens_Record.prop({
          reflectSymbol: function () {
              return "lookups";
          }
      })()()(Data_Symbol.SProxy.value)(dictStrong);
  };
  var lookupDatum = function (dh) {
      return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Ctl_Internal_Contract_Monad.monadContract))(Data_Functor.mapFlipped(Control_Monad_State_Trans.functorStateT(Ctl_Internal_Contract_Monad.functorContract))(Data_Lens_Getter.use(Control_Monad_State_Trans.monadStateStateT(Ctl_Internal_Contract_Monad.monadContract))(_lookups(Data_Lens_Internal_Forget.strongForget)))((function () {
          var $990 = Data_Newtype.unwrap();
          return function ($991) {
              return (function (v) {
                  return v.datums;
              })($990($991));
          };
      })()))(function (otherDt) {
          return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Ctl_Internal_Contract_Monad.monadContract))(Data_Either.note(new DatumNotFound(dh))(Data_Map_Internal.lookup(Ctl_Internal_Types_Transaction.ordDataHash)(dh)(otherDt)));
      });
  };
  var _datums = function (dictStrong) {
      return Data_Lens_Record.prop({
          reflectSymbol: function () {
              return "datums";
          }
      })()()(Data_Symbol.SProxy.value)(dictStrong);
  };
  var addDatum = function (dat) {
      return Control_Monad_Except_Trans.runExceptT(Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Except_Trans.bindExceptT(Control_Monad_State_Trans.monadStateT(Ctl_Internal_Contract_Monad.monadContract)))(attachToCps(Ctl_Internal_Transaction.attachDatum)(dat))(function () {
          return Data_Lens_Setter.appendModifying(Control_Monad_Except_Trans.monadStateExceptT(Control_Monad_State_Trans.monadStateStateT(Ctl_Internal_Contract_Monad.monadContract)))(Data_Semigroup.semigroupArray)(_datums(Data_Profunctor_Strong.strongFn))(Data_Array.singleton(dat));
      }));
  };
  var _cpsToTransaction = function (dictStrong) {
      var $992 = _unbalancedTx(dictStrong);
      var $993 = Ctl_Internal_Types_UnbalancedTransaction["_transaction"](dictStrong);
      return function ($994) {
          return $992($993($994));
      };
  };
  var _cpsToTxBody = function (dictStrong) {
      var $995 = _cpsToTransaction(dictStrong);
      var $996 = Ctl_Internal_Cardano_Types_Transaction["_body"](dictStrong);
      return function ($997) {
          return $995($996($997));
      };
  };
  var addCertificate = function (cert) {
      return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Ctl_Internal_Contract_Monad.monadContract))(Control_Monad_State_Class.gets(Control_Monad_State_Trans.monadStateStateT(Ctl_Internal_Contract_Monad.monadContract))(Data_Lens_Getter.view((function () {
          var $998 = _cpsToTxBody(Data_Lens_Internal_Forget.strongForget);
          var $999 = Ctl_Internal_Cardano_Types_Transaction["_certs"](Data_Lens_Internal_Forget.strongForget);
          var $1000 = Data_Lens_Iso.non(Data_Eq.eqArray(Ctl_Internal_Cardano_Types_Transaction.eqCertificate))([  ])(Data_Lens_Internal_Forget.profunctorForget);
          var $1001 = Data_Lens_Getter.to(Data_Array.length);
          return function ($1002) {
              return $998($999($1000($1001($1002))));
          };
      })())))(function (ix) {
          return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_State_Trans.bindStateT(Ctl_Internal_Contract_Monad.monadContract))(Data_Lens_Setter.modifying(Control_Monad_State_Trans.monadStateStateT(Ctl_Internal_Contract_Monad.monadContract))((function () {
              var $1003 = _cpsToTxBody(Data_Profunctor_Strong.strongFn);
              var $1004 = Ctl_Internal_Cardano_Types_Transaction["_certs"](Data_Profunctor_Strong.strongFn);
              var $1005 = Data_Lens_Iso.non(Data_Eq.eqArray(Ctl_Internal_Cardano_Types_Transaction.eqCertificate))([  ])(Data_Profunctor.profunctorFn);
              return function ($1006) {
                  return $1003($1004($1005($1006)));
              };
          })())(Data_Array.cons(cert)))(function () {
              return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Ctl_Internal_Contract_Monad.monadContract))(ix);
          });
      });
  };
  var getNetworkId = Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Ctl_Internal_Contract_Monad.monadContract))(Data_Lens_Getter.use(Control_Monad_State_Trans.monadStateStateT(Ctl_Internal_Contract_Monad.monadContract))((function () {
      var $1007 = _cpsToTxBody(Data_Lens_Internal_Forget.strongForget);
      var $1008 = Ctl_Internal_Cardano_Types_Transaction["_networkId"](Data_Lens_Internal_Forget.strongForget);
      return function ($1009) {
          return $1007($1008($1009));
      };
  })()))(Data_Maybe.maybe(Control_Monad_Reader_Class.asks(Control_Monad_State_Trans.monadAskStateT(Ctl_Internal_Contract_Monad.monadAskContractEnvContra))(function (v) {
      return v.networkId;
  }))(Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Ctl_Internal_Contract_Monad.monadContract))));
  var addMissingValueSpent = Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Ctl_Internal_Contract_Monad.monadContract))(Control_Monad_State_Class.gets(Control_Monad_State_Trans.monadStateStateT(Ctl_Internal_Contract_Monad.monadContract))(totalMissingValue))(function (missing) {
      return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Ctl_Internal_Contract_Monad.monadContract))(getNetworkId)(function (networkId) {
          var $809 = Ctl_Internal_Cardano_Types_Value.isZero(missing);
          if ($809) {
              return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Ctl_Internal_Contract_Monad.monadContract))(new Data_Either.Right(Data_Unit.unit));
          };
          return Control_Monad_Except_Trans.runExceptT(Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_State_Trans.monadStateT(Ctl_Internal_Contract_Monad.monadContract)))(Data_Functor.mapFlipped(Control_Monad_Except_Trans.functorExceptT(Control_Monad_State_Trans.functorStateT(Ctl_Internal_Contract_Monad.functorContract)))(Data_Lens_Getter.use(Control_Monad_Except_Trans.monadStateExceptT(Control_Monad_State_Trans.monadStateStateT(Ctl_Internal_Contract_Monad.monadContract)))(_lookups(Data_Lens_Internal_Forget.strongForget)))(Data_Newtype.unwrap()))(function (lookups) {
              return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_State_Trans.monadStateT(Ctl_Internal_Contract_Monad.monadContract)))((function () {
                  if (lookups.ownPaymentPubKeyHash instanceof Data_Maybe.Nothing && lookups.ownStakePubKeyHash instanceof Data_Maybe.Nothing) {
                      return Control_Monad_Error_Class.throwError(Control_Monad_Except_Trans.monadThrowExceptT(Control_Monad_State_Trans.monadStateT(Ctl_Internal_Contract_Monad.monadContract)))(OwnPubKeyAndStakeKeyMissing.value);
                  };
                  if (lookups.ownPaymentPubKeyHash instanceof Data_Maybe.Just && lookups.ownStakePubKeyHash instanceof Data_Maybe.Just) {
                      return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Control_Monad_State_Trans.monadStateT(Ctl_Internal_Contract_Monad.monadContract)))({
                          address: Ctl_Internal_Types_PubKeyHash.payPubKeyHashBaseAddress(networkId)(lookups.ownPaymentPubKeyHash.value0)(lookups.ownStakePubKeyHash.value0),
                          amount: missing,
                          datum: Ctl_Internal_Types_OutputDatum.NoOutputDatum.value,
                          scriptRef: Data_Maybe.Nothing.value
                      });
                  };
                  if (lookups.ownPaymentPubKeyHash instanceof Data_Maybe.Just && lookups.ownStakePubKeyHash instanceof Data_Maybe.Nothing) {
                      return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Control_Monad_State_Trans.monadStateT(Ctl_Internal_Contract_Monad.monadContract)))({
                          address: Ctl_Internal_Types_PubKeyHash.payPubKeyHashEnterpriseAddress(networkId)(lookups.ownPaymentPubKeyHash.value0),
                          amount: missing,
                          datum: Ctl_Internal_Types_OutputDatum.NoOutputDatum.value,
                          scriptRef: Data_Maybe.Nothing.value
                      });
                  };
                  if (lookups.ownPaymentPubKeyHash instanceof Data_Maybe.Nothing && lookups.ownStakePubKeyHash instanceof Data_Maybe.Just) {
                      return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Control_Monad_State_Trans.monadStateT(Ctl_Internal_Contract_Monad.monadContract)))({
                          address: Ctl_Internal_Types_PubKeyHash.stakePubKeyHashRewardAddress(networkId)(lookups.ownStakePubKeyHash.value0),
                          amount: missing,
                          datum: Ctl_Internal_Types_OutputDatum.NoOutputDatum.value,
                          scriptRef: Data_Maybe.Nothing.value
                      });
                  };
                  throw new Error("Failed pattern match at Ctl.Internal.Types.ScriptLookups (line 763, column 14 - line 782, column 10): " + [ lookups.ownPaymentPubKeyHash.constructor.name, lookups.ownStakePubKeyHash.constructor.name ]);
              })())(function (txOut) {
                  return Data_Lens_Setter.modifying(Control_Monad_Except_Trans.monadStateExceptT(Control_Monad_State_Trans.monadStateStateT(Ctl_Internal_Contract_Monad.monadContract)))((function () {
                      var $1010 = _cpsToTxBody(Data_Profunctor_Strong.strongFn);
                      var $1011 = Ctl_Internal_Cardano_Types_Transaction["_outputs"](Data_Profunctor_Strong.strongFn);
                      return function ($1012) {
                          return $1010($1011($1012));
                      };
                  })())(Data_Array.cons(txOut));
              });
          }));
      });
  });
  var addOwnInput = function () {
      return function (dictIsData) {
          return function (dictIsData1) {
              return function (_pd) {
                  return function (v) {
                      return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Ctl_Internal_Contract_Monad.monadContract))(getNetworkId)(function (networkId) {
                          return Control_Monad_Except_Trans.runExceptT(Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_State_Trans.monadStateT(Ctl_Internal_Contract_Monad.monadContract)))(Data_Lens_Getter.use(Control_Monad_Except_Trans.monadStateExceptT(Control_Monad_State_Trans.monadStateStateT(Ctl_Internal_Contract_Monad.monadContract)))(_lookups(Data_Lens_Internal_Forget.strongForget)))(function (v1) {
                              var cTxOutputs = Data_Functor.map(Data_Map_Internal.functorMap)(Ctl_Internal_Plutus_Conversion.fromPlutusTxOutputWithRefScript(networkId))(v1.txOutputs);
                              return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_State_Trans.monadStateT(Ctl_Internal_Contract_Monad.monadContract)))(Ctl_Internal_Helpers.liftM(Control_Monad_Except_Trans.monadErrorExceptT(Control_Monad_State_Trans.monadStateT(Ctl_Internal_Contract_Monad.monadContract)))(TypedValidatorMissing.value)(v1.typedValidator))(function (inst) {
                                  return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_State_Trans.monadStateT(Ctl_Internal_Contract_Monad.monadContract)))(Control_Monad_Trans_Class.lift(Control_Monad_State_Trans.monadTransStateT)(Ctl_Internal_Contract_Monad.monadContract)(Data_Functor.mapFlipped(Ctl_Internal_Contract_Monad.functorContract)(Ctl_Internal_Types_TypedTxOut.typeTxOutRef()(dictIsData)(networkId)(Data_Function.flip(Data_Map_Internal.lookup(Ctl_Internal_Types_Transaction.ordTransactionInput))(cTxOutputs))(inst)(v.txOutRef))(Data_Bifunctor.lmap(Data_Bifunctor.bifunctorEither)(TypeCheckFailed.create))))(function (typedTxOutRef) {
                                      var value = Ctl_Internal_Types_TypedTxOut.typedTxOutRefValue()(typedTxOutRef);
                                      return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Except_Trans.bindExceptT(Control_Monad_State_Trans.monadStateT(Ctl_Internal_Contract_Monad.monadContract)))(Data_Lens_Setter.modifying(Control_Monad_Except_Trans.monadStateExceptT(Control_Monad_State_Trans.monadStateStateT(Ctl_Internal_Contract_Monad.monadContract)))((function () {
                                          var $1013 = _cpsToTxBody(Data_Profunctor_Strong.strongFn);
                                          var $1014 = Ctl_Internal_Cardano_Types_Transaction["_inputs"](Data_Profunctor_Strong.strongFn);
                                          return function ($1015) {
                                              return $1013($1014($1015));
                                          };
                                      })())(Data_Set.insert(Ctl_Internal_Types_Transaction.ordTransactionInput)(v.txOutRef)))(function () {
                                          return Data_Lens_Setter.appendModifying(Control_Monad_Except_Trans.monadStateExceptT(Control_Monad_State_Trans.monadStateStateT(Ctl_Internal_Contract_Monad.monadContract)))(semigroupValueSpentBalanc)(_valueSpentBalancesInputs(Data_Profunctor_Strong.strongFn))(provideValue(value));
                                      });
                                  });
                              });
                          }));
                      });
                  };
              };
          };
      };
  };
  var addOwnOutput = function () {
      return function (dictToData) {
          return function (v) {
              return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Ctl_Internal_Contract_Monad.monadContract))(Control_Monad_Trans_Class.lift(Control_Monad_State_Trans.monadTransStateT)(Ctl_Internal_Contract_Monad.monadContract)(Ctl_Internal_Contract_QueryHandle.getQueryHandle))(function (queryHandle) {
                  return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Ctl_Internal_Contract_Monad.monadContract))(getNetworkId)(function (networkId) {
                      return Control_Monad_Except_Trans.runExceptT(Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_State_Trans.monadStateT(Ctl_Internal_Contract_Monad.monadContract)))(Data_Lens_Getter.use(Control_Monad_Except_Trans.monadStateExceptT(Control_Monad_State_Trans.monadStateStateT(Ctl_Internal_Contract_Monad.monadContract)))(_lookups(Data_Lens_Internal_Forget.strongForget)))(function (v1) {
                          return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_State_Trans.monadStateT(Ctl_Internal_Contract_Monad.monadContract)))(Ctl_Internal_Helpers.liftM(Control_Monad_Except_Trans.monadErrorExceptT(Control_Monad_State_Trans.monadStateT(Ctl_Internal_Contract_Monad.monadContract)))(TypedValidatorMissing.value)(v1.typedValidator))(function (inst) {
                              var value$prime = Ctl_Internal_Plutus_Conversion_Value.fromPlutusValue(v.value);
                              var typedTxOut = Ctl_Internal_Types_TypedTxOut.mkTypedTxOut()(dictToData)(networkId)(inst)(v.datum)(value$prime);
                              var txOut = Ctl_Internal_Types_TypedTxOut.typedTxOutTxOut()(typedTxOut);
                              return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_State_Trans.monadStateT(Ctl_Internal_Contract_Monad.monadContract)))(Ctl_Internal_Helpers.liftM(Control_Monad_Except_Trans.monadErrorExceptT(Control_Monad_State_Trans.monadStateT(Ctl_Internal_Contract_Monad.monadContract)))(TypedTxOutHasNoDatumHash.value)(Ctl_Internal_Types_TypedTxOut.typedTxOutDatumHash()(typedTxOut)))(function (dHash) {
                                  return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_State_Trans.monadStateT(Ctl_Internal_Contract_Monad.monadContract)))(Effect_Aff_Class.liftAff(Effect_Aff_Class.monadAffState(Ctl_Internal_Contract_Monad.monadAffContract))(Data_Functor.mapFlipped(Effect_Aff.functorAff)(queryHandle.getDatumByHash(dHash))((function () {
                                      var $1016 = Data_Either.note(new CannotQueryDatum(dHash));
                                      var $1017 = Control_Bind.join(Data_Maybe.bindMaybe);
                                      return function ($1018) {
                                          return $1016($1017(Data_Either.hush($1018)));
                                      };
                                  })())))(function (dat) {
                                      return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Except_Trans.bindExceptT(Control_Monad_State_Trans.monadStateT(Ctl_Internal_Contract_Monad.monadContract)))(Data_Lens_Setter.modifying(Control_Monad_Except_Trans.monadStateExceptT(Control_Monad_State_Trans.monadStateStateT(Ctl_Internal_Contract_Monad.monadContract)))((function () {
                                          var $1019 = _cpsToTxBody(Data_Profunctor_Strong.strongFn);
                                          var $1020 = Ctl_Internal_Cardano_Types_Transaction["_outputs"](Data_Profunctor_Strong.strongFn);
                                          return function ($1021) {
                                              return $1019($1020($1021));
                                          };
                                      })())(Data_Array.cons(txOut)))(function () {
                                          return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Except_Trans.bindExceptT(Control_Monad_State_Trans.monadStateT(Ctl_Internal_Contract_Monad.monadContract)))(addDatum(dat))(function () {
                                              return Data_Lens_Setter.appendModifying(Control_Monad_Except_Trans.monadStateExceptT(Control_Monad_State_Trans.monadStateStateT(Ctl_Internal_Contract_Monad.monadContract)))(semigroupValueSpentBalanc)(_valueSpentBalancesOutputs(Data_Profunctor_Strong.strongFn))(provideValue(value$prime));
                                          });
                                      });
                                  });
                              });
                          });
                      }));
                  });
              });
          };
      };
  };
  var lookupTxOutRef = function (oref) {
      var convertTxOutput = function (txOutput) {
          return Data_Functor.map(Control_Monad_State_Trans.functorStateT(Ctl_Internal_Contract_Monad.functorContract))(Data_Function.flip(Ctl_Internal_Plutus_Conversion.fromPlutusTxOutputWithRefScript)(txOutput))(getNetworkId);
      };
      return function (v) {
          if (v instanceof Data_Maybe.Just) {
              return Data_Maybe.maybe(lookupTxOutRef(oref)(Data_Maybe.Nothing.value))((function () {
                  var $1022 = Data_Functor.map(Control_Monad_State_Trans.functorStateT(Ctl_Internal_Contract_Monad.functorContract))(Data_Either.Right.create);
                  return function ($1023) {
                      return $1022(convertTxOutput($1023));
                  };
              })())(Data_Map_Internal.lookup(Ctl_Internal_Types_Transaction.ordTransactionInput)(oref)(Ctl_Internal_Types_TxConstraints.utxoWithScriptRef(v.value0)));
          };
          if (v instanceof Data_Maybe.Nothing) {
              return Control_Monad_Except_Trans.runExceptT(Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_State_Trans.monadStateT(Ctl_Internal_Contract_Monad.monadContract)))(Data_Functor.mapFlipped(Control_Monad_Except_Trans.functorExceptT(Control_Monad_State_Trans.functorStateT(Ctl_Internal_Contract_Monad.functorContract)))(Data_Lens_Getter.use(Control_Monad_Except_Trans.monadStateExceptT(Control_Monad_State_Trans.monadStateStateT(Ctl_Internal_Contract_Monad.monadContract)))(_lookups(Data_Lens_Internal_Forget.strongForget)))((function () {
                  var $1024 = Data_Newtype.unwrap();
                  return function ($1025) {
                      return (function (v1) {
                          return v1.txOutputs;
                      })($1024($1025));
                  };
              })()))(function (utxos) {
                  return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_State_Trans.monadStateT(Ctl_Internal_Contract_Monad.monadContract)))(Ctl_Internal_Helpers.liftM(Control_Monad_Except_Trans.monadErrorExceptT(Control_Monad_State_Trans.monadStateT(Ctl_Internal_Contract_Monad.monadContract)))(new TxOutRefNotFound(oref))(Data_Map_Internal.lookup(Ctl_Internal_Types_Transaction.ordTransactionInput)(oref)(utxos)))(function (txOutput) {
                      return Control_Monad_Trans_Class.lift(Control_Monad_Except_Trans.monadTransExceptT)(Control_Monad_State_Trans.monadStateT(Ctl_Internal_Contract_Monad.monadContract))(convertTxOutput(txOutput));
                  });
              }));
          };
          throw new Error("Failed pattern match at Ctl.Internal.Types.ScriptLookups (line 933, column 23 - line 941, column 38): " + [ v.constructor.name ]);
      };
  };
  var updateUtxoIndex = Control_Monad_Except_Trans.runExceptT(Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_State_Trans.monadStateT(Ctl_Internal_Contract_Monad.monadContract)))(Data_Functor.mapFlipped(Control_Monad_Except_Trans.functorExceptT(Control_Monad_State_Trans.functorStateT(Ctl_Internal_Contract_Monad.functorContract)))(Data_Lens_Getter.use(Control_Monad_Except_Trans.monadStateExceptT(Control_Monad_State_Trans.monadStateStateT(Ctl_Internal_Contract_Monad.monadContract)))(_lookups(Data_Lens_Internal_Forget.strongForget)))((function () {
      var $1026 = Data_Newtype.unwrap();
      return function ($1027) {
          return (function (v) {
              return v.txOutputs;
          })($1026($1027));
      };
  })()))(function (txOutputs) {
      return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_State_Trans.monadStateT(Ctl_Internal_Contract_Monad.monadContract)))(Data_Lens_Getter.use(Control_Monad_Except_Trans.monadStateExceptT(Control_Monad_State_Trans.monadStateStateT(Ctl_Internal_Contract_Monad.monadContract)))(_refScriptsUtxoMap(Data_Lens_Internal_Forget.strongForget)))(function (refScriptsUtxoMap) {
          return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_State_Trans.monadStateT(Ctl_Internal_Contract_Monad.monadContract)))(Control_Monad_Trans_Class.lift(Control_Monad_Except_Trans.monadTransExceptT)(Control_Monad_State_Trans.monadStateT(Ctl_Internal_Contract_Monad.monadContract))(getNetworkId))(function (networkId) {
              var cTxOutputs = Data_Functor.mapFlipped(Data_Map_Internal.functorMap)(Data_Map_Internal.union(Ctl_Internal_Types_Transaction.ordTransactionInput)(txOutputs)(refScriptsUtxoMap))(Ctl_Internal_Plutus_Conversion.fromPlutusTxOutputWithRefScript(networkId));
              return Data_Lens_Setter.modifying(Control_Monad_Except_Trans.monadStateExceptT(Control_Monad_State_Trans.monadStateStateT(Ctl_Internal_Contract_Monad.monadContract)))((function () {
                  var $1028 = _unbalancedTx(Data_Profunctor_Strong.strongFn);
                  var $1029 = Ctl_Internal_Types_UnbalancedTransaction["_utxoIndex"](Data_Profunctor_Strong.strongFn);
                  return function ($1030) {
                      return $1028($1029($1030));
                  };
              })())(Data_Function.flip(Data_Map_Internal.union(Ctl_Internal_Types_Transaction.ordTransactionInput))(cTxOutputs));
          });
      });
  }));
  var processScriptRefUnspentOut = function () {
      return function (scriptHash) {
          return function (inputWithRefScript) {
              var updateRefScriptsUtxoMap = function (v) {
                  return Data_Lens_Setter.modifying(Control_Monad_State_Trans.monadStateStateT(Ctl_Internal_Contract_Monad.monadContract))(_refScriptsUtxoMap(Data_Profunctor_Strong.strongFn))(Data_Map_Internal.insert(Ctl_Internal_Types_Transaction.ordTransactionInput)(v.input)(v.output));
              };
              var checkScriptRef = function (v) {
                  var refScriptHash = (function (v1) {
                      return v1.referenceScript;
                  })(Data_Newtype.unwrap()((Data_Newtype.unwrap()(v.output)).output));
                  var err = Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Ctl_Internal_Contract_Monad.monadContract))(Control_Monad_Error_Class.throwError(Control_Monad_Error_Class.monadThrowEither)(new WrongRefScriptHash(refScriptHash)));
                  var $833 = Data_Eq.notEq(Data_Maybe.eqMaybe(Ctl_Internal_Serialization_Hash.eqScriptHash))(new Data_Maybe.Just(Data_Newtype.unwrap()(scriptHash)))(refScriptHash);
                  if ($833) {
                      return err;
                  };
                  return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Ctl_Internal_Contract_Monad.monadContract))(new Data_Either.Right(Data_Unit.unit));
              };
              return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Ctl_Internal_Contract_Monad.monadContract))((function () {
                  if (inputWithRefScript instanceof Ctl_Internal_Types_TxConstraints.SpendInput) {
                      return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_State_Trans.bindStateT(Ctl_Internal_Contract_Monad.monadContract))(Data_Lens_Setter.modifying(Control_Monad_State_Trans.monadStateStateT(Ctl_Internal_Contract_Monad.monadContract))((function () {
                          var $1031 = _cpsToTxBody(Data_Profunctor_Strong.strongFn);
                          var $1032 = Ctl_Internal_Cardano_Types_Transaction["_inputs"](Data_Profunctor_Strong.strongFn);
                          return function ($1033) {
                              return $1031($1032($1033));
                          };
                      })())(Data_Set.insert(Ctl_Internal_Types_Transaction.ordTransactionInput)((function (v) {
                          return v.input;
                      })(Data_Newtype.unwrap()(inputWithRefScript.value0)))))(function () {
                          return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Ctl_Internal_Contract_Monad.monadContract))(inputWithRefScript.value0);
                      });
                  };
                  if (inputWithRefScript instanceof Ctl_Internal_Types_TxConstraints.RefInput) {
                      var refInput = (Data_Newtype.unwrap()(inputWithRefScript.value0)).input;
                      return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_State_Trans.bindStateT(Ctl_Internal_Contract_Monad.monadContract))(Data_Lens_Setter.modifying(Control_Monad_State_Trans.monadStateStateT(Ctl_Internal_Contract_Monad.monadContract))((function () {
                          var $1034 = _cpsToTxBody(Data_Profunctor_Strong.strongFn);
                          var $1035 = Ctl_Internal_Cardano_Types_Transaction["_referenceInputs"](Data_Profunctor_Strong.strongFn);
                          return function ($1036) {
                              return $1034($1035($1036));
                          };
                      })())(Data_Set.insert(Ctl_Internal_Types_Transaction.ordTransactionInput)(refInput)))(function () {
                          return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Ctl_Internal_Contract_Monad.monadContract))(inputWithRefScript.value0);
                      });
                  };
                  throw new Error("Failed pattern match at Ctl.Internal.Types.ScriptLookups (line 989, column 17 - line 996, column 22): " + [ inputWithRefScript.constructor.name ]);
              })())(function (unspentOut) {
                  return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_State_Trans.bindStateT(Ctl_Internal_Contract_Monad.monadContract))(updateRefScriptsUtxoMap(unspentOut))(function () {
                      return checkScriptRef(unspentOut);
                  });
              });
          };
      };
  };
  var processConstraint = function (mpsMap) {
      return function (osMap) {
          return function (c) {
              var outputDatum = function (dat) {
                  return function (v) {
                      if (v instanceof Ctl_Internal_Types_TxConstraints.DatumInline) {
                          return new Ctl_Internal_Types_OutputDatum.OutputDatum(dat);
                      };
                      if (v instanceof Ctl_Internal_Types_TxConstraints.DatumWitness) {
                          return new Ctl_Internal_Types_OutputDatum.OutputDatumHash(Ctl_Internal_Hashing.datumHash(dat));
                      };
                      throw new Error("Failed pattern match at Ctl.Internal.Types.ScriptLookups (line 1448, column 21 - line 1450, column 60): " + [ v.constructor.name ]);
                  };
              };
              return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Ctl_Internal_Contract_Monad.monadContract))(Control_Monad_Trans_Class.lift(Control_Monad_State_Trans.monadTransStateT)(Ctl_Internal_Contract_Monad.monadContract)(Ctl_Internal_Contract_QueryHandle.getQueryHandle))(function (queryHandle) {
                  if (c instanceof Ctl_Internal_Types_TxConstraints.MustIncludeDatum) {
                      return addDatum(c.value0);
                  };
                  if (c instanceof Ctl_Internal_Types_TxConstraints.MustValidateIn) {
                      return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Ctl_Internal_Contract_Monad.monadContract))(Control_Monad_Reader_Class.asks(Control_Monad_State_Trans.monadAskStateT(Ctl_Internal_Contract_Monad.monadAskContractEnvContra))(function (v) {
                          return v.ledgerConstants;
                      }))(function (v) {
                          return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Ctl_Internal_Contract_Monad.monadContract))(Effect_Aff_Class.liftAff(Effect_Aff_Class.monadAffState(Ctl_Internal_Contract_Monad.monadAffContract))(Control_Bind.bind(Effect_Aff.bindAff)(queryHandle.getEraSummaries)(Data_Either.either((function () {
                              var $1037 = Effect_Class.liftEffect(Effect_Aff.monadEffectAff);
                              var $1038 = Data_Show.show(Ctl_Internal_Service_Error.showClientError);
                              return function ($1039) {
                                  return $1037(Effect_Exception["throw"]($1038($1039)));
                              };
                          })())(Control_Applicative.pure(Effect_Aff.applicativeAff)))))(function (eraSummaries) {
                              return Control_Monad_Except_Trans.runExceptT(Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_State_Trans.monadStateT(Ctl_Internal_Contract_Monad.monadContract)))(Effect_Class.liftEffect(Control_Monad_State_Trans.monadEffectState(Ctl_Internal_Contract_Monad.monadEffectContract))(Data_Functor.mapFlipped(Effect.functorEffect)(Ctl_Internal_Types_Interval.posixTimeRangeToTransactionValidity(eraSummaries)(v.systemStart)(c.value0))(Data_Bifunctor.lmap(Data_Bifunctor.bifunctorEither)(CannotConvertPOSIXTimeRange.create(c.value0)))))(function (v1) {
                                  return Data_Lens_Setter.modifying(Control_Monad_Except_Trans.monadStateExceptT(Control_Monad_State_Trans.monadStateStateT(Ctl_Internal_Contract_Monad.monadContract)))((function () {
                                      var $1040 = _cpsToTxBody(Data_Profunctor_Strong.strongFn);
                                      var $1041 = Data_Lens_Iso_Newtype["_Newtype"]()()(Data_Profunctor.profunctorFn);
                                      return function ($1042) {
                                          return $1040($1041($1042));
                                      };
                                  })())(function (v2) {
                                      var $843 = {};
                                      for (var $844 in v2) {
                                          if ({}.hasOwnProperty.call(v2, $844)) {
                                              $843[$844] = v2[$844];
                                          };
                                      };
                                      $843.ttl = v1.timeToLive;
                                      $843.validityStartInterval = v1.validityStartInterval;
                                      return $843;
                                  });
                              }));
                          });
                      });
                  };
                  if (c instanceof Ctl_Internal_Types_TxConstraints.MustBeSignedBy) {
                      return Control_Monad_Except_Trans.runExceptT(Data_Lens_Setter.appendModifying(Control_Monad_Except_Trans.monadStateExceptT(Control_Monad_State_Trans.monadStateStateT(Ctl_Internal_Contract_Monad.monadContract)))(Data_Maybe.semigroupMaybe(Data_Semigroup.semigroupArray))((function () {
                          var $1043 = _cpsToTxBody(Data_Profunctor_Strong.strongFn);
                          var $1044 = Ctl_Internal_Cardano_Types_Transaction["_requiredSigners"](Data_Profunctor_Strong.strongFn);
                          return function ($1045) {
                              return $1043($1044($1045));
                          };
                      })())(new Data_Maybe.Just([ Data_Newtype.wrap()(Data_Newtype.unwrap()(Data_Newtype.unwrap()(c.value0))) ])));
                  };
                  if (c instanceof Ctl_Internal_Types_TxConstraints.MustSpendAtLeast) {
                      var value = Ctl_Internal_Plutus_Conversion_Value.fromPlutusValue(c.value0);
                      return Control_Monad_Except_Trans.runExceptT(Data_Lens_Setter.appendModifying(Control_Monad_Except_Trans.monadStateExceptT(Control_Monad_State_Trans.monadStateStateT(Ctl_Internal_Contract_Monad.monadContract)))(semigroupValueSpentBalanc)(_valueSpentBalancesInputs(Data_Profunctor_Strong.strongFn))(requireValue(value)));
                  };
                  if (c instanceof Ctl_Internal_Types_TxConstraints.MustProduceAtLeast) {
                      var value = Ctl_Internal_Plutus_Conversion_Value.fromPlutusValue(c.value0);
                      return Control_Monad_Except_Trans.runExceptT(Data_Lens_Setter.appendModifying(Control_Monad_Except_Trans.monadStateExceptT(Control_Monad_State_Trans.monadStateStateT(Ctl_Internal_Contract_Monad.monadContract)))(semigroupValueSpentBalanc)(_valueSpentBalancesOutputs(Data_Profunctor_Strong.strongFn))(requireValue(value)));
                  };
                  if (c instanceof Ctl_Internal_Types_TxConstraints.MustSpendPubKeyOutput) {
                      return Control_Monad_Except_Trans.runExceptT(Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_State_Trans.monadStateT(Ctl_Internal_Contract_Monad.monadContract)))(lookupTxOutRef(c.value0)(Data_Maybe.Nothing.value))(function (v) {
                          return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Except_Trans.bindExceptT(Control_Monad_State_Trans.monadStateT(Ctl_Internal_Contract_Monad.monadContract)))(Data_Lens_Setter.modifying(Control_Monad_Except_Trans.monadStateExceptT(Control_Monad_State_Trans.monadStateStateT(Ctl_Internal_Contract_Monad.monadContract)))((function () {
                              var $1046 = _cpsToTxBody(Data_Profunctor_Strong.strongFn);
                              var $1047 = Ctl_Internal_Cardano_Types_Transaction["_inputs"](Data_Profunctor_Strong.strongFn);
                              return function ($1048) {
                                  return $1046($1047($1048));
                              };
                          })())(Data_Set.insert(Ctl_Internal_Types_Transaction.ordTransactionInput)(c.value0)))(function () {
                              return Data_Lens_Setter.appendModifying(Control_Monad_Except_Trans.monadStateExceptT(Control_Monad_State_Trans.monadStateStateT(Ctl_Internal_Contract_Monad.monadContract)))(semigroupValueSpentBalanc)(_valueSpentBalancesInputs(Data_Profunctor_Strong.strongFn))(provideValue(v.amount));
                          });
                      }));
                  };
                  if (c instanceof Ctl_Internal_Types_TxConstraints.MustSpendScriptOutput) {
                      return Control_Monad_Except_Trans.runExceptT(Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_State_Trans.monadStateT(Ctl_Internal_Contract_Monad.monadContract)))(lookupTxOutRef(c.value0)(c.value2))(function (txOut) {
                          if (txOut.datum instanceof Ctl_Internal_Types_OutputDatum.NoOutputDatum) {
                              return Control_Monad_Error_Class.throwError(Control_Monad_Except_Trans.monadThrowExceptT(Control_Monad_State_Trans.monadStateT(Ctl_Internal_Contract_Monad.monadContract)))(new TxOutRefWrongType(c.value0));
                          };
                          return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_State_Trans.monadStateT(Ctl_Internal_Contract_Monad.monadContract)))(Ctl_Internal_Helpers.liftM(Control_Monad_Except_Trans.monadErrorExceptT(Control_Monad_State_Trans.monadStateT(Ctl_Internal_Contract_Monad.monadContract)))(new CannotGetValidatorHashFromAddress(txOut.address))(Ctl_Internal_Address.addressPaymentValidatorHash(txOut.address)))(function (vHash) {
                              return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Except_Trans.bindExceptT(Control_Monad_State_Trans.monadStateT(Ctl_Internal_Contract_Monad.monadContract)))((function () {
                                  if (c.value2 instanceof Data_Maybe.Nothing) {
                                      return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_State_Trans.monadStateT(Ctl_Internal_Contract_Monad.monadContract)))(Control_Monad_Except_Trans.except(Control_Monad_State_Trans.applicativeStateT(Ctl_Internal_Contract_Monad.monadContract))(Data_Functor.map(Data_Either.functorEither)(Data_Newtype.unwrap())(lookupValidator(vHash)(osMap))))(function (plutusScript) {
                                          return attachToCps(Ctl_Internal_Transaction.attachPlutusScript)(plutusScript);
                                      });
                                  };
                                  if (c.value2 instanceof Data_Maybe.Just) {
                                      return processScriptRefUnspentOut()(vHash)(c.value2.value0);
                                  };
                                  throw new Error("Failed pattern match at Ctl.Internal.Types.ScriptLookups (line 1096, column 13 - line 1102, column 80): " + [ c.value2.constructor.name ]);
                              })())(function () {
                                  return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Except_Trans.bindExceptT(Control_Monad_State_Trans.monadStateT(Ctl_Internal_Contract_Monad.monadContract)))((function () {
                                      if (txOut.datum instanceof Ctl_Internal_Types_OutputDatum.OutputDatumHash) {
                                          return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_State_Trans.monadStateT(Ctl_Internal_Contract_Monad.monadContract)))(Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Ctl_Internal_Contract_Monad.monadContract))(lookupDatum(txOut.datum.value0))(function (mDatumLookup) {
                                              var $861 = Data_Either.isRight(mDatumLookup);
                                              if ($861) {
                                                  return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Ctl_Internal_Contract_Monad.monadContract))(mDatumLookup);
                                              };
                                              return Effect_Aff_Class.liftAff(Effect_Aff_Class.monadAffState(Ctl_Internal_Contract_Monad.monadAffContract))(Data_Functor.mapFlipped(Effect_Aff.functorAff)(queryHandle.getDatumByHash(txOut.datum.value0))((function () {
                                                  var $1049 = Data_Either.note(new CannotQueryDatum(txOut.datum.value0));
                                                  var $1050 = Control_Bind.join(Data_Maybe.bindMaybe);
                                                  return function ($1051) {
                                                      return $1049($1050(Data_Either.hush($1051)));
                                                  };
                                              })()));
                                          }))(function (dat) {
                                              return addDatum(dat);
                                          });
                                      };
                                      if (txOut.datum instanceof Ctl_Internal_Types_OutputDatum.OutputDatum) {
                                          return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Control_Monad_State_Trans.monadStateT(Ctl_Internal_Contract_Monad.monadContract)))(Data_Unit.unit);
                                      };
                                      if (txOut.datum instanceof Ctl_Internal_Types_OutputDatum.NoOutputDatum) {
                                          return Control_Monad_Error_Class.throwError(Control_Monad_Except_Trans.monadThrowExceptT(Control_Monad_State_Trans.monadStateT(Ctl_Internal_Contract_Monad.monadContract)))(CannotFindDatum.value);
                                      };
                                      throw new Error("Failed pattern match at Ctl.Internal.Types.ScriptLookups (line 1105, column 13 - line 1118, column 58): " + [ txOut.datum.constructor.name ]);
                                  })())(function () {
                                      return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Except_Trans.bindExceptT(Control_Monad_State_Trans.monadStateT(Ctl_Internal_Contract_Monad.monadContract)))(Data_Lens_Setter.modifying(Control_Monad_Except_Trans.monadStateExceptT(Control_Monad_State_Trans.monadStateStateT(Ctl_Internal_Contract_Monad.monadContract)))((function () {
                                          var $1052 = _cpsToTxBody(Data_Profunctor_Strong.strongFn);
                                          var $1053 = Ctl_Internal_Cardano_Types_Transaction["_inputs"](Data_Profunctor_Strong.strongFn);
                                          return function ($1054) {
                                              return $1052($1053($1054));
                                          };
                                      })())(Data_Set.insert(Ctl_Internal_Types_Transaction.ordTransactionInput)(c.value0)))(function () {
                                          var redeemer = {
                                              tag: Ctl_Internal_Types_RedeemerTag.Spend.value,
                                              index: Data_Semiring.zero(Data_BigInt.semiringBigInt),
                                              data: Data_Newtype.unwrap()(c.value1),
                                              exUnits: Data_Semiring.zero(Data_Semiring.semiringRecord()(Data_Semiring.semiringRecordCons({
                                                  reflectSymbol: function () {
                                                      return "mem";
                                                  }
                                              })()(Data_Semiring.semiringRecordCons({
                                                  reflectSymbol: function () {
                                                      return "steps";
                                                  }
                                              })()(Data_Semiring.semiringRecordNil)(Data_BigInt.semiringBigInt))(Data_BigInt.semiringBigInt)))
                                          };
                                          return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Except_Trans.bindExceptT(Control_Monad_State_Trans.monadStateT(Ctl_Internal_Contract_Monad.monadContract)))(Data_Lens_Setter.appendModifying(Control_Monad_Except_Trans.monadStateExceptT(Control_Monad_State_Trans.monadStateStateT(Ctl_Internal_Contract_Monad.monadContract)))(semigroupValueSpentBalanc)(_valueSpentBalancesInputs(Data_Profunctor_Strong.strongFn))(provideValue(txOut.amount)))(function () {
                                              return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Except_Trans.bindExceptT(Control_Monad_State_Trans.monadStateT(Ctl_Internal_Contract_Monad.monadContract)))(Data_Lens_Setter.appendModifying(Control_Monad_Except_Trans.monadStateExceptT(Control_Monad_State_Trans.monadStateStateT(Ctl_Internal_Contract_Monad.monadContract)))(Data_Semigroup.semigroupArray)(_redeemersTxIns(Data_Profunctor_Strong.strongFn))(Data_Array.singleton(new Data_Tuple.Tuple(redeemer, new Data_Maybe.Just(c.value0)))))(function () {
                                                  return attachToCps(Ctl_Internal_Transaction.attachRedeemer)(redeemer);
                                              });
                                          });
                                      });
                                  });
                              });
                          });
                      }));
                  };
                  if (c instanceof Ctl_Internal_Types_TxConstraints.MustSpendNativeScriptOutput) {
                      return Control_Monad_Except_Trans.runExceptT(Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Except_Trans.bindExceptT(Control_Monad_State_Trans.monadStateT(Ctl_Internal_Contract_Monad.monadContract)))(Data_Lens_Setter.modifying(Control_Monad_Except_Trans.monadStateExceptT(Control_Monad_State_Trans.monadStateStateT(Ctl_Internal_Contract_Monad.monadContract)))((function () {
                          var $1055 = _cpsToTxBody(Data_Profunctor_Strong.strongFn);
                          var $1056 = Ctl_Internal_Cardano_Types_Transaction["_inputs"](Data_Profunctor_Strong.strongFn);
                          return function ($1057) {
                              return $1055($1056($1057));
                          };
                      })())(Data_Set.insert(Ctl_Internal_Types_Transaction.ordTransactionInput)(c.value0)))(function () {
                          return attachToCps(Ctl_Internal_Transaction.attachNativeScript)(c.value1);
                      }));
                  };
                  if (c instanceof Ctl_Internal_Types_TxConstraints.MustReferenceOutput) {
                      return Control_Monad_Except_Trans.runExceptT(Data_Lens_Setter.modifying(Control_Monad_Except_Trans.monadStateExceptT(Control_Monad_State_Trans.monadStateStateT(Ctl_Internal_Contract_Monad.monadContract)))((function () {
                          var $1058 = _cpsToTxBody(Data_Profunctor_Strong.strongFn);
                          var $1059 = Ctl_Internal_Cardano_Types_Transaction["_referenceInputs"](Data_Profunctor_Strong.strongFn);
                          return function ($1060) {
                              return $1058($1059($1060));
                          };
                      })())(Data_Set.insert(Ctl_Internal_Types_Transaction.ordTransactionInput)(c.value0)));
                  };
                  if (c instanceof Ctl_Internal_Types_TxConstraints.MustMintValue) {
                      return Control_Monad_Except_Trans.runExceptT(Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Except_Trans.bindExceptT(Control_Monad_State_Trans.monadStateT(Ctl_Internal_Contract_Monad.monadContract)))((function () {
                          if (c.value4 instanceof Data_Maybe.Nothing) {
                              return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_State_Trans.monadStateT(Ctl_Internal_Contract_Monad.monadContract)))(Control_Monad_Except_Trans.except(Control_Monad_State_Trans.applicativeStateT(Ctl_Internal_Contract_Monad.monadContract))(lookupMintingPolicy(c.value0)(mpsMap)))(function (mp) {
                                  if (mp instanceof Ctl_Internal_Types_Scripts.PlutusMintingPolicy) {
                                      return attachToCps(Ctl_Internal_Transaction.attachPlutusScript)(mp.value0);
                                  };
                                  if (mp instanceof Ctl_Internal_Types_Scripts.NativeMintingPolicy) {
                                      return Control_Monad_Error_Class.throwError(Control_Monad_Except_Trans.monadThrowExceptT(Control_Monad_State_Trans.monadStateT(Ctl_Internal_Contract_Monad.monadContract)))(new ExpectedPlutusScriptGotNativeScript(c.value0));
                                  };
                                  throw new Error("Failed pattern match at Ctl.Internal.Types.ScriptLookups (line 1145, column 13 - line 1152, column 60): " + [ mp.constructor.name ]);
                              });
                          };
                          if (c.value4 instanceof Data_Maybe.Just) {
                              return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_State_Trans.monadStateT(Ctl_Internal_Contract_Monad.monadContract)))(checkRefNative(c.value4.value0))(function (isNative) {
                                  return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Except_Trans.bindExceptT(Control_Monad_State_Trans.monadStateT(Ctl_Internal_Contract_Monad.monadContract)))(Control_Applicative.when(Control_Monad_Except_Trans.applicativeExceptT(Control_Monad_State_Trans.monadStateT(Ctl_Internal_Contract_Monad.monadContract)))(isNative)(Control_Monad_Error_Class.throwError(Control_Monad_Except_Trans.monadThrowExceptT(Control_Monad_State_Trans.monadStateT(Ctl_Internal_Contract_Monad.monadContract)))(new ExpectedPlutusScriptGotNativeScript(c.value0))))(function () {
                                      return processScriptRefUnspentOut()(c.value0)(c.value4.value0);
                                  });
                              });
                          };
                          throw new Error("Failed pattern match at Ctl.Internal.Types.ScriptLookups (line 1142, column 7 - line 1158, column 78): " + [ c.value4.constructor.name ]);
                      })())(function () {
                          return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_State_Trans.monadStateT(Ctl_Internal_Contract_Monad.monadContract)))(Ctl_Internal_Helpers.liftM(Control_Monad_Except_Trans.monadErrorExceptT(Control_Monad_State_Trans.monadStateT(Ctl_Internal_Contract_Monad.monadContract)))(new MintingPolicyHashNotCurrencySymbol(c.value0))(Ctl_Internal_Cardano_Types_Value.mpsSymbol(c.value0)))(function (cs) {
                              var value = Ctl_Internal_Cardano_Types_Value["mkSingletonValue'"](cs)(c.value2);
                              return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_State_Trans.monadStateT(Ctl_Internal_Contract_Monad.monadContract)))((function () {
                                  var $878 = Data_Ord.lessThan(Data_BigInt.ordBigInt)(c.value3)(Data_Semiring.zero(Data_BigInt.semiringBigInt));
                                  if ($878) {
                                      return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_State_Trans.monadStateT(Ctl_Internal_Contract_Monad.monadContract)))(Ctl_Internal_Helpers.liftM(Control_Monad_Except_Trans.monadErrorExceptT(Control_Monad_State_Trans.monadStateT(Ctl_Internal_Contract_Monad.monadContract)))(new CannotMakeValue(cs, c.value2, c.value3))(value(Data_Ring.negate(Data_BigInt.ringBigInt)(c.value3))))(function (v) {
                                          return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Except_Trans.bindExceptT(Control_Monad_State_Trans.monadStateT(Ctl_Internal_Contract_Monad.monadContract)))(Data_Lens_Setter.appendModifying(Control_Monad_Except_Trans.monadStateExceptT(Control_Monad_State_Trans.monadStateStateT(Ctl_Internal_Contract_Monad.monadContract)))(semigroupValueSpentBalanc)(_valueSpentBalancesInputs(Data_Profunctor_Strong.strongFn))(provideValue(v)))(function () {
                                              return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Control_Monad_State_Trans.monadStateT(Ctl_Internal_Contract_Monad.monadContract)))(Data_Functor.map(Data_Maybe.functorMaybe)(Ctl_Internal_Cardano_Types_Value.getNonAdaAsset)(value(c.value3)));
                                          });
                                      });
                                  };
                                  var $879 = Data_Eq.eq(Data_BigInt.eqBigInt)(c.value3)(Data_Semiring.zero(Data_BigInt.semiringBigInt));
                                  if ($879) {
                                      return Control_Monad_Error_Class.throwError(Control_Monad_Except_Trans.monadThrowExceptT(Control_Monad_State_Trans.monadStateT(Ctl_Internal_Contract_Monad.monadContract)))(new CannotMintZero(cs, c.value2));
                                  };
                                  return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_State_Trans.monadStateT(Ctl_Internal_Contract_Monad.monadContract)))(Ctl_Internal_Helpers.liftM(Control_Monad_Except_Trans.monadErrorExceptT(Control_Monad_State_Trans.monadStateT(Ctl_Internal_Contract_Monad.monadContract)))(new CannotMakeValue(cs, c.value2, c.value3))(value(c.value3)))(function (v) {
                                      return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Except_Trans.bindExceptT(Control_Monad_State_Trans.monadStateT(Ctl_Internal_Contract_Monad.monadContract)))(Data_Lens_Setter.appendModifying(Control_Monad_Except_Trans.monadStateExceptT(Control_Monad_State_Trans.monadStateStateT(Ctl_Internal_Contract_Monad.monadContract)))(semigroupValueSpentBalanc)(_valueSpentBalancesOutputs(Data_Profunctor_Strong.strongFn))(provideValue(v)))(function () {
                                          return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Control_Monad_State_Trans.monadStateT(Ctl_Internal_Contract_Monad.monadContract)))(Data_Functor.map(Data_Maybe.functorMaybe)(Ctl_Internal_Cardano_Types_Value.getNonAdaAsset)(value(c.value3)));
                                      });
                                  });
                              })())(function (mintVal) {
                                  var redeemer = {
                                      tag: Ctl_Internal_Types_RedeemerTag.Mint.value,
                                      index: Data_Semiring.zero(Data_BigInt.semiringBigInt),
                                      data: Data_Newtype.unwrap()(c.value1),
                                      exUnits: Data_Semiring.zero(Data_Semiring.semiringRecord()(Data_Semiring.semiringRecordCons({
                                          reflectSymbol: function () {
                                              return "mem";
                                          }
                                      })()(Data_Semiring.semiringRecordCons({
                                          reflectSymbol: function () {
                                              return "steps";
                                          }
                                      })()(Data_Semiring.semiringRecordNil)(Data_BigInt.semiringBigInt))(Data_BigInt.semiringBigInt)))
                                  };
                                  return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Except_Trans.bindExceptT(Control_Monad_State_Trans.monadStateT(Ctl_Internal_Contract_Monad.monadContract)))(Data_Lens_Setter.modifying(Control_Monad_Except_Trans.monadStateExceptT(Control_Monad_State_Trans.monadStateStateT(Ctl_Internal_Contract_Monad.monadContract)))(_redeemersTxIns(Data_Profunctor_Strong.strongFn))(Data_Array.filter(function (v) {
                                      return Data_Eq.notEq(Ctl_Internal_Types_RedeemerTag.eqRedeemerTag)(v.value0.tag)(Ctl_Internal_Types_RedeemerTag.Mint.value);
                                  })))(function () {
                                      return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_State_Trans.monadStateT(Ctl_Internal_Contract_Monad.monadContract)))(Control_Monad_Trans_Class.lift(Control_Monad_Except_Trans.monadTransExceptT)(Control_Monad_State_Trans.monadStateT(Ctl_Internal_Contract_Monad.monadContract))(reindexMintRedeemers(c.value0)(redeemer)))(function (mintRedeemers) {
                                          return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Except_Trans.bindExceptT(Control_Monad_State_Trans.monadStateT(Ctl_Internal_Contract_Monad.monadContract)))(Data_Lens_Setter.appendModifying(Control_Monad_Except_Trans.monadStateExceptT(Control_Monad_State_Trans.monadStateStateT(Ctl_Internal_Contract_Monad.monadContract)))(Data_Semigroup.semigroupArray)(_redeemersTxIns(Data_Profunctor_Strong.strongFn))(Data_Functor.map(Data_Functor.functorArray)(function (v) {
                                              return new Data_Tuple.Tuple(v, Data_Maybe.Nothing.value);
                                          })(mintRedeemers)))(function () {
                                              return Data_Lens_Setter.appendModifying(Control_Monad_Except_Trans.monadStateExceptT(Control_Monad_State_Trans.monadStateStateT(Ctl_Internal_Contract_Monad.monadContract)))(Data_Maybe.semigroupMaybe(Ctl_Internal_Cardano_Types_Transaction.semigroupMint))((function () {
                                                  var $1061 = _cpsToTxBody(Data_Profunctor_Strong.strongFn);
                                                  var $1062 = Ctl_Internal_Cardano_Types_Transaction["_mint"](Data_Profunctor_Strong.strongFn);
                                                  return function ($1063) {
                                                      return $1061($1062($1063));
                                                  };
                                              })())(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Newtype.wrap())(mintVal));
                                          });
                                      });
                                  });
                              });
                          });
                      }));
                  };
                  if (c instanceof Ctl_Internal_Types_TxConstraints.MustMintValueUsingNativeScript) {
                      return Control_Monad_Except_Trans.runExceptT((function () {
                          var mpHash = Data_Newtype.wrap()(Data_Newtype.unwrap()(Ctl_Internal_NativeScripts.nativeScriptHash(c.value0)));
                          return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Except_Trans.bindExceptT(Control_Monad_State_Trans.monadStateT(Ctl_Internal_Contract_Monad.monadContract)))(attachToCps(Ctl_Internal_Transaction.attachNativeScript)(c.value0))(function () {
                              return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_State_Trans.monadStateT(Ctl_Internal_Contract_Monad.monadContract)))(Ctl_Internal_Helpers.liftM(Control_Monad_Except_Trans.monadErrorExceptT(Control_Monad_State_Trans.monadStateT(Ctl_Internal_Contract_Monad.monadContract)))(new MintingPolicyHashNotCurrencySymbol(mpHash))(Ctl_Internal_Cardano_Types_Value.mpsSymbol(mpHash)))(function (cs) {
                                  var value = Ctl_Internal_Cardano_Types_Value["mkSingletonValue'"](cs)(c.value1);
                                  return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_State_Trans.monadStateT(Ctl_Internal_Contract_Monad.monadContract)))((function () {
                                      var $889 = Data_Ord.lessThan(Data_BigInt.ordBigInt)(c.value2)(Data_Semiring.zero(Data_BigInt.semiringBigInt));
                                      if ($889) {
                                          return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_State_Trans.monadStateT(Ctl_Internal_Contract_Monad.monadContract)))(Ctl_Internal_Helpers.liftM(Control_Monad_Except_Trans.monadErrorExceptT(Control_Monad_State_Trans.monadStateT(Ctl_Internal_Contract_Monad.monadContract)))(new CannotMakeValue(cs, c.value1, c.value2))(value(Data_Ring.negate(Data_BigInt.ringBigInt)(c.value2))))(function (v) {
                                              return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Except_Trans.bindExceptT(Control_Monad_State_Trans.monadStateT(Ctl_Internal_Contract_Monad.monadContract)))(Data_Lens_Setter.appendModifying(Control_Monad_Except_Trans.monadStateExceptT(Control_Monad_State_Trans.monadStateStateT(Ctl_Internal_Contract_Monad.monadContract)))(semigroupValueSpentBalanc)(_valueSpentBalancesInputs(Data_Profunctor_Strong.strongFn))(provideValue(v)))(function () {
                                                  return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Control_Monad_State_Trans.monadStateT(Ctl_Internal_Contract_Monad.monadContract)))(Data_Functor.map(Data_Maybe.functorMaybe)(Ctl_Internal_Cardano_Types_Value.getNonAdaAsset)(value(c.value2)));
                                              });
                                          });
                                      };
                                      return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_State_Trans.monadStateT(Ctl_Internal_Contract_Monad.monadContract)))(Ctl_Internal_Helpers.liftM(Control_Monad_Except_Trans.monadErrorExceptT(Control_Monad_State_Trans.monadStateT(Ctl_Internal_Contract_Monad.monadContract)))(new CannotMakeValue(cs, c.value1, c.value2))(value(c.value2)))(function (v) {
                                          return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Except_Trans.bindExceptT(Control_Monad_State_Trans.monadStateT(Ctl_Internal_Contract_Monad.monadContract)))(Data_Lens_Setter.appendModifying(Control_Monad_Except_Trans.monadStateExceptT(Control_Monad_State_Trans.monadStateStateT(Ctl_Internal_Contract_Monad.monadContract)))(semigroupValueSpentBalanc)(_valueSpentBalancesOutputs(Data_Profunctor_Strong.strongFn))(provideValue(v)))(function () {
                                              return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Control_Monad_State_Trans.monadStateT(Ctl_Internal_Contract_Monad.monadContract)))(Data_Functor.map(Data_Maybe.functorMaybe)(Ctl_Internal_Cardano_Types_Value.getNonAdaAsset)(value(c.value2)));
                                          });
                                      });
                                  })())(function (mintVal) {
                                      return Data_Lens_Setter.appendModifying(Control_Monad_Except_Trans.monadStateExceptT(Control_Monad_State_Trans.monadStateStateT(Ctl_Internal_Contract_Monad.monadContract)))(Data_Maybe.semigroupMaybe(Ctl_Internal_Cardano_Types_Transaction.semigroupMint))((function () {
                                          var $1064 = _cpsToTxBody(Data_Profunctor_Strong.strongFn);
                                          var $1065 = Ctl_Internal_Cardano_Types_Transaction["_mint"](Data_Profunctor_Strong.strongFn);
                                          return function ($1066) {
                                              return $1064($1065($1066));
                                          };
                                      })())(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Newtype.wrap())(mintVal));
                                  });
                              });
                          });
                      })());
                  };
                  if (c instanceof Ctl_Internal_Types_TxConstraints.MustPayToPubKeyAddress) {
                      return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Ctl_Internal_Contract_Monad.monadContract))(getNetworkId)(function (networkId) {
                          var amount = Ctl_Internal_Plutus_Conversion_Value.fromPlutusValue(c.value4);
                          return Control_Monad_Except_Trans.runExceptT(Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_State_Trans.monadStateT(Ctl_Internal_Contract_Monad.monadContract)))(Data_Traversable["for"](Control_Monad_Except_Trans.applicativeExceptT(Control_Monad_State_Trans.monadStateT(Ctl_Internal_Contract_Monad.monadContract)))(Data_Traversable.traversableMaybe)(c.value2)(function (v) {
                              return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Except_Trans.bindExceptT(Control_Monad_State_Trans.monadStateT(Ctl_Internal_Contract_Monad.monadContract)))(Control_Applicative.when(Control_Monad_Except_Trans.applicativeExceptT(Control_Monad_State_Trans.monadStateT(Ctl_Internal_Contract_Monad.monadContract)))(Data_Eq.eq(Ctl_Internal_Types_TxConstraints.eqDatumPresence)(v.value1)(Ctl_Internal_Types_TxConstraints.DatumWitness.value))(addDatum(v.value0)))(function () {
                                  return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Control_Monad_State_Trans.monadStateT(Ctl_Internal_Contract_Monad.monadContract)))(outputDatum(v.value0)(v.value1));
                              });
                          }))(function (datum$prime) {
                              var address = (function () {
                                  if (c.value1 instanceof Data_Maybe.Just) {
                                      return Ctl_Internal_Types_PubKeyHash.payPubKeyHashBaseAddress(networkId)(c.value0)(c.value1.value0);
                                  };
                                  if (c.value1 instanceof Data_Maybe.Nothing) {
                                      return Ctl_Internal_Types_PubKeyHash.payPubKeyHashEnterpriseAddress(networkId)(c.value0);
                                  };
                                  throw new Error("Failed pattern match at Ctl.Internal.Types.ScriptLookups (line 1234, column 21 - line 1236, column 68): " + [ c.value1.constructor.name ]);
                              })();
                              var txOut = {
                                  address: address,
                                  amount: amount,
                                  datum: Data_Maybe.fromMaybe(Ctl_Internal_Types_OutputDatum.NoOutputDatum.value)(datum$prime),
                                  scriptRef: c.value3
                              };
                              return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Except_Trans.bindExceptT(Control_Monad_State_Trans.monadStateT(Ctl_Internal_Contract_Monad.monadContract)))(Data_Lens_Setter.modifying(Control_Monad_Except_Trans.monadStateExceptT(Control_Monad_State_Trans.monadStateStateT(Ctl_Internal_Contract_Monad.monadContract)))((function () {
                                  var $1067 = _cpsToTxBody(Data_Profunctor_Strong.strongFn);
                                  var $1068 = Ctl_Internal_Cardano_Types_Transaction["_outputs"](Data_Profunctor_Strong.strongFn);
                                  return function ($1069) {
                                      return $1067($1068($1069));
                                  };
                              })())(Data_Array.cons(txOut)))(function () {
                                  return Data_Lens_Setter.appendModifying(Control_Monad_Except_Trans.monadStateExceptT(Control_Monad_State_Trans.monadStateStateT(Ctl_Internal_Contract_Monad.monadContract)))(semigroupValueSpentBalanc)(_valueSpentBalancesOutputs(Data_Profunctor_Strong.strongFn))(provideValue(amount));
                              });
                          }));
                      });
                  };
                  if (c instanceof Ctl_Internal_Types_TxConstraints.MustPayToScript) {
                      return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Ctl_Internal_Contract_Monad.monadContract))(getNetworkId)(function (networkId) {
                          var amount = Ctl_Internal_Plutus_Conversion_Value.fromPlutusValue(c.value5);
                          return Control_Monad_Except_Trans.runExceptT((function () {
                              var datum$prime = outputDatum(c.value2)(c.value3);
                              var txOut = {
                                  address: (function () {
                                      if (c.value1 instanceof Data_Maybe.Nothing) {
                                          return Ctl_Internal_Scripts.validatorHashEnterpriseAddress(networkId)(c.value0);
                                      };
                                      if (c.value1 instanceof Data_Maybe.Just) {
                                          return Ctl_Internal_Serialization_Address.baseAddressToAddress(Ctl_Internal_Serialization_Address.baseAddress({
                                              network: networkId,
                                              paymentCred: Ctl_Internal_Serialization_Address.scriptHashCredential(Data_Newtype.unwrap()(c.value0)),
                                              delegationCred: credentialToStakeCredential(c.value1.value0)
                                          }));
                                      };
                                      throw new Error("Failed pattern match at Ctl.Internal.Types.ScriptLookups (line 1252, column 24 - line 1258, column 20): " + [ c.value1.constructor.name ]);
                                  })(),
                                  amount: amount,
                                  datum: datum$prime,
                                  scriptRef: c.value4
                              };
                              return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Except_Trans.bindExceptT(Control_Monad_State_Trans.monadStateT(Ctl_Internal_Contract_Monad.monadContract)))(Data_Lens_Setter.modifying(Control_Monad_Except_Trans.monadStateExceptT(Control_Monad_State_Trans.monadStateStateT(Ctl_Internal_Contract_Monad.monadContract)))((function () {
                                  var $1070 = _cpsToTxBody(Data_Profunctor_Strong.strongFn);
                                  var $1071 = Ctl_Internal_Cardano_Types_Transaction["_outputs"](Data_Profunctor_Strong.strongFn);
                                  return function ($1072) {
                                      return $1070($1071($1072));
                                  };
                              })())(Data_Array.cons(txOut)))(function () {
                                  return Data_Lens_Setter.appendModifying(Control_Monad_Except_Trans.monadStateExceptT(Control_Monad_State_Trans.monadStateStateT(Ctl_Internal_Contract_Monad.monadContract)))(semigroupValueSpentBalanc)(_valueSpentBalancesOutputs(Data_Profunctor_Strong.strongFn))(provideValue(amount));
                              });
                          })());
                      });
                  };
                  if (c instanceof Ctl_Internal_Types_TxConstraints.MustPayToNativeScript) {
                      return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Ctl_Internal_Contract_Monad.monadContract))(getNetworkId)(function (networkId) {
                          var amount = Ctl_Internal_Plutus_Conversion_Value.fromPlutusValue(c.value2);
                          return Control_Monad_Except_Trans.runExceptT((function () {
                              var txOut = {
                                  address: (function () {
                                      if (c.value1 instanceof Data_Maybe.Nothing) {
                                          return Ctl_Internal_Scripts.validatorHashEnterpriseAddress(networkId)(Data_Newtype.wrap()(Data_Newtype.unwrap()(c.value0)));
                                      };
                                      if (c.value1 instanceof Data_Maybe.Just) {
                                          return Ctl_Internal_Serialization_Address.baseAddressToAddress(Ctl_Internal_Serialization_Address.baseAddress({
                                              network: networkId,
                                              paymentCred: Ctl_Internal_Serialization_Address.scriptHashCredential(Data_Newtype.unwrap()(c.value0)),
                                              delegationCred: credentialToStakeCredential(c.value1.value0)
                                          }));
                                      };
                                      throw new Error("Failed pattern match at Ctl.Internal.Types.ScriptLookups (line 1273, column 24 - line 1280, column 20): " + [ c.value1.constructor.name ]);
                                  })(),
                                  amount: amount,
                                  datum: Ctl_Internal_Types_OutputDatum.NoOutputDatum.value,
                                  scriptRef: Data_Maybe.Nothing.value
                              };
                              return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Except_Trans.bindExceptT(Control_Monad_State_Trans.monadStateT(Ctl_Internal_Contract_Monad.monadContract)))(Data_Lens_Setter.modifying(Control_Monad_Except_Trans.monadStateExceptT(Control_Monad_State_Trans.monadStateStateT(Ctl_Internal_Contract_Monad.monadContract)))((function () {
                                  var $1073 = _cpsToTxBody(Data_Profunctor_Strong.strongFn);
                                  var $1074 = Ctl_Internal_Cardano_Types_Transaction["_outputs"](Data_Profunctor_Strong.strongFn);
                                  return function ($1075) {
                                      return $1073($1074($1075));
                                  };
                              })())(Data_Array.cons(txOut)))(function () {
                                  return Data_Lens_Setter.appendModifying(Control_Monad_Except_Trans.monadStateExceptT(Control_Monad_State_Trans.monadStateStateT(Ctl_Internal_Contract_Monad.monadContract)))(semigroupValueSpentBalanc)(_valueSpentBalancesOutputs(Data_Profunctor_Strong.strongFn))(provideValue(amount));
                              });
                          })());
                      });
                  };
                  if (c instanceof Ctl_Internal_Types_TxConstraints.MustHashDatum) {
                      var dh$prime = Ctl_Internal_Hashing.datumHash(c.value1);
                      var $916 = Data_Eq.eq(Ctl_Internal_Types_Transaction.eqDataHash)(dh$prime)(c.value0);
                      if ($916) {
                          return addDatum(c.value1);
                      };
                      return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Ctl_Internal_Contract_Monad.monadContract))(Control_Monad_Error_Class.throwError(Control_Monad_Error_Class.monadThrowEither)(new DatumWrongHash(c.value0, c.value1)));
                  };
                  if (c instanceof Ctl_Internal_Types_TxConstraints.MustRegisterStakePubKey) {
                      return Control_Monad_Except_Trans.runExceptT(Data_Functor["void"](Control_Monad_Except_Trans.functorExceptT(Control_Monad_State_Trans.functorStateT(Ctl_Internal_Contract_Monad.functorContract)))(Control_Monad_Trans_Class.lift(Control_Monad_Except_Trans.monadTransExceptT)(Control_Monad_State_Trans.monadStateT(Ctl_Internal_Contract_Monad.monadContract))(addCertificate(new Ctl_Internal_Cardano_Types_Transaction.StakeRegistration(Ctl_Internal_Serialization_Address.keyHashCredential(Data_Newtype.unwrap()(Data_Newtype.unwrap()(c.value0))))))));
                  };
                  if (c instanceof Ctl_Internal_Types_TxConstraints.MustDeregisterStakePubKey) {
                      return Control_Monad_Except_Trans.runExceptT(Data_Functor["void"](Control_Monad_Except_Trans.functorExceptT(Control_Monad_State_Trans.functorStateT(Ctl_Internal_Contract_Monad.functorContract)))(Control_Monad_Trans_Class.lift(Control_Monad_Except_Trans.monadTransExceptT)(Control_Monad_State_Trans.monadStateT(Ctl_Internal_Contract_Monad.monadContract))(addCertificate(new Ctl_Internal_Cardano_Types_Transaction.StakeDeregistration(Ctl_Internal_Serialization_Address.keyHashCredential(Data_Newtype.unwrap()(Data_Newtype.unwrap()(c.value0))))))));
                  };
                  if (c instanceof Ctl_Internal_Types_TxConstraints.MustRegisterStakeScript) {
                      return Control_Monad_Except_Trans.runExceptT(Data_Functor["void"](Control_Monad_Except_Trans.functorExceptT(Control_Monad_State_Trans.functorStateT(Ctl_Internal_Contract_Monad.functorContract)))(Control_Monad_Trans_Class.lift(Control_Monad_Except_Trans.monadTransExceptT)(Control_Monad_State_Trans.monadStateT(Ctl_Internal_Contract_Monad.monadContract))(addCertificate(new Ctl_Internal_Cardano_Types_Transaction.StakeRegistration(Ctl_Internal_Serialization_Address.scriptHashCredential(Data_Newtype.unwrap()(c.value0)))))));
                  };
                  if (c instanceof Ctl_Internal_Types_TxConstraints.MustDeregisterStakePlutusScript) {
                      return Control_Monad_Except_Trans.runExceptT((function () {
                          var cert = new Ctl_Internal_Cardano_Types_Transaction.StakeDeregistration(Ctl_Internal_Serialization_Address.scriptHashCredential(Data_Newtype.unwrap()(Ctl_Internal_Scripts.plutusScriptStakeValidatorHash(c.value0))));
                          return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_State_Trans.monadStateT(Ctl_Internal_Contract_Monad.monadContract)))(Control_Monad_Trans_Class.lift(Control_Monad_Except_Trans.monadTransExceptT)(Control_Monad_State_Trans.monadStateT(Ctl_Internal_Contract_Monad.monadContract))(addCertificate(cert)))(function (index) {
                              var redeemer = {
                                  tag: Ctl_Internal_Types_RedeemerTag.Cert.value,
                                  index: Data_BigInt.fromInt(index),
                                  data: Data_Newtype.unwrap()(c.value1),
                                  exUnits: Data_Semiring.zero(Data_Semiring.semiringRecord()(Data_Semiring.semiringRecordCons({
                                      reflectSymbol: function () {
                                          return "mem";
                                      }
                                  })()(Data_Semiring.semiringRecordCons({
                                      reflectSymbol: function () {
                                          return "steps";
                                      }
                                  })()(Data_Semiring.semiringRecordNil)(Data_BigInt.semiringBigInt))(Data_BigInt.semiringBigInt)))
                              };
                              return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Except_Trans.bindExceptT(Control_Monad_State_Trans.monadStateT(Ctl_Internal_Contract_Monad.monadContract)))(attachToCps(Ctl_Internal_Transaction.attachPlutusScript)(Data_Newtype.unwrap()(c.value0)))(function () {
                                  return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Except_Trans.bindExceptT(Control_Monad_State_Trans.monadStateT(Ctl_Internal_Contract_Monad.monadContract)))(attachToCps(Ctl_Internal_Transaction.attachRedeemer)(redeemer))(function () {
                                      return Data_Lens_Setter.appendModifying(Control_Monad_Except_Trans.monadStateExceptT(Control_Monad_State_Trans.monadStateStateT(Ctl_Internal_Contract_Monad.monadContract)))(Data_Semigroup.semigroupArray)(_redeemersTxIns(Data_Profunctor_Strong.strongFn))(Data_Array.singleton(new Data_Tuple.Tuple(redeemer, Data_Maybe.Nothing.value)));
                                  });
                              });
                          });
                      })());
                  };
                  if (c instanceof Ctl_Internal_Types_TxConstraints.MustDeregisterStakeNativeScript) {
                      return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_State_Trans.bindStateT(Ctl_Internal_Contract_Monad.monadContract))(Data_Functor["void"](Control_Monad_State_Trans.functorStateT(Ctl_Internal_Contract_Monad.functorContract))(addCertificate(new Ctl_Internal_Cardano_Types_Transaction.StakeDeregistration(Ctl_Internal_Serialization_Address.scriptHashCredential(Data_Newtype.unwrap()(Ctl_Internal_Scripts.nativeScriptStakeValidatorHash(c.value0)))))))(function () {
                          return attachToCps(Ctl_Internal_Transaction.attachNativeScript)(Data_Newtype.unwrap()(c.value0));
                      });
                  };
                  if (c instanceof Ctl_Internal_Types_TxConstraints.MustRegisterPool) {
                      return Control_Monad_Except_Trans.runExceptT(Data_Functor["void"](Control_Monad_Except_Trans.functorExceptT(Control_Monad_State_Trans.functorStateT(Ctl_Internal_Contract_Monad.functorContract)))(Control_Monad_Trans_Class.lift(Control_Monad_Except_Trans.monadTransExceptT)(Control_Monad_State_Trans.monadStateT(Ctl_Internal_Contract_Monad.monadContract))(addCertificate(new Ctl_Internal_Cardano_Types_Transaction.PoolRegistration(c.value0)))));
                  };
                  if (c instanceof Ctl_Internal_Types_TxConstraints.MustRetirePool) {
                      return Control_Monad_Except_Trans.runExceptT(Data_Functor["void"](Control_Monad_Except_Trans.functorExceptT(Control_Monad_State_Trans.functorStateT(Ctl_Internal_Contract_Monad.functorContract)))(Control_Monad_Trans_Class.lift(Control_Monad_Except_Trans.monadTransExceptT)(Control_Monad_State_Trans.monadStateT(Ctl_Internal_Contract_Monad.monadContract))(addCertificate(new Ctl_Internal_Cardano_Types_Transaction.PoolRetirement({
                          poolKeyHash: c.value0,
                          epoch: c.value1
                      })))));
                  };
                  if (c instanceof Ctl_Internal_Types_TxConstraints.MustDelegateStakePubKey) {
                      return Control_Monad_Except_Trans.runExceptT(Data_Functor["void"](Control_Monad_Except_Trans.functorExceptT(Control_Monad_State_Trans.functorStateT(Ctl_Internal_Contract_Monad.functorContract)))(Control_Monad_Trans_Class.lift(Control_Monad_Except_Trans.monadTransExceptT)(Control_Monad_State_Trans.monadStateT(Ctl_Internal_Contract_Monad.monadContract))(addCertificate(new Ctl_Internal_Cardano_Types_Transaction.StakeDelegation(Ctl_Internal_Serialization_Address.keyHashCredential(Data_Newtype.unwrap()(Data_Newtype.unwrap()(c.value0))), c.value1)))));
                  };
                  if (c instanceof Ctl_Internal_Types_TxConstraints.MustDelegateStakePlutusScript) {
                      return Control_Monad_Except_Trans.runExceptT((function () {
                          var cert = new Ctl_Internal_Cardano_Types_Transaction.StakeDelegation(Ctl_Internal_Serialization_Address.scriptHashCredential(Data_Newtype.unwrap()(Ctl_Internal_Scripts.plutusScriptStakeValidatorHash(c.value0))), c.value2);
                          return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_State_Trans.monadStateT(Ctl_Internal_Contract_Monad.monadContract)))(Control_Monad_Trans_Class.lift(Control_Monad_Except_Trans.monadTransExceptT)(Control_Monad_State_Trans.monadStateT(Ctl_Internal_Contract_Monad.monadContract))(addCertificate(cert)))(function (ix) {
                              var redeemer = {
                                  tag: Ctl_Internal_Types_RedeemerTag.Cert.value,
                                  index: Data_BigInt.fromInt(ix),
                                  data: Data_Newtype.unwrap()(c.value1),
                                  exUnits: Data_Semiring.zero(Data_Semiring.semiringRecord()(Data_Semiring.semiringRecordCons({
                                      reflectSymbol: function () {
                                          return "mem";
                                      }
                                  })()(Data_Semiring.semiringRecordCons({
                                      reflectSymbol: function () {
                                          return "steps";
                                      }
                                  })()(Data_Semiring.semiringRecordNil)(Data_BigInt.semiringBigInt))(Data_BigInt.semiringBigInt)))
                              };
                              return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Except_Trans.bindExceptT(Control_Monad_State_Trans.monadStateT(Ctl_Internal_Contract_Monad.monadContract)))(attachToCps(Ctl_Internal_Transaction.attachPlutusScript)(Data_Newtype.unwrap()(c.value0)))(function () {
                                  return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Except_Trans.bindExceptT(Control_Monad_State_Trans.monadStateT(Ctl_Internal_Contract_Monad.monadContract)))(attachToCps(Ctl_Internal_Transaction.attachRedeemer)(redeemer))(function () {
                                      return Data_Lens_Setter.appendModifying(Control_Monad_Except_Trans.monadStateExceptT(Control_Monad_State_Trans.monadStateStateT(Ctl_Internal_Contract_Monad.monadContract)))(Data_Semigroup.semigroupArray)(_redeemersTxIns(Data_Profunctor_Strong.strongFn))(Data_Array.singleton(new Data_Tuple.Tuple(redeemer, Data_Maybe.Nothing.value)));
                                  });
                              });
                          });
                      })());
                  };
                  if (c instanceof Ctl_Internal_Types_TxConstraints.MustDelegateStakeNativeScript) {
                      return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_State_Trans.bindStateT(Ctl_Internal_Contract_Monad.monadContract))(Data_Functor["void"](Control_Monad_State_Trans.functorStateT(Ctl_Internal_Contract_Monad.functorContract))(addCertificate(new Ctl_Internal_Cardano_Types_Transaction.StakeDelegation(Ctl_Internal_Serialization_Address.scriptHashCredential(Data_Newtype.unwrap()(Ctl_Internal_Scripts.nativeScriptStakeValidatorHash(c.value0))), c.value1))))(function () {
                          return attachToCps(Ctl_Internal_Transaction.attachNativeScript)(Data_Newtype.unwrap()(c.value0));
                      });
                  };
                  if (c instanceof Ctl_Internal_Types_TxConstraints.MustWithdrawStakePubKey) {
                      return Control_Monad_Except_Trans.runExceptT(Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_State_Trans.monadStateT(Ctl_Internal_Contract_Monad.monadContract)))(Control_Monad_Trans_Class.lift(Control_Monad_Except_Trans.monadTransExceptT)(Control_Monad_State_Trans.monadStateT(Ctl_Internal_Contract_Monad.monadContract))(getNetworkId))(function (networkId) {
                          return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_State_Trans.monadStateT(Ctl_Internal_Contract_Monad.monadContract)))(Control_Monad_Trans_Class.lift(Control_Monad_Except_Trans.monadTransExceptT)(Control_Monad_State_Trans.monadStateT(Ctl_Internal_Contract_Monad.monadContract))(Control_Monad_Trans_Class.lift(Control_Monad_State_Trans.monadTransStateT)(Ctl_Internal_Contract_Monad.monadContract)(Ctl_Internal_Contract_Monad.wrapQueryM(Ctl_Internal_QueryM_Pools.getPubKeyHashDelegationsAndRewards(c.value0)))))(function (mbRewards) {
                              return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_State_Trans.monadStateT(Ctl_Internal_Contract_Monad.monadContract)))(Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Ctl_Internal_Contract_Monad.monadContract))(Data_Either.note(new CannotWithdrawRewardsPubKey(c.value0))(mbRewards)))(function (v) {
                                  var rewardAddress = Ctl_Internal_Types_RewardAddress.stakePubKeyHashRewardAddress(networkId)(c.value0);
                                  return Data_Lens_Setter.modifying(Control_Monad_Except_Trans.monadStateExceptT(Control_Monad_State_Trans.monadStateStateT(Ctl_Internal_Contract_Monad.monadContract)))((function () {
                                      var $1076 = _cpsToTxBody(Data_Profunctor_Strong.strongFn);
                                      var $1077 = Ctl_Internal_Cardano_Types_Transaction["_withdrawals"](Data_Profunctor_Strong.strongFn);
                                      var $1078 = Data_Lens_Iso.non(Data_Map_Internal.eqMap(Ctl_Internal_Types_RewardAddress.eqRewardAddress)(Ctl_Internal_Cardano_Types_Value.eqCoin))(Data_Map_Internal.empty)(Data_Profunctor.profunctorFn);
                                      return function ($1079) {
                                          return $1076($1077($1078($1079)));
                                      };
                                  })())(Data_Map_Internal.union(Ctl_Internal_Types_RewardAddress.ordRewardAddress)(Data_Map_Internal.singleton(rewardAddress)(Data_Maybe.fromMaybe(Data_Semiring.zero(Data_BigInt.semiringBigInt))(v.rewards))));
                              });
                          });
                      }));
                  };
                  if (c instanceof Ctl_Internal_Types_TxConstraints.MustWithdrawStakePlutusScript) {
                      return Control_Monad_Except_Trans.runExceptT((function () {
                          var hash = Ctl_Internal_Scripts.plutusScriptStakeValidatorHash(c.value0);
                          return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_State_Trans.monadStateT(Ctl_Internal_Contract_Monad.monadContract)))(Control_Monad_Trans_Class.lift(Control_Monad_Except_Trans.monadTransExceptT)(Control_Monad_State_Trans.monadStateT(Ctl_Internal_Contract_Monad.monadContract))(getNetworkId))(function (networkId) {
                              return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_State_Trans.monadStateT(Ctl_Internal_Contract_Monad.monadContract)))(Control_Monad_Trans_Class.lift(Control_Monad_Except_Trans.monadTransExceptT)(Control_Monad_State_Trans.monadStateT(Ctl_Internal_Contract_Monad.monadContract))(Control_Monad_Trans_Class.lift(Control_Monad_State_Trans.monadTransStateT)(Ctl_Internal_Contract_Monad.monadContract)(Ctl_Internal_Contract_Monad.wrapQueryM(Ctl_Internal_QueryM_Pools.getValidatorHashDelegationsAndRewards(hash)))))(function (mbRewards) {
                                  var rewardAddress = Ctl_Internal_Types_RewardAddress.stakeValidatorHashRewardAddress(networkId)(hash);
                                  return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_State_Trans.monadStateT(Ctl_Internal_Contract_Monad.monadContract)))(Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Ctl_Internal_Contract_Monad.monadContract))(Data_Either.note(new CannotWithdrawRewardsPlutusScript(c.value0))(mbRewards)))(function (v) {
                                      return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Except_Trans.bindExceptT(Control_Monad_State_Trans.monadStateT(Ctl_Internal_Contract_Monad.monadContract)))(Data_Lens_Setter.modifying(Control_Monad_Except_Trans.monadStateExceptT(Control_Monad_State_Trans.monadStateStateT(Ctl_Internal_Contract_Monad.monadContract)))((function () {
                                          var $1080 = _cpsToTxBody(Data_Profunctor_Strong.strongFn);
                                          var $1081 = Ctl_Internal_Cardano_Types_Transaction["_withdrawals"](Data_Profunctor_Strong.strongFn);
                                          var $1082 = Data_Lens_Iso.non(Data_Map_Internal.eqMap(Ctl_Internal_Types_RewardAddress.eqRewardAddress)(Ctl_Internal_Cardano_Types_Value.eqCoin))(Data_Map_Internal.empty)(Data_Profunctor.profunctorFn);
                                          return function ($1083) {
                                              return $1080($1081($1082($1083)));
                                          };
                                      })())(Data_Map_Internal.union(Ctl_Internal_Types_RewardAddress.ordRewardAddress)(Data_Map_Internal.singleton(rewardAddress)(Data_Maybe.fromMaybe(Data_Semiring.zero(Data_BigInt.semiringBigInt))(v.rewards)))))(function () {
                                          var redeemer = {
                                              tag: Ctl_Internal_Types_RedeemerTag.Reward.value,
                                              index: Data_Semiring.zero(Data_BigInt.semiringBigInt),
                                              data: Data_Newtype.unwrap()(c.value1),
                                              exUnits: Data_Semiring.zero(Data_Semiring.semiringRecord()(Data_Semiring.semiringRecordCons({
                                                  reflectSymbol: function () {
                                                      return "mem";
                                                  }
                                              })()(Data_Semiring.semiringRecordCons({
                                                  reflectSymbol: function () {
                                                      return "steps";
                                                  }
                                              })()(Data_Semiring.semiringRecordNil)(Data_BigInt.semiringBigInt))(Data_BigInt.semiringBigInt)))
                                          };
                                          return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Except_Trans.bindExceptT(Control_Monad_State_Trans.monadStateT(Ctl_Internal_Contract_Monad.monadContract)))(attachToCps(Ctl_Internal_Transaction.attachPlutusScript)(Data_Newtype.unwrap()(c.value0)))(function () {
                                              return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Except_Trans.bindExceptT(Control_Monad_State_Trans.monadStateT(Ctl_Internal_Contract_Monad.monadContract)))(attachToCps(Ctl_Internal_Transaction.attachRedeemer)(redeemer))(function () {
                                                  return Data_Lens_Setter.appendModifying(Control_Monad_Except_Trans.monadStateExceptT(Control_Monad_State_Trans.monadStateStateT(Ctl_Internal_Contract_Monad.monadContract)))(Data_Semigroup.semigroupArray)(_redeemersTxIns(Data_Profunctor_Strong.strongFn))(Data_Array.singleton(new Data_Tuple.Tuple(redeemer, Data_Maybe.Nothing.value)));
                                              });
                                          });
                                      });
                                  });
                              });
                          });
                      })());
                  };
                  if (c instanceof Ctl_Internal_Types_TxConstraints.MustWithdrawStakeNativeScript) {
                      return Control_Monad_Except_Trans.runExceptT((function () {
                          var hash = Ctl_Internal_Scripts.nativeScriptStakeValidatorHash(c.value0);
                          return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_State_Trans.monadStateT(Ctl_Internal_Contract_Monad.monadContract)))(Control_Monad_Trans_Class.lift(Control_Monad_Except_Trans.monadTransExceptT)(Control_Monad_State_Trans.monadStateT(Ctl_Internal_Contract_Monad.monadContract))(getNetworkId))(function (networkId) {
                              return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_State_Trans.monadStateT(Ctl_Internal_Contract_Monad.monadContract)))(Control_Monad_Trans_Class.lift(Control_Monad_Except_Trans.monadTransExceptT)(Control_Monad_State_Trans.monadStateT(Ctl_Internal_Contract_Monad.monadContract))(Control_Monad_Trans_Class.lift(Control_Monad_State_Trans.monadTransStateT)(Ctl_Internal_Contract_Monad.monadContract)(Ctl_Internal_Contract_Monad.wrapQueryM(Ctl_Internal_QueryM_Pools.getValidatorHashDelegationsAndRewards(hash)))))(function (mbRewards) {
                                  var rewardAddress = Ctl_Internal_Types_RewardAddress.stakeValidatorHashRewardAddress(networkId)(hash);
                                  return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_State_Trans.monadStateT(Ctl_Internal_Contract_Monad.monadContract)))(Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Ctl_Internal_Contract_Monad.monadContract))(Data_Either.note(new CannotWithdrawRewardsNativeScript(c.value0))(mbRewards)))(function (v) {
                                      return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Except_Trans.bindExceptT(Control_Monad_State_Trans.monadStateT(Ctl_Internal_Contract_Monad.monadContract)))(Data_Lens_Setter.modifying(Control_Monad_Except_Trans.monadStateExceptT(Control_Monad_State_Trans.monadStateStateT(Ctl_Internal_Contract_Monad.monadContract)))((function () {
                                          var $1084 = _cpsToTxBody(Data_Profunctor_Strong.strongFn);
                                          var $1085 = Ctl_Internal_Cardano_Types_Transaction["_withdrawals"](Data_Profunctor_Strong.strongFn);
                                          var $1086 = Data_Lens_Iso.non(Data_Map_Internal.eqMap(Ctl_Internal_Types_RewardAddress.eqRewardAddress)(Ctl_Internal_Cardano_Types_Value.eqCoin))(Data_Map_Internal.empty)(Data_Profunctor.profunctorFn);
                                          return function ($1087) {
                                              return $1084($1085($1086($1087)));
                                          };
                                      })())(Data_Map_Internal.union(Ctl_Internal_Types_RewardAddress.ordRewardAddress)(Data_Map_Internal.singleton(rewardAddress)(Data_Maybe.fromMaybe(Data_Semiring.zero(Data_BigInt.semiringBigInt))(v.rewards)))))(function () {
                                          return attachToCps(Ctl_Internal_Transaction.attachNativeScript)(Data_Newtype.unwrap()(c.value0));
                                      });
                                  });
                              });
                          });
                      })());
                  };
                  if (c instanceof Ctl_Internal_Types_TxConstraints.MustSatisfyAnyOf) {
                      return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Ctl_Internal_Contract_Monad.monadContract))(Control_Monad_State_Class.get(Control_Monad_State_Trans.monadStateStateT(Ctl_Internal_Contract_Monad.monadContract)))(function (cps) {
                          var tryNext = function (v) {
                              if (v instanceof Data_List_Types.Nil) {
                                  return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Ctl_Internal_Contract_Monad.monadContract))(Control_Monad_Error_Class.throwError(Control_Monad_Error_Class.monadThrowEither)(CannotSatisfyAny.value));
                              };
                              if (v instanceof Data_List_Types.Cons) {
                                  return Data_Foldable.foldM(Data_List_Types.foldableList)(Control_Monad_State_Trans.monadStateT(Ctl_Internal_Contract_Monad.monadContract))(function (v1) {
                                      return function (constr) {
                                          return Control_Monad_Except_Trans.runExceptT((function () {
                                              var $$continue = Control_Apply.applySecond(Control_Monad_State_Trans.applyStateT(Ctl_Internal_Contract_Monad.monadContract))(Control_Monad_State_Class.put(Control_Monad_State_Trans.monadStateStateT(Ctl_Internal_Contract_Monad.monadContract))(cps))(tryNext(v.value1));
                                              return Control_Monad_Error_Class.catchError(Control_Monad_Except_Trans.monadErrorExceptT(Control_Monad_State_Trans.monadStateT(Ctl_Internal_Contract_Monad.monadContract)))(Control_Monad_Error_Class.catchError(Control_Monad_State_Trans.monadErrorStateT(Ctl_Internal_Contract_Monad.monadErrorErrorContract))(processConstraint(mpsMap)(osMap)(constr))(function (v2) {
                                                  return $$continue;
                                              }))(function (v2) {
                                                  return $$continue;
                                              });
                                          })());
                                      };
                                  })(new Data_Either.Right(Data_Unit.unit))(v.value0);
                              };
                              throw new Error("Failed pattern match at Ctl.Internal.Types.ScriptLookups (line 1423, column 9 - line 1425, column 62): " + [ v.constructor.name ]);
                          };
                          return tryNext(Data_Array.toUnfoldable(Data_List_Types.unfoldableList)(Data_Functor.map(Data_Functor.functorArray)(Data_Array.toUnfoldable(Data_List_Types.unfoldableList))(c.value0)));
                      });
                  };
                  if (c instanceof Ctl_Internal_Types_TxConstraints.MustNotBeValid) {
                      return Control_Monad_Except_Trans.runExceptT(Data_Lens_Setter.assign(Control_Monad_Except_Trans.monadStateExceptT(Control_Monad_State_Trans.monadStateStateT(Ctl_Internal_Contract_Monad.monadContract)))((function () {
                          var $1088 = _cpsToTransaction(Data_Profunctor_Strong.strongFn);
                          var $1089 = Ctl_Internal_Cardano_Types_Transaction["_isValid"](Data_Profunctor_Strong.strongFn);
                          return function ($1090) {
                              return $1088($1089($1090));
                          };
                      })())(false));
                  };
                  throw new Error("Failed pattern match at Ctl.Internal.Types.ScriptLookups (line 1049, column 3 - line 1442, column 46): " + [ c.constructor.name ]);
              });
          };
      };
  };
  var _costModels = function (dictStrong) {
      return Data_Lens_Record.prop({
          reflectSymbol: function () {
              return "costModels";
          }
      })()()(Data_Symbol.SProxy.value)(dictStrong);
  };
  var addScriptDataHash = Control_Monad_Except_Trans.runExceptT(Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_State_Trans.monadStateT(Ctl_Internal_Contract_Monad.monadContract)))(Data_Lens_Getter.use(Control_Monad_Except_Trans.monadStateExceptT(Control_Monad_State_Trans.monadStateStateT(Ctl_Internal_Contract_Monad.monadContract)))(_datums(Data_Lens_Internal_Forget.strongForget)))(function (dats) {
      return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_State_Trans.monadStateT(Ctl_Internal_Contract_Monad.monadContract)))(Data_Lens_Getter.use(Control_Monad_Except_Trans.monadStateExceptT(Control_Monad_State_Trans.monadStateStateT(Ctl_Internal_Contract_Monad.monadContract)))(_costModels(Data_Lens_Internal_Forget.strongForget)))(function (costModels) {
          return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_State_Trans.monadStateT(Ctl_Internal_Contract_Monad.monadContract)))(Data_Lens_Getter.use(Control_Monad_Except_Trans.monadStateExceptT(Control_Monad_State_Trans.monadStateStateT(Ctl_Internal_Contract_Monad.monadContract)))((function () {
              var $1091 = _redeemersTxIns(Data_Lens_Internal_Forget.strongForget);
              var $1092 = Data_Lens_Getter.to(Data_Functor.map(Data_Functor.functorArray)(Data_Tuple.fst));
              return function ($1093) {
                  return $1091($1092($1093));
              };
          })()))(function (reds) {
              return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_State_Trans.monadStateT(Ctl_Internal_Contract_Monad.monadContract)))(Data_Lens_Getter.use(Control_Monad_Except_Trans.monadStateExceptT(Control_Monad_State_Trans.monadStateStateT(Ctl_Internal_Contract_Monad.monadContract)))((function () {
                  var $1094 = _unbalancedTx(Data_Lens_Internal_Forget.strongForget);
                  var $1095 = Ctl_Internal_Types_UnbalancedTransaction["_transaction"](Data_Lens_Internal_Forget.strongForget);
                  return function ($1096) {
                      return $1094($1095($1096));
                  };
              })()))(function (tx) {
                  return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_State_Trans.monadStateT(Ctl_Internal_Contract_Monad.monadContract)))(Effect_Class.liftEffect(Control_Monad_State_Trans.monadEffectState(Ctl_Internal_Contract_Monad.monadEffectContract))(Data_Functor.mapFlipped(Effect.functorEffect)(Ctl_Internal_Transaction.setScriptDataHash(costModels)(reds)(dats)(tx))(Data_Either.Right.create)))(function (tx$prime) {
                      return Data_Lens_Setter.assign(Control_Monad_Except_Trans.monadStateExceptT(Control_Monad_State_Trans.monadStateStateT(Ctl_Internal_Contract_Monad.monadContract)))(_cpsToTransaction(Data_Profunctor_Strong.strongFn))(tx$prime);
                  });
              });
          });
      });
  }));
  var processLookupsAndConstraints = function () {
      return function (dictIsData) {
          return function (dictIsData1) {
              return function (v) {
                  var foldConstraints = function (handler) {
                      var $1097 = Data_Foldable.traverse_(Control_Monad_Except_Trans.applicativeExceptT(Control_Monad_State_Trans.monadStateT(Ctl_Internal_Contract_Monad.monadContract)))(Data_Foldable.foldableArray)(function ($1099) {
                          return Control_Monad_Except_Trans.ExceptT(handler($1099));
                      });
                      return function ($1098) {
                          return Control_Monad_Except_Trans.runExceptT($1097($1098));
                      };
                  };
                  return Control_Monad_Except_Trans.runExceptT(Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_State_Trans.monadStateT(Ctl_Internal_Contract_Monad.monadContract)))(Data_Functor.mapFlipped(Control_Monad_Except_Trans.functorExceptT(Control_Monad_State_Trans.functorStateT(Ctl_Internal_Contract_Monad.functorContract)))(Data_Lens_Getter.use(Control_Monad_Except_Trans.monadStateExceptT(Control_Monad_State_Trans.monadStateStateT(Ctl_Internal_Contract_Monad.monadContract)))(_lookups(Data_Lens_Internal_Forget.strongForget)))(Data_Newtype.unwrap()))(function (lookups) {
                      var validatorHashes = Data_Functor.map(Data_Functor.functorArray)(Ctl_Internal_Scripts.validatorHash)(lookups.scripts);
                      var osMap = Data_Map_Internal.fromFoldable(Ctl_Internal_Types_Scripts.ordValidatorHash)(Data_Foldable.foldableArray)(Data_Array.zip(validatorHashes)(lookups.scripts));
                      var mpsHashes = Data_Functor.map(Data_Functor.functorArray)(Ctl_Internal_Scripts.mintingPolicyHash)(lookups.mps);
                      var mpsMap = Data_Map_Internal.fromFoldable(Ctl_Internal_Types_Scripts.ordMintingPolicyHash)(Data_Foldable.foldableArray)(Data_Array.zip(mpsHashes)(lookups.mps));
                      return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_State_Trans.monadStateT(Ctl_Internal_Contract_Monad.monadContract)))(Control_Monad_Except_Trans.except(Control_Monad_State_Trans.applicativeStateT(Ctl_Internal_Contract_Monad.monadContract))(resumeTimeConstraints(v.constraints)))(function (timeConstraintsSolved) {
                          return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Except_Trans.bindExceptT(Control_Monad_State_Trans.monadStateT(Ctl_Internal_Contract_Monad.monadContract)))(foldConstraints(processConstraint(mpsMap)(osMap))(timeConstraintsSolved))(function () {
                              return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_State_Trans.monadStateT(Ctl_Internal_Contract_Monad.monadContract)))(Data_Functor.mapFlipped(Control_Monad_Except_Trans.functorExceptT(Control_Monad_State_Trans.functorStateT(Ctl_Internal_Contract_Monad.functorContract)))(Data_Lens_Getter.use(Control_Monad_Except_Trans.monadStateExceptT(Control_Monad_State_Trans.monadStateStateT(Ctl_Internal_Contract_Monad.monadContract)))(_mintRedeemers(Data_Lens_Internal_Forget.strongForget)))(Data_Map_Internal.toUnfoldable(Data_Unfoldable.unfoldableArray)))(function (v1) {
                                  return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Except_Trans.bindExceptT(Control_Monad_State_Trans.monadStateT(Ctl_Internal_Contract_Monad.monadContract)))(Control_Monad_Trans_Class.lift(Control_Monad_Except_Trans.monadTransExceptT)(Control_Monad_State_Trans.monadStateT(Ctl_Internal_Contract_Monad.monadContract))(Data_Foldable.traverse_(Control_Monad_State_Trans.applicativeStateT(Ctl_Internal_Contract_Monad.monadContract))(Data_Foldable.foldableArray)((function () {
                                      var $1100 = attachToCps(Ctl_Internal_Transaction.attachRedeemer);
                                      return function ($1101) {
                                          return $1100(Data_Tuple.snd($1101));
                                      };
                                  })())(v1)))(function () {
                                      return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Except_Trans.bindExceptT(Control_Monad_State_Trans.monadStateT(Ctl_Internal_Contract_Monad.monadContract)))(foldConstraints(addOwnInput()(dictIsData)(dictIsData1)(Type_Proxy["Proxy"].value))(v.ownInputs))(function () {
                                          return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Except_Trans.bindExceptT(Control_Monad_State_Trans.monadStateT(Ctl_Internal_Contract_Monad.monadContract)))(foldConstraints(addOwnOutput()(dictIsData.ToData1()))(v.ownOutputs))(function () {
                                              return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Except_Trans.bindExceptT(Control_Monad_State_Trans.monadStateT(Ctl_Internal_Contract_Monad.monadContract)))(addScriptDataHash)(function () {
                                                  return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Except_Trans.bindExceptT(Control_Monad_State_Trans.monadStateT(Ctl_Internal_Contract_Monad.monadContract)))(addMissingValueSpent)(function () {
                                                      return updateUtxoIndex;
                                                  });
                                              });
                                          });
                                      });
                                  });
                              });
                          });
                      });
                  }));
              };
          };
      };
  };
  var runConstraintsM = function () {
      return function (dictIsData) {
          return function (dictIsData1) {
              return function (lookups) {
                  return function (txConstraints) {
                      return Control_Bind.bind(Ctl_Internal_Contract_Monad.bindContract)(Data_Functor.map(Ctl_Internal_Contract_Monad.functorContract)(Data_Newtype.unwrap())(Ctl_Internal_Contract.getProtocolParameters))(function (v) {
                          var unpackTuple = function (v1) {
                              if (v1.value0 instanceof Data_Either.Left) {
                                  return new Data_Either.Left(v1.value0.value0);
                              };
                              return new Data_Either.Right(v1.value1);
                          };
                          var initCps = {
                              unbalancedTx: Ctl_Internal_Types_UnbalancedTransaction.emptyUnbalancedTx,
                              valueSpentBalancesInputs: {
                                  required: Data_Monoid.mempty(Ctl_Internal_Cardano_Types_Value.monoidValue),
                                  provided: Data_Monoid.mempty(Ctl_Internal_Cardano_Types_Value.monoidValue)
                              },
                              valueSpentBalancesOutputs: {
                                  required: Data_Monoid.mempty(Ctl_Internal_Cardano_Types_Value.monoidValue),
                                  provided: Data_Monoid.mempty(Ctl_Internal_Cardano_Types_Value.monoidValue)
                              },
                              datums: Data_Monoid.mempty(Data_Monoid.monoidArray),
                              redeemersTxIns: Data_Monoid.mempty(Data_Monoid.monoidArray),
                              mintRedeemers: Data_Map_Internal.empty,
                              lookups: lookups,
                              refScriptsUtxoMap: Data_Map_Internal.empty,
                              costModels: v.costModels
                          };
                          return Data_Functor.map(Ctl_Internal_Contract_Monad.functorContract)(unpackTuple)(Data_Function.flip(Control_Monad_State_Trans.runStateT)(initCps)(processLookupsAndConstraints()(dictIsData)(dictIsData1)(txConstraints)));
                      });
                  };
              };
          };
      };
  };
  var mkUnbalancedTx = function () {
      return function (dictIsData) {
          return function (dictIsData1) {
              return function (scriptLookups) {
                  return function (txConstraints) {
                      return Data_Functor.mapFlipped(Ctl_Internal_Contract_Monad.functorContract)(runConstraintsM()(dictIsData)(dictIsData1)(scriptLookups)(txConstraints))(Data_Functor.map(Data_Either.functorEither)(function (v) {
                          var stripScriptDataHash = function (uTx) {
                              return Data_Lens_Setter.set((function () {
                                  var $1102 = Ctl_Internal_Types_UnbalancedTransaction["_transaction"](Data_Profunctor_Strong.strongFn);
                                  var $1103 = Ctl_Internal_Cardano_Types_Transaction["_body"](Data_Profunctor_Strong.strongFn);
                                  var $1104 = Ctl_Internal_Cardano_Types_Transaction["_scriptDataHash"](Data_Profunctor_Strong.strongFn);
                                  return function ($1105) {
                                      return $1102($1103($1104($1105)));
                                  };
                              })())(Data_Maybe.Nothing.value)(uTx);
                          };
                          var stripDatumsRedeemers = function (uTx) {
                              return Data_Lens_Setter.over((function () {
                                  var $1106 = Ctl_Internal_Types_UnbalancedTransaction["_transaction"](Data_Profunctor_Strong.strongFn);
                                  var $1107 = Ctl_Internal_Cardano_Types_Transaction["_witnessSet"](Data_Profunctor_Strong.strongFn);
                                  return function ($1108) {
                                      return $1106($1107($1108));
                                  };
                              })())(Data_Newtype.over()()(Ctl_Internal_Cardano_Types_Transaction.TransactionWitnessSet)(function (v1) {
                                  return {
                                      plutusData: Data_Maybe.Nothing.value,
                                      redeemers: Data_Maybe.Nothing.value,
                                      bootstraps: v1.bootstraps,
                                      nativeScripts: v1.nativeScripts,
                                      plutusScripts: v1.plutusScripts,
                                      vkeys: v1.vkeys
                                  };
                              }))(uTx);
                          };
                          var tx = stripDatumsRedeemers(stripScriptDataHash(v.unbalancedTx));
                          return Data_Newtype.wrap()({
                              unbalancedTx: tx,
                              datums: v.datums,
                              redeemersTxIns: v.redeemersTxIns
                          });
                      }));
                  };
              };
          };
      };
  };
  exports["mintingPolicy"] = mintingPolicy;
  exports["mkUnbalancedTx"] = mkUnbalancedTx;
  exports["validator"] = validator;
  exports["unspentOutputs"] = unspentOutputs;
  exports["semigroupScriptLookups"] = semigroupScriptLookups;
  exports["monoidScriptLookups"] = monoidScriptLookups;
  exports["showUnattachedUnbalancedT"] = showUnattachedUnbalancedT;
  exports["showMkUnbalancedTxError"] = showMkUnbalancedTxError;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Contract.ScriptLookups"] = $PS["Contract.ScriptLookups"] || {};
  var exports = $PS["Contract.ScriptLookups"];
  var Ctl_Internal_Types_ScriptLookups = $PS["Ctl.Internal.Types.ScriptLookups"];
  var mkUnbalancedTx = function () {
      return function (dictIsData) {
          return function (dictIsData1) {
              return Ctl_Internal_Types_ScriptLookups.mkUnbalancedTx()(dictIsData)(dictIsData1);
          };
      };
  };
  exports["mkUnbalancedTx"] = mkUnbalancedTx;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Ctl.Internal.ReindexRedeemers"] = $PS["Ctl.Internal.ReindexRedeemers"] || {};
  var exports = $PS["Ctl.Internal.ReindexRedeemers"];
  var Control_Bind = $PS["Control.Bind"];
  var Ctl_Internal_Cardano_Types_Transaction = $PS["Ctl.Internal.Cardano.Types.Transaction"];
  var Ctl_Internal_Types_RedeemerTag = $PS["Ctl.Internal.Types.RedeemerTag"];
  var Ctl_Internal_Types_Transaction = $PS["Ctl.Internal.Types.Transaction"];
  var Data_Array = $PS["Data.Array"];
  var Data_BigInt = $PS["Data.BigInt"];
  var Data_Either = $PS["Data.Either"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Show_Generic = $PS["Data.Show.Generic"];
  var Data_Traversable = $PS["Data.Traversable"];
  var Data_Tuple = $PS["Data.Tuple"];                
  var CannotGetTxOutRefIndexForRedeemer = (function () {
      function CannotGetTxOutRefIndexForRedeemer(value0) {
          this.value0 = value0;
      };
      CannotGetTxOutRefIndexForRedeemer.create = function (value0) {
          return new CannotGetTxOutRefIndexForRedeemer(value0);
      };
      return CannotGetTxOutRefIndexForRedeemer;
  })();
  var genericReindexErrors_ = {
      to: function (x) {
          return new CannotGetTxOutRefIndexForRedeemer(x);
      },
      from: function (x) {
          return x.value0;
      }
  };
  var showReindexErrors = {
      show: Data_Show_Generic.genericShow(genericReindexErrors_)(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Ctl_Internal_Cardano_Types_Transaction.showRedeemer))({
          reflectSymbol: function () {
              return "CannotGetTxOutRefIndexForRedeemer";
          }
      }))
  };
  var reindexSpentScriptRedeemers$prime = function (inputs) {
      return function (redeemersTxIns) {
          var reindex = function (ipts) {
              return function (v) {
                  if (v.value0.tag instanceof Ctl_Internal_Types_RedeemerTag.Spend && v.value1 instanceof Data_Maybe.Just) {
                      return Control_Bind.bind(Data_Either.bindEither)(Data_Either.note(new CannotGetTxOutRefIndexForRedeemer(v.value0))(Data_Functor.map(Data_Maybe.functorMaybe)(Data_BigInt.fromInt)(Data_Array.elemIndex(Ctl_Internal_Types_Transaction.eqTransactionInput)(v.value1.value0)(ipts))))(function (index) {
                          return new Data_Either.Right(new Data_Tuple.Tuple({
                              tag: v.value0.tag,
                              index: index,
                              data: v.value0.data,
                              exUnits: v.value0.exUnits
                          }, new Data_Maybe.Just(v.value1.value0)));
                      });
                  };
                  return new Data_Either.Right(new Data_Tuple.Tuple(v.value0, v.value1));
              };
          };
          return Data_Traversable.traverse(Data_Traversable.traversableArray)(Data_Either.applicativeEither)(reindex(inputs))(redeemersTxIns);
      };
  };
  exports["reindexSpentScriptRedeemers'"] = reindexSpentScriptRedeemers$prime;
  exports["showReindexErrors"] = showReindexErrors;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Ctl.Internal.BalanceTx.Error"] = $PS["Ctl.Internal.BalanceTx.Error"] || {};
  var exports = $PS["Ctl.Internal.BalanceTx.Error"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Category = $PS["Control.Category"];
  var Ctl_Internal_Plutus_Types_Value = $PS["Ctl.Internal.Plutus.Types.Value"];
  var Ctl_Internal_QueryM_Ogmios = $PS["Ctl.Internal.QueryM.Ogmios"];
  var Ctl_Internal_ReindexRedeemers = $PS["Ctl.Internal.ReindexRedeemers"];
  var Ctl_Internal_Types_Natural = $PS["Ctl.Internal.Types.Natural"];
  var Ctl_Internal_Types_PlutusData = $PS["Ctl.Internal.Types.PlutusData"];
  var Ctl_Internal_Types_RedeemerTag = $PS["Ctl.Internal.Types.RedeemerTag"];
  var Ctl_Internal_Types_ScriptLookups = $PS["Ctl.Internal.Types.ScriptLookups"];
  var Ctl_Internal_Types_Transaction = $PS["Ctl.Internal.Types.Transaction"];
  var Data_Array = $PS["Data.Array"];
  var Data_Bifunctor = $PS["Data.Bifunctor"];
  var Data_BigInt = $PS["Data.BigInt"];
  var Data_Either = $PS["Data.Either"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_EuclideanRing = $PS["Data.EuclideanRing"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_FoldableWithIndex = $PS["Data.FoldableWithIndex"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Generic_Rep = $PS["Data.Generic.Rep"];
  var Data_Int = $PS["Data.Int"];
  var Data_Map_Internal = $PS["Data.Map.Internal"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Semiring = $PS["Data.Semiring"];
  var Data_Show = $PS["Data.Show"];
  var Data_Show_Generic = $PS["Data.Show.Generic"];
  var Data_String_CodePoints = $PS["Data.String.CodePoints"];
  var Data_String_Common = $PS["Data.String.Common"];
  var Data_String_Utils = $PS["Data.String.Utils"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Impossible = (function () {
      function Impossible() {

      };
      Impossible.value = new Impossible();
      return Impossible;
  })();
  var BalanceInsufficientError = (function () {
      function BalanceInsufficientError(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      BalanceInsufficientError.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new BalanceInsufficientError(value0, value1, value2);
              };
          };
      };
      return BalanceInsufficientError;
  })();
  var CouldNotConvertScriptOutputToTxInput = (function () {
      function CouldNotConvertScriptOutputToTxInput() {

      };
      CouldNotConvertScriptOutputToTxInput.value = new CouldNotConvertScriptOutputToTxInput();
      return CouldNotConvertScriptOutputToTxInput;
  })();
  var CouldNotGetChangeAddress = (function () {
      function CouldNotGetChangeAddress() {

      };
      CouldNotGetChangeAddress.value = new CouldNotGetChangeAddress();
      return CouldNotGetChangeAddress;
  })();
  var CouldNotGetCollateral = (function () {
      function CouldNotGetCollateral() {

      };
      CouldNotGetCollateral.value = new CouldNotGetCollateral();
      return CouldNotGetCollateral;
  })();
  var CouldNotGetUtxos = (function () {
      function CouldNotGetUtxos() {

      };
      CouldNotGetUtxos.value = new CouldNotGetUtxos();
      return CouldNotGetUtxos;
  })();
  var CollateralReturnError = (function () {
      function CollateralReturnError(value0) {
          this.value0 = value0;
      };
      CollateralReturnError.create = function (value0) {
          return new CollateralReturnError(value0);
      };
      return CollateralReturnError;
  })();
  var CollateralReturnMinAdaValueCalcError = (function () {
      function CollateralReturnMinAdaValueCalcError() {

      };
      CollateralReturnMinAdaValueCalcError.value = new CollateralReturnMinAdaValueCalcError();
      return CollateralReturnMinAdaValueCalcError;
  })();
  var ExUnitsEvaluationFailed = (function () {
      function ExUnitsEvaluationFailed(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      ExUnitsEvaluationFailed.create = function (value0) {
          return function (value1) {
              return new ExUnitsEvaluationFailed(value0, value1);
          };
      };
      return ExUnitsEvaluationFailed;
  })();
  var InsufficientUtxoBalanceToCoverAsset = (function () {
      function InsufficientUtxoBalanceToCoverAsset(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      InsufficientUtxoBalanceToCoverAsset.create = function (value0) {
          return function (value1) {
              return new InsufficientUtxoBalanceToCoverAsset(value0, value1);
          };
      };
      return InsufficientUtxoBalanceToCoverAsset;
  })();
  var ReindexRedeemersError = (function () {
      function ReindexRedeemersError(value0) {
          this.value0 = value0;
      };
      ReindexRedeemersError.create = function (value0) {
          return new ReindexRedeemersError(value0);
      };
      return ReindexRedeemersError;
  })();
  var UtxoLookupFailedFor = (function () {
      function UtxoLookupFailedFor(value0) {
          this.value0 = value0;
      };
      UtxoLookupFailedFor.create = function (value0) {
          return new UtxoLookupFailedFor(value0);
      };
      return UtxoLookupFailedFor;
  })();
  var UtxoMinAdaValueCalculationFailed = (function () {
      function UtxoMinAdaValueCalculationFailed() {

      };
      UtxoMinAdaValueCalculationFailed.value = new UtxoMinAdaValueCalculationFailed();
      return UtxoMinAdaValueCalculationFailed;
  })();
  var genericInvalidInContext_ = {
      to: function (x) {
          return x;
      },
      from: function (x) {
          return x;
      }
  };
  var showInvalidInContext = {
      show: Data_Show_Generic.genericShow(genericInvalidInContext_)(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Ctl_Internal_Plutus_Types_Value.showValue))({
          reflectSymbol: function () {
              return "InvalidInContext";
          }
      }))
  };
  var genericImpossibleError_ = {
      to: function (x) {
          return Impossible.value;
      },
      from: function (x) {
          return Data_Generic_Rep.NoArguments.value;
      }
  };
  var showImpossibleError = {
      show: Data_Show_Generic.genericShow(genericImpossibleError_)(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsNoArguments)({
          reflectSymbol: function () {
              return "Impossible";
          }
      }))
  };
  var genericExpected_ = {
      to: function (x) {
          return x;
      },
      from: function (x) {
          return x;
      }
  };
  var showExpected = {
      show: Data_Show_Generic.genericShow(genericExpected_)(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Ctl_Internal_Plutus_Types_Value.showValue))({
          reflectSymbol: function () {
              return "Expected";
          }
      }))
  };
  var genericBalanceTxError_ = {
      to: function (x) {
          if (x instanceof Data_Generic_Rep.Inl) {
              return new BalanceInsufficientError(x.value0.value0, x.value0.value1.value0, x.value0.value1.value1);
          };
          if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inl) {
              return CouldNotConvertScriptOutputToTxInput.value;
          };
          if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0 instanceof Data_Generic_Rep.Inl)) {
              return CouldNotGetChangeAddress.value;
          };
          if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0 instanceof Data_Generic_Rep.Inl))) {
              return CouldNotGetCollateral.value;
          };
          if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl)))) {
              return CouldNotGetUtxos.value;
          };
          if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl))))) {
              return new CollateralReturnError(x.value0.value0.value0.value0.value0.value0);
          };
          if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl)))))) {
              return CollateralReturnMinAdaValueCalcError.value;
          };
          if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl))))))) {
              return new ExUnitsEvaluationFailed(x.value0.value0.value0.value0.value0.value0.value0.value0.value0, x.value0.value0.value0.value0.value0.value0.value0.value0.value1);
          };
          if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl)))))))) {
              return new InsufficientUtxoBalanceToCoverAsset(x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0, x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value1);
          };
          if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl))))))))) {
              return new ReindexRedeemersError(x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0);
          };
          if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl)))))))))) {
              return new UtxoLookupFailedFor(x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0);
          };
          if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr)))))))))) {
              return UtxoMinAdaValueCalculationFailed.value;
          };
          throw new Error("Failed pattern match at Ctl.Internal.BalanceTx.Error (line 84, column 1 - line 84, column 41): " + [ x.constructor.name ]);
      },
      from: function (x) {
          if (x instanceof BalanceInsufficientError) {
              return new Data_Generic_Rep.Inl(new Data_Generic_Rep.Product(x.value0, new Data_Generic_Rep.Product(x.value1, x.value2)));
          };
          if (x instanceof CouldNotConvertScriptOutputToTxInput) {
              return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value));
          };
          if (x instanceof CouldNotGetChangeAddress) {
              return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value)));
          };
          if (x instanceof CouldNotGetCollateral) {
              return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value))));
          };
          if (x instanceof CouldNotGetUtxos) {
              return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value)))));
          };
          if (x instanceof CollateralReturnError) {
              return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0))))));
          };
          if (x instanceof CollateralReturnMinAdaValueCalcError) {
              return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value)))))));
          };
          if (x instanceof ExUnitsEvaluationFailed) {
              return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(new Data_Generic_Rep.Product(x.value0, x.value1)))))))));
          };
          if (x instanceof InsufficientUtxoBalanceToCoverAsset) {
              return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(new Data_Generic_Rep.Product(x.value0, x.value1))))))))));
          };
          if (x instanceof ReindexRedeemersError) {
              return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0))))))))));
          };
          if (x instanceof UtxoLookupFailedFor) {
              return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0)))))))))));
          };
          if (x instanceof UtxoMinAdaValueCalculationFailed) {
              return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(Data_Generic_Rep.NoArguments.value)))))))))));
          };
          throw new Error("Failed pattern match at Ctl.Internal.BalanceTx.Error (line 84, column 1 - line 84, column 41): " + [ x.constructor.name ]);
      }
  };
  var genericActual_ = {
      to: function (x) {
          return x;
      },
      from: function (x) {
          return x;
      }
  };
  var showActual = {
      show: Data_Show_Generic.genericShow(genericActual_)(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Ctl_Internal_Plutus_Types_Value.showValue))({
          reflectSymbol: function () {
              return "Actual";
          }
      }))
  };
  var runPrettyString = function (ary) {
      return Data_String_Common.joinWith("")(Data_Functor.map(Data_Functor.functorArray)(Data_Either.either(Control_Category.identity(Control_Category.categoryFn))(Control_Category.identity(Control_Category.categoryFn)))(ary));
  };
  var freeze = function (ary) {
      return Data_Functor.map(Data_Functor.functorArray)(Data_Either.either(Data_Either.Right.create)(Data_Either.Right.create))(ary);
  };
  var line = function (s) {
      var lines = Data_Functor.map(Data_Functor.functorArray)(function ($184) {
          return Data_Either.Left.create((function (v) {
              return v + "\x0a";
          })($184));
      })(Data_String_Common.split("\x0a")(s));
      var v = Data_Array.uncons(lines);
      if (v instanceof Data_Maybe.Nothing) {
          return [  ];
      };
      if (v instanceof Data_Maybe.Just) {
          return Data_Semigroup.append(Data_Semigroup.semigroupArray)([ v.value0.head ])(freeze(v.value0.tail));
      };
      throw new Error("Failed pattern match at Ctl.Internal.BalanceTx.Error (line 140, column 3 - line 142, column 51): " + [ v.constructor.name ]);
  };
  var number = function (ary) {
      var biggestPrefix = Data_Int.toStringAs(Data_Int.decimal)(Data_Foldable.length(Data_Foldable.foldableArray)(Data_Semiring.semiringInt)(Data_Array.filter(Data_Either.isLeft)(ary))) + ". ";
      var width = Data_Int.ceil(Data_Int.toNumber(Data_String_CodePoints.length(biggestPrefix)) / 2.0) * 2 | 0;
      var indentLine = Data_Function.applyN(function (v) {
          return "  " + v;
      })(Data_EuclideanRing.div(Data_EuclideanRing.euclideanRingInt)(width)(2));
      var numberLine = function (i) {
          return function (l) {
              return Data_String_Utils.padEnd(width)(Data_Int.toStringAs(Data_Int.decimal)(i + 1 | 0) + ". ") + l;
          };
      };
      var go = function (b) {
          return function (a) {
              return Data_Semigroup.append(Data_Semigroup.semigroupArray)(b)([ Data_Bifunctor.bimap(Data_Bifunctor.bifunctorEither)(numberLine(Data_Foldable.length(Data_Foldable.foldableArray)(Data_Semiring.semiringInt)(b)))(indentLine)(a) ]);
          };
      };
      return freeze(Data_Foldable.foldl(Data_Foldable.foldableArray)(go)([  ])(ary));
  };
  var bullet = function (ary) {
      return freeze(Data_Functor.map(Data_Functor.functorArray)(Data_Bifunctor.bimap(Data_Bifunctor.bifunctorEither)(function (v) {
          return "- " + v;
      })(function (v) {
          return "  " + v;
      }))(ary));
  };
  var printTxEvaluationFailure = function (v) {
      return function (e) {
          var printRedeemerPointer = function (ptr) {
              return line(Data_Show.show(Ctl_Internal_Types_RedeemerTag.showRedeemerTag)(ptr.redeemerTag) + (":" + Data_BigInt.toString(Ctl_Internal_Types_Natural.toBigInt(ptr.redeemerIndex))));
          };
          var lookupRedeemerPointer = function (ptr) {
              return Data_Function.flip(Data_Foldable.find(Data_Foldable.foldableArray))(v.redeemersTxIns)(function (v1) {
                  return Data_Eq.eq(Ctl_Internal_Types_RedeemerTag.eqRedeemerTag)(v1.value0.tag)(ptr.redeemerTag) && Data_Eq.eq(Data_BigInt.eqBigInt)(v1.value0.index)(Ctl_Internal_Types_Natural.toBigInt(ptr.redeemerIndex));
              });
          };
          var printRedeemerDetails = function (ptr) {
              var mbRedeemerTxIn = lookupRedeemerPointer(ptr);
              var mbTxIn = Data_Functor.mapFlipped(Data_Maybe.functorMaybe)(Control_Bind.bind(Data_Maybe.bindMaybe)(mbRedeemerTxIn)(Data_Tuple.snd))(function (txIn) {
                  return "Input: " + Data_Show.show(Ctl_Internal_Types_Transaction.showTransactionInput)(txIn);
              });
              var mbData = Data_Functor.mapFlipped(Data_Maybe.functorMaybe)(mbRedeemerTxIn)(function (v1) {
                  return "Redeemer: " + Data_Show.show(Ctl_Internal_Types_PlutusData.showPlutusData)(v1.value0.data);
              });
              return Data_Foldable.foldMap(Data_Foldable.foldableArray)(Data_Monoid.monoidArray)(line)(Data_Array.catMaybes([ mbData, mbTxIn ]));
          };
          var printRedeemer = function (ptr) {
              return Data_Semigroup.append(Data_Semigroup.semigroupArray)(printRedeemerPointer(ptr))(bullet(printRedeemerDetails(ptr)));
          };
          var printScriptFailure = function (v1) {
              if (v1 instanceof Ctl_Internal_QueryM_Ogmios.ExtraRedeemers) {
                  return Data_Semigroup.append(Data_Semigroup.semigroupArray)(line("Extra redeemers:"))(bullet(Data_Foldable.foldMap(Data_Foldable.foldableArray)(Data_Monoid.monoidArray)(printRedeemer)(v1.value0)));
              };
              if (v1 instanceof Ctl_Internal_QueryM_Ogmios.MissingRequiredDatums) {
                  return Data_Semigroup.append(Data_Semigroup.semigroupArray)(line("Supplied with datums:"))(Data_Semigroup.append(Data_Semigroup.semigroupArray)(bullet(Data_Foldable.foldMap(Data_Foldable.foldableMaybe)(Data_Monoid.monoidArray)(Data_Foldable.foldMap(Data_Foldable.foldableArray)(Data_Monoid.monoidArray)(line))(v1.value0.provided)))(Data_Semigroup.append(Data_Semigroup.semigroupArray)(line("But missing required datums:"))(bullet(Data_Foldable.foldMap(Data_Foldable.foldableArray)(Data_Monoid.monoidArray)(line)(v1.value0.missing)))));
              };
              if (v1 instanceof Ctl_Internal_QueryM_Ogmios.MissingRequiredScripts) {
                  return Data_Semigroup.append(Data_Semigroup.semigroupArray)(line("Supplied with scripts:"))(Data_Semigroup.append(Data_Semigroup.semigroupArray)(bullet(Data_FoldableWithIndex.foldMapWithIndex(Data_Map_Internal.foldableWithIndexMap)(Data_Monoid.monoidArray)(function (ptr) {
                      return function (scr) {
                          return Data_Semigroup.append(Data_Semigroup.semigroupArray)(printRedeemer(ptr))(line("Script: " + scr));
                      };
                  })(v1.value0.resolved)))(Data_Semigroup.append(Data_Semigroup.semigroupArray)(line("But missing required scripts:"))(bullet(Data_Foldable.foldMap(Data_Foldable.foldableArray)(Data_Monoid.monoidArray)(line)(v1.value0.missing)))));
              };
              if (v1 instanceof Ctl_Internal_QueryM_Ogmios.ValidatorFailed) {
                  return Data_Semigroup.append(Data_Semigroup.semigroupArray)(line(v1.value0.error))(Data_Semigroup.append(Data_Semigroup.semigroupArray)(line("Trace:"))(number(Data_Foldable.foldMap(Data_Foldable.foldableArray)(Data_Monoid.monoidArray)(line)(v1.value0.traces))));
              };
              if (v1 instanceof Ctl_Internal_QueryM_Ogmios.UnknownInputReferencedByRedeemer) {
                  return line("Unknown input referenced by redeemer: " + Data_Show.show(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
                      reflectSymbol: function () {
                          return "index";
                      }
                  })(Data_Show.showRecordFieldsCons({
                      reflectSymbol: function () {
                          return "txId";
                      }
                  })(Data_Show.showRecordFieldsNil)(Data_Show.showString))(Data_Show.showInt)))(v1.value0));
              };
              if (v1 instanceof Ctl_Internal_QueryM_Ogmios.NonScriptInputReferencedByRedeemer) {
                  return line("Non script input referenced by redeemer: " + Data_Show.show(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
                      reflectSymbol: function () {
                          return "index";
                      }
                  })(Data_Show.showRecordFieldsCons({
                      reflectSymbol: function () {
                          return "txId";
                      }
                  })(Data_Show.showRecordFieldsNil)(Data_Show.showString))(Data_Show.showInt)))(v1.value0));
              };
              if (v1 instanceof Ctl_Internal_QueryM_Ogmios.IllFormedExecutionBudget && v1.value0 instanceof Data_Maybe.Nothing) {
                  return line("Ill formed execution budget: Execution budget missing");
              };
              if (v1 instanceof Ctl_Internal_QueryM_Ogmios.IllFormedExecutionBudget && v1.value0 instanceof Data_Maybe.Just) {
                  return Data_Semigroup.append(Data_Semigroup.semigroupArray)(line("Ill formed execution budget:"))(bullet(Data_Semigroup.append(Data_Semigroup.semigroupArray)(line("Memory: " + Data_BigInt.toString(Ctl_Internal_Types_Natural.toBigInt(v1.value0.value0.memory))))(line("Steps: " + Data_BigInt.toString(Ctl_Internal_Types_Natural.toBigInt(v1.value0.value0.steps))))));
              };
              if (v1 instanceof Ctl_Internal_QueryM_Ogmios.NoCostModelForLanguage) {
                  return line("No cost model for language \"" + (v1.value0 + "\""));
              };
              throw new Error("Failed pattern match at Ctl.Internal.BalanceTx.Error (line 209, column 24 - line 242, column 60): " + [ v1.constructor.name ]);
          };
          var printScriptFailures = function (ptr) {
              return function (sfs) {
                  return Data_Semigroup.append(Data_Semigroup.semigroupArray)(printRedeemer(ptr))(bullet(Data_Foldable.foldMap(Data_Foldable.foldableArray)(Data_Monoid.monoidArray)(printScriptFailure)(sfs)));
              };
          };
          return runPrettyString((function () {
              if (e instanceof Ctl_Internal_QueryM_Ogmios.UnparsedError) {
                  return line("Unknown error: " + e.value0);
              };
              if (e instanceof Ctl_Internal_QueryM_Ogmios.ScriptFailures) {
                  return Data_Semigroup.append(Data_Semigroup.semigroupArray)(line("Script failures:"))(bullet(Data_FoldableWithIndex.foldMapWithIndex(Data_Map_Internal.foldableWithIndexMap)(Data_Monoid.monoidArray)(printScriptFailures)(e.value0)));
              };
              throw new Error("Failed pattern match at Ctl.Internal.BalanceTx.Error (line 173, column 21 - line 176, column 48): " + [ e.constructor.name ]);
          })());
      };
  };
  var showBalanceTxError = {
      show: function (v) {
          if (v instanceof ExUnitsEvaluationFailed) {
              return "ExUnitsEvaluationFailed: " + printTxEvaluationFailure(v.value0)(v.value1);
          };
          return Data_Show_Generic.genericShow(genericBalanceTxError_)(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsProduct(Data_Show_Generic.genericShowArgsArgument(showExpected))(Data_Show_Generic.genericShowArgsProduct(Data_Show_Generic.genericShowArgsArgument(showActual))(Data_Show_Generic.genericShowArgsArgument(showInvalidInContext))))({
              reflectSymbol: function () {
                  return "BalanceInsufficientError";
              }
          }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsNoArguments)({
              reflectSymbol: function () {
                  return "CouldNotConvertScriptOutputToTxInput";
              }
          }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsNoArguments)({
              reflectSymbol: function () {
                  return "CouldNotGetChangeAddress";
              }
          }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsNoArguments)({
              reflectSymbol: function () {
                  return "CouldNotGetCollateral";
              }
          }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsNoArguments)({
              reflectSymbol: function () {
                  return "CouldNotGetUtxos";
              }
          }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Data_Show.showString))({
              reflectSymbol: function () {
                  return "CollateralReturnError";
              }
          }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsNoArguments)({
              reflectSymbol: function () {
                  return "CollateralReturnMinAdaValueCalcError";
              }
          }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsProduct(Data_Show_Generic.genericShowArgsArgument(Ctl_Internal_Types_ScriptLookups.showUnattachedUnbalancedT))(Data_Show_Generic.genericShowArgsArgument(Ctl_Internal_QueryM_Ogmios.showTxEvaluationFailure)))({
              reflectSymbol: function () {
                  return "ExUnitsEvaluationFailed";
              }
          }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsProduct(Data_Show_Generic.genericShowArgsArgument(showImpossibleError))(Data_Show_Generic.genericShowArgsArgument(Data_Show.showString)))({
              reflectSymbol: function () {
                  return "InsufficientUtxoBalanceToCoverAsset";
              }
          }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Ctl_Internal_ReindexRedeemers.showReindexErrors))({
              reflectSymbol: function () {
                  return "ReindexRedeemersError";
              }
          }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Ctl_Internal_Types_Transaction.showTransactionInput))({
              reflectSymbol: function () {
                  return "UtxoLookupFailedFor";
              }
          }))(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsNoArguments)({
              reflectSymbol: function () {
                  return "UtxoMinAdaValueCalculationFailed";
              }
          })))))))))))))(v);
      }
  };
  exports["BalanceInsufficientError"] = BalanceInsufficientError;
  exports["CouldNotGetChangeAddress"] = CouldNotGetChangeAddress;
  exports["CouldNotGetCollateral"] = CouldNotGetCollateral;
  exports["CouldNotGetUtxos"] = CouldNotGetUtxos;
  exports["CollateralReturnError"] = CollateralReturnError;
  exports["CollateralReturnMinAdaValueCalcError"] = CollateralReturnMinAdaValueCalcError;
  exports["ExUnitsEvaluationFailed"] = ExUnitsEvaluationFailed;
  exports["InsufficientUtxoBalanceToCoverAsset"] = InsufficientUtxoBalanceToCoverAsset;
  exports["ReindexRedeemersError"] = ReindexRedeemersError;
  exports["UtxoLookupFailedFor"] = UtxoLookupFailedFor;
  exports["UtxoMinAdaValueCalculationFailed"] = UtxoMinAdaValueCalculationFailed;
  exports["Impossible"] = Impossible;
  exports["showBalanceTxError"] = showBalanceTxError;
})(PS);
(function(exports) {
  "use strict";

  exports.random = Math.random;
})(PS["Effect.Random"] = PS["Effect.Random"] || {});
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Effect.Random"] = $PS["Effect.Random"] || {};
  var exports = $PS["Effect.Random"];
  var $foreign = $PS["Effect.Random"];
  var Data_Int = $PS["Data.Int"];
  var randomInt = function (low) {
      return function (high) {
          return function __do() {
              var n = $foreign.random();
              var asNumber = ((Data_Int.toNumber(high) - Data_Int.toNumber(low)) + 1) * n + Data_Int.toNumber(low);
              return Data_Int.floor(asNumber);
          };
      };
  };
  exports["randomInt"] = randomInt;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Ctl.Internal.CoinSelection.UtxoIndex"] = $PS["Ctl.Internal.CoinSelection.UtxoIndex"] || {};
  var exports = $PS["Ctl.Internal.CoinSelection.UtxoIndex"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Ctl_Internal_Cardano_Types_Value = $PS["Ctl.Internal.Cardano.Types.Value"];
  var Ctl_Internal_Types_Transaction = $PS["Ctl.Internal.Types.Transaction"];
  var Data_Array = $PS["Data.Array"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Lens_Getter = $PS["Data.Lens.Getter"];
  var Data_Lens_Internal_Forget = $PS["Data.Lens.Internal.Forget"];
  var Data_Lens_Iso = $PS["Data.Lens.Iso"];
  var Data_Lens_Record = $PS["Data.Lens.Record"];
  var Data_Lens_Setter = $PS["Data.Lens.Setter"];
  var Data_Map_Internal = $PS["Data.Map.Internal"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Ordering = $PS["Data.Ordering"];
  var Data_Profunctor_Strong = $PS["Data.Profunctor.Strong"];
  var Data_Set = $PS["Data.Set"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unfoldable = $PS["Data.Unfoldable"];
  var Effect_Class = $PS["Effect.Class"];
  var Effect_Random = $PS["Effect.Random"];
  var Type_Proxy = $PS["Type.Proxy"];
  var BundleWithNoAssets = (function () {
      function BundleWithNoAssets() {

      };
      BundleWithNoAssets.value = new BundleWithNoAssets();
      return BundleWithNoAssets;
  })();
  var BundleWithOneAsset = (function () {
      function BundleWithOneAsset(value0) {
          this.value0 = value0;
      };
      BundleWithOneAsset.create = function (value0) {
          return new BundleWithOneAsset(value0);
      };
      return BundleWithOneAsset;
  })();
  var BundleWithTwoAssets = (function () {
      function BundleWithTwoAssets(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      BundleWithTwoAssets.create = function (value0) {
          return function (value1) {
              return new BundleWithTwoAssets(value0, value1);
          };
      };
      return BundleWithTwoAssets;
  })();
  var BundleWithMultipleAssets = (function () {
      function BundleWithMultipleAssets(value0) {
          this.value0 = value0;
      };
      BundleWithMultipleAssets.create = function (value0) {
          return new BundleWithMultipleAssets(value0);
      };
      return BundleWithMultipleAssets;
  })();
  var AssetLovelace = (function () {
      function AssetLovelace() {

      };
      AssetLovelace.value = new AssetLovelace();
      return AssetLovelace;
  })();
  var Asset = (function () {
      function Asset(value0) {
          this.value0 = value0;
      };
      Asset.create = function (value0) {
          return new Asset(value0);
      };
      return Asset;
  })();
  var SelectSingleton = (function () {
      function SelectSingleton(value0) {
          this.value0 = value0;
      };
      SelectSingleton.create = function (value0) {
          return new SelectSingleton(value0);
      };
      return SelectSingleton;
  })();
  var SelectPairWith = (function () {
      function SelectPairWith(value0) {
          this.value0 = value0;
      };
      SelectPairWith.create = function (value0) {
          return new SelectPairWith(value0);
      };
      return SelectPairWith;
  })();
  var SelectAnyWith = (function () {
      function SelectAnyWith(value0) {
          this.value0 = value0;
      };
      SelectAnyWith.create = function (value0) {
          return new SelectAnyWith(value0);
      };
      return SelectAnyWith;
  })();
  var UtxoIndex = function (x) {
      return x;
  };
  var eqAsset = {
      eq: function (x) {
          return function (y) {
              if (x instanceof AssetLovelace && y instanceof AssetLovelace) {
                  return true;
              };
              if (x instanceof Asset && y instanceof Asset) {
                  return Data_Eq.eq(Ctl_Internal_Cardano_Types_Value.eqAssetClass)(x.value0)(y.value0);
              };
              return false;
          };
      }
  };
  var ordAsset = {
      compare: function (x) {
          return function (y) {
              if (x instanceof AssetLovelace && y instanceof AssetLovelace) {
                  return Data_Ordering.EQ.value;
              };
              if (x instanceof AssetLovelace) {
                  return Data_Ordering.LT.value;
              };
              if (y instanceof AssetLovelace) {
                  return Data_Ordering.GT.value;
              };
              if (x instanceof Asset && y instanceof Asset) {
                  return Data_Ord.compare(Ctl_Internal_Cardano_Types_Value.ordAssetClass)(x.value0)(y.value0);
              };
              throw new Error("Failed pattern match at Ctl.Internal.CoinSelection.UtxoIndex (line 116, column 1 - line 116, column 26): " + [ x.constructor.name, y.constructor.name ]);
          };
      },
      Eq0: function () {
          return eqAsset;
      }
  };
  var txOutputAssetClasses = (function () {
      var $144 = Data_Set.fromFoldable(Data_Foldable.foldableArray)(Ctl_Internal_Cardano_Types_Value.ordAssetClass);
      var $145 = Data_Newtype.unwrap();
      return function ($146) {
          return $144(Ctl_Internal_Cardano_Types_Value.valueAssetClasses((function (v) {
              return v.amount;
          })($145($146))));
      };
  })();
  var selectRandomMapMember = function (dictMonadEffect) {
      return function (m) {
          if (Data_Map_Internal.isEmpty(m)) {
              return Control_Applicative.pure((dictMonadEffect.Monad0()).Applicative0())(Data_Maybe.Nothing.value);
          };
          if (Data_Boolean.otherwise) {
              return Effect_Class.liftEffect(dictMonadEffect)(function __do() {
                  var idx = Effect_Random.randomInt(0)(Data_Map_Internal.size(m) - 1 | 0)();
                  return Data_Array.index(Data_Map_Internal.toUnfoldable(Data_Unfoldable.unfoldableArray)(m))(idx);
              });
          };
          throw new Error("Failed pattern match at Ctl.Internal.CoinSelection.UtxoIndex (line 322, column 1 - line 326, column 24): " + [ m.constructor.name ]);
      };
  };
  var emptyUtxoIndex = {
      indexAnyWith: Data_Map_Internal.empty,
      indexSingletons: Data_Map_Internal.empty,
      indexPairs: Data_Map_Internal.empty,
      utxos: Data_Map_Internal.empty
  };
  var categorizeUtxoEntry = function (txOutput) {
      var bundleAssets = txOutputAssetClasses(txOutput);
      var v = Data_Set.toUnfoldable(Data_Unfoldable.unfoldableArray)(bundleAssets);
      if (v.length === 0) {
          return BundleWithNoAssets.value;
      };
      if (v.length === 1) {
          return new BundleWithOneAsset(v[0]);
      };
      if (v.length === 2) {
          return new BundleWithTwoAssets(v[0], v[1]);
      };
      return new BundleWithMultipleAssets(bundleAssets);
  };
  var _UtxoIndex = function (dictProfunctor) {
      return Data_Lens_Iso.iso(function (v) {
          return v;
      })(UtxoIndex)(dictProfunctor);
  };
  var _indexAnyWith = function (dictStrong) {
      var $147 = _UtxoIndex(dictStrong.Profunctor0());
      var $148 = Data_Lens_Record.prop({
          reflectSymbol: function () {
              return "indexAnyWith";
          }
      })()()(Type_Proxy["Proxy"].value)(dictStrong);
      return function ($149) {
          return $147($148($149));
      };
  };
  var _indexPairs = function (dictStrong) {
      var $150 = _UtxoIndex(dictStrong.Profunctor0());
      var $151 = Data_Lens_Record.prop({
          reflectSymbol: function () {
              return "indexPairs";
          }
      })()()(Type_Proxy["Proxy"].value)(dictStrong);
      return function ($152) {
          return $150($151($152));
      };
  };
  var _indexSingletons = function (dictStrong) {
      var $153 = _UtxoIndex(dictStrong.Profunctor0());
      var $154 = Data_Lens_Record.prop({
          reflectSymbol: function () {
              return "indexSingletons";
          }
      })()()(Type_Proxy["Proxy"].value)(dictStrong);
      return function ($155) {
          return $153($154($155));
      };
  };
  var updateUtxoIndex = function (out) {
      return function (manageEntry) {
          var v = categorizeUtxoEntry(out);
          if (v instanceof BundleWithNoAssets) {
              return Data_Lens_Setter.over(_indexSingletons(Data_Profunctor_Strong.strongFn))(manageEntry(AssetLovelace.value));
          };
          if (v instanceof BundleWithOneAsset) {
              var $156 = Data_Lens_Setter.over(_indexPairs(Data_Profunctor_Strong.strongFn))(manageEntry(AssetLovelace.value));
              var $157 = Data_Lens_Setter.over(_indexSingletons(Data_Profunctor_Strong.strongFn))(manageEntry(new Asset(v.value0)));
              return function ($158) {
                  return $156($157($158));
              };
          };
          if (v instanceof BundleWithTwoAssets) {
              var $159 = Data_Lens_Setter.over(_indexAnyWith(Data_Profunctor_Strong.strongFn))(manageEntry(AssetLovelace.value));
              var $160 = Data_Lens_Setter.over(_indexPairs(Data_Profunctor_Strong.strongFn))(manageEntry(new Asset(v.value0)));
              var $161 = Data_Lens_Setter.over(_indexPairs(Data_Profunctor_Strong.strongFn))(manageEntry(new Asset(v.value1)));
              return function ($162) {
                  return $159($160($161($162)));
              };
          };
          if (v instanceof BundleWithMultipleAssets) {
              var $163 = Data_Lens_Setter.over(_indexAnyWith(Data_Profunctor_Strong.strongFn))(Data_Function.flip(Data_Foldable.foldl(Data_Set.foldableSet)(Data_Function.flip(function ($166) {
                  return manageEntry(Asset.create($166));
              })))(v.value0));
              var $164 = Data_Lens_Setter.over(_indexAnyWith(Data_Profunctor_Strong.strongFn))(manageEntry(AssetLovelace.value));
              return function ($165) {
                  return $163($164($165));
              };
          };
          throw new Error("Failed pattern match at Ctl.Internal.CoinSelection.UtxoIndex (line 204, column 3 - line 216, column 57): " + [ v.constructor.name ]);
      };
  };
  var _utxos = function (dictStrong) {
      var $167 = _UtxoIndex(dictStrong.Profunctor0());
      var $168 = Data_Lens_Record.prop({
          reflectSymbol: function () {
              return "utxos";
          }
      })()()(Type_Proxy["Proxy"].value)(dictStrong);
      return function ($169) {
          return $167($168($169));
      };
  };
  var utxoIndexDeleteEntry = function (v) {
      var deleteEntry = Data_Map_Internal.update(ordAsset)((function () {
          var $170 = Data_Map_Internal["delete"](Ctl_Internal_Types_Transaction.ordTransactionInput)(v.value0);
          return function ($171) {
              return Data_Maybe.Just.create($170($171));
          };
      })());
      var $172 = Data_Lens_Setter.over(_utxos(Data_Profunctor_Strong.strongFn))(Data_Map_Internal["delete"](Ctl_Internal_Types_Transaction.ordTransactionInput)(v.value0));
      var $173 = updateUtxoIndex(v.value1)(deleteEntry);
      return function ($174) {
          return $172($173($174));
      };
  };
  var selectRandomWithFilter = function (dictMonadEffect) {
      return function (utxoIndex) {
          return function (selectionFilter) {
              var selectionUtxoMap = (function () {
                  var lookupWith = function (asset) {
                      return function (getter) {
                          return Data_Maybe.fromMaybe(Data_Map_Internal.empty)(Data_Map_Internal.lookup(ordAsset)(asset)(Data_Lens_Getter.viewOn(utxoIndex)(getter(Data_Lens_Internal_Forget.strongForget))));
                      };
                  };
                  if (selectionFilter instanceof SelectSingleton) {
                      return lookupWith(selectionFilter.value0)(function (dictStrong) {
                          return _indexSingletons(dictStrong);
                      });
                  };
                  if (selectionFilter instanceof SelectPairWith) {
                      return lookupWith(selectionFilter.value0)(function (dictStrong) {
                          return _indexPairs(dictStrong);
                      });
                  };
                  if (selectionFilter instanceof SelectAnyWith) {
                      return lookupWith(selectionFilter.value0)(function (dictStrong) {
                          return _indexAnyWith(dictStrong);
                      });
                  };
                  throw new Error("Failed pattern match at Ctl.Internal.CoinSelection.UtxoIndex (line 281, column 5 - line 287, column 41): " + [ selectionFilter.constructor.name ]);
              })();
              return Data_Functor.mapFlipped((((dictMonadEffect.Monad0()).Bind1()).Apply0()).Functor0())(selectRandomMapMember(dictMonadEffect)(selectionUtxoMap))(Data_Functor.map(Data_Maybe.functorMaybe)(function (utxo) {
                  return new Data_Tuple.Tuple(utxo, utxoIndexDeleteEntry(utxo)(utxoIndex));
              }));
          };
      };
  };
  var utxoIndexInsertEntry = function (v) {
      var insertEntry = Data_Map_Internal.alter(ordAsset)((function () {
          var $175 = Data_Maybe.maybe(Data_Map_Internal.singleton(v.value0)(v.value1))(Data_Map_Internal.insert(Ctl_Internal_Types_Transaction.ordTransactionInput)(v.value0)(v.value1));
          return function ($176) {
              return Data_Maybe.Just.create($175($176));
          };
      })());
      var $177 = Data_Lens_Setter.over(_utxos(Data_Profunctor_Strong.strongFn))(Data_Map_Internal.insert(Ctl_Internal_Types_Transaction.ordTransactionInput)(v.value0)(v.value1));
      var $178 = updateUtxoIndex(v.value1)(insertEntry);
      return function ($179) {
          return $177($178($179));
      };
  };
  var buildUtxoIndex = (function () {
      var $180 = Data_Array.foldl(Data_Function.flip(utxoIndexInsertEntry))(emptyUtxoIndex);
      var $181 = Data_Map_Internal.toUnfoldable(Data_Unfoldable.unfoldableArray);
      return function ($182) {
          return $180($181($182));
      };
  })();
  var utxoIndexUniverse = Data_Lens_Getter.view(_utxos(Data_Lens_Internal_Forget.strongForget));
  exports["Asset"] = Asset;
  exports["AssetLovelace"] = AssetLovelace;
  exports["SelectAnyWith"] = SelectAnyWith;
  exports["SelectPairWith"] = SelectPairWith;
  exports["SelectSingleton"] = SelectSingleton;
  exports["buildUtxoIndex"] = buildUtxoIndex;
  exports["emptyUtxoIndex"] = emptyUtxoIndex;
  exports["selectRandomWithFilter"] = selectRandomWithFilter;
  exports["utxoIndexDeleteEntry"] = utxoIndexDeleteEntry;
  exports["utxoIndexUniverse"] = utxoIndexUniverse;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Data.Map"] = $PS["Data.Map"] || {};
  var exports = $PS["Data.Map"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Map_Internal = $PS["Data.Map.Internal"];
  var Data_Set = $PS["Data.Set"];
  var keys = (function () {
      var $20 = Data_Functor["void"](Data_Map_Internal.functorMap);
      return function ($21) {
          return Data_Set.fromMap($20($21));
      };
  })();
  exports["keys"] = keys;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Ctl.Internal.BalanceTx.CoinSelection"] = $PS["Ctl.Internal.BalanceTx.CoinSelection"] || {};
  var exports = $PS["Ctl.Internal.BalanceTx.CoinSelection"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_Error_Class = $PS["Control.Monad.Error.Class"];
  var Ctl_Internal_BalanceTx_Error = $PS["Ctl.Internal.BalanceTx.Error"];
  var Ctl_Internal_Cardano_Types_Value = $PS["Ctl.Internal.Cardano.Types.Value"];
  var Ctl_Internal_CoinSelection_UtxoIndex = $PS["Ctl.Internal.CoinSelection.UtxoIndex"];
  var Ctl_Internal_Plutus_Conversion_Value = $PS["Ctl.Internal.Plutus.Conversion.Value"];
  var Ctl_Internal_Types_ByteArray = $PS["Ctl.Internal.Types.ByteArray"];
  var Ctl_Internal_Types_TokenName = $PS["Ctl.Internal.Types.TokenName"];
  var Ctl_Internal_Types_Transaction = $PS["Ctl.Internal.Types.Transaction"];
  var Data_Array = $PS["Data.Array"];
  var Data_Array_NonEmpty = $PS["Data.Array.NonEmpty"];
  var Data_Array_NonEmpty_Internal = $PS["Data.Array.NonEmpty.Internal"];
  var Data_BigInt = $PS["Data.BigInt"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Lens_Getter = $PS["Data.Lens.Getter"];
  var Data_Lens_Internal_Forget = $PS["Data.Lens.Internal.Forget"];
  var Data_Lens_Iso_Newtype = $PS["Data.Lens.Iso.Newtype"];
  var Data_Lens_Record = $PS["Data.Lens.Record"];
  var Data_Lens_Setter = $PS["Data.Lens.Setter"];
  var Data_Map = $PS["Data.Map"];
  var Data_Map_Internal = $PS["Data.Map.Internal"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Profunctor_Strong = $PS["Data.Profunctor.Strong"];
  var Data_Ring = $PS["Data.Ring"];
  var Data_Semiring = $PS["Data.Semiring"];
  var Data_Set = $PS["Data.Set"];
  var Data_Show = $PS["Data.Show"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Type_Proxy = $PS["Type.Proxy"];                
  var SelectionStrategyOptimal = (function () {
      function SelectionStrategyOptimal() {

      };
      SelectionStrategyOptimal.value = new SelectionStrategyOptimal();
      return SelectionStrategyOptimal;
  })();
  var SelectionStrategyMinimal = (function () {
      function SelectionStrategyMinimal() {

      };
      SelectionStrategyMinimal.value = new SelectionStrategyMinimal();
      return SelectionStrategyMinimal;
  })();
  var SelectionPriorityCover = (function () {
      function SelectionPriorityCover() {

      };
      SelectionPriorityCover.value = new SelectionPriorityCover();
      return SelectionPriorityCover;
  })();
  var SelectionPriorityImprove = (function () {
      function SelectionPriorityImprove() {

      };
      SelectionPriorityImprove.value = new SelectionPriorityImprove();
      return SelectionPriorityImprove;
  })();
  var showAssetClassWithQuantity = function (v) {
      return function (quantity) {
          var displayTokenName = "tn: " + (Ctl_Internal_Types_ByteArray.byteArrayToHex(Ctl_Internal_Types_TokenName.getTokenName(v.value1)) + ", ");
          var displayQuantity = "quantity: " + (Data_BigInt.toString(quantity) + "))");
          var displayCurrencySymbol = "cs: " + (Ctl_Internal_Types_ByteArray.byteArrayToHex(Ctl_Internal_Cardano_Types_Value.getCurrencySymbol(v.value0)) + ", ");
          return "(Asset (" + (displayCurrencySymbol + (displayTokenName + displayQuantity));
      };
  };
  var selectRandomWithPriority = function (dictMonadEffect) {
      return function (utxoIndex) {
          return function (filters) {
              return (function (v) {
                  var v1 = Data_Array_NonEmpty.fromArray(v.tail);
                  if (v1 instanceof Data_Maybe.Nothing) {
                      return Ctl_Internal_CoinSelection_UtxoIndex.selectRandomWithFilter(dictMonadEffect)(utxoIndex)(v.head);
                  };
                  if (v1 instanceof Data_Maybe.Just) {
                      return Control_Bind.bindFlipped((dictMonadEffect.Monad0()).Bind1())(Data_Maybe["maybe'"](function (v2) {
                          return selectRandomWithPriority(dictMonadEffect)(utxoIndex)(v1.value0);
                      })((function () {
                          var $75 = Control_Applicative.pure((dictMonadEffect.Monad0()).Applicative0());
                          return function ($76) {
                              return $75(Data_Maybe.Just.create($76));
                          };
                      })()))(Ctl_Internal_CoinSelection_UtxoIndex.selectRandomWithFilter(dictMonadEffect)(utxoIndex)(v.head));
                  };
                  throw new Error("Failed pattern match at Ctl.Internal.BalanceTx.CoinSelection (line 454, column 5 - line 459, column 54): " + [ v1.constructor.name ]);
              })(Data_Array_NonEmpty.uncons(filters));
          };
      };
  };
  var runSelectionStep = function (dictMonadThrow) {
      return function (lens) {
          return function (state) {
              if (Data_Ord.lessThan(Data_BigInt.ordBigInt)(lens.currentQuantity(state))(lens.requiredQuantity)) {
                  var balanceInsufficientError = new Ctl_Internal_BalanceTx_Error.InsufficientUtxoBalanceToCoverAsset(Ctl_Internal_BalanceTx_Error.Impossible.value, lens.assetDisplayString);
                  return Control_Bind.bind((dictMonadThrow.Monad0()).Bind1())(lens.selectQuantityCover(state))(Data_Maybe.maybe(Control_Monad_Error_Class.throwError(dictMonadThrow)(balanceInsufficientError))((function () {
                      var $77 = Control_Applicative.pure((dictMonadThrow.Monad0()).Applicative0());
                      return function ($78) {
                          return $77(Data_Maybe.Just.create($78));
                      };
                  })()));
              };
              if (Data_Boolean.otherwise) {
                  var targetMultiplier = (function () {
                      if (lens.selectionStrategy instanceof SelectionStrategyMinimal) {
                          return 1;
                      };
                      if (lens.selectionStrategy instanceof SelectionStrategyOptimal) {
                          return 2;
                      };
                      throw new Error("Failed pattern match at Ctl.Internal.BalanceTx.CoinSelection (line 381, column 9 - line 383, column 40): " + [ lens.selectionStrategy.constructor.name ]);
                  })();
                  var targetQuantity = Data_Semiring.mul(Data_BigInt.semiringBigInt)(lens.requiredQuantity)(Data_BigInt.fromInt(targetMultiplier));
                  var distanceFromTarget = (function () {
                      var $79 = Data_Ring.sub(Data_BigInt.ringBigInt)(targetQuantity);
                      return function ($80) {
                          return Data_BigInt.abs($79(lens.currentQuantity($80)));
                      };
                  })();
                  var requireImprovement = function (state$prime) {
                      if (Data_Ord.lessThan(Data_BigInt.ordBigInt)(distanceFromTarget(state$prime))(distanceFromTarget(state))) {
                          return new Data_Maybe.Just(state$prime);
                      };
                      if (Data_Boolean.otherwise) {
                          return Data_Maybe.Nothing.value;
                      };
                      throw new Error("Failed pattern match at Ctl.Internal.BalanceTx.CoinSelection (line 370, column 7 - line 370, column 67): " + [ state$prime.constructor.name ]);
                  };
                  return Data_Functor.map((((dictMonadThrow.Monad0()).Bind1()).Apply0()).Functor0())(function (v) {
                      return Control_Bind.bindFlipped(Data_Maybe.bindMaybe)(requireImprovement)(v);
                  })(lens.selectQuantityImprove(state));
              };
              throw new Error("Failed pattern match at Ctl.Internal.BalanceTx.CoinSelection (line 348, column 1 - line 353, column 30): " + [ lens.constructor.name, state.constructor.name ]);
          };
      };
  };
  var runRoundRobinM = function (dictMonad) {
      return function (state) {
          return function (processors) {
              var go = function (s) {
                  return function (v) {
                      return function (v1) {
                          if (v.length === 0 && v1.length === 0) {
                              return Control_Applicative.pure(dictMonad.Applicative0())(s);
                          };
                          var v2 = Data_Array.uncons(v);
                          if (v2 instanceof Data_Maybe.Nothing) {
                              return go(s)(v1)([  ]);
                          };
                          if (v2 instanceof Data_Maybe.Just) {
                              return Control_Bind.bind(dictMonad.Bind1())(v2.value0.head(s))(function (v3) {
                                  if (v3 instanceof Data_Maybe.Nothing) {
                                      return go(s)(v2.value0.tail)(v1);
                                  };
                                  if (v3 instanceof Data_Maybe.Just) {
                                      return go(v3.value0)(v2.value0.tail)(Data_Array.snoc(v1)(v2.value0.head));
                                  };
                                  throw new Error("Failed pattern match at Ctl.Internal.BalanceTx.CoinSelection (line 422, column 17 - line 424, column 49): " + [ v3.constructor.name ]);
                              });
                          };
                          throw new Error("Failed pattern match at Ctl.Internal.BalanceTx.CoinSelection (line 419, column 5 - line 424, column 49): " + [ v2.constructor.name ]);
                      };
                  };
              };
              return go(state)(processors)([  ]);
          };
      };
  };
  var mkSelectionState = (function () {
      var $81 = Data_Newtype.wrap();
      return function ($82) {
          return $81((function (v) {
              return {
                  leftoverUtxos: v,
                  selectedUtxos: Data_Map_Internal.empty
              };
          })($82));
      };
  })();
  var filtersForAssetWithPriority = function (asset) {
      return function (priority) {
          if (priority instanceof SelectionPriorityCover) {
              return Data_Functor.map(Data_Array_NonEmpty_Internal.functorNonEmptyArray)(Data_Function.applyFlipped(asset))(Data_Array_NonEmpty["cons'"](Ctl_Internal_CoinSelection_UtxoIndex.SelectSingleton.create)([ Ctl_Internal_CoinSelection_UtxoIndex.SelectPairWith.create, Ctl_Internal_CoinSelection_UtxoIndex.SelectAnyWith.create ]));
          };
          if (priority instanceof SelectionPriorityImprove) {
              return Data_Array_NonEmpty.singleton(new Ctl_Internal_CoinSelection_UtxoIndex.SelectSingleton(asset));
          };
          throw new Error("Failed pattern match at Ctl.Internal.BalanceTx.CoinSelection (line 437, column 3 - line 442, column 48): " + [ priority.constructor.name ]);
      };
  };
  var empty = mkSelectionState(Ctl_Internal_CoinSelection_UtxoIndex.emptyUtxoIndex);
  var balance = Data_Foldable.foldMap(Data_Map_Internal.foldableMap)(Ctl_Internal_Cardano_Types_Value.monoidValue)((function () {
      var $83 = Data_Newtype.unwrap();
      return function ($84) {
          return (function (v) {
              return v.amount;
          })($83($84));
      };
  })());
  var selectedBalance = (function () {
      var $85 = Data_Newtype.unwrap();
      return function ($86) {
          return balance((function (v) {
              return v.selectedUtxos;
          })($85($86)));
      };
  })();
  var selectedAssetQuantity = function (assetClass) {
      var $87 = Ctl_Internal_Cardano_Types_Value.getAssetQuantity(assetClass);
      return function ($88) {
          return $87(selectedBalance($88));
      };
  };
  var selectedCoinQuantity = function ($89) {
      return Ctl_Internal_Cardano_Types_Value["valueToCoin'"](selectedBalance($89));
  };
  var _selectedUtxos = function (dictStrong) {
      var $90 = Data_Lens_Iso_Newtype["_Newtype"]()()(dictStrong.Profunctor0());
      var $91 = Data_Lens_Record.prop({
          reflectSymbol: function () {
              return "selectedUtxos";
          }
      })()()(Type_Proxy["Proxy"].value)(dictStrong);
      return function ($92) {
          return $90($91($92));
      };
  };
  var selectedInputs = (function () {
      var $93 = Data_Set.fromFoldable(Data_Set.foldableSet)(Ctl_Internal_Types_Transaction.ordTransactionInput);
      var $94 = Data_Lens_Getter.view(_selectedUtxos(Data_Lens_Internal_Forget.strongForget));
      return function ($95) {
          return $93(Data_Map.keys($94($95)));
      };
  })();
  var _leftoverUtxos = function (dictStrong) {
      var $96 = Data_Lens_Iso_Newtype["_Newtype"]()()(dictStrong.Profunctor0());
      var $97 = Data_Lens_Record.prop({
          reflectSymbol: function () {
              return "leftoverUtxos";
          }
      })()()(Type_Proxy["Proxy"].value)(dictStrong);
      return function ($98) {
          return $96($97($98));
      };
  };
  var selectUtxo = function (v) {
      var $99 = Data_Lens_Setter.over(_selectedUtxos(Data_Profunctor_Strong.strongFn))(Data_Map_Internal.insert(Ctl_Internal_Types_Transaction.ordTransactionInput)(v.value0)(v.value1));
      var $100 = Data_Lens_Setter.over(_leftoverUtxos(Data_Profunctor_Strong.strongFn))(Ctl_Internal_CoinSelection_UtxoIndex.utxoIndexDeleteEntry(v));
      return function ($101) {
          return $99($100($101));
      };
  };
  var selectQuantityOf = function (dictMonadEffect) {
      return function (asset) {
          return function (priority) {
              return function (state) {
                  var updateState = (function () {
                      var $102 = Data_Function.flip(selectUtxo)(state);
                      return function ($103) {
                          return $102(Data_Tuple.fst($103));
                      };
                  })();
                  var filters = filtersForAssetWithPriority(asset)(priority);
                  return Data_Functor.map((((dictMonadEffect.Monad0()).Bind1()).Apply0()).Functor0())(Data_Functor.map(Data_Maybe.functorMaybe)(updateState))(selectRandomWithPriority(dictMonadEffect)(Data_Lens_Getter.viewOn(state)(_leftoverUtxos(Data_Lens_Internal_Forget.strongForget)))(filters));
              };
          };
      };
  };
  var assetSelectionLens = function (dictMonadEffect) {
      return function (selectionStrategy) {
          return function (v) {
              return {
                  assetDisplayString: showAssetClassWithQuantity(v.value0)(v.value1),
                  currentQuantity: selectedAssetQuantity(v.value0),
                  requiredQuantity: v.value1,
                  selectQuantityCover: selectQuantityOf(dictMonadEffect)(new Ctl_Internal_CoinSelection_UtxoIndex.Asset(v.value0))(SelectionPriorityCover.value),
                  selectQuantityImprove: selectQuantityOf(dictMonadEffect)(new Ctl_Internal_CoinSelection_UtxoIndex.Asset(v.value0))(SelectionPriorityImprove.value),
                  selectionStrategy: selectionStrategy
              };
          };
      };
  };
  var coinSelectionLens = function (dictMonadEffect) {
      return function (selectionStrategy) {
          return function (coin) {
              return {
                  assetDisplayString: Data_Show.show(Ctl_Internal_Cardano_Types_Value.showCoin)(coin),
                  currentQuantity: selectedCoinQuantity,
                  requiredQuantity: Data_Newtype.unwrap()(coin),
                  selectQuantityCover: selectQuantityOf(dictMonadEffect)(Ctl_Internal_CoinSelection_UtxoIndex.AssetLovelace.value)(SelectionPriorityCover.value),
                  selectQuantityImprove: selectQuantityOf(dictMonadEffect)(Ctl_Internal_CoinSelection_UtxoIndex.AssetLovelace.value)(SelectionPriorityImprove.value),
                  selectionStrategy: selectionStrategy
              };
          };
      };
  };
  var performMultiAssetSelection = function (dictMonadEffect) {
      return function (dictMonadThrow) {
          return function (strategy) {
              return function (utxoIndex) {
                  return function (requiredValue) {
                      var selectors = (function () {
                          var coinSelector = runSelectionStep(dictMonadThrow)(coinSelectionLens(dictMonadEffect)(strategy)(Ctl_Internal_Cardano_Types_Value.valueToCoin(requiredValue)));
                          var assets = Ctl_Internal_Cardano_Types_Value.valueAssets(requiredValue);
                          var assetSelector = (function () {
                              var $104 = runSelectionStep(dictMonadThrow);
                              var $105 = assetSelectionLens(dictMonadEffect)(strategy);
                              return function ($106) {
                                  return $104($105($106));
                              };
                          })();
                          return Data_Array.snoc(Data_Functor.map(Data_Functor.functorArray)(assetSelector)(assets))(coinSelector);
                      })();
                      var availableValue = balance(Ctl_Internal_CoinSelection_UtxoIndex.utxoIndexUniverse(utxoIndex));
                      var balanceInsufficientError = new Ctl_Internal_BalanceTx_Error.BalanceInsufficientError(Ctl_Internal_Plutus_Conversion_Value.toPlutusValue(requiredValue), Ctl_Internal_Plutus_Conversion_Value.toPlutusValue(availableValue), Ctl_Internal_Plutus_Conversion_Value.toPlutusValue(Data_Monoid.mempty(Ctl_Internal_Cardano_Types_Value.monoidValue)));
                      var v = Ctl_Internal_Cardano_Types_Value.leq(requiredValue)(availableValue);
                      if (v) {
                          return runRoundRobinM(dictMonadEffect.Monad0())(mkSelectionState(utxoIndex))(selectors);
                      };
                      if (!v) {
                          return Control_Monad_Error_Class.throwError(dictMonadThrow)(balanceInsufficientError);
                      };
                      throw new Error("Failed pattern match at Ctl.Internal.BalanceTx.CoinSelection (line 134, column 3 - line 138, column 42): " + [ v.constructor.name ]);
                  };
              };
          };
      };
  };
  exports["SelectionStrategyOptimal"] = SelectionStrategyOptimal;
  exports["_leftoverUtxos"] = _leftoverUtxos;
  exports["performMultiAssetSelection"] = performMultiAssetSelection;
  exports["selectedInputs"] = selectedInputs;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Ctl.Internal.BalanceTx.Constraints"] = $PS["Ctl.Internal.BalanceTx.Constraints"] || {};
  var exports = $PS["Ctl.Internal.BalanceTx.Constraints"];
  var Control_Category = $PS["Control.Category"];
  var Control_Semigroupoid = $PS["Control.Semigroupoid"];
  var Ctl_Internal_BalanceTx_CoinSelection = $PS["Ctl.Internal.BalanceTx.CoinSelection"];
  var Ctl_Internal_Types_Transaction = $PS["Ctl.Internal.Types.Transaction"];
  var Data_Function = $PS["Data.Function"];
  var Data_Lens_Iso_Newtype = $PS["Data.Lens.Iso.Newtype"];
  var Data_Lens_Record = $PS["Data.Lens.Record"];
  var Data_Map_Internal = $PS["Data.Map.Internal"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Set = $PS["Data.Set"];
  var Type_Proxy = $PS["Type.Proxy"];
  var BalanceTxConstraintsBuilder = function (x) {
      return x;
  };
  var semigroupBalanceTxConstra = {
      append: Data_Newtype.over2()()(BalanceTxConstraintsBuilder)(Control_Semigroupoid.composeFlipped(Control_Semigroupoid.semigroupoidFn))
  };
  var monoidBalanceTxConstraint = {
      mempty: Data_Newtype.wrap()(Control_Category.identity(Control_Category.categoryFn)),
      Semigroup0: function () {
          return semigroupBalanceTxConstra;
      }
  };
  var buildBalanceTxConstraints = (function () {
      var defaultConstraints = Data_Newtype.wrap()({
          additionalUtxos: Data_Map_Internal.empty,
          maxChangeOutputTokenQuantity: Data_Maybe.Nothing.value,
          nonSpendableInputs: Data_Monoid.mempty(Data_Set.monoidSet(Ctl_Internal_Types_Transaction.ordTransactionInput)),
          srcAddresses: Data_Maybe.Nothing.value,
          changeAddress: Data_Maybe.Nothing.value,
          selectionStrategy: Ctl_Internal_BalanceTx_CoinSelection.SelectionStrategyOptimal.value
      });
      var $14 = Data_Function.applyFlipped(defaultConstraints);
      var $15 = Data_Newtype.unwrap();
      return function ($16) {
          return $14($15($16));
      };
  })();
  var _srcAddresses = function (dictStrong) {
      var $17 = Data_Lens_Iso_Newtype["_Newtype"]()()(dictStrong.Profunctor0());
      var $18 = Data_Lens_Record.prop({
          reflectSymbol: function () {
              return "srcAddresses";
          }
      })()()(Type_Proxy["Proxy"].value)(dictStrong);
      return function ($19) {
          return $17($18($19));
      };
  };
  var _selectionStrategy = function (dictStrong) {
      var $24 = Data_Lens_Iso_Newtype["_Newtype"]()()(dictStrong.Profunctor0());
      var $25 = Data_Lens_Record.prop({
          reflectSymbol: function () {
              return "selectionStrategy";
          }
      })()()(Type_Proxy["Proxy"].value)(dictStrong);
      return function ($26) {
          return $24($25($26));
      };
  };   
  var _nonSpendableInputs = function (dictStrong) {
      var $30 = Data_Lens_Iso_Newtype["_Newtype"]()()(dictStrong.Profunctor0());
      var $31 = Data_Lens_Record.prop({
          reflectSymbol: function () {
              return "nonSpendableInputs";
          }
      })()()(Type_Proxy["Proxy"].value)(dictStrong);
      return function ($32) {
          return $30($31($32));
      };
  };
  var _maxChangeOutputTokenQuantity = function (dictStrong) {
      var $37 = Data_Lens_Iso_Newtype["_Newtype"]()()(dictStrong.Profunctor0());
      var $38 = Data_Lens_Record.prop({
          reflectSymbol: function () {
              return "maxChangeOutputTokenQuantity";
          }
      })()()(Type_Proxy["Proxy"].value)(dictStrong);
      return function ($39) {
          return $37($38($39));
      };
  };   
  var _changeAddress = function (dictStrong) {
      var $44 = Data_Lens_Iso_Newtype["_Newtype"]()()(dictStrong.Profunctor0());
      var $45 = Data_Lens_Record.prop({
          reflectSymbol: function () {
              return "changeAddress";
          }
      })()()(Type_Proxy["Proxy"].value)(dictStrong);
      return function ($46) {
          return $44($45($46));
      };
  };   
  var _additionalUtxos = function (dictStrong) {
      var $50 = Data_Lens_Iso_Newtype["_Newtype"]()()(dictStrong.Profunctor0());
      var $51 = Data_Lens_Record.prop({
          reflectSymbol: function () {
              return "additionalUtxos";
          }
      })()()(Type_Proxy["Proxy"].value)(dictStrong);
      return function ($52) {
          return $50($51($52));
      };
  };
  exports["buildBalanceTxConstraints"] = buildBalanceTxConstraints;
  exports["_additionalUtxos"] = _additionalUtxos;
  exports["_changeAddress"] = _changeAddress;
  exports["_maxChangeOutputTokenQuantity"] = _maxChangeOutputTokenQuantity;
  exports["_nonSpendableInputs"] = _nonSpendableInputs;
  exports["_selectionStrategy"] = _selectionStrategy;
  exports["_srcAddresses"] = _srcAddresses;
  exports["monoidBalanceTxConstraint"] = monoidBalanceTxConstraint;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Ctl.Internal.BalanceTx.Types"] = $PS["Ctl.Internal.BalanceTx.Types"] || {};
  var exports = $PS["Ctl.Internal.BalanceTx.Types"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_Except_Trans = $PS["Control.Monad.Except.Trans"];
  var Control_Monad_Reader_Class = $PS["Control.Monad.Reader.Class"];
  var Control_Monad_Reader_Trans = $PS["Control.Monad.Reader.Trans"];
  var Control_Monad_Trans_Class = $PS["Control.Monad.Trans.Class"];
  var Ctl_Internal_BalanceTx_Constraints = $PS["Ctl.Internal.BalanceTx.Constraints"];
  var Ctl_Internal_Cardano_Types_Transaction = $PS["Ctl.Internal.Cardano.Types.Transaction"];
  var Ctl_Internal_Contract_Monad = $PS["Ctl.Internal.Contract.Monad"];
  var Ctl_Internal_Types_Scripts = $PS["Ctl.Internal.Types.Scripts"];
  var Ctl_Internal_Wallet = $PS["Ctl.Internal.Wallet"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Lens_Getter = $PS["Data.Lens.Getter"];
  var Data_Lens_Internal_Forget = $PS["Data.Lens.Internal.Forget"];
  var Data_Map_Internal = $PS["Data.Map.Internal"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Set = $PS["Data.Set"];
  var FinalizedTransaction = function (x) {
      return x;
  };                                                                                
  var withBalanceTxConstraints = function (constraintsBuilder) {
      var constraints = Ctl_Internal_BalanceTx_Constraints.buildBalanceTxConstraints(constraintsBuilder);
      return Data_Function.flip(Control_Monad_Reader_Trans.runReaderT)({
          constraints: constraints
      });
  };
  var liftEitherContract = (function () {
      var $24 = Control_Monad_Trans_Class.lift(Control_Monad_Reader_Trans.monadTransReaderT)(Ctl_Internal_Contract_Monad.monadContract);
      return function ($25) {
          return Control_Monad_Except_Trans.ExceptT($24($25));
      };
  })();
  var liftContract = (function () {
      var $26 = Control_Monad_Trans_Class.lift(Control_Monad_Except_Trans.monadTransExceptT)(Control_Monad_Reader_Trans.monadReaderT(Ctl_Internal_Contract_Monad.monadContract));
      var $27 = Control_Monad_Trans_Class.lift(Control_Monad_Reader_Trans.monadTransReaderT)(Ctl_Internal_Contract_Monad.monadContract);
      return function ($28) {
          return $26($27($28));
      };
  })();
  var asksContractEnv = (function () {
      var $29 = Control_Monad_Trans_Class.lift(Control_Monad_Except_Trans.monadTransExceptT)(Control_Monad_Reader_Trans.monadReaderT(Ctl_Internal_Contract_Monad.monadContract));
      var $30 = Control_Monad_Trans_Class.lift(Control_Monad_Reader_Trans.monadTransReaderT)(Ctl_Internal_Contract_Monad.monadContract);
      var $31 = Control_Monad_Reader_Class.asks(Ctl_Internal_Contract_Monad.monadAskContractEnvContra);
      return function ($32) {
          return $29($30($31($32)));
      };
  })();
  var asksConstraints = function (l) {
      return Control_Monad_Reader_Class.asks(Control_Monad_Except_Trans.monadAskExceptT(Control_Monad_Reader_Trans.monadAskReaderT(Ctl_Internal_Contract_Monad.monadContract)))((function () {
          var $33 = Data_Lens_Getter.view(l(Data_Lens_Internal_Forget.strongForget));
          return function ($34) {
              return $33((function (v) {
                  return v.constraints;
              })($34));
          };
      })());
  };
  var askNetworkId = asksContractEnv(function (v) {
      return v.networkId;
  });
  var askCostModelsForLanguages = function (languages) {
      return Data_Functor.mapFlipped(Control_Monad_Except_Trans.functorExceptT(Control_Monad_Reader_Trans.functorReaderT(Ctl_Internal_Contract_Monad.functorContract)))(asksContractEnv((function () {
          var $35 = Data_Newtype.unwrap();
          return function ($36) {
              return (function (v) {
                  return v.costModels;
              })($35((function (v) {
                  return v.pparams;
              })((function (v) {
                  return v.ledgerConstants;
              })($36))));
          };
      })()))(Data_Newtype.over()()(Ctl_Internal_Cardano_Types_Transaction.Costmdls)(Data_Map_Internal.filterKeys(Ctl_Internal_Types_Scripts.ordLanguage)(Data_Function.flip(Data_Set.member(Ctl_Internal_Types_Scripts.ordLanguage))(languages))));
  };
  var askCoinsPerUtxoUnit = asksContractEnv((function () {
      var $37 = Data_Newtype.unwrap();
      return function ($38) {
          return (function (v) {
              return v.coinsPerUtxoUnit;
          })($37((function (v) {
              return v.pparams;
          })((function (v) {
              return v.ledgerConstants;
          })($38))));
      };
  })());
  var askCip30Wallet = asksContractEnv(Control_Bind.composeKleisliFlipped(Data_Maybe.bindMaybe)(Ctl_Internal_Wallet.cip30Wallet)(function (v) {
      return v.wallet;
  }));
  exports["FinalizedTransaction"] = FinalizedTransaction;
  exports["askCip30Wallet"] = askCip30Wallet;
  exports["askCoinsPerUtxoUnit"] = askCoinsPerUtxoUnit;
  exports["askCostModelsForLanguages"] = askCostModelsForLanguages;
  exports["askNetworkId"] = askNetworkId;
  exports["asksConstraints"] = asksConstraints;
  exports["liftEitherContract"] = liftEitherContract;
  exports["liftContract"] = liftContract;
  exports["withBalanceTxConstraints"] = withBalanceTxConstraints;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Data.Ord.Max"] = $PS["Data.Ord.Max"] || {};
  var exports = $PS["Data.Ord.Max"];
  var Data_Ord = $PS["Data.Ord"];
  var semigroupMax = function (dictOrd) {
      return {
          append: function (v) {
              return function (v1) {
                  return Data_Ord.max(dictOrd)(v)(v1);
              };
          }
      };
  };
  exports["semigroupMax"] = semigroupMax;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Ctl.Internal.BalanceTx.Collateral"] = $PS["Ctl.Internal.BalanceTx.Collateral"] || {};
  var exports = $PS["Ctl.Internal.BalanceTx.Collateral"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_Except_Trans = $PS["Control.Monad.Except.Trans"];
  var Control_Monad_Reader_Trans = $PS["Control.Monad.Reader.Trans"];
  var Ctl_Internal_BalanceTx_Collateral_Select = $PS["Ctl.Internal.BalanceTx.Collateral.Select"];
  var Ctl_Internal_BalanceTx_Error = $PS["Ctl.Internal.BalanceTx.Error"];
  var Ctl_Internal_BalanceTx_Types = $PS["Ctl.Internal.BalanceTx.Types"];
  var Ctl_Internal_BalanceTx_UtxoMinAda = $PS["Ctl.Internal.BalanceTx.UtxoMinAda"];
  var Ctl_Internal_Cardano_Types_Transaction = $PS["Ctl.Internal.Cardano.Types.Transaction"];
  var Ctl_Internal_Cardano_Types_Value = $PS["Ctl.Internal.Cardano.Types.Value"];
  var Ctl_Internal_Contract_Monad = $PS["Ctl.Internal.Contract.Monad"];
  var Ctl_Internal_Types_BigNum = $PS["Ctl.Internal.Types.BigNum"];
  var Ctl_Internal_Types_OutputDatum = $PS["Ctl.Internal.Types.OutputDatum"];
  var Data_BigInt = $PS["Data.BigInt"];
  var Data_Either = $PS["Data.Either"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Lens_Setter = $PS["Data.Lens.Setter"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Ord_Max = $PS["Data.Ord.Max"];
  var Data_Profunctor_Strong = $PS["Data.Profunctor.Strong"];
  var Data_Ring = $PS["Data.Ring"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Semiring = $PS["Data.Semiring"];
  var Effect_Class = $PS["Effect.Class"];                
  var nonAdaAsset = (function () {
      var $10 = Data_Newtype.unwrap();
      var $11 = Data_Newtype.unwrap();
      return function ($12) {
          return Ctl_Internal_Cardano_Types_Value.getNonAdaAsset((function (v) {
              return v.amount;
          })($10((function (v) {
              return v.output;
          })($11($12)))));
      };
  })();
  var addTxCollateral = function (collateral) {
      return function (transaction) {
          return Data_Lens_Setter.setJust((function () {
              var $13 = Ctl_Internal_Cardano_Types_Transaction["_body"](Data_Profunctor_Strong.strongFn);
              var $14 = Ctl_Internal_Cardano_Types_Transaction["_collateral"](Data_Profunctor_Strong.strongFn);
              return function ($15) {
                  return $13($14($15));
              };
          })())(Data_Functor.map(Data_Functor.functorArray)((function () {
              var $16 = Data_Newtype.unwrap();
              return function ($17) {
                  return (function (v) {
                      return v.input;
                  })($16($17));
              };
          })())(collateral))(transaction);
      };
  };
  var adaValue = (function () {
      var $18 = Data_Newtype.unwrap();
      var $19 = Data_Newtype.unwrap();
      return function ($20) {
          return Ctl_Internal_Cardano_Types_Value["valueToCoin'"]((function (v) {
              return v.amount;
          })($18((function (v) {
              return v.output;
          })($19($20)))));
      };
  })();
  var adaValue$prime = function (init) {
      var $21 = Data_Semiring.add(Data_BigInt.semiringBigInt)(init);
      return function ($22) {
          return $21(adaValue($22));
      };
  };
  var addTxCollateralReturn = function (collateral) {
      return function (transaction) {
          return function (ownAddress) {
              var setTxCollateralReturn = function (collAdaValue) {
                  return function (collNonAdaAsset) {
                      var maxBigNumAdaValue = Data_Newtype.wrap()(Ctl_Internal_Types_BigNum.toBigInt(Ctl_Internal_Types_BigNum.maxValue));
                      var collReturnOutputRec = {
                          address: ownAddress,
                          amount: Ctl_Internal_Cardano_Types_Value.mkValue(maxBigNumAdaValue)(collNonAdaAsset),
                          datum: Ctl_Internal_Types_OutputDatum.NoOutputDatum.value,
                          scriptRef: Data_Maybe.Nothing.value
                      };
                      return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_Reader_Trans.monadReaderT(Ctl_Internal_Contract_Monad.monadContract)))(Ctl_Internal_BalanceTx_Types.askCoinsPerUtxoUnit)(function (coinsPerUtxoUnit) {
                          return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_Reader_Trans.monadReaderT(Ctl_Internal_Contract_Monad.monadContract)))(Data_Functor.mapFlipped(Control_Monad_Reader_Trans.functorReaderT(Ctl_Internal_Contract_Monad.functorContract))(Effect_Class.liftEffect(Control_Monad_Reader_Trans.monadEffectReader(Ctl_Internal_Contract_Monad.monadEffectContract))(Ctl_Internal_BalanceTx_UtxoMinAda.utxoMinAdaValue(coinsPerUtxoUnit)(Data_Newtype.wrap()(collReturnOutputRec))))(Data_Either.note(Ctl_Internal_BalanceTx_Error.CollateralReturnMinAdaValueCalcError.value)))(function (minAdaValue) {
                              var collReturnAda = Data_Newtype.unwrap()(Data_Semigroup.append(Data_Ord_Max.semigroupMax(Data_BigInt.ordBigInt))(Data_Ring.sub(Data_BigInt.ringBigInt)(collAdaValue)(Ctl_Internal_BalanceTx_Collateral_Select.minRequiredCollateral))(minAdaValue));
                              var collReturnOutput = Data_Newtype.wrap()({
                                  amount: Ctl_Internal_Cardano_Types_Value.mkValue(Data_Newtype.wrap()(collReturnAda))(collNonAdaAsset),
                                  address: collReturnOutputRec.address,
                                  datum: collReturnOutputRec.datum,
                                  scriptRef: collReturnOutputRec.scriptRef
                              });
                              var totalCollateral = Data_Ring.sub(Data_BigInt.ringBigInt)(collAdaValue)(collReturnAda);
                              return Control_Monad_Except_Trans.except(Control_Monad_Reader_Trans.applicativeReaderT(Ctl_Internal_Contract_Monad.applicativeContract))((function () {
                                  var v = Data_Ord.greaterThan(Data_BigInt.ordBigInt)(totalCollateral)(Data_Semiring.zero(Data_BigInt.semiringBigInt));
                                  if (v) {
                                      return new Data_Either.Right(Data_Lens_Setter.setJust((function () {
                                          var $23 = Ctl_Internal_Cardano_Types_Transaction["_body"](Data_Profunctor_Strong.strongFn);
                                          var $24 = Ctl_Internal_Cardano_Types_Transaction["_totalCollateral"](Data_Profunctor_Strong.strongFn);
                                          return function ($25) {
                                              return $23($24($25));
                                          };
                                      })())(Data_Newtype.wrap()(totalCollateral))(Data_Lens_Setter.setJust((function () {
                                          var $26 = Ctl_Internal_Cardano_Types_Transaction["_body"](Data_Profunctor_Strong.strongFn);
                                          var $27 = Ctl_Internal_Cardano_Types_Transaction["_collateralReturn"](Data_Profunctor_Strong.strongFn);
                                          return function ($28) {
                                              return $26($27($28));
                                          };
                                      })())(collReturnOutput)(transaction)));
                                  };
                                  if (!v) {
                                      return new Data_Either.Left(new Ctl_Internal_BalanceTx_Error.CollateralReturnError("Negative totalCollateral after covering min-utxo-ada requirement."));
                                  };
                                  throw new Error("Failed pattern match at Ctl.Internal.BalanceTx.Collateral (line 116, column 7 - line 124, column 80): " + [ v.constructor.name ]);
                              })());
                          });
                      });
                  };
              };
              var collNonAdaAsset = Data_Foldable.foldMap(Data_Foldable.foldableArray)(Ctl_Internal_Cardano_Types_Value.monoidNonAdaAsset)(nonAdaAsset)(collateral);
              var collAdaValue = Data_Foldable.foldl(Data_Foldable.foldableArray)(adaValue$prime)(Data_Semiring.zero(Data_BigInt.semiringBigInt))(collateral);
              var v = Data_Ord.lessThanOrEq(Data_BigInt.ordBigInt)(collAdaValue)(Ctl_Internal_BalanceTx_Collateral_Select.minRequiredCollateral) && Data_Eq.eq(Ctl_Internal_Cardano_Types_Value.eqNonAdaAsset)(collNonAdaAsset)(Data_Monoid.mempty(Ctl_Internal_Cardano_Types_Value.monoidNonAdaAsset));
              if (v) {
                  return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Control_Monad_Reader_Trans.monadReaderT(Ctl_Internal_Contract_Monad.monadContract)))(transaction);
              };
              if (!v) {
                  return setTxCollateralReturn(collAdaValue)(collNonAdaAsset);
              };
              throw new Error("Failed pattern match at Ctl.Internal.BalanceTx.Collateral (line 70, column 5 - line 74, column 59): " + [ v.constructor.name ]);
          };
      };
  };
  exports["addTxCollateral"] = addTxCollateral;
  exports["addTxCollateralReturn"] = addTxCollateralReturn;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Ctl.Internal.BalanceTx.Helpers"] = $PS["Ctl.Internal.BalanceTx.Helpers"] || {};
  var exports = $PS["Ctl.Internal.BalanceTx.Helpers"];
  var Ctl_Internal_Cardano_Types_Transaction = $PS["Ctl.Internal.Cardano.Types.Transaction"];
  var Ctl_Internal_Types_UnbalancedTransaction = $PS["Ctl.Internal.Types.UnbalancedTransaction"];
  var Data_Lens_Getter = $PS["Data.Lens.Getter"];
  var Data_Lens_Internal_Forget = $PS["Data.Lens.Internal.Forget"];
  var Data_Lens_Lens = $PS["Data.Lens.Lens"];
  var Data_Lens_Setter = $PS["Data.Lens.Setter"];
  var Data_Profunctor_Strong = $PS["Data.Profunctor.Strong"];
  var Data_Tuple = $PS["Data.Tuple"];                
  var _unbalancedTx = function (dictStrong) {
      return Data_Lens_Lens["lens'"](function (v) {
          return new Data_Tuple.Tuple(v.unbalancedTx, function (ubTx) {
              return {
                  unbalancedTx: ubTx,
                  datums: v.datums,
                  redeemersTxIns: v.redeemersTxIns
              };
          });
      })(dictStrong);
  };
  var _transaction$prime = function (dictStrong) {
      return Data_Lens_Lens["lens'"](function (unattachedTx) {
          return new Data_Tuple.Tuple(Data_Lens_Getter.viewOn(unattachedTx)((function () {
              var $12 = _unbalancedTx(Data_Lens_Internal_Forget.strongForget);
              var $13 = Ctl_Internal_Types_UnbalancedTransaction["_transaction"](Data_Lens_Internal_Forget.strongForget);
              return function ($14) {
                  return $12($13($14));
              };
          })()), function (tx) {
              return Data_Lens_Setter.over(_unbalancedTx(Data_Profunctor_Strong.strongFn))(Data_Lens_Setter.set(Ctl_Internal_Types_UnbalancedTransaction["_transaction"](Data_Profunctor_Strong.strongFn))(tx))(unattachedTx);
          });
      })(dictStrong);
  };
  var _redeemersTxIns = function (dictStrong) {
      return Data_Lens_Lens["lens'"](function (v) {
          return new Data_Tuple.Tuple(v.redeemersTxIns, function (rdmrs) {
              return {
                  unbalancedTx: v.unbalancedTx,
                  datums: v.datums,
                  redeemersTxIns: rdmrs
              };
          });
      })(dictStrong);
  };
  var _body$prime = function (dictStrong) {
      return Data_Lens_Lens["lens'"](function (unattachedTx) {
          return new Data_Tuple.Tuple(Data_Lens_Getter.viewOn(unattachedTx)((function () {
              var $15 = _transaction$prime(Data_Lens_Internal_Forget.strongForget);
              var $16 = Ctl_Internal_Cardano_Types_Transaction["_body"](Data_Lens_Internal_Forget.strongForget);
              return function ($17) {
                  return $15($16($17));
              };
          })()), function (txBody) {
              return Data_Lens_Setter.over(_transaction$prime(Data_Profunctor_Strong.strongFn))(Data_Lens_Setter.set(Ctl_Internal_Cardano_Types_Transaction["_body"](Data_Profunctor_Strong.strongFn))(txBody))(unattachedTx);
          });
      })(dictStrong);
  };
  exports["_body'"] = _body$prime;
  exports["_redeemersTxIns"] = _redeemersTxIns;
  exports["_transaction'"] = _transaction$prime;
  exports["_unbalancedTx"] = _unbalancedTx;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Ctl.Internal.Contract.Wallet"] = $PS["Ctl.Internal.Contract.Wallet"] || {};
  var exports = $PS["Ctl.Internal.Contract.Wallet"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_Reader_Class = $PS["Control.Monad.Reader.Class"];
  var Ctl_Internal_Cardano_Types_Value = $PS["Ctl.Internal.Cardano.Types.Value"];
  var Ctl_Internal_Contract = $PS["Ctl.Internal.Contract"];
  var Ctl_Internal_Contract_Monad = $PS["Ctl.Internal.Contract.Monad"];
  var Ctl_Internal_Contract_QueryHandle = $PS["Ctl.Internal.Contract.QueryHandle"];
  var Ctl_Internal_Helpers = $PS["Ctl.Internal.Helpers"];
  var Ctl_Internal_Types_Transaction = $PS["Ctl.Internal.Types.Transaction"];
  var Ctl_Internal_Wallet = $PS["Ctl.Internal.Wallet"];
  var Data_Array = $PS["Data.Array"];
  var Data_BigInt = $PS["Data.BigInt"];
  var Data_Either = $PS["Data.Either"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Map_Internal = $PS["Data.Map.Internal"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Traversable = $PS["Data.Traversable"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_UInt = $PS["Data.UInt"];
  var Effect_Aff = $PS["Effect.Aff"];
  var Effect_Aff_Class = $PS["Effect.Aff.Class"];
  var Effect_Class = $PS["Effect.Class"];
  var Effect_Exception = $PS["Effect.Exception"];                
  var getWallet = Control_Monad_Reader_Class.asks(Ctl_Internal_Contract_Monad.monadAskContractEnvContra)(function (v) {
      return v.wallet;
  });
  var getWalletCollateral = Control_Bind.bind(Ctl_Internal_Contract_Monad.bindContract)(Data_Functor.map(Ctl_Internal_Contract_Monad.functorContract)(Data_Newtype.unwrap())(Ctl_Internal_Contract.getProtocolParameters))(function (v) {
      return Control_Bind.bind(Ctl_Internal_Contract_Monad.bindContract)(Control_Bind.bind(Ctl_Internal_Contract_Monad.bindContract)(getWallet)(Data_Maybe.maybe(Control_Applicative.pure(Ctl_Internal_Contract_Monad.applicativeContract)(Data_Maybe.Nothing.value))(Ctl_Internal_Wallet.actionBasedOnWallet(Ctl_Internal_Contract_Monad.monadAffContract)(function (v1) {
          return v1.getCollateral;
      })(function (kw) {
          return Control_Bind.bind(Ctl_Internal_Contract_Monad.bindContract)(Ctl_Internal_Contract_QueryHandle.getQueryHandle)(function (queryHandle) {
              return Control_Bind.bind(Ctl_Internal_Contract_Monad.bindContract)(Control_Monad_Reader_Class.asks(Ctl_Internal_Contract_Monad.monadAskContractEnvContra)(function (v1) {
                  return v1.networkId;
              }))(function (networkId) {
                  var addr = (Data_Newtype.unwrap()(kw)).address(networkId);
                  return Control_Bind.bind(Ctl_Internal_Contract_Monad.bindContract)(Control_Bind.bind(Ctl_Internal_Contract_Monad.bindContract)(Data_Functor.mapFlipped(Ctl_Internal_Contract_Monad.functorContract)(Effect_Aff_Class.liftAff(Ctl_Internal_Contract_Monad.monadAffContract)(queryHandle.utxosAt(addr)))((function () {
                      var $24 = Data_Maybe.fromMaybe(Data_Map_Internal.empty);
                      return function ($25) {
                          return $24(Data_Either.hush($25));
                      };
                  })()))(Ctl_Internal_Contract_Monad.filterLockedUtxos))(function (utxos) {
                      return Effect_Class.liftEffect(Ctl_Internal_Contract_Monad.monadEffectContract)((Data_Newtype.unwrap()(kw)).selectCollateral(v.coinsPerUtxoUnit)(Data_UInt.toInt(v.maxCollateralInputs))(utxos));
                  });
              });
          });
      }))))(function (mbCollateralUTxOs) {
          var utxoValue = function (u) {
              return (Data_Newtype.unwrap()((Data_Newtype.unwrap()(u)).output)).amount;
          };
          var targetCollateral = Ctl_Internal_Cardano_Types_Value.lovelaceValueOf(Data_BigInt.fromInt(5000000));
          var sufficientUtxos = Data_Functor.mapFlipped(Data_Maybe.functorMaybe)(mbCollateralUTxOs)(function (colUtxos) {
              return Data_Foldable.foldl(Data_Foldable.foldableArray)(function (us) {
                  return function (u) {
                      var $18 = Ctl_Internal_Cardano_Types_Value.geq(Data_Array.foldMap(Ctl_Internal_Cardano_Types_Value.monoidValue)(utxoValue)(us))(targetCollateral);
                      if ($18) {
                          return us;
                      };
                      return Data_Array.cons(u)(us);
                  };
              })([  ])(colUtxos);
          });
          return Control_Bind.discard(Control_Bind.discardUnit)(Ctl_Internal_Contract_Monad.bindContract)(Data_Foldable.for_(Ctl_Internal_Contract_Monad.applicativeContract)(Data_Foldable.foldableMaybe)(sufficientUtxos)(function (collateralUTxOs) {
              var tooManyCollateralUTxOs = Data_Ord.greaterThan(Data_UInt.uintOrd)(Data_UInt.fromInt(Data_Array.length(collateralUTxOs)))(v.maxCollateralInputs);
              return Control_Applicative.when(Ctl_Internal_Contract_Monad.applicativeContract)(tooManyCollateralUTxOs)(Effect_Class.liftEffect(Ctl_Internal_Contract_Monad.monadEffectContract)(Effect_Exception["throw"]("Wallet returned too many UTxOs as collateral. This is likely a bug in the wallet.")));
          }))(function () {
              return Control_Applicative.pure(Ctl_Internal_Contract_Monad.applicativeContract)(sufficientUtxos);
          });
      });
  });
  var withWallet = function (act) {
      return Control_Bind.bind(Ctl_Internal_Contract_Monad.bindContract)(Ctl_Internal_Helpers.liftedM(Ctl_Internal_Contract_Monad.monadErrorErrorContract)(Effect_Exception.error("No wallet set"))(getWallet))(function (wallet) {
          return act(wallet);
      });
  };
  var getWalletAddresses = Data_Functor.map(Ctl_Internal_Contract_Monad.functorContract)(Data_Foldable.fold(Data_Foldable.foldableMaybe)(Data_Monoid.monoidArray))(withWallet(Ctl_Internal_Wallet.actionBasedOnWallet(Ctl_Internal_Contract_Monad.monadAffContract)(function (v) {
      return v.getWalletAddresses;
  })(function (kw) {
      return Control_Bind.bind(Ctl_Internal_Contract_Monad.bindContract)(Control_Monad_Reader_Class.asks(Ctl_Internal_Contract_Monad.monadAskContractEnvContra)(function (v) {
          return v.networkId;
      }))(function (networkId) {
          return Control_Applicative.pure(Ctl_Internal_Contract_Monad.applicativeContract)(Control_Applicative.pure(Data_Maybe.applicativeMaybe)(Data_Array.singleton((Data_Newtype.unwrap()(kw)).address(networkId))));
      });
  })));
  var getWalletUtxos = (function () {
      var toUtxoMap = (function () {
          var $35 = Data_Map_Internal.fromFoldable(Ctl_Internal_Types_Transaction.ordTransactionInput)(Data_Foldable.foldableArray);
          var $36 = Data_Functor.map(Data_Functor.functorArray)((function () {
              var $38 = Data_Newtype.unwrap();
              return function ($39) {
                  return (function (v) {
                      return new Data_Tuple.Tuple(v.input, v.output);
                  })($38($39));
              };
          })());
          return function ($37) {
              return $35($36($37));
          };
      })();
      return Control_Bind.bind(Ctl_Internal_Contract_Monad.bindContract)(Ctl_Internal_Contract_QueryHandle.getQueryHandle)(function (queryHandle) {
          return Control_Bind.bind(Ctl_Internal_Contract_Monad.bindContract)(getWallet)((function () {
              var $40 = Data_Functor.map(Ctl_Internal_Contract_Monad.functorContract)(Control_Bind.join(Data_Maybe.bindMaybe));
              var $41 = Data_Traversable.traverse(Data_Traversable.traversableMaybe)(Ctl_Internal_Contract_Monad.applicativeContract)(Ctl_Internal_Wallet.actionBasedOnWallet(Ctl_Internal_Contract_Monad.monadAffContract)(function (w) {
                  return function (conn) {
                      return Data_Functor.mapFlipped(Effect_Aff.functorAff)(w.getUtxos(conn))(Data_Functor.map(Data_Maybe.functorMaybe)(toUtxoMap));
                  };
              })(function (v) {
                  return Control_Bind.bind(Ctl_Internal_Contract_Monad.bindContract)(Data_Functor.mapFlipped(Ctl_Internal_Contract_Monad.functorContract)(getWalletAddresses)(Data_Array.head))(function (mbAddress) {
                      return Data_Functor.map(Ctl_Internal_Contract_Monad.functorContract)(Control_Bind.join(Data_Maybe.bindMaybe))(Data_Traversable["for"](Ctl_Internal_Contract_Monad.applicativeContract)(Data_Traversable.traversableMaybe)(mbAddress)((function () {
                          var $43 = Data_Functor.map(Ctl_Internal_Contract_Monad.functorContract)(Data_Either.hush);
                          var $44 = Effect_Aff_Class.liftAff(Ctl_Internal_Contract_Monad.monadAffContract);
                          return function ($45) {
                              return $43($44(queryHandle.utxosAt($45)));
                          };
                      })()));
                  });
              }));
              return function ($42) {
                  return $40($41($42));
              };
          })());
      });
  })();
  var getChangeAddress = withWallet(Ctl_Internal_Wallet.actionBasedOnWallet(Ctl_Internal_Contract_Monad.monadAffContract)(function (v) {
      return v.getChangeAddress;
  })(function (kw) {
      return Control_Bind.bind(Ctl_Internal_Contract_Monad.bindContract)(Control_Monad_Reader_Class.asks(Ctl_Internal_Contract_Monad.monadAskContractEnvContra)(function (v) {
          return v.networkId;
      }))(function (networkId) {
          return Control_Applicative.pure(Ctl_Internal_Contract_Monad.applicativeContract)(Control_Applicative.pure(Data_Maybe.applicativeMaybe)((Data_Newtype.unwrap()(kw)).address(networkId)));
      });
  }));
  exports["getChangeAddress"] = getChangeAddress;
  exports["getWalletAddresses"] = getWalletAddresses;
  exports["withWallet"] = withWallet;
  exports["getWalletCollateral"] = getWalletCollateral;
  exports["getWalletUtxos"] = getWalletUtxos;
})(PS);
(function(exports) {
  /* global BROWSER_RUNTIME */

  let lib;
  if (typeof BROWSER_RUNTIME != "undefined" && BROWSER_RUNTIME) {
    lib = require("@emurgo/cardano-serialization-lib-browser");
  } else {
    lib = require("@emurgo/cardano-serialization-lib-nodejs");
  }
  lib = require("@mlabs-haskell/csl-gc-wrapper")(lib);

  exports._minFee = maybe => tx => txFeeFixed => txFeePerByte => {
    try {
      const linearFee = lib.LinearFee.new(txFeePerByte, txFeeFixed);
      return maybe.just(lib.min_fee(tx, linearFee));
    } catch (_) {
      return maybe.nothing;
    }
  };

  exports._minScriptFee = exUnitPrices => tx =>
    lib.min_script_fee(tx, exUnitPrices);
})(PS["Ctl.Internal.Serialization.MinFee"] = PS["Ctl.Internal.Serialization.MinFee"] || {});
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Ctl.Internal.Serialization.MinFee"] = $PS["Ctl.Internal.Serialization.MinFee"] || {};
  var exports = $PS["Ctl.Internal.Serialization.MinFee"];
  var $foreign = $PS["Ctl.Internal.Serialization.MinFee"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_Error_Class = $PS["Control.Monad.Error.Class"];
  var Ctl_Internal_Cardano_Types_NativeScript = $PS["Ctl.Internal.Cardano.Types.NativeScript"];
  var Ctl_Internal_Cardano_Types_Transaction = $PS["Ctl.Internal.Cardano.Types.Transaction"];
  var Ctl_Internal_FfiHelpers = $PS["Ctl.Internal.FfiHelpers"];
  var Ctl_Internal_NativeScripts = $PS["Ctl.Internal.NativeScripts"];
  var Ctl_Internal_Serialization = $PS["Ctl.Internal.Serialization"];
  var Ctl_Internal_Serialization_Hash = $PS["Ctl.Internal.Serialization.Hash"];
  var Ctl_Internal_Types_BigNum = $PS["Ctl.Internal.Types.BigNum"];
  var Data_Array = $PS["Data.Array"];
  var Data_BigInt = $PS["Data.BigInt"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Lens_Setter = $PS["Data.Lens.Setter"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Profunctor_Strong = $PS["Data.Profunctor.Strong"];
  var Data_Semiring = $PS["Data.Semiring"];
  var Data_Set = $PS["Data.Set"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Effect_Class = $PS["Effect.Class"];
  var Effect_Exception = $PS["Effect.Exception"];                
  var fakeVkeywitness = new Data_Tuple.Tuple(Data_Maybe.fromJust()(Ctl_Internal_Cardano_Types_Transaction.mkPublicKey("ed25519_pk1p9sf9wz3t46u9ghht44203gerxt82kzqaqw74fqrmwjmdy8sjxmqknzq8j")), Data_Maybe.fromJust()(Ctl_Internal_Cardano_Types_Transaction.mkEd25519Signature("ed25519_sig1mr6pm5kanam2wkmae70jx7fjkzepghefj0lmnczu6fra6auf2urgrte5axxhunw4x34l3l8tj9c0t4le39tj8lpjdgxmqnujw07tkzs9m6t6x")));
  var addFakeSignatures = function (selfSigners) {
      return function (tx) {
          var requiredSigners = (function () {
              var $13 = Data_Set.fromFoldable(Data_Foldable.foldableArray)(Ctl_Internal_Serialization_Hash.ordEd25519KeyHash);
              var $14 = Data_Functor.map(Data_Functor.functorArray)(Data_Newtype.unwrap());
              var $15 = Data_Maybe.fromMaybe(Data_Monoid.mempty(Data_Monoid.monoidArray));
              var $16 = Data_Newtype.unwrap();
              return function ($17) {
                  return $13($14($15((function (v) {
                      return v.requiredSigners;
                  })($16((function (v) {
                      return v.body;
                  })($17))))));
              };
          })()(Data_Newtype.unwrap()(tx));
          var nsPossibleSigners = Ctl_Internal_NativeScripts.getMaximumSigners(requiredSigners)(new Ctl_Internal_Cardano_Types_NativeScript.ScriptAll((function () {
              var $18 = Data_Maybe.fromMaybe(Data_Monoid.mempty(Data_Monoid.monoidArray));
              var $19 = Data_Newtype.unwrap();
              return function ($20) {
                  return $18((function (v) {
                      return v.nativeScripts;
                  })($19((function (v) {
                      return v.witnessSet;
                  })($20))));
              };
          })()(Data_Newtype.unwrap()(tx))));
          var nSelfSigners = (function () {
              var n = Data_Set.size(selfSigners);
              var $9 = n === 0;
              if ($9) {
                  return 1;
              };
              return n;
          })();
          var nRequiredSigners = (function () {
              var $21 = Data_Maybe.fromMaybe(0);
              var $22 = Data_Functor.map(Data_Maybe.functorMaybe)((function () {
                  var $25 = Data_Functor.map(Data_Functor.functorArray)(Data_Newtype.unwrap());
                  return function ($26) {
                      return Data_Array.length($25($26));
                  };
              })());
              var $23 = Data_Newtype.unwrap();
              return function ($24) {
                  return $21($22((function (v) {
                      return v.requiredSigners;
                  })($23((function (v) {
                      return v.body;
                  })($24)))));
              };
          })()(Data_Newtype.unwrap()(tx));
          return Data_Lens_Setter.set((function () {
              var $27 = Ctl_Internal_Cardano_Types_Transaction["_witnessSet"](Data_Profunctor_Strong.strongFn);
              var $28 = Ctl_Internal_Cardano_Types_Transaction["_vkeys"](Data_Profunctor_Strong.strongFn);
              return function ($29) {
                  return $27($28($29));
              };
          })())(new Data_Maybe.Just(Data_Array.replicate((nRequiredSigners + nsPossibleSigners | 0) + nSelfSigners | 0)(fakeVkeywitness)))(tx);
      };
  };
  var calculateMinFeeCsl = function (dictMonadEffect) {
      return function (dictMonadThrow) {
          return function (v) {
              return function (selfSigners) {
                  return function (txNoSigs) {
                      var tx = addFakeSignatures(selfSigners)(txNoSigs);
                      return Control_Bind.bind((dictMonadEffect.Monad0()).Bind1())(Effect_Class.liftEffect(dictMonadEffect)(Ctl_Internal_Serialization.convertTransaction(tx)))(function (cslTx) {
                          return Control_Bind.bind((dictMonadEffect.Monad0()).Bind1())(Control_Monad_Error_Class.liftMaybe(dictMonadThrow)(Effect_Exception.error("Unable to calculate min_fee"))(Data_Functor.map(Data_Maybe.functorMaybe)(Ctl_Internal_Types_BigNum.toBigInt)($foreign["_minFee"](Ctl_Internal_FfiHelpers.maybeFfiHelper)(cslTx)(Ctl_Internal_Types_BigNum.fromUInt(v.txFeeFixed))(Ctl_Internal_Types_BigNum.fromUInt(v.txFeePerByte)))))(function (minFee) {
                              return Control_Bind.bind((dictMonadEffect.Monad0()).Bind1())(Effect_Class.liftEffect(dictMonadEffect)(Ctl_Internal_Serialization.convertExUnitPrices(v.prices)))(function (exUnitPricesCsl) {
                                  var minScriptFee = Ctl_Internal_Types_BigNum.toBigInt($foreign["_minScriptFee"](exUnitPricesCsl)(cslTx));
                                  return Control_Applicative.pure((dictMonadEffect.Monad0()).Applicative0())(Data_Newtype.wrap()(Data_Semiring.add(Data_BigInt.semiringBigInt)(minFee)(minScriptFee)));
                              });
                          });
                      });
                  };
              };
          };
      };
  };
  exports["calculateMinFeeCsl"] = calculateMinFeeCsl;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Ctl.Internal.Contract.MinFee"] = $PS["Ctl.Internal.Contract.MinFee"] || {};
  var exports = $PS["Ctl.Internal.Contract.MinFee"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Category = $PS["Control.Category"];
  var Ctl_Internal_Cardano_Types_Transaction = $PS["Ctl.Internal.Cardano.Types.Transaction"];
  var Ctl_Internal_Contract = $PS["Ctl.Internal.Contract"];
  var Ctl_Internal_Contract_Monad = $PS["Ctl.Internal.Contract.Monad"];
  var Ctl_Internal_Contract_QueryHandle = $PS["Ctl.Internal.Contract.QueryHandle"];
  var Ctl_Internal_Contract_Wallet = $PS["Ctl.Internal.Contract.Wallet"];
  var Ctl_Internal_Helpers = $PS["Ctl.Internal.Helpers"];
  var Ctl_Internal_Serialization_Address = $PS["Ctl.Internal.Serialization.Address"];
  var Ctl_Internal_Serialization_Hash = $PS["Ctl.Internal.Serialization.Hash"];
  var Ctl_Internal_Serialization_MinFee = $PS["Ctl.Internal.Serialization.MinFee"];
  var Ctl_Internal_Types_Transaction = $PS["Ctl.Internal.Types.Transaction"];
  var Data_Array = $PS["Data.Array"];
  var Data_Either = $PS["Data.Either"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Lens_Getter = $PS["Data.Lens.Getter"];
  var Data_Lens_Internal_Forget = $PS["Data.Lens.Internal.Forget"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Map = $PS["Data.Map"];
  var Data_Map_Internal = $PS["Data.Map.Internal"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Set = $PS["Data.Set"];
  var Data_Show = $PS["Data.Show"];
  var Data_Traversable = $PS["Data.Traversable"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Effect_Aff = $PS["Effect.Aff"];
  var Effect_Aff_Class = $PS["Effect.Aff.Class"];
  var Effect_Exception = $PS["Effect.Exception"];                
  var getSelfSigners = function (tx) {
      return function (additionalUtxos) {
          var toUtxoMap = (function () {
              var $16 = Data_Map_Internal.fromFoldable(Ctl_Internal_Types_Transaction.ordTransactionInput)(Data_Foldable.foldableArray);
              var $17 = Data_Functor.map(Data_Functor.functorArray)((function () {
                  var $19 = Data_Newtype.unwrap();
                  return function ($20) {
                      return (function (v) {
                          return new Data_Tuple.Tuple(v.input, v.output);
                      })($19($20));
                  };
              })());
              return function ($18) {
                  return $16($17($18));
              };
          })();
          var setFor = function (dictMonad) {
              return function (dictOrd) {
                  return function (dictOrd1) {
                      return function (txIns) {
                          return function (f) {
                              return Data_Functor.map(((dictMonad.Bind1()).Apply0()).Functor0())(Data_Set.fromFoldable(Data_Foldable.foldableArray)(dictOrd1))(Data_Traversable["for"](dictMonad.Applicative0())(Data_Traversable.traversableArray)(Data_Array.fromFoldable(Data_Set.foldableSet)(txIns))(f));
                          };
                      };
                  };
              };
          };
          return Control_Bind.bind(Ctl_Internal_Contract_Monad.bindContract)(Ctl_Internal_Contract_QueryHandle.getQueryHandle)(function (queryHandle) {
              var txInputs = Data_Set.difference(Ctl_Internal_Types_Transaction.ordTransactionInput)(Data_Lens_Getter.viewOn(tx)((function () {
                  var $21 = Ctl_Internal_Cardano_Types_Transaction["_body"](Data_Lens_Internal_Forget.strongForget);
                  var $22 = Ctl_Internal_Cardano_Types_Transaction["_inputs"](Data_Lens_Internal_Forget.strongForget);
                  return function ($23) {
                      return $21($22($23));
                  };
              })()))(Data_Map.keys(additionalUtxos));
              var additionalUtxosAddrs = Data_Set.fromFoldable(Data_List_Types.foldableList)(Ctl_Internal_Serialization_Address.ordAddress)(Data_Functor.map(Data_List_Types.functorList)((function () {
                  var $24 = Data_Newtype.unwrap();
                  return function ($25) {
                      return (function (v) {
                          return v.address;
                      })($24($25));
                  };
              })())(Data_Map_Internal.values(additionalUtxos)));
              return Control_Bind.bind(Ctl_Internal_Contract_Monad.bindContract)(setFor(Ctl_Internal_Contract_Monad.monadContract)(Ctl_Internal_Types_Transaction.ordTransactionInput)(Ctl_Internal_Serialization_Address.ordAddress)(txInputs)(function (txInput) {
                  return Ctl_Internal_Helpers.liftedM(Ctl_Internal_Contract_Monad.monadErrorErrorContract)(Effect_Exception.error("Couldn't get tx output for " + Data_Show.show(Ctl_Internal_Types_Transaction.showTransactionInput)(txInput)))(Data_Functor.map(Ctl_Internal_Contract_Monad.functorContract)(Data_Functor.map(Data_Maybe.functorMaybe)((function () {
                      var $26 = Data_Newtype.unwrap();
                      return function ($27) {
                          return (function (v) {
                              return v.address;
                          })($26($27));
                      };
                  })()))(Effect_Aff_Class.liftAff(Ctl_Internal_Contract_Monad.monadAffContract)(Data_Functor.mapFlipped(Effect_Aff.functorAff)(queryHandle.getUtxoByOref(txInput))((function () {
                      var $28 = Control_Bind.join(Data_Maybe.bindMaybe);
                      return function ($29) {
                          return $28(Data_Either.hush($29));
                      };
                  })()))));
              }))(function (v) {
                  var txCollats = Data_Set.fromFoldable(Data_Foldable.foldableArray)(Ctl_Internal_Types_Transaction.ordTransactionInput)(Data_Maybe.fromMaybe([  ])(Data_Lens_Getter.viewOn(tx)((function () {
                      var $30 = Ctl_Internal_Cardano_Types_Transaction["_body"](Data_Lens_Internal_Forget.strongForget);
                      var $31 = Ctl_Internal_Cardano_Types_Transaction["_collateral"](Data_Lens_Internal_Forget.strongForget);
                      return function ($32) {
                          return $30($31($32));
                      };
                  })())));
                  return Control_Bind.bind(Ctl_Internal_Contract_Monad.bindContract)(Data_Functor.map(Ctl_Internal_Contract_Monad.functorContract)(Data_Maybe.maybe(Data_Map_Internal.empty)(toUtxoMap))(Ctl_Internal_Contract_Wallet.getWalletCollateral))(function (walletCollats) {
                      return Control_Bind.bind(Ctl_Internal_Contract_Monad.bindContract)(setFor(Ctl_Internal_Contract_Monad.monadContract)(Ctl_Internal_Types_Transaction.ordTransactionInput)(Ctl_Internal_Serialization_Address.ordAddress)(txCollats)(function (txCollat) {
                          return Ctl_Internal_Helpers.liftM(Ctl_Internal_Contract_Monad.monadErrorErrorContract)(Effect_Exception.error("Couldn't get tx output for " + Data_Show.show(Ctl_Internal_Types_Transaction.showTransactionInput)(txCollat)))(Data_Functor.map(Data_Maybe.functorMaybe)((function () {
                              var $33 = Data_Newtype.unwrap();
                              return function ($34) {
                                  return (function (v1) {
                                      return v1.address;
                                  })($33($34));
                              };
                          })())(Data_Map_Internal.lookup(Ctl_Internal_Types_Transaction.ordTransactionInput)(txCollat)(walletCollats)));
                      }))(function (v1) {
                          return Control_Bind.bind(Ctl_Internal_Contract_Monad.bindContract)(Data_Functor.map(Ctl_Internal_Contract_Monad.functorContract)(Data_Set.fromFoldable(Data_Foldable.foldableArray)(Ctl_Internal_Serialization_Address.ordAddress))(Ctl_Internal_Contract_Wallet.getWalletAddresses))(function (v2) {
                              var txOwnAddrs = Data_Set.intersection(Ctl_Internal_Serialization_Address.ordAddress)(v2)(Data_Set.union(Ctl_Internal_Serialization_Address.ordAddress)(Data_Set.union(Ctl_Internal_Serialization_Address.ordAddress)(additionalUtxosAddrs)(v))(v1));
                              return Control_Bind.bind(Ctl_Internal_Contract_Monad.bindContract)(Data_Functor.map(Ctl_Internal_Contract_Monad.functorContract)(Data_Set.mapMaybe(Ctl_Internal_Serialization_Hash.ordEd25519KeyHash)(Control_Category.identity(Control_Category.categoryFn)))(setFor(Ctl_Internal_Contract_Monad.monadContract)(Ctl_Internal_Serialization_Address.ordAddress)(Data_Maybe.ordMaybe(Ctl_Internal_Serialization_Hash.ordEd25519KeyHash))(txOwnAddrs)(function (addr) {
                                  return Control_Bind.bind(Ctl_Internal_Contract_Monad.bindContract)(Ctl_Internal_Helpers.liftM(Ctl_Internal_Contract_Monad.monadErrorErrorContract)(Effect_Exception.error("Could not extract payment credential from Address: " + Data_Show.show(Ctl_Internal_Serialization_Address.showAddress)(addr)))(Ctl_Internal_Serialization_Address.addressPaymentCred(addr)))(function (paymentCred) {
                                      return Control_Applicative.pure(Ctl_Internal_Contract_Monad.applicativeContract)(Ctl_Internal_Serialization_Address.stakeCredentialToKeyHash(paymentCred));
                                  });
                              })))(function (paymentPkhs) {
                                  var stakePkhs = Data_Set.fromFoldable(Data_Foldable.foldableArray)(Ctl_Internal_Serialization_Hash.ordEd25519KeyHash)(Data_Array.mapMaybe(Control_Bind.composeKleisliFlipped(Data_Maybe.bindMaybe)(Ctl_Internal_Serialization_Address.stakeCredentialToKeyHash)(Ctl_Internal_Serialization_Address.addressStakeCred))(Data_Array.fromFoldable(Data_Set.foldableSet)(txOwnAddrs)));
                                  return Control_Applicative.pure(Ctl_Internal_Contract_Monad.applicativeContract)(Data_Semigroup.append(Data_Set.semigroupSet(Ctl_Internal_Serialization_Hash.ordEd25519KeyHash))(paymentPkhs)(stakePkhs));
                              });
                          });
                      });
                  });
              });
          });
      };
  };
  var calculateMinFee = function (tx) {
      return function (additionalUtxos) {
          return Control_Bind.bind(Ctl_Internal_Contract_Monad.bindContract)(getSelfSigners(tx)(additionalUtxos))(function (selfSigners) {
              return Control_Bind.bind(Ctl_Internal_Contract_Monad.bindContract)(Ctl_Internal_Contract.getProtocolParameters)(function (pparams) {
                  return Ctl_Internal_Serialization_MinFee.calculateMinFeeCsl(Ctl_Internal_Contract_Monad.monadEffectContract)(Ctl_Internal_Contract_Monad.monadThrowErrorContract)(pparams)(selfSigners)(tx);
              });
          });
      };
  };
  exports["calculateMinFee"] = calculateMinFee;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Ctl.Internal.TxOutput"] = $PS["Ctl.Internal.TxOutput"] || {};
  var exports = $PS["Ctl.Internal.TxOutput"];
  var Ctl_Internal_Address = $PS["Ctl.Internal.Address"];
  var Ctl_Internal_Serialization_PlutusData = $PS["Ctl.Internal.Serialization.PlutusData"];
  var Ctl_Internal_Serialization_ToBytes = $PS["Ctl.Internal.Serialization.ToBytes"];
  var Ctl_Internal_Types_ByteArray = $PS["Ctl.Internal.Types.ByteArray"];
  var Ctl_Internal_Types_OutputDatum = $PS["Ctl.Internal.Types.OutputDatum"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Newtype = $PS["Data.Newtype"];
  var transactionInputToTxOutRef = function (v) {
      return {
          txId: Ctl_Internal_Types_ByteArray.byteArrayToHex(Data_Newtype.unwrap()(v.transactionId)),
          index: v.index
      };
  };
  var datumToOgmiosDatum = function (v) {
      return (function () {
          var $24 = Data_Newtype.unwrap();
          return function ($25) {
              return Ctl_Internal_Types_ByteArray.byteArrayToHex($24($25));
          };
      })()(Ctl_Internal_Serialization_ToBytes.toBytes()(Ctl_Internal_Serialization_PlutusData.convertPlutusData(v)));
  };
  var datumHashToOgmiosDatumHash = (function () {
      var $26 = Data_Newtype.unwrap();
      return function ($27) {
          return Ctl_Internal_Types_ByteArray.byteArrayToHex($26($27));
      };
  })();
  var transactionOutputToOgmiosTxOut = function (v) {
      return {
          address: Ctl_Internal_Address.addressToOgmiosAddress(v.address),
          value: v.amount,
          datumHash: Data_Functor.map(Data_Maybe.functorMaybe)(datumHashToOgmiosDatumHash)(Ctl_Internal_Types_OutputDatum.outputDatumDataHash(v.datum)),
          datum: Data_Functor.map(Data_Maybe.functorMaybe)(datumToOgmiosDatum)(Ctl_Internal_Types_OutputDatum.outputDatumDatum(v.datum)),
          script: v.scriptRef
      };
  };
  exports["transactionInputToTxOutRef"] = transactionInputToTxOutRef;
  exports["transactionOutputToOgmiosTxOut"] = transactionOutputToOgmiosTxOut;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Ctl.Internal.BalanceTx.ExUnitsAndMinFee"] = $PS["Ctl.Internal.BalanceTx.ExUnitsAndMinFee"] || {};
  var exports = $PS["Ctl.Internal.BalanceTx.ExUnitsAndMinFee"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_Error_Class = $PS["Control.Monad.Error.Class"];
  var Control_Monad_Except_Trans = $PS["Control.Monad.Except.Trans"];
  var Control_Monad_Reader_Trans = $PS["Control.Monad.Reader.Trans"];
  var Ctl_Internal_BalanceTx_Constraints = $PS["Ctl.Internal.BalanceTx.Constraints"];
  var Ctl_Internal_BalanceTx_Error = $PS["Ctl.Internal.BalanceTx.Error"];
  var Ctl_Internal_BalanceTx_Helpers = $PS["Ctl.Internal.BalanceTx.Helpers"];
  var Ctl_Internal_BalanceTx_Types = $PS["Ctl.Internal.BalanceTx.Types"];
  var Ctl_Internal_Cardano_Types_ScriptRef = $PS["Ctl.Internal.Cardano.Types.ScriptRef"];
  var Ctl_Internal_Cardano_Types_Transaction = $PS["Ctl.Internal.Cardano.Types.Transaction"];
  var Ctl_Internal_Contract_MinFee = $PS["Ctl.Internal.Contract.MinFee"];
  var Ctl_Internal_Contract_Monad = $PS["Ctl.Internal.Contract.Monad"];
  var Ctl_Internal_Contract_QueryHandle = $PS["Ctl.Internal.Contract.QueryHandle"];
  var Ctl_Internal_Plutus_Conversion = $PS["Ctl.Internal.Plutus.Conversion"];
  var Ctl_Internal_ReindexRedeemers = $PS["Ctl.Internal.ReindexRedeemers"];
  var Ctl_Internal_Transaction = $PS["Ctl.Internal.Transaction"];
  var Ctl_Internal_TxOutput = $PS["Ctl.Internal.TxOutput"];
  var Ctl_Internal_Types_Natural = $PS["Ctl.Internal.Types.Natural"];
  var Ctl_Internal_Types_RedeemerTag = $PS["Ctl.Internal.Types.RedeemerTag"];
  var Ctl_Internal_Types_Scripts = $PS["Ctl.Internal.Types.Scripts"];
  var Ctl_Internal_Types_Transaction = $PS["Ctl.Internal.Types.Transaction"];
  var Ctl_Internal_Types_UnbalancedTransaction = $PS["Ctl.Internal.Types.UnbalancedTransaction"];
  var Data_Array = $PS["Data.Array"];
  var Data_Bifunctor = $PS["Data.Bifunctor"];
  var Data_Either = $PS["Data.Either"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Lens_Getter = $PS["Data.Lens.Getter"];
  var Data_Lens_Internal_Forget = $PS["Data.Lens.Internal.Forget"];
  var Data_Lens_Setter = $PS["Data.Lens.Setter"];
  var Data_Map_Internal = $PS["Data.Map.Internal"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Profunctor_Strong = $PS["Data.Profunctor.Strong"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Set = $PS["Data.Set"];
  var Data_Traversable = $PS["Data.Traversable"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_UInt = $PS["Data.UInt"];
  var Data_Unfoldable = $PS["Data.Unfoldable"];
  var Effect = $PS["Effect"];
  var Effect_Aff_Class = $PS["Effect.Aff.Class"];
  var Effect_Class = $PS["Effect.Class"];                
  var setRdmrsExecutionUnits = function (rs) {
      return function (v) {
          return Data_Functor.mapFlipped(Data_Functor.functorArray)(rs)(function (v1) {
              return Data_Maybe.maybe(v1)(function (v2) {
                  return new Data_Tuple.Tuple({
                      tag: v1.value0.tag,
                      index: v1.value0.index,
                      data: v1.value0.data,
                      exUnits: {
                          mem: Ctl_Internal_Types_Natural.toBigInt(v2.memory),
                          steps: Ctl_Internal_Types_Natural.toBigInt(v2.steps)
                      }
                  }, v1.value1);
              })(Data_Map_Internal.lookup(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
                  reflectSymbol: function () {
                      return "redeemerTag";
                  }
              })(Ctl_Internal_Types_RedeemerTag.ordRedeemerTag))()({
                  reflectSymbol: function () {
                      return "redeemerIndex";
                  }
              })(Ctl_Internal_Types_Natural.ordNatural)))({
                  redeemerTag: v1.value0.tag,
                  redeemerIndex: Ctl_Internal_Types_Natural["fromBigInt'"](v1.value0.index)
              })(v));
          });
      };
  };
  var updateTxExecutionUnits = function (unattachedTx) {
      return function (rdmrPtrExUnitsList) {
          return Data_Lens_Setter.over(Ctl_Internal_BalanceTx_Helpers["_redeemersTxIns"](Data_Profunctor_Strong.strongFn))(Data_Function.flip(setRdmrsExecutionUnits)(rdmrPtrExUnitsList))(unattachedTx);
      };
  };
  var reindexRedeemers = function (v) {
      var inputs = Data_Array.fromFoldable(Data_Set.foldableSet)(Data_Lens_Getter.viewOn(v)((function () {
          var $43 = Ctl_Internal_BalanceTx_Helpers["_body'"](Data_Lens_Internal_Forget.strongForget);
          var $44 = Ctl_Internal_Cardano_Types_Transaction["_inputs"](Data_Lens_Internal_Forget.strongForget);
          return function ($45) {
              return $43($44($45));
          };
      })()));
      return Data_Functor.mapFlipped(Data_Either.functorEither)(Ctl_Internal_ReindexRedeemers["reindexSpentScriptRedeemers'"](inputs)(v.redeemersTxIns))(function (redeemersTxInsReindexed) {
          return Data_Lens_Setter.set(Ctl_Internal_BalanceTx_Helpers["_redeemersTxIns"](Data_Profunctor_Strong.strongFn))(redeemersTxInsReindexed)(v);
      });
  };
  var reattachDatumsAndRedeemers = function (v) {
      var transaction = Data_Lens_Getter.viewOn(v.unbalancedTx)(Ctl_Internal_Types_UnbalancedTransaction["_transaction"](Data_Lens_Internal_Forget.strongForget));
      return Data_Lens_Setter.setJust((function () {
          var $46 = Ctl_Internal_Cardano_Types_Transaction["_witnessSet"](Data_Profunctor_Strong.strongFn);
          var $47 = Ctl_Internal_Cardano_Types_Transaction["_redeemers"](Data_Profunctor_Strong.strongFn);
          return function ($48) {
              return $46($47($48));
          };
      })())(Data_Functor.map(Data_Functor.functorArray)(Data_Tuple.fst)(v.redeemersTxIns))(Data_Lens_Setter.setJust((function () {
          var $49 = Ctl_Internal_Cardano_Types_Transaction["_witnessSet"](Data_Profunctor_Strong.strongFn);
          var $50 = Ctl_Internal_Cardano_Types_Transaction["_plutusData"](Data_Profunctor_Strong.strongFn);
          return function ($51) {
              return $49($50($51));
          };
      })())(Data_Functor.map(Data_Functor.functorArray)(Data_Newtype.unwrap())(v.datums))(transaction));
  };
  var finalizeTransaction = function (reindexedUnattachedTxWithExUnits) {
      return function (utxos) {
          var getPlutusScript = function (v) {
              return Control_Bind.bindFlipped(Data_Maybe.bindMaybe)(Ctl_Internal_Cardano_Types_ScriptRef.getPlutusScript)(v.scriptRef);
          };
          var getRefPlutusScripts = function (v) {
              var spendAndRefInputs = Data_Array.fromFoldable(Data_Set.foldableSet)(Data_Semigroup.append(Data_Set.semigroupSet(Ctl_Internal_Types_Transaction.ordTransactionInput))(v.inputs)(v.referenceInputs));
              return Data_Functor.map(Data_Either.functorEither)((function () {
                  var $52 = Data_Functor.map(Data_Functor.functorArray)(getPlutusScript);
                  return function ($53) {
                      return Data_Array.catMaybes($52($53));
                  };
              })())(Data_Traversable["for"](Data_Either.applicativeEither)(Data_Traversable.traversableArray)(spendAndRefInputs)(function (oref) {
                  return Data_Either.note(new Ctl_Internal_BalanceTx_Error.UtxoLookupFailedFor(oref))(Data_Map_Internal.lookup(Ctl_Internal_Types_Transaction.ordTransactionInput)(oref)(utxos));
              }));
          };
          var attachedTxWithExUnits = reattachDatumsAndRedeemers(reindexedUnattachedTxWithExUnits);
          var txBody = Data_Lens_Getter.viewOn(attachedTxWithExUnits)(Ctl_Internal_Cardano_Types_Transaction["_body"](Data_Lens_Internal_Forget.strongForget));
          var ws = Data_Lens_Getter.viewOn(attachedTxWithExUnits)(Ctl_Internal_Cardano_Types_Transaction["_witnessSet"](Data_Lens_Internal_Forget.strongForget));
          var datums = Data_Functor.map(Data_Functor.functorArray)(Data_Newtype.wrap())(Data_Maybe.fromMaybe(Data_Monoid.mempty(Data_Monoid.monoidArray))((function (v) {
              return v.plutusData;
          })(Data_Newtype.unwrap()(ws))));
          var redeemers = Data_Maybe.fromMaybe(Data_Monoid.mempty(Data_Monoid.monoidArray))((function (v) {
              return v.redeemers;
          })(Data_Newtype.unwrap()(ws)));
          return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_Reader_Trans.monadReaderT(Ctl_Internal_Contract_Monad.monadContract)))(Control_Monad_Except_Trans.except(Control_Monad_Reader_Trans.applicativeReaderT(Ctl_Internal_Contract_Monad.applicativeContract))(getRefPlutusScripts(txBody)))(function (refPlutusScripts) {
              var scripts = Data_Semigroup.append(Data_Semigroup.semigroupArray)(Data_Maybe.fromMaybe(Data_Monoid.mempty(Data_Monoid.monoidArray))((function (v) {
                  return v.plutusScripts;
              })(Data_Newtype.unwrap()(ws))))(refPlutusScripts);
              var languages = Data_Foldable.foldMap(Data_Foldable.foldableArray)(Data_Set.monoidSet(Ctl_Internal_Types_Scripts.ordLanguage))((function () {
                  var $54 = Data_Newtype.unwrap();
                  return function ($55) {
                      return Data_Set.singleton(Data_Tuple.snd($54($55)));
                  };
              })())(scripts);
              return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_Reader_Trans.monadReaderT(Ctl_Internal_Contract_Monad.monadContract)))(Ctl_Internal_BalanceTx_Types.askCostModelsForLanguages(languages))(function (v) {
                  return Effect_Class.liftEffect(Control_Monad_Except_Trans.monadEffectExceptT(Control_Monad_Reader_Trans.monadEffectReader(Ctl_Internal_Contract_Monad.monadEffectContract)))(Data_Functor.map(Effect.functorEffect)(Ctl_Internal_BalanceTx_Types.FinalizedTransaction)(Ctl_Internal_Transaction.setScriptDataHash(v)(redeemers)(datums)(attachedTxWithExUnits)));
              });
          });
      };
  };
  var evalTxExecutionUnits = function (tx) {
      return function (unattachedTx) {
          var getOgmiosAdditionalUtxoSet = Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_Reader_Trans.monadReaderT(Ctl_Internal_Contract_Monad.monadContract)))(Ctl_Internal_BalanceTx_Types.askNetworkId)(function (networkId) {
              return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_Reader_Trans.monadReaderT(Ctl_Internal_Contract_Monad.monadContract)))(Data_Functor.mapFlipped(Control_Monad_Except_Trans.functorExceptT(Control_Monad_Reader_Trans.functorReaderT(Ctl_Internal_Contract_Monad.functorContract)))(Ctl_Internal_BalanceTx_Types.asksConstraints(function (dictStrong) {
                  return Ctl_Internal_BalanceTx_Constraints["_additionalUtxos"](dictStrong);
              }))(Ctl_Internal_Plutus_Conversion.fromPlutusUtxoMap(networkId)))(function (additionalUtxos) {
                  return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Control_Monad_Reader_Trans.monadReaderT(Ctl_Internal_Contract_Monad.monadContract)))(Data_Newtype.wrap()(Data_Map_Internal.fromFoldable(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
                      reflectSymbol: function () {
                          return "txId";
                      }
                  })(Data_Ord.ordString))()({
                      reflectSymbol: function () {
                          return "index";
                      }
                  })(Data_UInt.uintOrd)))(Data_Foldable.foldableArray)(Data_Functor.map(Data_Functor.functorArray)(Data_Bifunctor.bimap(Data_Bifunctor.bifunctorTuple)(Ctl_Internal_TxOutput.transactionInputToTxOutRef)(Ctl_Internal_TxOutput.transactionOutputToOgmiosTxOut))(Data_Map_Internal.toUnfoldable(Data_Unfoldable.unfoldableArray)(additionalUtxos)))));
              });
          });
          return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_Reader_Trans.monadReaderT(Ctl_Internal_Contract_Monad.monadContract)))(Ctl_Internal_BalanceTx_Types.liftContract(Ctl_Internal_Contract_QueryHandle.getQueryHandle))(function (queryHandle) {
              return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_Reader_Trans.monadReaderT(Ctl_Internal_Contract_Monad.monadContract)))(getOgmiosAdditionalUtxoSet)(function (additionalUtxos) {
                  return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_Reader_Trans.monadReaderT(Ctl_Internal_Contract_Monad.monadContract)))(Data_Functor.map(Control_Monad_Except_Trans.functorExceptT(Control_Monad_Reader_Trans.functorReaderT(Ctl_Internal_Contract_Monad.functorContract)))(Data_Newtype.unwrap())(Ctl_Internal_BalanceTx_Types.liftContract(Effect_Aff_Class.liftAff(Ctl_Internal_Contract_Monad.monadAffContract)(queryHandle.evaluateTx(tx)(additionalUtxos)))))(function (evalResult) {
                      if (evalResult instanceof Data_Either.Right) {
                          return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Control_Monad_Reader_Trans.monadReaderT(Ctl_Internal_Contract_Monad.monadContract)))(evalResult.value0);
                      };
                      if (evalResult instanceof Data_Either.Left && Data_Lens_Getter.viewOn(tx)(Ctl_Internal_Cardano_Types_Transaction["_isValid"](Data_Lens_Internal_Forget.strongForget))) {
                          return Control_Monad_Error_Class.throwError(Control_Monad_Except_Trans.monadThrowExceptT(Control_Monad_Reader_Trans.monadReaderT(Ctl_Internal_Contract_Monad.monadContract)))(new Ctl_Internal_BalanceTx_Error.ExUnitsEvaluationFailed(unattachedTx, evalResult.value0));
                      };
                      if (evalResult instanceof Data_Either.Left) {
                          return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Control_Monad_Reader_Trans.monadReaderT(Ctl_Internal_Contract_Monad.monadContract)))(Data_Newtype.wrap()(Data_Map_Internal.empty));
                      };
                      throw new Error("Failed pattern match at Ctl.Internal.BalanceTx.ExUnitsAndMinFee (line 98, column 3 - line 102, column 36): " + [ evalResult.constructor.name ]);
                  });
              });
          });
      };
  };
  var evalExUnitsAndMinFee = function (v) {
      return function (allUtxos) {
          return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_Reader_Trans.monadReaderT(Ctl_Internal_Contract_Monad.monadContract)))(Control_Monad_Error_Class.liftEither(Control_Monad_Except_Trans.monadThrowExceptT(Control_Monad_Reader_Trans.monadReaderT(Ctl_Internal_Contract_Monad.monadContract)))(Data_Bifunctor.lmap(Data_Bifunctor.bifunctorEither)(Ctl_Internal_BalanceTx_Error.ReindexRedeemersError.create)(reindexRedeemers(v))))(function (reindexedUnattachedTx) {
              var attachedTx = reattachDatumsAndRedeemers(reindexedUnattachedTx);
              return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_Reader_Trans.monadReaderT(Ctl_Internal_Contract_Monad.monadContract)))(evalTxExecutionUnits(attachedTx)(reindexedUnattachedTx))(function (rdmrPtrExUnitsList) {
                  var reindexedUnattachedTxWithExUnits = updateTxExecutionUnits(reindexedUnattachedTx)(rdmrPtrExUnitsList);
                  return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_Reader_Trans.monadReaderT(Ctl_Internal_Contract_Monad.monadContract)))(finalizeTransaction(reindexedUnattachedTxWithExUnits)(allUtxos))(function (v1) {
                      return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_Reader_Trans.monadReaderT(Ctl_Internal_Contract_Monad.monadContract)))(Ctl_Internal_BalanceTx_Types.askNetworkId)(function (networkId) {
                          return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_Reader_Trans.monadReaderT(Ctl_Internal_Contract_Monad.monadContract)))(Data_Functor.map(Control_Monad_Except_Trans.functorExceptT(Control_Monad_Reader_Trans.functorReaderT(Ctl_Internal_Contract_Monad.functorContract)))(Ctl_Internal_Plutus_Conversion.fromPlutusUtxoMap(networkId))(Ctl_Internal_BalanceTx_Types.asksConstraints(function (dictStrong) {
                              return Ctl_Internal_BalanceTx_Constraints["_additionalUtxos"](dictStrong);
                          })))(function (additionalUtxos) {
                              return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_Reader_Trans.monadReaderT(Ctl_Internal_Contract_Monad.monadContract)))(Ctl_Internal_BalanceTx_Types.liftContract(Ctl_Internal_Contract_MinFee.calculateMinFee(v1)(additionalUtxos)))(function (minFee) {
                                  return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Control_Monad_Reader_Trans.monadReaderT(Ctl_Internal_Contract_Monad.monadContract)))(new Data_Tuple.Tuple(reindexedUnattachedTxWithExUnits, Data_Newtype.unwrap()(minFee)));
                              });
                          });
                      });
                  });
              });
          });
      };
  };
  exports["evalExUnitsAndMinFee"] = evalExUnitsAndMinFee;
  exports["finalizeTransaction"] = finalizeTransaction;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Ctl.Internal.BalanceTx"] = $PS["Ctl.Internal.BalanceTx"] || {};
  var exports = $PS["Ctl.Internal.BalanceTx"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_Error_Class = $PS["Control.Monad.Error.Class"];
  var Control_Monad_Except_Trans = $PS["Control.Monad.Except.Trans"];
  var Control_Monad_Logger_Class = $PS["Control.Monad.Logger.Class"];
  var Control_Monad_Reader_Trans = $PS["Control.Monad.Reader.Trans"];
  var Control_Parallel = $PS["Control.Parallel"];
  var Ctl_Internal_BalanceTx_CoinSelection = $PS["Ctl.Internal.BalanceTx.CoinSelection"];
  var Ctl_Internal_BalanceTx_Collateral = $PS["Ctl.Internal.BalanceTx.Collateral"];
  var Ctl_Internal_BalanceTx_Constraints = $PS["Ctl.Internal.BalanceTx.Constraints"];
  var Ctl_Internal_BalanceTx_Error = $PS["Ctl.Internal.BalanceTx.Error"];
  var Ctl_Internal_BalanceTx_ExUnitsAndMinFee = $PS["Ctl.Internal.BalanceTx.ExUnitsAndMinFee"];
  var Ctl_Internal_BalanceTx_Helpers = $PS["Ctl.Internal.BalanceTx.Helpers"];
  var Ctl_Internal_BalanceTx_Types = $PS["Ctl.Internal.BalanceTx.Types"];
  var Ctl_Internal_BalanceTx_UtxoMinAda = $PS["Ctl.Internal.BalanceTx.UtxoMinAda"];
  var Ctl_Internal_Cardano_Types_Transaction = $PS["Ctl.Internal.Cardano.Types.Transaction"];
  var Ctl_Internal_Cardano_Types_Value = $PS["Ctl.Internal.Cardano.Types.Value"];
  var Ctl_Internal_CoinSelection_UtxoIndex = $PS["Ctl.Internal.CoinSelection.UtxoIndex"];
  var Ctl_Internal_Contract = $PS["Ctl.Internal.Contract"];
  var Ctl_Internal_Contract_Monad = $PS["Ctl.Internal.Contract.Monad"];
  var Ctl_Internal_Contract_QueryHandle = $PS["Ctl.Internal.Contract.QueryHandle"];
  var Ctl_Internal_Contract_Wallet = $PS["Ctl.Internal.Contract.Wallet"];
  var Ctl_Internal_Helpers = $PS["Ctl.Internal.Helpers"];
  var Ctl_Internal_Partition = $PS["Ctl.Internal.Partition"];
  var Ctl_Internal_Plutus_Conversion_Value = $PS["Ctl.Internal.Plutus.Conversion.Value"];
  var Ctl_Internal_Plutus_Types_Value = $PS["Ctl.Internal.Plutus.Types.Value"];
  var Ctl_Internal_Types_OutputDatum = $PS["Ctl.Internal.Types.OutputDatum"];
  var Ctl_Internal_Types_Scripts = $PS["Ctl.Internal.Types.Scripts"];
  var Ctl_Internal_Types_Transaction = $PS["Ctl.Internal.Types.Transaction"];
  var Ctl_Internal_Types_UnbalancedTransaction = $PS["Ctl.Internal.Types.UnbalancedTransaction"];
  var Data_Array = $PS["Data.Array"];
  var Data_Array_NonEmpty = $PS["Data.Array.NonEmpty"];
  var Data_Array_NonEmpty_Internal = $PS["Data.Array.NonEmpty.Internal"];
  var Data_BigInt = $PS["Data.BigInt"];
  var Data_Either = $PS["Data.Either"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Lens_Getter = $PS["Data.Lens.Getter"];
  var Data_Lens_Internal_Forget = $PS["Data.Lens.Internal.Forget"];
  var Data_Lens_Setter = $PS["Data.Lens.Setter"];
  var Data_Log_Tag = $PS["Data.Log.Tag"];
  var Data_Map_Internal = $PS["Data.Map.Internal"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Profunctor_Strong = $PS["Data.Profunctor.Strong"];
  var Data_Ring = $PS["Data.Ring"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Semiring = $PS["Data.Semiring"];
  var Data_Set = $PS["Data.Set"];
  var Data_Show = $PS["Data.Show"];
  var Data_Traversable = $PS["Data.Traversable"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unfoldable = $PS["Data.Unfoldable"];
  var Effect = $PS["Effect"];
  var Effect_Aff_Class = $PS["Effect.Aff.Class"];
  var Effect_Class = $PS["Effect.Class"];                
  var PrebalanceTx = (function () {
      function PrebalanceTx(value0) {
          this.value0 = value0;
      };
      PrebalanceTx.create = function (value0) {
          return new PrebalanceTx(value0);
      };
      return PrebalanceTx;
  })();
  var BalanceChangeAndMinFee = (function () {
      function BalanceChangeAndMinFee(value0) {
          this.value0 = value0;
      };
      BalanceChangeAndMinFee.create = function (value0) {
          return new BalanceChangeAndMinFee(value0);
      };
      return BalanceChangeAndMinFee;
  })();
  var AssetCount = function (x) {
      return x;
  };
  var eqAssetCount = Ctl_Internal_Cardano_Types_Value.eqValue;
  var ordAssetCount = {
      compare: Data_Function.on(Data_Ord.compare(Data_Ord.ordInt))((function () {
          var $143 = Data_Newtype.unwrap();
          return function ($144) {
              return Data_Array.length(Ctl_Internal_Cardano_Types_Value.valueAssets($143($144)));
          };
      })()),
      Eq0: function () {
          return eqAssetCount;
      }
  };
  var setTxChangeOutputs = function (outputs) {
      return Data_Lens_Setter.over((function () {
          var $145 = Ctl_Internal_BalanceTx_Helpers["_body'"](Data_Profunctor_Strong.strongFn);
          var $146 = Ctl_Internal_Cardano_Types_Transaction["_outputs"](Data_Profunctor_Strong.strongFn);
          return function ($147) {
              return $145($146($147));
          };
      })())(Data_Function.flip(Data_Semigroup.append(Data_Semigroup.semigroupArray))(outputs));
  };
  var mkChangeOutput = function (changeAddress) {
      return function (amount) {
          return Data_Newtype.wrap()({
              address: changeAddress,
              amount: amount,
              datum: Ctl_Internal_Types_OutputDatum.NoOutputDatum.value,
              scriptRef: Data_Maybe.Nothing.value
          });
      };
  };
  var mintValue = function (txBody) {
      return Data_Maybe.maybe(Data_Monoid.mempty(Ctl_Internal_Cardano_Types_Value.monoidValue))((function () {
          var $148 = Ctl_Internal_Cardano_Types_Value.mkValue(Data_Monoid.mempty(Ctl_Internal_Cardano_Types_Value.monoidCoin));
          var $149 = Data_Newtype.unwrap();
          return function ($150) {
              return $148($149($150));
          };
      })())(Data_Lens_Getter.viewOn(txBody)(Ctl_Internal_Cardano_Types_Transaction["_mint"](Data_Lens_Internal_Forget.strongForget)));
  };
  var minFeeValue = function (txBody) {
      return Ctl_Internal_Cardano_Types_Value.mkValue(Data_Lens_Getter.viewOn(txBody)(Ctl_Internal_Cardano_Types_Transaction["_fee"](Data_Lens_Internal_Forget.strongForget)))(Data_Monoid.mempty(Ctl_Internal_Cardano_Types_Value.monoidNonAdaAsset));
  };
  var makeChangeForCoin = function (weights) {
      return function (excess) {
          return Data_Functor.map(Data_Array_NonEmpty_Internal.functorNonEmptyArray)(Ctl_Internal_Cardano_Types_Value.lovelaceValueOf)(Ctl_Internal_Helpers.fromMaybeFlipped(Ctl_Internal_Partition.partition(Ctl_Internal_Partition.partitionBigInt)(excess)(weights))(Ctl_Internal_Partition.equipartition(Ctl_Internal_Partition.equipartitionBigInt)(excess)(Data_Foldable.length(Data_Array_NonEmpty_Internal.foldableNonEmptyArray)(Data_Semiring.semiringInt)(weights))));
      };
  };
  var makeChangeForAsset = function (txOutputs) {
      return function (v) {
          var assetQuantities = Data_Functor.mapFlipped(Data_Functor.functorArray)(txOutputs)((function () {
              var $151 = Ctl_Internal_Cardano_Types_Value.getAssetQuantity(v.value0);
              var $152 = Data_Newtype.unwrap();
              return function ($153) {
                  return $151((function (v1) {
                      return v1.amount;
                  })($152($153)));
              };
          })());
          var weights = Ctl_Internal_Helpers.fromMaybeFlipped(Data_Array_NonEmpty.fromArray(assetQuantities))(Data_Array_NonEmpty.singleton(Data_Semiring.one(Data_BigInt.semiringBigInt)));
          return Data_Functor.map(Data_Array_NonEmpty_Internal.functorNonEmptyArray)(Ctl_Internal_Cardano_Types_Value.assetToValue(v.value0))(Ctl_Internal_Helpers.fromMaybeFlipped(Ctl_Internal_Partition.partition(Ctl_Internal_Partition.partitionBigInt)(v.value1)(weights))(Ctl_Internal_Partition.equipartition(Ctl_Internal_Partition.equipartitionBigInt)(v.value1)(Data_Foldable.length(Data_Array_NonEmpty_Internal.foldableNonEmptyArray)(Data_Semiring.semiringInt)(weights))));
      };
  };
  var initBalancerState = function (transaction) {
      return function ($154) {
          return (function (v) {
              return {
                  transaction: transaction,
                  leftoverUtxos: v,
                  changeOutputs: Data_Monoid.mempty(Data_Monoid.monoidArray),
                  minFee: Data_Semiring.zero(Data_BigInt.semiringBigInt)
              };
          })(Ctl_Internal_CoinSelection_UtxoIndex.buildUtxoIndex($154));
      };
  };
  var getStakingBalance = function (tx) {
      return function (depositLovelacesPerCert) {
          var stakeWithdrawals = Data_Newtype.unwrap()(Data_Foldable.fold(Data_Map_Internal.foldableMap)(Ctl_Internal_Cardano_Types_Value.monoidCoin)(Data_Maybe.fromMaybe(Data_Map_Internal.empty)(Data_Lens_Getter.viewOn(tx)((function () {
              var $155 = Ctl_Internal_Cardano_Types_Transaction["_body"](Data_Lens_Internal_Forget.strongForget);
              var $156 = Ctl_Internal_Cardano_Types_Transaction["_withdrawals"](Data_Lens_Internal_Forget.strongForget);
              return function ($157) {
                  return $155($156($157));
              };
          })()))));
          var stakeDeposits = (function () {
              var $158 = Data_Foldable.sum(Data_Foldable.foldableArray)(Data_BigInt.semiringBigInt);
              var $159 = Data_Functor.map(Data_Functor.functorArray)(function (v) {
                  if (v instanceof Ctl_Internal_Cardano_Types_Transaction.StakeRegistration) {
                      return Data_Newtype.unwrap()(depositLovelacesPerCert);
                  };
                  if (v instanceof Ctl_Internal_Cardano_Types_Transaction.StakeDeregistration) {
                      return Data_Ring.negate(Data_BigInt.ringBigInt)(Data_Newtype.unwrap()(depositLovelacesPerCert));
                  };
                  return Data_Semiring.zero(Data_BigInt.semiringBigInt);
              });
              return function ($160) {
                  return $158($159($160));
              };
          })()(Data_Foldable.fold(Data_Foldable.foldableMaybe)(Data_Monoid.monoidArray)(Data_Lens_Getter.viewOn(tx)((function () {
              var $161 = Ctl_Internal_Cardano_Types_Transaction["_body"](Data_Lens_Internal_Forget.strongForget);
              var $162 = Ctl_Internal_Cardano_Types_Transaction["_certs"](Data_Lens_Internal_Forget.strongForget);
              return function ($163) {
                  return $161($162($163));
              };
          })())));
          var fee = Data_Ring.sub(Data_BigInt.ringBigInt)(stakeDeposits)(stakeWithdrawals);
          return fee;
      };
  };
  var getAmount = (function () {
      var $164 = Data_Newtype.unwrap();
      return function ($165) {
          return (function (v) {
              return v.amount;
          })($164($165));
      };
  })();
  var getInputValue = function (utxos) {
      return function (txBody) {
          return Data_Functor.map(Data_Either.functorEither)(Data_Foldable.foldMap(Data_Foldable.foldableArray)(Ctl_Internal_Cardano_Types_Value.monoidValue)(getAmount))(Data_Traversable["for"](Data_Either.applicativeEither)(Data_Traversable.traversableArray)(Data_Array.fromFoldable(Data_Set.foldableSet)(Data_Lens_Getter.viewOn(txBody)(Ctl_Internal_Cardano_Types_Transaction["_inputs"](Data_Lens_Internal_Forget.strongForget))))(function (oref) {
              return Data_Either.note(new Ctl_Internal_BalanceTx_Error.UtxoLookupFailedFor(oref))(Data_Map_Internal.lookup(Ctl_Internal_Types_Transaction.ordTransactionInput)(oref)(utxos));
          }));
      };
  };
  var outputValue = function (txBody) {
      return Data_Foldable.foldMap(Data_Foldable.foldableArray)(Ctl_Internal_Cardano_Types_Value.monoidValue)(getAmount)(Data_Lens_Getter.viewOn(txBody)(Ctl_Internal_Cardano_Types_Transaction["_outputs"](Data_Lens_Internal_Forget.strongForget)));
  };
  var getRequiredValue = function (certsFee) {
      return function (utxos) {
          return function (txBody) {
              return Data_Functor.mapFlipped(Data_Either.functorEither)(getInputValue(utxos)(txBody))(function (inputValue) {
                  return Ctl_Internal_Cardano_Types_Value.minus(Data_Semigroup.append(Ctl_Internal_Cardano_Types_Value.semigroupValue)(outputValue(txBody))(Data_Semigroup.append(Ctl_Internal_Cardano_Types_Value.semigroupValue)(minFeeValue(txBody))(Ctl_Internal_Cardano_Types_Value.coinToValue(certsFee))))(Data_Semigroup.append(Ctl_Internal_Cardano_Types_Value.semigroupValue)(inputValue)(mintValue(txBody)));
              });
          };
      };
  };
  var logTransactionWithChange = function (message) {
      return function (utxos) {
          return function (mChangeOutputs) {
              return function (unbalancedTx) {
                  var txBody = Data_Lens_Getter.viewOn(unbalancedTx)(Ctl_Internal_BalanceTx_Helpers["_body'"](Data_Lens_Internal_Forget.strongForget));
                  var tag = function (dictShow) {
                      return function (title) {
                          var $166 = Data_Log_Tag.tag(title);
                          var $167 = Data_Show.show(dictShow);
                          return function ($168) {
                              return $166($167($168));
                          };
                      };
                  };
                  var outputValuesTagSet = function (v) {
                      if (v instanceof Data_Maybe.Nothing) {
                          return [ tag(Ctl_Internal_Cardano_Types_Value.showValue)("Output Value")(outputValue(txBody)) ];
                      };
                      if (v instanceof Data_Maybe.Just) {
                          return [ tag(Ctl_Internal_Cardano_Types_Value.showValue)("Output Value without change")(outputValue(txBody)), tag(Ctl_Internal_Cardano_Types_Value.showValue)("Change Value")(Data_Foldable.foldMap(Data_Foldable.foldableArray)(Ctl_Internal_Cardano_Types_Value.monoidValue)(getAmount)(v.value0)) ];
                      };
                      throw new Error("Failed pattern match at Ctl.Internal.BalanceTx (line 765, column 5 - line 765, column 74): " + [ v.constructor.name ]);
                  };
                  var transactionInfo = function (inputValue) {
                      return Data_Log_Tag.fromArray(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ tag(Ctl_Internal_Cardano_Types_Value.showValue)("Input Value")(inputValue), tag(Ctl_Internal_Cardano_Types_Value.showValue)("Mint Value")(mintValue(txBody)), tag(Ctl_Internal_Cardano_Types_Value.showCoin)("Fees")(Data_Lens_Getter.viewOn(txBody)(Ctl_Internal_Cardano_Types_Transaction["_fee"](Data_Lens_Internal_Forget.strongForget))) ])(outputValuesTagSet(mChangeOutputs)));
                  };
                  return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_Reader_Trans.monadReaderT(Ctl_Internal_Contract_Monad.monadContract)))(Control_Monad_Except_Trans.except(Control_Monad_Reader_Trans.applicativeReaderT(Ctl_Internal_Contract_Monad.applicativeContract))(getInputValue(utxos)(txBody)))((function () {
                      var $169 = Data_Function.flip(Control_Monad_Logger_Class.trace(Control_Monad_Logger_Class.monadLoggerExceptT(Control_Monad_Logger_Class.monadLoggerReaderT(Ctl_Internal_Contract_Monad.monadLoggerContract))))(message + ":");
                      return function ($170) {
                          return $169(transactionInfo($170));
                      };
                  })());
              };
          };
      };
  };
  var logBalancerState = function (message) {
      return function (utxos) {
          return function (v) {
              return logTransactionWithChange(message)(utxos)(new Data_Maybe.Just(v.changeOutputs))(v.transaction);
          };
      };
  };
  var logTransaction = function (message) {
      return function (utxos) {
          return logTransactionWithChange(message)(utxos)(Data_Maybe.Nothing.value);
      };
  };
  var assignCoinsToChangeValues = function (changeAddress) {
      return function (adaAvailable) {
          return function (pairsAtStart) {
              var worker = function (adaRequired) {
                  var noTokens = (function () {
                      var $171 = Data_Foldable["null"](Data_Foldable.foldableArray);
                      return function ($172) {
                          return $171(Ctl_Internal_Cardano_Types_Value.valueAssets((function (v) {
                              return v.value;
                          })($172)));
                      };
                  })();
                  var assignMinCoin = function (v) {
                      return Ctl_Internal_Cardano_Types_Value.mkValue(Data_Newtype.wrap()(v.minCoin))(v.value.value1);
                  };
                  return function ($173) {
                      return (function (v) {
                          var v1 = function (v2) {
                              var changeValues = Data_Array_NonEmpty["cons'"](v.head)(v.tail);
                              var changeValuesWithMinCoins = Data_Functor.map(Data_Array_NonEmpty_Internal.functorNonEmptyArray)(assignMinCoin)(changeValues);
                              var adaRemaining = Data_Ord.max(Data_BigInt.ordBigInt)(Data_Semiring.zero(Data_BigInt.semiringBigInt))(Data_Ring.sub(Data_BigInt.ringBigInt)(adaAvailable)(adaRequired));
                              var changeValuesForOutputCoins = makeChangeForCoin(Data_Functor.map(Data_Array_NonEmpty_Internal.functorNonEmptyArray)(function (v3) {
                                  return v3.outputAda;
                              })(changeValues))(adaRemaining);
                              return Data_Array_NonEmpty.toArray(Data_Array_NonEmpty.zipWith(Data_Semigroup.append(Ctl_Internal_Cardano_Types_Value.semigroupValue))(changeValuesWithMinCoins)(changeValuesForOutputCoins));
                          };
                          var $76 = Data_Array_NonEmpty.fromArray(v.tail);
                          if ($76 instanceof Data_Maybe.Just) {
                              var $77 = Data_Ord.lessThan(Data_BigInt.ordBigInt)(adaAvailable)(adaRequired) && noTokens(v.head);
                              if ($77) {
                                  return worker(Data_Ring.sub(Data_BigInt.ringBigInt)(adaRequired)(v.head.minCoin))($76.value0);
                              };
                              return v1(true);
                          };
                          return v1(true);
                      })(Data_Array_NonEmpty.uncons($173));
                  };
              };
              var minCoinFor = function (value) {
                  var txOutput = mkChangeOutput(changeAddress)(value);
                  return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_Reader_Trans.monadReaderT(Ctl_Internal_Contract_Monad.monadContract)))(Ctl_Internal_BalanceTx_Types.askCoinsPerUtxoUnit)(function (coinsPerUtxoUnit) {
                      return Effect_Class.liftEffect(Control_Monad_Reader_Trans.monadEffectReader(Ctl_Internal_Contract_Monad.monadEffectContract))(Data_Functor.mapFlipped(Effect.functorEffect)(Ctl_Internal_BalanceTx_UtxoMinAda.utxoMinAdaValue(coinsPerUtxoUnit)(txOutput))(Data_Either.note(Ctl_Internal_BalanceTx_Error.UtxoMinAdaValueCalculationFailed.value)));
                  });
              };
              var changeValuesAtStart = Data_Traversable["for"](Control_Monad_Except_Trans.applicativeExceptT(Control_Monad_Reader_Trans.monadReaderT(Ctl_Internal_Contract_Monad.monadContract)))(Data_Array_NonEmpty_Internal.traversableNonEmptyArray)(pairsAtStart)(function (v) {
                  return Data_Functor.map(Control_Monad_Except_Trans.functorExceptT(Control_Monad_Reader_Trans.functorReaderT(Ctl_Internal_Contract_Monad.functorContract)))(function (v1) {
                      return {
                          value: v.value0,
                          outputAda: v.value1,
                          minCoin: v1
                      };
                  })(minCoinFor(v.value0));
              });
              var adaRequiredAtStart = (function () {
                  var $174 = Data_Foldable.sum(Data_Array_NonEmpty_Internal.foldableNonEmptyArray)(Data_BigInt.semiringBigInt);
                  var $175 = Data_Functor.map(Data_Array_NonEmpty_Internal.functorNonEmptyArray)(function (v) {
                      return v.minCoin;
                  });
                  return function ($176) {
                      return $174($175($176));
                  };
              })();
              return Data_Functor.mapFlipped(Control_Monad_Except_Trans.functorExceptT(Control_Monad_Reader_Trans.functorReaderT(Ctl_Internal_Contract_Monad.functorContract)))(changeValuesAtStart)(function (changeValues) {
                  return worker(adaRequiredAtStart(changeValues))(changeValues);
              });
          };
      };
  };
  var makeChange = function (changeAddress) {
      return function (inputValue) {
          return function (certsFee) {
              return function (txBody) {
                  var txOutputs = Data_Lens_Getter.viewOn(txBody)(Ctl_Internal_Cardano_Types_Transaction["_outputs"](Data_Lens_Internal_Forget.strongForget));
                  var splitOversizedValues = function (pairs) {
                      var unbundle = function (v) {
                          return new Data_Tuple.Tuple(Ctl_Internal_Cardano_Types_Value.mkValue(Data_Monoid.mempty(Ctl_Internal_Cardano_Types_Value.monoidCoin))(v.value1), Data_Newtype.unwrap()(v.value0));
                      };
                      var bundle = function (v) {
                          return Ctl_Internal_Cardano_Types_Value.mkValue(Data_Newtype.wrap()(v.value1))(v.value0.value1);
                      };
                      return Data_Functor.mapFlipped(Control_Monad_Except_Trans.functorExceptT(Control_Monad_Reader_Trans.functorReaderT(Ctl_Internal_Contract_Monad.functorContract)))(Ctl_Internal_BalanceTx_Types.asksConstraints(function (dictStrong) {
                          return Ctl_Internal_BalanceTx_Constraints["_maxChangeOutputTokenQuantity"](dictStrong);
                      }))(function (v) {
                          if (v instanceof Data_Maybe.Nothing) {
                              return pairs;
                          };
                          if (v instanceof Data_Maybe.Just) {
                              return Data_Functor.map(Data_Array_NonEmpty_Internal.functorNonEmptyArray)(unbundle)(Control_Bind.bindFlipped(Data_Array_NonEmpty_Internal.bindNonEmptyArray)(Ctl_Internal_Cardano_Types_Value.equipartitionValueWithTokenQuantityUpperBound(v.value0))(Data_Functor.map(Data_Array_NonEmpty_Internal.functorNonEmptyArray)(bundle)(pairs)));
                          };
                          throw new Error("Failed pattern match at Ctl.Internal.BalanceTx (line 506, column 67 - line 512, column 12): " + [ v.constructor.name ]);
                      });
                  };
                  var posValue = function (v) {
                      return Ctl_Internal_Cardano_Types_Value.mkValue(Data_Ord.max(Data_BigInt.ordBigInt)(v.value0)(Data_Semiring.zero(Data_BigInt.semiringBigInt)))(Ctl_Internal_Cardano_Types_Value.posNonAdaAsset(v.value1));
                  };
                  var outputCoins = Ctl_Internal_Helpers.fromMaybeFlipped(Data_Array_NonEmpty.fromArray(Data_Functor.map(Data_Functor.functorArray)((function () {
                      var $177 = Data_Newtype.unwrap();
                      return function ($178) {
                          return Ctl_Internal_Cardano_Types_Value["valueToCoin'"]((function (v) {
                              return v.amount;
                          })($177($178)));
                      };
                  })())(txOutputs)))(Data_Array_NonEmpty.singleton(Data_Semiring.zero(Data_BigInt.semiringBigInt)));
                  var excessValue = posValue(Ctl_Internal_Cardano_Types_Value.minus(Data_Semigroup.append(Ctl_Internal_Cardano_Types_Value.semigroupValue)(inputValue)(mintValue(txBody)))(Data_Semigroup.append(Ctl_Internal_Cardano_Types_Value.semigroupValue)(outputValue(txBody))(Data_Semigroup.append(Ctl_Internal_Cardano_Types_Value.semigroupValue)(minFeeValue(txBody))(Ctl_Internal_Cardano_Types_Value.coinToValue(certsFee)))));
                  var excessCoin = Ctl_Internal_Cardano_Types_Value["valueToCoin'"](excessValue);
                  var excessAssets = Ctl_Internal_Cardano_Types_Value.valueAssets(excessValue);
                  var changeForAssets = Data_Foldable.foldr(Data_Foldable.foldableArray)((function () {
                      var $179 = Data_Array_NonEmpty.zipWith(Data_Semigroup.append(Ctl_Internal_Cardano_Types_Value.semigroupValue));
                      var $180 = makeChangeForAsset(txOutputs);
                      return function ($181) {
                          return $179($180($181));
                      };
                  })())(Data_Array_NonEmpty.replicate(Data_Foldable.length(Data_Foldable.foldableArray)(Data_Semiring.semiringInt)(txOutputs))(Data_Monoid.mempty(Ctl_Internal_Cardano_Types_Value.monoidValue)))(excessAssets);
                  var changeValueOutputCoinPairs = Data_Array_NonEmpty.sortWith(ordAssetCount)(function ($182) {
                      return AssetCount(Data_Tuple.fst($182));
                  })(Data_Array_NonEmpty.zip(changeForAssets)(outputCoins));
                  var $97 = Data_Eq.eq(Ctl_Internal_Cardano_Types_Value.eqValue)(excessValue)(Data_Monoid.mempty(Ctl_Internal_Cardano_Types_Value.monoidValue)) && Data_Eq.notEq(Data_Eq.eqArray(Ctl_Internal_Cardano_Types_Transaction.eqTransactionOutput))(Data_Lens_Getter.viewOn(txBody)(Ctl_Internal_Cardano_Types_Transaction["_outputs"](Data_Lens_Internal_Forget.strongForget)))(Data_Monoid.mempty(Data_Monoid.monoidArray));
                  if ($97) {
                      return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Control_Monad_Reader_Trans.monadReaderT(Ctl_Internal_Contract_Monad.monadContract)))(Data_Monoid.mempty(Data_Monoid.monoidArray));
                  };
                  return Data_Functor.map(Control_Monad_Except_Trans.functorExceptT(Control_Monad_Reader_Trans.functorReaderT(Ctl_Internal_Contract_Monad.functorContract)))(Data_Functor.map(Data_Functor.functorArray)(mkChangeOutput(changeAddress)))(Control_Bind.bindFlipped(Control_Monad_Except_Trans.bindExceptT(Control_Monad_Reader_Trans.monadReaderT(Ctl_Internal_Contract_Monad.monadContract)))(assignCoinsToChangeValues(changeAddress)(excessCoin))(splitOversizedValues(changeValueOutputCoinPairs)));
              };
          };
      };
  };
  var addLovelacesToTransactionOutput = function (txOutput) {
      return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_Reader_Trans.monadReaderT(Ctl_Internal_Contract_Monad.monadContract)))(Ctl_Internal_BalanceTx_Types.askCoinsPerUtxoUnit)(function (coinsPerUtxoUnit) {
          return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_Reader_Trans.monadReaderT(Ctl_Internal_Contract_Monad.monadContract)))(Effect_Class.liftEffect(Control_Monad_Reader_Trans.monadEffectReader(Ctl_Internal_Contract_Monad.monadEffectContract))(Data_Functor.mapFlipped(Effect.functorEffect)(Ctl_Internal_BalanceTx_UtxoMinAda.utxoMinAdaValue(coinsPerUtxoUnit)(txOutput))(Data_Either.note(Ctl_Internal_BalanceTx_Error.UtxoMinAdaValueCalculationFailed.value))))(function (txOutputMinAda) {
              var txOutputRec = Data_Newtype.unwrap()(txOutput);
              var newCoin = Data_Ord.max(Data_BigInt.ordBigInt)(Ctl_Internal_Cardano_Types_Value["valueToCoin'"](txOutputRec.amount))(txOutputMinAda);
              return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Control_Monad_Reader_Trans.monadReaderT(Ctl_Internal_Contract_Monad.monadContract)))(Data_Newtype.wrap()((function () {
                  var $98 = {};
                  for (var $99 in txOutputRec) {
                      if ({}.hasOwnProperty.call(txOutputRec, $99)) {
                          $98[$99] = txOutputRec[$99];
                      };
                  };
                  $98.amount = Ctl_Internal_Cardano_Types_Value.mkValue(newCoin)(Ctl_Internal_Cardano_Types_Value.getNonAdaAsset(txOutputRec.amount));
                  return $98;
              })()));
          });
      });
  };
  var addLovelacesToTransactionOutputs = function (unbalancedTx) {
      return Data_Functor.map(Control_Monad_Except_Trans.functorExceptT(Control_Monad_Reader_Trans.functorReaderT(Ctl_Internal_Contract_Monad.functorContract)))(function (txOutputs) {
          return Data_Lens_Setter.set((function () {
              var $183 = Ctl_Internal_BalanceTx_Helpers["_body'"](Data_Profunctor_Strong.strongFn);
              var $184 = Ctl_Internal_Cardano_Types_Transaction["_outputs"](Data_Profunctor_Strong.strongFn);
              return function ($185) {
                  return $183($184($185));
              };
          })())(txOutputs)(unbalancedTx);
      })(Data_Traversable.traverse(Data_Traversable.traversableArray)(Control_Monad_Except_Trans.applicativeExceptT(Control_Monad_Reader_Trans.monadReaderT(Ctl_Internal_Contract_Monad.monadContract)))(addLovelacesToTransactionOutput)(Data_Lens_Getter.viewOn(unbalancedTx)((function () {
          var $186 = Ctl_Internal_BalanceTx_Helpers["_body'"](Data_Lens_Internal_Forget.strongForget);
          var $187 = Ctl_Internal_Cardano_Types_Transaction["_outputs"](Data_Lens_Internal_Forget.strongForget);
          return function ($188) {
              return $186($187($188));
          };
      })())));
  };
  var runBalancer = function (p) {
      var txHasPlutusV1 = (function () {
          var v = Data_Lens_Getter.viewOn(Data_Lens_Getter.viewOn(Data_Lens_Getter.viewOn(p.unbalancedTx)(Ctl_Internal_BalanceTx_Helpers["_transaction'"](Data_Lens_Internal_Forget.strongForget)))(Ctl_Internal_Cardano_Types_Transaction["_witnessSet"](Data_Lens_Internal_Forget.strongForget)))(Ctl_Internal_Cardano_Types_Transaction["_plutusScripts"](Data_Lens_Internal_Forget.strongForget));
          if (v instanceof Data_Maybe.Just) {
              return Data_Function.flip(Data_Array.any)(v.value0)(function (v1) {
                  if (v1.value1 instanceof Ctl_Internal_Types_Scripts.PlutusV1) {
                      return true;
                  };
                  return false;
              });
          };
          if (v instanceof Data_Maybe.Nothing) {
              return false;
          };
          throw new Error("Failed pattern match at Ctl.Internal.BalanceTx (line 288, column 5 - line 292, column 23): " + [ v.constructor.name ]);
      })();
      var partitionAndFilterUtxos = Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_Reader_Trans.monadReaderT(Ctl_Internal_Contract_Monad.monadContract)))(Data_Functor.map(Control_Monad_Except_Trans.functorExceptT(Control_Monad_Reader_Trans.functorReaderT(Ctl_Internal_Contract_Monad.functorContract)))(Data_Maybe.isJust)(Ctl_Internal_BalanceTx_Types.askCip30Wallet))(function (isCip30) {
          return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_Reader_Trans.monadReaderT(Ctl_Internal_Contract_Monad.monadContract)))((function () {
              if (isCip30) {
                  return Ctl_Internal_BalanceTx_Types.liftContract(Data_Functor.mapFlipped(Ctl_Internal_Contract_Monad.functorContract)(Ctl_Internal_Contract_Wallet.getWalletCollateral)((function () {
                      var $189 = Data_Set.fromFoldable(Data_Foldable.foldableArray)(Ctl_Internal_Types_Transaction.ordTransactionInput);
                      var $190 = Data_Functor.map(Data_Functor.functorArray)((function () {
                          var $193 = Data_Newtype.unwrap();
                          return function ($194) {
                              return (function (v) {
                                  return v.input;
                              })($193($194));
                          };
                      })());
                      var $191 = Data_Foldable.fold(Data_Foldable.foldableMaybe)(Data_Monoid.monoidArray);
                      return function ($192) {
                          return $189($190($191($192)));
                      };
                  })()));
              };
              return Data_Monoid.mempty(Control_Monad_Except_Trans.monoidExceptT(Control_Monad_Reader_Trans.monadReaderT(Ctl_Internal_Contract_Monad.monadContract))(Data_Set.monoidSet(Ctl_Internal_Types_Transaction.ordTransactionInput)));
          })())(function (nonSpendableCollateralInputs) {
              return Data_Functor.mapFlipped(Control_Monad_Except_Trans.functorExceptT(Control_Monad_Reader_Trans.functorReaderT(Ctl_Internal_Contract_Monad.functorContract)))(Ctl_Internal_BalanceTx_Types.asksConstraints(function (dictStrong) {
                  return Ctl_Internal_BalanceTx_Constraints["_nonSpendableInputs"](dictStrong);
              }))((function () {
                  var $195 = Data_Semigroup.append(Data_Set.semigroupSet(Ctl_Internal_Types_Transaction.ordTransactionInput))(nonSpendableCollateralInputs);
                  return function ($196) {
                      return (function (nonSpendableInputs) {
                          return Data_Foldable.foldr(Data_Foldable.foldableArray)(function (v) {
                              return function (acc) {
                                  var spendable = !(Data_Set.member(Ctl_Internal_Types_Transaction.ordTransactionInput)(v.value0)(nonSpendableInputs) || Data_Set.member(Ctl_Internal_Types_Transaction.ordTransactionInput)(v.value0)(Data_Lens_Getter.viewOn(p.unbalancedTx)((function () {
                                      var $197 = Ctl_Internal_BalanceTx_Helpers["_body'"](Data_Lens_Internal_Forget.strongForget);
                                      var $198 = Ctl_Internal_Cardano_Types_Transaction["_referenceInputs"](Data_Lens_Internal_Forget.strongForget);
                                      return function ($199) {
                                          return $197($198($199));
                                      };
                                  })())));
                                  var hasScriptRef = Data_Maybe.isJust((Data_Newtype.unwrap()(v.value1)).scriptRef);
                                  var hasInlineDatum = (function () {
                                      var v1 = (Data_Newtype.unwrap()(v.value1)).datum;
                                      if (v1 instanceof Ctl_Internal_Types_OutputDatum.OutputDatum) {
                                          return true;
                                      };
                                      return false;
                                  })();
                                  var validInContext = !(txHasPlutusV1 && (hasInlineDatum || hasScriptRef));
                                  if (spendable && validInContext) {
                                      return {
                                          spendable: Data_Map_Internal.insert(Ctl_Internal_Types_Transaction.ordTransactionInput)(v.value0)(v.value1)(acc.spendable),
                                          invalidInContext: acc.invalidInContext
                                      };
                                  };
                                  if (spendable && !validInContext) {
                                      return {
                                          invalidInContext: Data_Map_Internal.insert(Ctl_Internal_Types_Transaction.ordTransactionInput)(v.value0)(v.value1)(acc.invalidInContext),
                                          spendable: acc.spendable
                                      };
                                  };
                                  return acc;
                              };
                          })({
                              spendable: Data_Map_Internal.empty,
                              invalidInContext: Data_Map_Internal.empty
                          })(Data_Map_Internal.toUnfoldable(Data_Unfoldable.unfoldableArray)(p.utxos));
                      })($195($196));
                  };
              })());
          });
      });
      var mainLoop = (function () {
          var prebalanceTx = function (v) {
              var performCoinSelection = (function () {
                  var txBody = Data_Lens_Getter.viewOn(setTxChangeOutputs(v.changeOutputs)(v.transaction))(Ctl_Internal_BalanceTx_Helpers["_body'"](Data_Lens_Internal_Forget.strongForget));
                  return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_Reader_Trans.monadReaderT(Ctl_Internal_Contract_Monad.monadContract)))(Control_Monad_Except_Trans.except(Control_Monad_Reader_Trans.applicativeReaderT(Ctl_Internal_Contract_Monad.applicativeContract))(getRequiredValue(p.certsFee)(p.allUtxos)(txBody)))(Ctl_Internal_BalanceTx_CoinSelection.performMultiAssetSelection(Control_Monad_Except_Trans.monadEffectExceptT(Control_Monad_Reader_Trans.monadEffectReader(Ctl_Internal_Contract_Monad.monadEffectContract)))(Control_Monad_Except_Trans.monadThrowExceptT(Control_Monad_Reader_Trans.monadReaderT(Ctl_Internal_Contract_Monad.monadContract)))(p.strategy)(v.leftoverUtxos));
              })();
              return Data_Functor.mapFlipped(Control_Monad_Except_Trans.functorExceptT(Control_Monad_Reader_Trans.functorReaderT(Ctl_Internal_Contract_Monad.functorContract)))(performCoinSelection)(function (selectionState) {
                  return {
                      transaction: Data_Lens_Setter.over((function () {
                          var $200 = Ctl_Internal_BalanceTx_Helpers["_body'"](Data_Profunctor_Strong.strongFn);
                          var $201 = Ctl_Internal_Cardano_Types_Transaction["_inputs"](Data_Profunctor_Strong.strongFn);
                          return function ($202) {
                              return $200($201($202));
                          };
                      })())(Data_Set.union(Ctl_Internal_Types_Transaction.ordTransactionInput)(Ctl_Internal_BalanceTx_CoinSelection.selectedInputs(selectionState)))(v.transaction),
                      leftoverUtxos: Data_Lens_Getter.viewOn(selectionState)(Ctl_Internal_BalanceTx_CoinSelection["_leftoverUtxos"](Data_Lens_Internal_Forget.strongForget)),
                      changeOutputs: v.changeOutputs,
                      minFee: v.minFee
                  };
              });
          };
          var evaluateTx = function (v) {
              var prebalancedTx = Data_Newtype.wrap()(setTxChangeOutputs(v.changeOutputs)(v.transaction));
              return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_Reader_Trans.monadReaderT(Ctl_Internal_Contract_Monad.monadContract)))(Ctl_Internal_BalanceTx_ExUnitsAndMinFee.evalExUnitsAndMinFee(prebalancedTx)(p.allUtxos))(function (v1) {
                  return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Control_Monad_Reader_Trans.monadReaderT(Ctl_Internal_Contract_Monad.monadContract)))({
                      transaction: v1.value0,
                      minFee: v1.value1,
                      changeOutputs: v.changeOutputs,
                      leftoverUtxos: v.leftoverUtxos
                  });
              });
          };
          var worker = function (v) {
              if (v instanceof PrebalanceTx) {
                  return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Except_Trans.bindExceptT(Control_Monad_Reader_Trans.monadReaderT(Ctl_Internal_Contract_Monad.monadContract)))(logBalancerState("Pre-balancing (Stage 1)")(p.allUtxos)(v.value0))(function () {
                      return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_Reader_Trans.monadReaderT(Ctl_Internal_Contract_Monad.monadContract)))(prebalanceTx(v.value0))(runNextBalancerStep);
                  });
              };
              if (v instanceof BalanceChangeAndMinFee) {
                  return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Except_Trans.bindExceptT(Control_Monad_Reader_Trans.monadReaderT(Ctl_Internal_Contract_Monad.monadContract)))(logBalancerState("Balancing change and fees (Stage 2)")(p.allUtxos)(v.value0))(function () {
                      return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_Reader_Trans.monadReaderT(Ctl_Internal_Contract_Monad.monadContract)))(evaluateTx(v.value0))(function (v1) {
                          var v2 = Data_Ord.lessThanOrEq(Data_BigInt.ordBigInt)(v1.minFee)(v.value0.minFee);
                          if (v2) {
                              var $128 = Data_Set.isEmpty(Data_Lens_Getter.viewOn(v1.transaction)((function () {
                                  var $203 = Ctl_Internal_BalanceTx_Helpers["_body'"](Data_Lens_Internal_Forget.strongForget);
                                  var $204 = Ctl_Internal_Cardano_Types_Transaction["_inputs"](Data_Lens_Internal_Forget.strongForget);
                                  return function ($205) {
                                      return $203($204($205));
                                  };
                              })()));
                              if ($128) {
                                  return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_Reader_Trans.monadReaderT(Ctl_Internal_Contract_Monad.monadContract)))(Ctl_Internal_BalanceTx_CoinSelection.performMultiAssetSelection(Control_Monad_Except_Trans.monadEffectExceptT(Control_Monad_Reader_Trans.monadEffectReader(Ctl_Internal_Contract_Monad.monadEffectContract)))(Control_Monad_Except_Trans.monadThrowExceptT(Control_Monad_Reader_Trans.monadReaderT(Ctl_Internal_Contract_Monad.monadContract)))(p.strategy)(v.value0.leftoverUtxos)(Ctl_Internal_Cardano_Types_Value.lovelaceValueOf(Data_Semiring.one(Data_BigInt.semiringBigInt))))(function (selectionState) {
                                      return runNextBalancerStep({
                                          transaction: Data_Lens_Setter.over((function () {
                                              var $206 = Ctl_Internal_BalanceTx_Helpers["_body'"](Data_Profunctor_Strong.strongFn);
                                              var $207 = Ctl_Internal_Cardano_Types_Transaction["_inputs"](Data_Profunctor_Strong.strongFn);
                                              return function ($208) {
                                                  return $206($207($208));
                                              };
                                          })())(Data_Set.union(Ctl_Internal_Types_Transaction.ordTransactionInput)(Ctl_Internal_BalanceTx_CoinSelection.selectedInputs(selectionState)))(v1.transaction),
                                          leftoverUtxos: Data_Lens_Getter.viewOn(selectionState)(Ctl_Internal_BalanceTx_CoinSelection["_leftoverUtxos"](Data_Lens_Internal_Forget.strongForget)),
                                          changeOutputs: v.value0.changeOutputs,
                                          minFee: v.value0.minFee
                                      });
                                  });
                              };
                              return Control_Apply.applySecond(Control_Monad_Except_Trans.applyExceptT(Control_Monad_Reader_Trans.monadReaderT(Ctl_Internal_Contract_Monad.monadContract)))(logTransaction("Balanced transaction (Done)")(p.allUtxos)(v1.transaction))(Ctl_Internal_BalanceTx_ExUnitsAndMinFee.finalizeTransaction(v1.transaction)(p.allUtxos));
                          };
                          if (!v2) {
                              return runNextBalancerStep({
                                  transaction: Data_Lens_Setter.set((function () {
                                      var $209 = Ctl_Internal_BalanceTx_Helpers["_body'"](Data_Profunctor_Strong.strongFn);
                                      var $210 = Ctl_Internal_Cardano_Types_Transaction["_fee"](Data_Profunctor_Strong.strongFn);
                                      return function ($211) {
                                          return $209($210($211));
                                      };
                                  })())(v1.minFee)(v.value0.transaction),
                                  leftoverUtxos: v.value0.leftoverUtxos,
                                  changeOutputs: v.value0.changeOutputs,
                                  minFee: v1.minFee
                              });
                          };
                          throw new Error("Failed pattern match at Ctl.Internal.BalanceTx (line 353, column 9 - line 373, column 16): " + [ v2.constructor.name ]);
                      });
                  });
              };
              throw new Error("Failed pattern match at Ctl.Internal.BalanceTx (line 345, column 5 - line 345, column 62): " + [ v.constructor.name ]);
          };
          var runNextBalancerStep = function (v) {
              var txBody = Data_Lens_Getter.viewOn(v.transaction)(Ctl_Internal_BalanceTx_Helpers["_body'"](Data_Lens_Internal_Forget.strongForget));
              return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_Reader_Trans.monadReaderT(Ctl_Internal_Contract_Monad.monadContract)))(Control_Monad_Except_Trans.except(Control_Monad_Reader_Trans.applicativeReaderT(Ctl_Internal_Contract_Monad.applicativeContract))(getInputValue(p.allUtxos)(txBody)))(function (inputValue) {
                  return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_Reader_Trans.monadReaderT(Ctl_Internal_Contract_Monad.monadContract)))(makeChange(p.changeAddress)(inputValue)(p.certsFee)(txBody))(function (changeOutputs) {
                      return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_Reader_Trans.monadReaderT(Ctl_Internal_Contract_Monad.monadContract)))(Control_Monad_Except_Trans.except(Control_Monad_Reader_Trans.applicativeReaderT(Ctl_Internal_Contract_Monad.applicativeContract))(getRequiredValue(p.certsFee)(p.allUtxos)(Data_Lens_Getter.viewOn(setTxChangeOutputs(changeOutputs)(v.transaction))(Ctl_Internal_BalanceTx_Helpers["_body'"](Data_Lens_Internal_Forget.strongForget)))))(function (requiredValue) {
                          return worker((function () {
                              var $136 = Data_Eq.eq(Ctl_Internal_Cardano_Types_Value.eqValue)(requiredValue)(Data_Monoid.mempty(Ctl_Internal_Cardano_Types_Value.monoidValue));
                              if ($136) {
                                  return BalanceChangeAndMinFee.create;
                              };
                              return PrebalanceTx.create;
                          })()({
                              changeOutputs: changeOutputs,
                              leftoverUtxos: v.leftoverUtxos,
                              minFee: v.minFee,
                              transaction: v.transaction
                          }));
                      });
                  });
              });
          };
          return function ($212) {
              return worker(PrebalanceTx.create($212));
          };
      })();
      var addInvalidInContext = function (invalidInContext) {
          return function (m) {
              return Control_Monad_Error_Class.catchError(Control_Monad_Except_Trans.monadErrorExceptT(Control_Monad_Reader_Trans.monadReaderT(Ctl_Internal_Contract_Monad.monadContract)))(m)((function () {
                  var $213 = Control_Monad_Error_Class.throwError(Control_Monad_Except_Trans.monadThrowExceptT(Control_Monad_Reader_Trans.monadReaderT(Ctl_Internal_Contract_Monad.monadContract)));
                  return function ($214) {
                      return $213((function (v) {
                          if (v instanceof Ctl_Internal_BalanceTx_Error.BalanceInsufficientError) {
                              return new Ctl_Internal_BalanceTx_Error.BalanceInsufficientError(v.value0, v.value1, Data_Semigroup.append(Ctl_Internal_Plutus_Types_Value.semigroupValue)(v.value2)(Ctl_Internal_Plutus_Conversion_Value.toPlutusValue(invalidInContext)));
                          };
                          return v;
                      })($214));
                  };
              })());
          };
      };
      return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_Reader_Trans.monadReaderT(Ctl_Internal_Contract_Monad.monadContract)))(partitionAndFilterUtxos)(function (utxos) {
          return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_Reader_Trans.monadReaderT(Ctl_Internal_Contract_Monad.monadContract)))(addLovelacesToTransactionOutputs(p.unbalancedTx))(function (unbalancedTx) {
              return addInvalidInContext(Data_Foldable.foldMap(Data_Map_Internal.foldableMap)(Ctl_Internal_Cardano_Types_Value.monoidValue)((function () {
                  var $215 = Data_Newtype.unwrap();
                  return function ($216) {
                      return (function (v) {
                          return v.amount;
                      })($215($216));
                  };
              })())(utxos.invalidInContext))(mainLoop(initBalancerState(unbalancedTx)(utxos.spendable)));
          });
      });
  };
  var balanceTxWithConstraints = function (unbalancedTx) {
      return function (constraintsBuilder) {
          var unbalancedTxWithNetworkId = (function () {
              var transaction = Data_Lens_Getter.viewOn(unbalancedTx)(Ctl_Internal_BalanceTx_Helpers["_transaction'"](Data_Lens_Internal_Forget.strongForget));
              return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_Reader_Trans.monadReaderT(Ctl_Internal_Contract_Monad.monadContract)))(Data_Maybe.maybe(Ctl_Internal_BalanceTx_Types.askNetworkId)(Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Control_Monad_Reader_Trans.monadReaderT(Ctl_Internal_Contract_Monad.monadContract))))(Data_Lens_Getter.viewOn(transaction)((function () {
                  var $217 = Ctl_Internal_Cardano_Types_Transaction["_body"](Data_Lens_Internal_Forget.strongForget);
                  var $218 = Ctl_Internal_Cardano_Types_Transaction["_networkId"](Data_Lens_Internal_Forget.strongForget);
                  return function ($219) {
                      return $217($218($219));
                  };
              })())))(function (networkId) {
                  return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Control_Monad_Reader_Trans.monadReaderT(Ctl_Internal_Contract_Monad.monadContract)))(Data_Lens_Setter.setJust((function () {
                      var $220 = Ctl_Internal_Cardano_Types_Transaction["_body"](Data_Profunctor_Strong.strongFn);
                      var $221 = Ctl_Internal_Cardano_Types_Transaction["_networkId"](Data_Profunctor_Strong.strongFn);
                      return function ($222) {
                          return $220($221($222));
                      };
                  })())(networkId)(transaction));
              });
          })();
          var setTransactionCollateral = function (changeAddr) {
              return function (transaction) {
                  return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_Reader_Trans.monadReaderT(Ctl_Internal_Contract_Monad.monadContract)))(Ctl_Internal_BalanceTx_Types.liftEitherContract(Data_Functor.map(Ctl_Internal_Contract_Monad.functorContract)(Data_Either.note(Ctl_Internal_BalanceTx_Error.CouldNotGetCollateral.value))(Ctl_Internal_Contract_Wallet.getWalletCollateral)))(function (collateral) {
                      var collaterisedTx = Ctl_Internal_BalanceTx_Collateral.addTxCollateral(collateral)(transaction);
                      return Ctl_Internal_BalanceTx_Collateral.addTxCollateralReturn(collateral)(collaterisedTx)(changeAddr);
                  });
              };
          };
          var getChangeAddress = Control_Bind.bindFlipped(Control_Monad_Except_Trans.bindExceptT(Control_Monad_Reader_Trans.monadReaderT(Ctl_Internal_Contract_Monad.monadContract)))(Control_Monad_Error_Class.liftMaybe(Control_Monad_Except_Trans.monadThrowExceptT(Control_Monad_Reader_Trans.monadReaderT(Ctl_Internal_Contract_Monad.monadContract)))(Ctl_Internal_BalanceTx_Error.CouldNotGetChangeAddress.value))(Control_Bind.bindFlipped(Control_Monad_Except_Trans.bindExceptT(Control_Monad_Reader_Trans.monadReaderT(Ctl_Internal_Contract_Monad.monadContract)))(Data_Maybe.maybe(Ctl_Internal_BalanceTx_Types.liftContract(Ctl_Internal_Contract_Wallet.getChangeAddress))((function () {
              var $223 = Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Control_Monad_Reader_Trans.monadReaderT(Ctl_Internal_Contract_Monad.monadContract)));
              return function ($224) {
                  return $223(Data_Maybe.Just.create($224));
              };
          })()))(Ctl_Internal_BalanceTx_Types.asksConstraints(function (dictStrong) {
              return Ctl_Internal_BalanceTx_Constraints["_changeAddress"](dictStrong);
          })));
          return Control_Bind.bind(Ctl_Internal_Contract_Monad.bindContract)(Ctl_Internal_Contract.getProtocolParameters)(function (pparams) {
              return Control_Bind.bind(Ctl_Internal_Contract_Monad.bindContract)(Ctl_Internal_Contract_QueryHandle.getQueryHandle)(function (queryHandle) {
                  return Ctl_Internal_BalanceTx_Types.withBalanceTxConstraints(constraintsBuilder)(Control_Monad_Except_Trans.runExceptT((function () {
                      var depositValuePerCert = (Data_Newtype.unwrap()(pparams)).stakeAddressDeposit;
                      var certsFee = getStakingBalance(Data_Lens_Getter.viewOn(unbalancedTx)(Ctl_Internal_BalanceTx_Helpers["_transaction'"](Data_Lens_Internal_Forget.strongForget)))(depositValuePerCert);
                      return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_Reader_Trans.monadReaderT(Ctl_Internal_Contract_Monad.monadContract)))(Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_Reader_Trans.monadReaderT(Ctl_Internal_Contract_Monad.monadContract)))(Ctl_Internal_BalanceTx_Types.asksConstraints(function (dictStrong) {
                          return Ctl_Internal_BalanceTx_Constraints["_srcAddresses"](dictStrong);
                      }))(Data_Maybe.maybe(Ctl_Internal_BalanceTx_Types.liftContract(Ctl_Internal_Contract_Wallet.getWalletAddresses))(Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Control_Monad_Reader_Trans.monadReaderT(Ctl_Internal_Contract_Monad.monadContract))))))(function (srcAddrs) {
                          return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_Reader_Trans.monadReaderT(Ctl_Internal_Contract_Monad.monadContract)))(getChangeAddress)(function (changeAddr) {
                              return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_Reader_Trans.monadReaderT(Ctl_Internal_Contract_Monad.monadContract)))(Ctl_Internal_BalanceTx_Types.liftEitherContract(Data_Functor.mapFlipped(Ctl_Internal_Contract_Monad.functorContract)(Control_Parallel.parTraverse(Ctl_Internal_Contract_Monad.parallelParContractContra)(Data_Traversable.traversableArray)((function () {
                                  var $225 = Data_Functor.map(Ctl_Internal_Contract_Monad.functorContract)(Data_Either.hush);
                                  var $226 = Effect_Aff_Class.liftAff(Ctl_Internal_Contract_Monad.monadAffContract);
                                  return function ($227) {
                                      return $225($226(queryHandle.utxosAt($227)));
                                  };
                              })())(srcAddrs))((function () {
                                  var $228 = Data_Functor.map(Data_Either.functorEither)(Data_Foldable.foldr(Data_Foldable.foldableArray)(Data_Map_Internal.union(Ctl_Internal_Types_Transaction.ordTransactionInput))(Data_Map_Internal.empty));
                                  var $229 = Data_Traversable.traverse(Data_Traversable.traversableArray)(Data_Either.applicativeEither)(Data_Either.note(Ctl_Internal_BalanceTx_Error.CouldNotGetUtxos.value));
                                  return function ($230) {
                                      return $228($229($230));
                                  };
                              })())))(function (utxos) {
                                  return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_Reader_Trans.monadReaderT(Ctl_Internal_Contract_Monad.monadContract)))((function () {
                                      var v = Data_Array["null"](Data_Lens_Getter.viewOn(unbalancedTx)(Ctl_Internal_BalanceTx_Helpers["_redeemersTxIns"](Data_Lens_Internal_Forget.strongForget)));
                                      if (v) {
                                          return unbalancedTxWithNetworkId;
                                      };
                                      if (!v) {
                                          return Control_Bind.bindFlipped(Control_Monad_Except_Trans.bindExceptT(Control_Monad_Reader_Trans.monadReaderT(Ctl_Internal_Contract_Monad.monadContract)))(setTransactionCollateral(changeAddr))(unbalancedTxWithNetworkId);
                                      };
                                      throw new Error("Failed pattern match at Ctl.Internal.BalanceTx (line 190, column 7 - line 195, column 76): " + [ v.constructor.name ]);
                                  })())(function (unbalancedCollTx) {
                                      var allUtxos = Data_Map_Internal.union(Ctl_Internal_Types_Transaction.ordTransactionInput)(utxos)(Data_Lens_Getter.viewOn(unbalancedTx)((function () {
                                          var $231 = Ctl_Internal_BalanceTx_Helpers["_unbalancedTx"](Data_Lens_Internal_Forget.strongForget);
                                          var $232 = Ctl_Internal_Types_UnbalancedTransaction["_utxoIndex"](Data_Lens_Internal_Forget.strongForget);
                                          return function ($233) {
                                              return $231($232($233));
                                          };
                                      })()));
                                      return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_Reader_Trans.monadReaderT(Ctl_Internal_Contract_Monad.monadContract)))(Ctl_Internal_BalanceTx_Types.liftContract(Ctl_Internal_Contract_Monad.filterLockedUtxos(allUtxos)))(function (availableUtxos) {
                                          return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_Reader_Trans.monadReaderT(Ctl_Internal_Contract_Monad.monadContract)))(Ctl_Internal_BalanceTx_Types.asksConstraints(function (dictStrong) {
                                              return Ctl_Internal_BalanceTx_Constraints["_selectionStrategy"](dictStrong);
                                          }))(function (selectionStrategy) {
                                              return runBalancer({
                                                  strategy: selectionStrategy,
                                                  unbalancedTx: Data_Lens_Setter.set(Ctl_Internal_BalanceTx_Helpers["_transaction'"](Data_Profunctor_Strong.strongFn))(unbalancedCollTx)(unbalancedTx),
                                                  changeAddress: changeAddr,
                                                  allUtxos: allUtxos,
                                                  utxos: availableUtxos,
                                                  certsFee: certsFee
                                              });
                                          });
                                      });
                                  });
                              });
                          });
                      });
                  })()));
              });
          });
      };
  };
  exports["balanceTxWithConstraints"] = balanceTxWithConstraints;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Ctl.Internal.Contract.Sign"] = $PS["Ctl.Internal.Contract.Sign"] || {};
  var exports = $PS["Ctl.Internal.Contract.Sign"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_Reader_Class = $PS["Control.Monad.Reader.Class"];
  var Ctl_Internal_Cardano_Types_Transaction = $PS["Ctl.Internal.Cardano.Types.Transaction"];
  var Ctl_Internal_Contract_Monad = $PS["Ctl.Internal.Contract.Monad"];
  var Ctl_Internal_Contract_QueryHandle = $PS["Ctl.Internal.Contract.QueryHandle"];
  var Ctl_Internal_Contract_Wallet = $PS["Ctl.Internal.Contract.Wallet"];
  var Ctl_Internal_Helpers = $PS["Ctl.Internal.Helpers"];
  var Ctl_Internal_Serialization_Address = $PS["Ctl.Internal.Serialization.Address"];
  var Ctl_Internal_Types_Transaction = $PS["Ctl.Internal.Types.Transaction"];
  var Ctl_Internal_Wallet = $PS["Ctl.Internal.Wallet"];
  var Data_Array = $PS["Data.Array"];
  var Data_Either = $PS["Data.Either"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Lens_Getter = $PS["Data.Lens.Getter"];
  var Data_Lens_Internal_Forget = $PS["Data.Lens.Internal.Forget"];
  var Data_Lens_Setter = $PS["Data.Lens.Setter"];
  var Data_Map_Internal = $PS["Data.Map.Internal"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Profunctor_Strong = $PS["Data.Profunctor.Strong"];
  var Data_Set = $PS["Data.Set"];
  var Data_Show = $PS["Data.Show"];
  var Data_Traversable = $PS["Data.Traversable"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Effect_Aff = $PS["Effect.Aff"];
  var Effect_Aff_Class = $PS["Effect.Aff.Class"];
  var Effect_Class = $PS["Effect.Class"];
  var Effect_Exception = $PS["Effect.Exception"];                
  var walletWaitForInputs = function (txInputs) {
      return Control_Bind.bind(Ctl_Internal_Contract_Monad.bindContract)(Ctl_Internal_Contract_QueryHandle.getQueryHandle)(function (queryHandle) {
          return Control_Bind.bind(Ctl_Internal_Contract_Monad.bindContract)(Ctl_Internal_Contract_Wallet.getWalletAddresses)(function (ownAddrs) {
              return Control_Bind.bind(Ctl_Internal_Contract_Monad.bindContract)(Data_Functor.map(Ctl_Internal_Contract_Monad.functorContract)((function () {
                  var $13 = Data_Map_Internal.filter(Ctl_Internal_Types_Transaction.ordTransactionInput)((function () {
                      var $16 = Data_Function.flip(Data_Array.elem(Ctl_Internal_Serialization_Address.eqAddress))(ownAddrs);
                      var $17 = Data_Newtype.unwrap();
                      return function ($18) {
                          return $16((function (v) {
                              return v.address;
                          })($17($18)));
                      };
                  })());
                  var $14 = Data_Map_Internal.fromFoldable(Ctl_Internal_Types_Transaction.ordTransactionInput)(Data_Foldable.foldableArray);
                  return function ($15) {
                      return $13($14($15));
                  };
              })())(Data_Traversable.traverse(Data_Traversable.traversableArray)(Ctl_Internal_Contract_Monad.applicativeContract)(function (txInput) {
                  return Control_Bind.bind(Ctl_Internal_Contract_Monad.bindContract)(Ctl_Internal_Helpers.liftedM(Ctl_Internal_Contract_Monad.monadErrorErrorContract)(Effect_Exception.error("Could not get utxo"))(Effect_Aff_Class.liftAff(Ctl_Internal_Contract_Monad.monadAffContract)(Data_Functor.map(Effect_Aff.functorAff)((function () {
                      var $19 = Control_Bind.join(Data_Maybe.bindMaybe);
                      return function ($20) {
                          return $19(Data_Either.hush($20));
                      };
                  })())(queryHandle.getUtxoByOref(txInput)))))(function (utxo) {
                      return Control_Applicative.pure(Ctl_Internal_Contract_Monad.applicativeContract)(new Data_Tuple.Tuple(txInput, utxo));
                  });
              })(txInputs)))(function (v) {
                  var go = function (attempts) {
                      return Control_Bind.bind(Ctl_Internal_Contract_Monad.bindContract)(Data_Functor.mapFlipped(Ctl_Internal_Contract_Monad.functorContract)(Ctl_Internal_Contract_Wallet.getWalletUtxos)(Data_Maybe.fromMaybe(Data_Map_Internal.empty)))(function (walletUtxos) {
                          return Control_Applicative.unless(Ctl_Internal_Contract_Monad.applicativeContract)(Data_Map_Internal.isSubmap(Ctl_Internal_Types_Transaction.ordTransactionInput)(Ctl_Internal_Cardano_Types_Transaction.eqTransactionOutput)(v)(walletUtxos))(Control_Bind.discard(Control_Bind.discardUnit)(Ctl_Internal_Contract_Monad.bindContract)(Control_Applicative.when(Ctl_Internal_Contract_Monad.applicativeContract)(attempts === 0)(Effect_Class.liftEffect(Ctl_Internal_Contract_Monad.monadEffectContract)(Effect_Exception["throw"]("walletWaitForInputs: timeout while waiting for wallet" + (" UTxO set and CTL query layer UTxO set to synchronize. UTxOs" + (" from Ogmios: " + (Data_Show.show(Data_Map_Internal.showMap(Ctl_Internal_Types_Transaction.showTransactionInput)(Ctl_Internal_Cardano_Types_Transaction.showTransactionOutput))(v) + (", UTxOs from wallet: " + (Data_Show.show(Data_Map_Internal.showMap(Ctl_Internal_Types_Transaction.showTransactionInput)(Ctl_Internal_Cardano_Types_Transaction.showTransactionOutput))(walletUtxos) + (", UTxOs that didn't appear in the wallet: " + Data_Show.show(Data_Map_Internal.showMap(Ctl_Internal_Types_Transaction.showTransactionInput)(Ctl_Internal_Cardano_Types_Transaction.showTransactionOutput))(Data_Map_Internal.difference(Ctl_Internal_Types_Transaction.ordTransactionInput)(v)(walletUtxos))))))))))))(function () {
                              return Control_Bind.discard(Control_Bind.discardUnit)(Ctl_Internal_Contract_Monad.bindContract)(Effect_Aff_Class.liftAff(Ctl_Internal_Contract_Monad.monadAffContract)(Effect_Aff.delay(Data_Newtype.wrap()(1000.0))))(function () {
                                  return go(attempts - 1 | 0);
                              });
                          }));
                      });
                  };
                  return go(150);
              });
          });
      });
  };
  var signTransaction = function (tx) {
      return Control_Bind.bind(Ctl_Internal_Contract_Monad.bindContract)(Control_Monad_Reader_Class.asks(Ctl_Internal_Contract_Monad.monadAskContractEnvContra)(function (v) {
          return v.hooks;
      }))(function (hooks) {
          return Control_Bind.discard(Control_Bind.discardUnit)(Ctl_Internal_Contract_Monad.bindContract)(Data_Foldable.for_(Ctl_Internal_Contract_Monad.applicativeContract)(Data_Foldable.foldableMaybe)(hooks.beforeSign)((function () {
              var $21 = Data_Functor["void"](Ctl_Internal_Contract_Monad.functorContract);
              var $22 = Effect_Class.liftEffect(Ctl_Internal_Contract_Monad.monadEffectContract);
              return function ($23) {
                  return $21($22(Effect_Exception["try"]($23)));
              };
          })()))(function () {
              return Ctl_Internal_Contract_Wallet.withWallet(function (v) {
                  if (v instanceof Ctl_Internal_Wallet.Nami) {
                      return Effect_Aff_Class.liftAff(Ctl_Internal_Contract_Monad.monadAffContract)(Ctl_Internal_Wallet.callCip30Wallet(v.value0)(function (nw) {
                          return Data_Function.flip(nw.signTx)(tx);
                      }));
                  };
                  if (v instanceof Ctl_Internal_Wallet.Gero) {
                      return Effect_Aff_Class.liftAff(Ctl_Internal_Contract_Monad.monadAffContract)(Ctl_Internal_Wallet.callCip30Wallet(v.value0)(function (nw) {
                          return Data_Function.flip(nw.signTx)(tx);
                      }));
                  };
                  if (v instanceof Ctl_Internal_Wallet.Flint) {
                      return Effect_Aff_Class.liftAff(Ctl_Internal_Contract_Monad.monadAffContract)(Ctl_Internal_Wallet.callCip30Wallet(v.value0)(function (nw) {
                          return Data_Function.flip(nw.signTx)(tx);
                      }));
                  };
                  if (v instanceof Ctl_Internal_Wallet.Eternl) {
                      var txInputs = Data_Array.fromFoldable(Data_Set.foldableSet)(Data_Lens_Getter.viewOn(tx)((function () {
                          var $24 = Ctl_Internal_Cardano_Types_Transaction["_body"](Data_Lens_Internal_Forget.strongForget);
                          var $25 = Ctl_Internal_Cardano_Types_Transaction["_inputs"](Data_Lens_Internal_Forget.strongForget);
                          return function ($26) {
                              return $24($25($26));
                          };
                      })()));
                      return Control_Bind.discard(Control_Bind.discardUnit)(Ctl_Internal_Contract_Monad.bindContract)(walletWaitForInputs(txInputs))(function () {
                          return Effect_Aff_Class.liftAff(Ctl_Internal_Contract_Monad.monadAffContract)(Ctl_Internal_Wallet.callCip30Wallet(v.value0)(function (nw) {
                              return Data_Function.flip(nw.signTx)(tx);
                          }));
                      });
                  };
                  if (v instanceof Ctl_Internal_Wallet.Lode) {
                      return Effect_Aff_Class.liftAff(Ctl_Internal_Contract_Monad.monadAffContract)(Ctl_Internal_Wallet.callCip30Wallet(v.value0)(function (nw) {
                          return Data_Function.flip(nw.signTx)(tx);
                      }));
                  };
                  if (v instanceof Ctl_Internal_Wallet.NuFi) {
                      return Effect_Aff_Class.liftAff(Ctl_Internal_Contract_Monad.monadAffContract)(Ctl_Internal_Wallet.callCip30Wallet(v.value0)(function (w) {
                          return Data_Function.flip(w.signTx)(tx);
                      }));
                  };
                  if (v instanceof Ctl_Internal_Wallet.KeyWallet) {
                      return Effect_Aff_Class.liftAff(Ctl_Internal_Contract_Monad.monadAffContract)(Control_Bind.bind(Effect_Aff.bindAff)((Data_Newtype.unwrap()(v.value0)).signTx(tx))(function (witnessSet) {
                          return Control_Applicative.pure(Effect_Aff.applicativeAff)(new Data_Maybe.Just(Data_Lens_Setter.appendOver(Ctl_Internal_Cardano_Types_Transaction.semigroupTransactionWitne)(Ctl_Internal_Cardano_Types_Transaction["_witnessSet"](Data_Profunctor_Strong.strongFn))(witnessSet)(tx)));
                      }));
                  };
                  throw new Error("Failed pattern match at Ctl.Internal.Contract.Sign (line 42, column 14 - line 56, column 52): " + [ v.constructor.name ]);
              });
          });
      });
  };
  exports["signTransaction"] = signTransaction;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Contract.Transaction"] = $PS["Contract.Transaction"] || {};
  var exports = $PS["Contract.Transaction"];
  var Contract_Monad = $PS["Contract.Monad"];
  var Contract_ScriptLookups = $PS["Contract.ScriptLookups"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_Error_Class = $PS["Control.Monad.Error.Class"];
  var Control_Monad_Reader_Class = $PS["Control.Monad.Reader.Class"];
  var Ctl_Internal_BalanceTx = $PS["Ctl.Internal.BalanceTx"];
  var Ctl_Internal_BalanceTx_Constraints = $PS["Ctl.Internal.BalanceTx.Constraints"];
  var Ctl_Internal_BalanceTx_Error = $PS["Ctl.Internal.BalanceTx.Error"];
  var Ctl_Internal_Cardano_Types_Transaction = $PS["Ctl.Internal.Cardano.Types.Transaction"];
  var Ctl_Internal_Contract_Monad = $PS["Ctl.Internal.Contract.Monad"];
  var Ctl_Internal_Contract_QueryHandle = $PS["Ctl.Internal.Contract.QueryHandle"];
  var Ctl_Internal_Contract_Sign = $PS["Ctl.Internal.Contract.Sign"];
  var Ctl_Internal_Service_Error = $PS["Ctl.Internal.Service.Error"];
  var Ctl_Internal_Types_ScriptLookups = $PS["Ctl.Internal.Types.ScriptLookups"];
  var Data_Bifunctor = $PS["Data.Bifunctor"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Lens_Getter = $PS["Data.Lens.Getter"];
  var Data_Lens_Internal_Forget = $PS["Data.Lens.Internal.Forget"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Show = $PS["Data.Show"];
  var Data_Traversable = $PS["Data.Traversable"];
  var Effect = $PS["Effect"];
  var Effect_Aff_Class = $PS["Effect.Aff.Class"];
  var Effect_Class = $PS["Effect.Class"];
  var Effect_Exception = $PS["Effect.Exception"];                
  var BalancedSignedTransaction = function (x) {
      return x;
  };
  var submitE = function (tx) {
      return Control_Bind.bind(Ctl_Internal_Contract_Monad.bindContract)(Ctl_Internal_Contract_QueryHandle.getQueryHandle)(function (queryHandle) {
          return Control_Bind.bind(Ctl_Internal_Contract_Monad.bindContract)(Effect_Aff_Class.liftAff(Ctl_Internal_Contract_Monad.monadAffContract)(queryHandle.submitTx(Data_Newtype.unwrap()(tx))))(function (eiTxHash) {
              return Control_Bind.discard(Control_Bind.discardUnit)(Ctl_Internal_Contract_Monad.bindContract)(Data_Functor["void"](Ctl_Internal_Contract_Monad.functorContract)(Control_Bind.bind(Ctl_Internal_Contract_Monad.bindContract)(Control_Monad_Reader_Class.asks(Ctl_Internal_Contract_Monad.monadAskContractEnvContra)(function ($32) {
                  return (function (v) {
                      return v.onSubmit;
                  })((function (v) {
                      return v.hooks;
                  })($32));
              }))(Data_Traversable.traverse(Data_Traversable.traversableMaybe)(Ctl_Internal_Contract_Monad.applicativeContract)(function (hook) {
                  return Effect_Class.liftEffect(Ctl_Internal_Contract_Monad.monadEffectContract)(Data_Functor["void"](Effect.functorEffect)(Effect_Exception["try"](hook(Data_Newtype.unwrap()(tx)))));
              }))))(function () {
                  return Control_Applicative.pure(Ctl_Internal_Contract_Monad.applicativeContract)(eiTxHash);
              });
          });
      });
  };
  var submit = function (tx) {
      return Control_Bind.bind(Ctl_Internal_Contract_Monad.bindContract)(submitE(tx))(function (eiTxHash) {
          return Control_Monad_Error_Class.liftEither(Ctl_Internal_Contract_Monad.monadThrowErrorContract)(Data_Function.flip(Data_Bifunctor.lmap(Data_Bifunctor.bifunctorEither))(eiTxHash)(function (err) {
              return Effect_Exception.error("Failed to submit tx:\x0a" + Data_Show.show(Ctl_Internal_Service_Error.showClientError)(err));
          }));
      });
  };
  var signTransaction = function () {
      var $33 = Data_Functor.map(Ctl_Internal_Contract_Monad.functorContract)(BalancedSignedTransaction);
      var $34 = Contract_Monad.liftedM("Error signing the transaction");
      var $35 = Data_Newtype.unwrap();
      return function ($36) {
          return $33($34(Ctl_Internal_Contract_Sign.signTransaction($35($36))));
      };
  };
  var getTxFinalFee = (function () {
      var $37 = Data_Newtype.unwrap();
      var $38 = Data_Lens_Getter.view((function () {
          var $41 = Ctl_Internal_Cardano_Types_Transaction["_body"](Data_Lens_Internal_Forget.strongForget);
          var $42 = Ctl_Internal_Cardano_Types_Transaction["_fee"](Data_Lens_Internal_Forget.strongForget);
          return function ($43) {
              return $41($42($43));
          };
      })());
      var $39 = Data_Newtype.unwrap();
      return function ($40) {
          return $37($38($39($40)));
      };
  })();
  var balanceTxWithConstraints = Ctl_Internal_BalanceTx.balanceTxWithConstraints;
  var balanceTx = Data_Function.flip(balanceTxWithConstraints)(Data_Monoid.mempty(Ctl_Internal_BalanceTx_Constraints.monoidBalanceTxConstraint));
  var submitTxFromConstraintsReturningFee = function () {
      return function (dictIsData) {
          return function (dictIsData1) {
              return function (lookups) {
                  return function (constraints) {
                      return Control_Bind.bind(Ctl_Internal_Contract_Monad.bindContract)(Contract_Monad.liftedE(Ctl_Internal_Types_ScriptLookups.showMkUnbalancedTxError)(Contract_ScriptLookups.mkUnbalancedTx()(dictIsData)(dictIsData1)(lookups)(constraints)))(function (unbalancedTx) {
                          return Control_Bind.bind(Ctl_Internal_Contract_Monad.bindContract)(Contract_Monad.liftedE(Ctl_Internal_BalanceTx_Error.showBalanceTxError)(balanceTx(unbalancedTx)))(function (balancedTx) {
                              return Control_Bind.bind(Ctl_Internal_Contract_Monad.bindContract)(signTransaction()(balancedTx))(function (balancedSignedTx) {
                                  return Control_Bind.bind(Ctl_Internal_Contract_Monad.bindContract)(submit(balancedSignedTx))(function (txHash) {
                                      return Control_Applicative.pure(Ctl_Internal_Contract_Monad.applicativeContract)({
                                          txHash: txHash,
                                          txFinalFee: getTxFinalFee(balancedSignedTx)
                                      });
                                  });
                              });
                          });
                      });
                  };
              };
          };
      };
  };
  var submitTxFromConstraints = function () {
      return function (dictIsData) {
          return function (dictIsData1) {
              return function (lookups) {
                  return function (constraints) {
                      return Data_Functor.map(Ctl_Internal_Contract_Monad.functorContract)(function (v) {
                          return v.txHash;
                      })(submitTxFromConstraintsReturningFee()(dictIsData)(dictIsData1)(lookups)(constraints));
                  };
              };
          };
      };
  };
  exports["submitTxFromConstraints"] = submitTxFromConstraints;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Contract.Utxos"] = $PS["Contract.Utxos"] || {};
  var exports = $PS["Contract.Utxos"];
  var Contract_Monad = $PS["Contract.Monad"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_Reader_Class = $PS["Control.Monad.Reader.Class"];
  var Ctl_Internal_Contract_Monad = $PS["Ctl.Internal.Contract.Monad"];
  var Ctl_Internal_Contract_QueryHandle = $PS["Ctl.Internal.Contract.QueryHandle"];
  var Ctl_Internal_Plutus_Conversion = $PS["Ctl.Internal.Plutus.Conversion"];
  var Ctl_Internal_Plutus_Conversion_Address = $PS["Ctl.Internal.Plutus.Conversion.Address"];
  var Ctl_Internal_Plutus_Types_Address = $PS["Ctl.Internal.Plutus.Types.Address"];
  var Ctl_Internal_Service_Error = $PS["Ctl.Internal.Service.Error"];
  var Effect_Aff_Class = $PS["Effect.Aff.Class"];                
  var utxosAt = function (dictPlutusAddress) {
      return function (address) {
          return Control_Bind.bind(Ctl_Internal_Contract_Monad.bindContract)(Control_Monad_Reader_Class.asks(Ctl_Internal_Contract_Monad.monadAskContractEnvContra)(function (v) {
              return v.networkId;
          }))(function (networkId) {
              return Control_Bind.bind(Ctl_Internal_Contract_Monad.bindContract)(Ctl_Internal_Contract_QueryHandle.getQueryHandle)(function (queryHandle) {
                  var cardanoAddr = Ctl_Internal_Plutus_Conversion_Address.fromPlutusAddress(networkId)(Ctl_Internal_Plutus_Types_Address.getAddress(dictPlutusAddress)(address));
                  return Control_Bind.bind(Ctl_Internal_Contract_Monad.bindContract)(Contract_Monad.liftedE(Ctl_Internal_Service_Error.showClientError)(Effect_Aff_Class.liftAff(Ctl_Internal_Contract_Monad.monadAffContract)(queryHandle.utxosAt(cardanoAddr))))(function (cardanoUtxoMap) {
                      return Contract_Monad.liftContractM("utxosAt: failed to convert utxos")(Ctl_Internal_Plutus_Conversion.toPlutusUtxoMap(cardanoUtxoMap));
                  });
              });
          });
      };
  };
  exports["utxosAt"] = utxosAt;
})(PS);
(function(exports) {
  /* global BROWSER_RUNTIME */

  let lib;
  let apply_args;
  if (typeof BROWSER_RUNTIME != "undefined" && BROWSER_RUNTIME) {
    lib = require("@emurgo/cardano-serialization-lib-browser");
    apply_args = require("apply-args-browser");
  } else {
    lib = require("@emurgo/cardano-serialization-lib-nodejs");
    apply_args = require("apply-args-nodejs");
  }
  lib = require("@mlabs-haskell/csl-gc-wrapper")(lib);
  apply_args = require("@mlabs-haskell/csl-gc-wrapper")(apply_args);

  /**
 * @param {} left
 * @param {} right
 * @param {PlutusData} args
 * @param {PlutusScript} script
 * @returns {Either String PlutusScript}
 */  
  exports.apply_params_to_script = left => right => args => script => {
    let version = script.language_version();
    let appliedScript;
    try {
      let scriptBytes = script.bytes(); // raw bytes
      let argsBytes = args.to_bytes(); // cbor

      try {
        appliedScript = apply_args.apply_params_to_script_no_panic(
          argsBytes,
          scriptBytes
        );
      } catch (e) {
        return left("Error applying argument to script: ".concat(e.toString()));
      }
    } catch (e1) {
      return left("Error serializing arguments: ".concat(e1.toString()));
    }
    return right(lib.PlutusScript.new_with_version(appliedScript, version));
  };
})(PS["Ctl.Internal.ApplyArgs"] = PS["Ctl.Internal.ApplyArgs"] || {});
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Data.Profunctor.Choice"] = $PS["Data.Profunctor.Choice"] || {};
  var exports = $PS["Data.Profunctor.Choice"];
  var Data_Either = $PS["Data.Either"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Profunctor = $PS["Data.Profunctor"];
  var left = function (dict) {
      return dict.left;
  };
  var choiceFn = {
      left: function (v) {
          return function (v1) {
              if (v1 instanceof Data_Either.Left) {
                  return new Data_Either.Left(v(v1.value0));
              };
              if (v1 instanceof Data_Either.Right) {
                  return new Data_Either.Right(v1.value0);
              };
              throw new Error("Failed pattern match at Data.Profunctor.Choice (line 32, column 1 - line 35, column 16): " + [ v.constructor.name, v1.constructor.name ]);
          };
      },
      right: Data_Functor.map(Data_Either.functorEither),
      Profunctor0: function () {
          return Data_Profunctor.profunctorFn;
      }
  };
  exports["left"] = left;
  exports["choiceFn"] = choiceFn;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Ctl.Internal.ApplyArgs"] = $PS["Ctl.Internal.ApplyArgs"] || {};
  var exports = $PS["Ctl.Internal.ApplyArgs"];
  var $foreign = $PS["Ctl.Internal.ApplyArgs"];
  var Control_Bind = $PS["Control.Bind"];
  var Ctl_Internal_Deserialization_WitnessSet = $PS["Ctl.Internal.Deserialization.WitnessSet"];
  var Ctl_Internal_Serialization_PlutusData = $PS["Ctl.Internal.Serialization.PlutusData"];
  var Ctl_Internal_Serialization_PlutusScript = $PS["Ctl.Internal.Serialization.PlutusScript"];
  var Ctl_Internal_Types_PlutusData = $PS["Ctl.Internal.Types.PlutusData"];
  var Data_Either = $PS["Data.Either"];
  var Data_Profunctor_Choice = $PS["Data.Profunctor.Choice"];
  var Data_Show = $PS["Data.Show"];
  var Data_Show_Generic = $PS["Data.Show.Generic"];                
  var ApplyArgsError = function (x) {
      return x;
  };
  var genericApplyArgsError_ = {
      to: function (x) {
          return x;
      },
      from: function (x) {
          return x;
      }
  };
  var showApplyArgsError = {
      show: Data_Show_Generic.genericShow(genericApplyArgsError_)(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Data_Show.showString))({
          reflectSymbol: function () {
              return "ApplyArgsError";
          }
      }))
  };                                                      
  var apply_params_to_script_either = $foreign.apply_params_to_script(Data_Either.Left.create)(Data_Either.Right.create);
  var applyArgs = function (script) {
      return function (paramsList) {
          return Data_Profunctor_Choice.left(Data_Profunctor_Choice.choiceFn)(ApplyArgsError)((function () {
              var params = Ctl_Internal_Serialization_PlutusData.convertPlutusData(new Ctl_Internal_Types_PlutusData.List(paramsList));
              return Control_Bind.bind(Data_Either.bindEither)(apply_params_to_script_either(params)(Ctl_Internal_Serialization_PlutusScript.convertPlutusScript(script)))(function (appliedScript) {
                  return new Data_Either.Right(Ctl_Internal_Deserialization_WitnessSet.convertPlutusScript(appliedScript));
              });
          })());
      };
  };
  exports["applyArgs"] = applyArgs;
  exports["showApplyArgsError"] = showApplyArgsError;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Ctl.Internal.Contract.AwaitTxConfirmed"] = $PS["Ctl.Internal.Contract.AwaitTxConfirmed"] || {};
  var exports = $PS["Ctl.Internal.Contract.AwaitTxConfirmed"];
  var Contract_Monad = $PS["Contract.Monad"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_Reader_Class = $PS["Control.Monad.Reader.Class"];
  var Control_Parallel = $PS["Control.Parallel"];
  var Ctl_Internal_Contract_Monad = $PS["Ctl.Internal.Contract.Monad"];
  var Ctl_Internal_Contract_QueryBackend = $PS["Ctl.Internal.Contract.QueryBackend"];
  var Ctl_Internal_Contract_QueryHandle = $PS["Ctl.Internal.Contract.QueryHandle"];
  var Ctl_Internal_Service_Error = $PS["Ctl.Internal.Service.Error"];
  var Data_Either = $PS["Data.Either"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Number = $PS["Data.Number"];
  var Data_Show = $PS["Data.Show"];
  var Data_Time_Duration = $PS["Data.Time.Duration"];
  var Data_UInt = $PS["Data.UInt"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect_Aff = $PS["Effect.Aff"];
  var Effect_Aff_Class = $PS["Effect.Aff.Class"];
  var Effect_Class = $PS["Effect.Class"];
  var Effect_Exception = $PS["Effect.Exception"];                
  var utxosPresentForTxHash = function (txHash) {
      return Control_Bind.bind(Ctl_Internal_Contract_Monad.bindContract)(Ctl_Internal_Contract_QueryHandle.getQueryHandle)(function (queryHandle) {
          return Control_Bind.bind(Ctl_Internal_Contract_Monad.bindContract)(Contract_Monad.liftedE(Ctl_Internal_Service_Error.showClientError)(Effect_Aff_Class.liftAff(Ctl_Internal_Contract_Monad.monadAffContract)(queryHandle.getUtxoByOref({
              transactionId: txHash,
              index: Data_UInt.fromInt(0)
          }))))(function (mbTxOutput) {
              return Control_Applicative.pure(Ctl_Internal_Contract_Monad.applicativeContract)(Data_Maybe.isJust(mbTxOutput));
          });
      });
  };
  var tryUntilTrue = function (delayTime) {
      return function (check) {
          var go = Control_Bind.bind(Ctl_Internal_Contract_Monad.bindContract)(check)(function (res) {
              return Control_Applicative.unless(Ctl_Internal_Contract_Monad.applicativeContract)(res)(Control_Bind.discard(Control_Bind.discardUnit)(Ctl_Internal_Contract_Monad.bindContract)(Effect_Aff_Class.liftAff(Ctl_Internal_Contract_Monad.monadAffContract)(Effect_Aff.delay(delayTime)))(function () {
                  return go;
              }));
          });
          return go;
      };
  };
  var doesTxExist = function (txHash) {
      return Control_Bind.bind(Ctl_Internal_Contract_Monad.bindContract)(Ctl_Internal_Contract_QueryHandle.getQueryHandle)(function (queryHandle) {
          return Effect_Aff_Class.liftAff(Ctl_Internal_Contract_Monad.monadAffContract)(Control_Bind.bind(Effect_Aff.bindAff)(queryHandle.doesTxExist(txHash))(Data_Either.either((function () {
              var $10 = Effect_Class.liftEffect(Effect_Aff.monadEffectAff);
              var $11 = Data_Show.show(Ctl_Internal_Service_Error.showClientError);
              return function ($12) {
                  return $10(Effect_Exception["throw"]($11($12)));
              };
          })())(Control_Applicative.pure(Effect_Aff.applicativeAff))));
      });
  };
  var awaitTxConfirmedWithTimeout = function (timeoutSeconds) {
      return function (txHash) {
          var waitForConfirmation = (function () {
              var delayTime = Data_Newtype.wrap()(1000.0);
              return Control_Bind.discard(Control_Bind.discardUnit)(Ctl_Internal_Contract_Monad.bindContract)(tryUntilTrue(delayTime)(doesTxExist(txHash)))(function () {
                  return Control_Bind.bind(Ctl_Internal_Contract_Monad.bindContract)(Data_Functor.mapFlipped(Ctl_Internal_Contract_Monad.functorContract)(Control_Monad_Reader_Class.asks(Ctl_Internal_Contract_Monad.monadAskContractEnvContra)(function (v) {
                      return v.backend;
                  }))(Control_Bind.composeKleisli(Data_Maybe.bindMaybe)(Ctl_Internal_Contract_QueryBackend.getBlockfrostBackend)(function (v) {
                      return v.confirmTxDelay;
                  })))(function (confirmTxDelay) {
                      return Control_Bind.bind(Ctl_Internal_Contract_Monad.bindContract)(Data_Functor.mapFlipped(Ctl_Internal_Contract_Monad.functorContract)(Control_Monad_Reader_Class.asks(Ctl_Internal_Contract_Monad.monadAskContractEnvContra)(function (v) {
                          return v.backend;
                      }))(function ($16) {
                          return Data_Maybe.isJust(Ctl_Internal_Contract_QueryBackend.getBlockfrostBackend($16));
                      }))(function (isBlockfrost) {
                          return Control_Bind.discard(Control_Bind.discardUnit)(Ctl_Internal_Contract_Monad.bindContract)(Control_Applicative.when(Ctl_Internal_Contract_Monad.applicativeContract)(isBlockfrost)(Control_Bind.discard(Control_Bind.discardUnit)(Ctl_Internal_Contract_Monad.bindContract)(tryUntilTrue(delayTime)(utxosPresentForTxHash(txHash)))(function () {
                              return Data_Foldable.for_(Ctl_Internal_Contract_Monad.applicativeContract)(Data_Foldable.foldableMaybe)(confirmTxDelay)((function () {
                                  var $17 = Effect_Aff_Class.liftAff(Ctl_Internal_Contract_Monad.monadAffContract);
                                  var $18 = Data_Time_Duration.fromDuration(Data_Time_Duration.durationSeconds);
                                  return function ($19) {
                                      return $17(Effect_Aff.delay($18($19)));
                                  };
                              })());
                          })))(function () {
                              return Control_Applicative.pure(Ctl_Internal_Contract_Monad.applicativeContract)(true);
                          });
                      });
                  });
              });
          })();
          var timeout = Data_Time_Duration.fromDuration(Data_Time_Duration.durationSeconds)(timeoutSeconds);
          var waitAndFail = Control_Bind.discard(Control_Bind.discardUnit)(Ctl_Internal_Contract_Monad.bindContract)(Effect_Aff_Class.liftAff(Ctl_Internal_Contract_Monad.monadAffContract)(Effect_Aff.delay(timeout)))(function () {
              return Control_Applicative.pure(Ctl_Internal_Contract_Monad.applicativeContract)(false);
          });
          var $8 = Data_Newtype.unwrap()(timeoutSeconds) === Data_Number.infinity;
          if ($8) {
              return Data_Functor["void"](Ctl_Internal_Contract_Monad.functorContract)(waitForConfirmation);
          };
          return Control_Bind.bind(Ctl_Internal_Contract_Monad.bindContract)(Control_Parallel.parOneOf(Ctl_Internal_Contract_Monad.parallelParContractContra)(Ctl_Internal_Contract_Monad.alternativeParContract)(Data_Foldable.foldableArray)(Data_Functor.functorArray)([ waitForConfirmation, waitAndFail ]))(function (txConfirmed) {
              if (txConfirmed) {
                  return Control_Applicative.pure(Ctl_Internal_Contract_Monad.applicativeContract)(Data_Unit.unit);
              };
              return Effect_Class.liftEffect(Ctl_Internal_Contract_Monad.monadEffectContract)(Effect_Exception["throw"]("awaitTxConfirmedWithTimeout: timeout exceeded, Transaction not confirmed"));
          });
      };
  };
  var awaitTxConfirmed = awaitTxConfirmedWithTimeout(Data_Number.infinity);
  exports["awaitTxConfirmed"] = awaitTxConfirmed;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Ctl.Internal.IsData"] = $PS["Ctl.Internal.IsData"] || {};
  var exports = $PS["Ctl.Internal.IsData"];
  var isData = function (dictFromData) {
      return function (dictToData) {
          return {
              FromData0: function () {
                  return dictFromData;
              },
              ToData1: function () {
                  return dictToData;
              }
          };
      };
  };
  exports["isData"] = isData;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Ctl.Internal.Plutus.Types.TransactionUnspentOutput"] = $PS["Ctl.Internal.Plutus.Types.TransactionUnspentOutput"] || {};
  var exports = $PS["Ctl.Internal.Plutus.Types.TransactionUnspentOutput"];
  var Ctl_Internal_Types_Transaction = $PS["Ctl.Internal.Types.Transaction"];
  var Data_Array = $PS["Data.Array"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Lens_Iso_Newtype = $PS["Data.Lens.Iso.Newtype"];
  var Data_Lens_Record = $PS["Data.Lens.Record"];
  var Data_Map_Internal = $PS["Data.Map.Internal"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unfoldable = $PS["Data.Unfoldable"];
  var Type_Proxy = $PS["Type.Proxy"];
  var lookupTxHash = function (txHash) {
      return function (utxos) {
          return Data_Functor.map(Data_Functor.functorArray)(function (v) {
              return {
                  input: v.value0,
                  output: v.value1
              };
          })(Data_Array.filter((function () {
              var $17 = Data_Eq.eq(Ctl_Internal_Types_Transaction.eqTransactionHash)(txHash);
              var $18 = Data_Newtype.unwrap();
              return function ($19) {
                  return $17((function (v) {
                      return v.transactionId;
                  })($18(Data_Tuple.fst($19))));
              };
          })())(Data_Map_Internal.toUnfoldable(Data_Unfoldable.unfoldableArray)(utxos)));
      };
  };
  var _input = function (dictStrong) {
      var $23 = Data_Lens_Iso_Newtype["_Newtype"]()()(dictStrong.Profunctor0());
      var $24 = Data_Lens_Record.prop({
          reflectSymbol: function () {
              return "input";
          }
      })()()(Type_Proxy["Proxy"].value)(dictStrong);
      return function ($25) {
          return $23($24($25));
      };
  };
  exports["lookupTxHash"] = lookupTxHash;
  exports["_input"] = _input;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Ctl.Internal.Types.Redeemer"] = $PS["Ctl.Internal.Types.Redeemer"] || {};
  var exports = $PS["Ctl.Internal.Types.Redeemer"];
  var Ctl_Internal_ToData = $PS["Ctl.Internal.ToData"];
  var Data_Unit = $PS["Data.Unit"];
  var Redeemer = function (x) {
      return x;
  };                                                          
  var unitRedeemer = Ctl_Internal_ToData.toData(Ctl_Internal_ToData.toDataUnit)(Data_Unit.unit);
  exports["Redeemer"] = Redeemer;
  exports["unitRedeemer"] = unitRedeemer;
})(PS);
(function(exports) {
  "use strict";

  exports.unsafePerformEffect = function (f) {
    return f();
  };
})(PS["Effect.Unsafe"] = PS["Effect.Unsafe"] || {});
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["Effect.Unsafe"] = $PS["Effect.Unsafe"] || {};
  var exports = $PS["Effect.Unsafe"];
  var $foreign = $PS["Effect.Unsafe"];
  exports["unsafePerformEffect"] = $foreign.unsafePerformEffect;
})(PS);
(function(exports) {
  let read_script;
  if (typeof BROWSER_RUNTIME != "undefined" && BROWSER_RUNTIME) {

  } else { 

    const fs = require("fs");
    const path = require("path");
    read_script = fp => {
      return fs.readFileSync(
        path.resolve(__dirname, 
    "../../../compiled-scripts/".concat(fp)),
        "utf8"
      );
    };
  
  }

  if (typeof BROWSER_RUNTIME != "undefined" && BROWSER_RUNTIME) {
  always_succeeds = require("Scripts/fc61e623d413aa67dc9367e8e48f5ab7f38093e871af6d9dd27b717e.plutus");;
  } else { 
  always_succeeds = read_script("fc61e623d413aa67dc9367e8e48f5ab7f38093e871af6d9dd27b717e.plutus");;
  }                                         

  if (typeof BROWSER_RUNTIME != "undefined" && BROWSER_RUNTIME) {
  nft_hash_applied = require("Scripts/8c9d3c0a940175bbe29e8b25060c24c498a9f771a84f06084fc9a2fb.plutus");;
  } else { 
  nft_hash_applied = read_script("8c9d3c0a940175bbe29e8b25060c24c498a9f771a84f06084fc9a2fb.plutus");;
  }                                           

  if (typeof BROWSER_RUNTIME != "undefined" && BROWSER_RUNTIME) {
  nft_no_hash_applied = require("Scripts/fc005b39fd817fce3b65c524db57955d16845cc1c2f147494f13e691.plutus");;
  } else { 
  nft_no_hash_applied = read_script("fc005b39fd817fce3b65c524db57955d16845cc1c2f147494f13e691.plutus");;
  }                                                 

  if (typeof BROWSER_RUNTIME != "undefined" && BROWSER_RUNTIME) {
  password_validator = require("Scripts/489b2c9bc2bc7faa058d9b999744514bac555c476d0c8751b1b03e33.plutus");;
  } else { 
  password_validator = read_script("489b2c9bc2bc7faa058d9b999744514bac555c476d0c8751b1b03e33.plutus");;
  }
  exports.password_validator = password_validator;

  if (typeof BROWSER_RUNTIME != "undefined" && BROWSER_RUNTIME) {
  simple_policy = require("Scripts/0a6f6ae0a5f1a7606510fd0837c5e47dacdb87cc768e5d3df8f64ce5.plutus");;
  } else { 
  simple_policy = read_script("0a6f6ae0a5f1a7606510fd0837c5e47dacdb87cc768e5d3df8f64ce5.plutus");;
  }
  exports.simple_policy = simple_policy;
})(PS["MLabsPlutusTemplate.Scripts"] = PS["MLabsPlutusTemplate.Scripts"] || {});
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["MLabsPlutusTemplate.Scripts"] = $PS["MLabsPlutusTemplate.Scripts"] || {};
  var exports = $PS["MLabsPlutusTemplate.Scripts"];
  var $foreign = $PS["MLabsPlutusTemplate.Scripts"];
  exports["password_validator"] = $foreign.password_validator;
  exports["simple_policy"] = $foreign.simple_policy;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.9
  "use strict";
  $PS["MlabsPlutusTemplate.Api"] = $PS["MlabsPlutusTemplate.Api"] || {};
  var exports = $PS["MlabsPlutusTemplate.Api"];
  var Contract_Config = $PS["Contract.Config"];
  var Contract_Log = $PS["Contract.Log"];
  var Contract_Monad = $PS["Contract.Monad"];
  var Contract_Transaction = $PS["Contract.Transaction"];
  var Contract_Utxos = $PS["Contract.Utxos"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_Error_Class = $PS["Control.Monad.Error.Class"];
  var Control_Promise = $PS["Control.Promise"];
  var Ctl_Internal_ApplyArgs = $PS["Ctl.Internal.ApplyArgs"];
  var Ctl_Internal_Cardano_TextEnvelope = $PS["Ctl.Internal.Cardano.TextEnvelope"];
  var Ctl_Internal_Contract_AwaitTxConfirmed = $PS["Ctl.Internal.Contract.AwaitTxConfirmed"];
  var Ctl_Internal_Contract_Monad = $PS["Ctl.Internal.Contract.Monad"];
  var Ctl_Internal_FromData = $PS["Ctl.Internal.FromData"];
  var Ctl_Internal_Helpers = $PS["Ctl.Internal.Helpers"];
  var Ctl_Internal_IsData = $PS["Ctl.Internal.IsData"];
  var Ctl_Internal_Plutus_Types_Address = $PS["Ctl.Internal.Plutus.Types.Address"];
  var Ctl_Internal_Plutus_Types_TransactionUnspentOutput = $PS["Ctl.Internal.Plutus.Types.TransactionUnspentOutput"];
  var Ctl_Internal_Plutus_Types_Value = $PS["Ctl.Internal.Plutus.Types.Value"];
  var Ctl_Internal_Scripts = $PS["Ctl.Internal.Scripts"];
  var Ctl_Internal_ToData = $PS["Ctl.Internal.ToData"];
  var Ctl_Internal_Types_BigNum = $PS["Ctl.Internal.Types.BigNum"];
  var Ctl_Internal_Types_ByteArray = $PS["Ctl.Internal.Types.ByteArray"];
  var Ctl_Internal_Types_Datum = $PS["Ctl.Internal.Types.Datum"];
  var Ctl_Internal_Types_PlutusData = $PS["Ctl.Internal.Types.PlutusData"];
  var Ctl_Internal_Types_Redeemer = $PS["Ctl.Internal.Types.Redeemer"];
  var Ctl_Internal_Types_ScriptLookups = $PS["Ctl.Internal.Types.ScriptLookups"];
  var Ctl_Internal_Types_Scripts = $PS["Ctl.Internal.Types.Scripts"];
  var Ctl_Internal_Types_TokenName = $PS["Ctl.Internal.Types.TokenName"];
  var Ctl_Internal_Types_Transaction = $PS["Ctl.Internal.Types.Transaction"];
  var Ctl_Internal_Types_TxConstraints = $PS["Ctl.Internal.Types.TxConstraints"];
  var Data_Array = $PS["Data.Array"];
  var Data_BigInt = $PS["Data.BigInt"];
  var Data_Either = $PS["Data.Either"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Lens_Getter = $PS["Data.Lens.Getter"];
  var Data_Lens_Internal_Forget = $PS["Data.Lens.Internal.Forget"];
  var Data_Log_Level = $PS["Data.Log.Level"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Semiring = $PS["Data.Semiring"];
  var Data_Show = $PS["Data.Show"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Effect_Aff = $PS["Effect.Aff"];
  var Effect_Exception = $PS["Effect.Exception"];
  var Effect_Unsafe = $PS["Effect.Unsafe"];
  var MLabsPlutusTemplate_Scripts = $PS["MLabsPlutusTemplate.Scripts"];
  var MintTokens = (function () {
      function MintTokens() {

      };
      MintTokens.value = new MintTokens();
      return MintTokens;
  })();
  var BurnTokens = (function () {
      function BurnTokens() {

      };
      BurnTokens.value = new BurnTokens();
      return BurnTokens;
  })();
  var toDataMintRedeemer = {
      toData: function (v) {
          if (v instanceof MintTokens) {
              return new Ctl_Internal_Types_PlutusData.Constr(Ctl_Internal_Types_BigNum.fromInt(0), [  ]);
          };
          if (v instanceof BurnTokens) {
              return new Ctl_Internal_Types_PlutusData.Constr(Ctl_Internal_Types_BigNum.fromInt(1), [  ]);
          };
          throw new Error("Failed pattern match at MlabsPlutusTemplate.Api (line 294, column 12 - line 296, column 47): " + [ v.constructor.name ]);
      }
  };
  var newtypePWTXHash_ = {
      Coercible0: function () {
          return undefined;
      }
  };
  var stringToTokenName = Control_Bind.composeKleisli(Data_Maybe.bindMaybe)(Ctl_Internal_Types_ByteArray.byteArrayFromAscii)(Ctl_Internal_Types_TokenName.mkTokenName);
  var square = function (n) {
      return n * n | 0;
  };
  var myConfig = {
      logLevel: Data_Log_Level.Warn.value,
      backendParams: Contract_Config.testnetNamiConfig.backendParams,
      customLogger: Contract_Config.testnetNamiConfig.customLogger,
      hooks: Contract_Config.testnetNamiConfig.hooks,
      networkId: Contract_Config.testnetNamiConfig.networkId,
      suppressLogs: Contract_Config.testnetNamiConfig.suppressLogs,
      walletSpec: Contract_Config.testnetNamiConfig.walletSpec
  };    
  var lookupTXHashByPW = function (str) {
      return function (arr) {
          return Data_Array.find(function (x) {
              return (Data_Newtype.unwrap()(x)).password === str;
          })(arr);
      };
  };
  var liftErr = function (dictMonadThrow) {
      return function (msg) {
          return function (a) {
              return Control_Monad_Error_Class.liftMaybe(dictMonadThrow)(Effect_Exception.error(msg))(a);
          };
      };
  };
  var mkCurrencySymbol = function (mintingPolicy) {
      return Control_Bind.bind(Ctl_Internal_Contract_Monad.bindContract)(mintingPolicy)(function (mp) {
          return Control_Bind.bind(Ctl_Internal_Contract_Monad.bindContract)(liftErr(Ctl_Internal_Contract_Monad.monadThrowErrorContract)("Cannot get cs")(Ctl_Internal_Scripts.scriptCurrencySymbol(mp)))(function (cs) {
              return Control_Applicative.pure(Ctl_Internal_Contract_Monad.applicativeContract)(new Data_Tuple.Tuple(mp, cs));
          });
      });
  };
  var simplePolicy = function (str) {
      return Control_Bind.bind(Ctl_Internal_Contract_Monad.bindContract)(liftErr(Ctl_Internal_Contract_Monad.monadThrowErrorContract)("Error decoding simple policy envelope")(Ctl_Internal_Cardano_TextEnvelope.decodeTextEnvelope(MLabsPlutusTemplate_Scripts.simple_policy)))(function (envelope) {
          return Control_Bind.bind(Ctl_Internal_Contract_Monad.bindContract)(liftErr(Ctl_Internal_Contract_Monad.monadThrowErrorContract)("Error converting policy envelope to script")(Ctl_Internal_Cardano_TextEnvelope.plutusScriptV1FromEnvelope(envelope)))(function (policy) {
              return Control_Bind.bind(Ctl_Internal_Contract_Monad.bindContract)(liftErr(Ctl_Internal_Contract_Monad.monadThrowErrorContract)("Error: Invalid tokenName")(stringToTokenName(str)))(function (tkNm) {
                  var v = Ctl_Internal_ApplyArgs.applyArgs(policy)([ Ctl_Internal_ToData.toData(Ctl_Internal_Types_TokenName.toDataTokenName)(tkNm) ]);
                  if (v instanceof Data_Either.Left) {
                      return Control_Monad_Error_Class.throwError(Ctl_Internal_Contract_Monad.monadThrowErrorContract)(Effect_Exception.error(Data_Show.show(Ctl_Internal_ApplyArgs.showApplyArgsError)(v.value0)));
                  };
                  if (v instanceof Data_Either.Right) {
                      return Control_Applicative.pure(Ctl_Internal_Contract_Monad.applicativeContract)(new Ctl_Internal_Types_Scripts.PlutusMintingPolicy(v.value0));
                  };
                  throw new Error("Failed pattern match at MlabsPlutusTemplate.Api (line 281, column 3 - line 283, column 56): " + [ v.constructor.name ]);
              });
          });
      });
  };
  var mintTokens$prime = function (tkStr) {
      return function (amt) {
          return Control_Bind.bind(Ctl_Internal_Contract_Monad.bindContract)(liftErr(Ctl_Internal_Contract_Monad.monadThrowErrorContract)("Invalid MintAmount String")(Data_BigInt.fromString(amt)))(function (toMint) {
              return Control_Bind.bind(Ctl_Internal_Contract_Monad.bindContract)(mkCurrencySymbol(simplePolicy(tkStr)))(function (v) {
                  return Control_Bind.bind(Ctl_Internal_Contract_Monad.bindContract)(liftErr(Ctl_Internal_Contract_Monad.monadThrowErrorContract)("Invalid TokenName String")(stringToTokenName(tkStr)))(function (tn) {
                      var lookups = Ctl_Internal_Types_ScriptLookups.mintingPolicy(v.value0);
                      var constraints = Ctl_Internal_Types_TxConstraints.mustMintValueWithRedeemer(Ctl_Internal_Types_Redeemer.Redeemer(Ctl_Internal_ToData.toData(toDataMintRedeemer)(MintTokens.value)))(Ctl_Internal_Plutus_Types_Value.singleton(v.value1)(tn)(toMint));
                      return Control_Bind.bind(Ctl_Internal_Contract_Monad.bindContract)(Contract_Transaction.submitTxFromConstraints()(Ctl_Internal_IsData.isData(Ctl_Internal_FromData.fromDataVoid)(Ctl_Internal_ToData.toDataVoid))(Ctl_Internal_IsData.isData(Ctl_Internal_FromData.fromDataVoid)(Ctl_Internal_ToData.toDataVoid))(lookups)(constraints))(function (txId) {
                          return Control_Bind.discard(Control_Bind.discardUnit)(Ctl_Internal_Contract_Monad.bindContract)(Ctl_Internal_Contract_AwaitTxConfirmed.awaitTxConfirmed(txId))(function () {
                              return Contract_Log["logInfo'"](Ctl_Internal_Contract_Monad.monadLoggerContract)("Tx submitted successfully!");
                          });
                      });
                  });
              });
          });
      };
  };
  var execContract$prime = function (contract) {
      return Effect_Unsafe.unsafePerformEffect(Control_Promise.fromAff(Control_Bind.bind(Effect_Aff.bindAff)(Contract_Monad.mkContractEnv()(myConfig))(function (env) {
          return Control_Bind.bind(Effect_Aff.bindAff)(Ctl_Internal_Contract_Monad.runContract(Contract_Config.testnetNamiConfig)(contract))(function (x) {
              return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Contract_Monad.stopContractEnv()(env))(function () {
                  return Control_Applicative.pure(Effect_Aff.applicativeAff)(x);
              });
          });
      })));
  };
  var execContract = function (contract) {
      return Effect_Aff.launchAff_(Ctl_Internal_Contract_Monad.runContract(Contract_Config.testnetNamiConfig)(contract));
  };
  var mintTokens = function (tkStr) {
      return function (amt) {
          return execContract(mintTokens$prime(tkStr)(amt));
      };
  };
  var deletePWTXHash = function (str) {
      return function (arr) {
          return Data_Array.filter(function (x) {
              return (Data_Newtype.unwrap()(x)).password !== str;
          })(arr);
      };
  };
  var insertPWTXHash = function (str) {
      return function (txhash) {
          return function (arr) {
              return Data_Array.cons(Data_Newtype.wrap()({
                  password: str,
                  txhash: txhash
              }))(deletePWTXHash(str)(arr));
          };
      };
  };
  var byteArrayToData = Ctl_Internal_Types_PlutusData.Bytes.create;
  var passwordValidator = function (str) {
      return Control_Bind.bind(Ctl_Internal_Contract_Monad.bindContract)(liftErr(Ctl_Internal_Contract_Monad.monadThrowErrorContract)("Error decoding password validator")(Ctl_Internal_Cardano_TextEnvelope.decodeTextEnvelope(MLabsPlutusTemplate_Scripts.password_validator)))(function (envelope) {
          return Control_Bind.bind(Ctl_Internal_Contract_Monad.bindContract)(liftErr(Ctl_Internal_Contract_Monad.monadThrowErrorContract)("Error decoding password envelope")(Ctl_Internal_Cardano_TextEnvelope.plutusScriptV1FromEnvelope(envelope)))(function (validator) {
              return Control_Bind.bind(Ctl_Internal_Contract_Monad.bindContract)(liftErr(Ctl_Internal_Contract_Monad.monadThrowErrorContract)("Error: Non-ascii chars in password")(Data_Functor.map(Data_Maybe.functorMaybe)(byteArrayToData)(Ctl_Internal_Types_ByteArray.byteArrayFromAscii(str))))(function (pw) {
                  var v = Ctl_Internal_ApplyArgs.applyArgs(validator)([ pw ]);
                  if (v instanceof Data_Either.Left) {
                      return Control_Monad_Error_Class.throwError(Ctl_Internal_Contract_Monad.monadThrowErrorContract)(Effect_Exception.error(Data_Show.show(Ctl_Internal_ApplyArgs.showApplyArgsError)(v.value0)));
                  };
                  if (v instanceof Data_Either.Right) {
                      return Control_Applicative.pure(Ctl_Internal_Contract_Monad.applicativeContract)(v.value0);
                  };
                  throw new Error("Failed pattern match at MlabsPlutusTemplate.Api (line 200, column 3 - line 202, column 46): " + [ v.constructor.name ]);
              });
          });
      });
  };
  var payToPassword$prime = function (pwStr) {
      return function (adaValStr) {
          return Control_Bind.discard(Control_Bind.discardUnit)(Ctl_Internal_Contract_Monad.bindContract)(Contract_Log["logInfo'"](Ctl_Internal_Contract_Monad.monadLoggerContract)("Paying to Password validator..."))(function () {
              return Control_Bind.bind(Ctl_Internal_Contract_Monad.bindContract)(passwordValidator(pwStr))(function (validator) {
                  return Control_Bind.bind(Ctl_Internal_Contract_Monad.bindContract)(liftErr(Ctl_Internal_Contract_Monad.monadThrowErrorContract)("Error: Invalid ada value string")(Data_BigInt.fromString(adaValStr)))(function (adaVal) {
                      var vhash = Ctl_Internal_Scripts.validatorHash(validator);
                      var lookups = Data_Monoid.mempty(Ctl_Internal_Types_ScriptLookups.monoidScriptLookups);
                      var constraints = Ctl_Internal_Types_TxConstraints.mustPayToScript(vhash)(Ctl_Internal_Types_Datum.unitDatum)(Ctl_Internal_Types_TxConstraints.DatumWitness.value)(Ctl_Internal_Plutus_Types_Value.lovelaceValueOf(Data_Semiring.mul(Data_BigInt.semiringBigInt)(adaVal)(Data_BigInt.fromInt(1000000))));
                      return Contract_Transaction.submitTxFromConstraints()(Ctl_Internal_IsData.isData(Ctl_Internal_FromData.fromDataUnit)(Ctl_Internal_ToData.toDataUnit))(Ctl_Internal_IsData.isData(Ctl_Internal_FromData.fromDataUnit)(Ctl_Internal_ToData.toDataUnit))(lookups)(constraints);
                  });
              });
          });
      };
  };
  var payToPassword = function (pw, adaVal) {
      return execContract$prime(payToPassword$prime(pw)(adaVal));
  };
  var spendFromPassword$prime = function (pwStr) {
      return function (txId) {
          return Control_Bind.bind(Ctl_Internal_Contract_Monad.bindContract)(passwordValidator(pwStr))(function (validator) {
              var vhash = Ctl_Internal_Scripts.validatorHash(validator);
              var scriptAddress = Ctl_Internal_Plutus_Types_Address.scriptHashAddress(vhash)(Data_Maybe.Nothing.value);
              return Control_Bind.bind(Ctl_Internal_Contract_Monad.bindContract)(Contract_Utxos.utxosAt(Ctl_Internal_Plutus_Types_Address.plutusAddressAddress)(scriptAddress))(function (utxos) {
                  return Control_Bind.bind(Ctl_Internal_Contract_Monad.bindContract)(Ctl_Internal_Helpers.liftM(Ctl_Internal_Contract_Monad.monadErrorErrorContract)(Effect_Exception.error("The id " + (Data_Show.show(Ctl_Internal_Types_Transaction.showTransactionHash)(txId) + (" does not have output locked at: " + Data_Show.show(Ctl_Internal_Plutus_Types_Address.showAddress)(scriptAddress)))))(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Lens_Getter.view(Ctl_Internal_Plutus_Types_TransactionUnspentOutput["_input"](Data_Lens_Internal_Forget.strongForget)))(Data_Array.head(Ctl_Internal_Plutus_Types_TransactionUnspentOutput.lookupTxHash(txId)(utxos)))))(function (txInput) {
                      var lookups = Data_Semigroup.append(Ctl_Internal_Types_ScriptLookups.semigroupScriptLookups)(Ctl_Internal_Types_ScriptLookups.validator(validator))(Ctl_Internal_Types_ScriptLookups.unspentOutputs(utxos));
                      var constraints = Ctl_Internal_Types_TxConstraints.mustSpendScriptOutput(txInput)(Ctl_Internal_Types_Redeemer.unitRedeemer);
                      return Control_Bind.bind(Ctl_Internal_Contract_Monad.bindContract)(Contract_Transaction.submitTxFromConstraints()(Ctl_Internal_IsData.isData(Ctl_Internal_FromData.fromDataUnit)(Ctl_Internal_ToData.toDataUnit))(Ctl_Internal_IsData.isData(Ctl_Internal_FromData.fromDataUnit)(Ctl_Internal_ToData.toDataUnit))(lookups)(constraints))(function (spendTxId) {
                          return Control_Bind.discard(Control_Bind.discardUnit)(Ctl_Internal_Contract_Monad.bindContract)(Ctl_Internal_Contract_AwaitTxConfirmed.awaitTxConfirmed(spendTxId))(function () {
                              return Contract_Log["logInfo'"](Ctl_Internal_Contract_Monad.monadLoggerContract)("Successfully spent locked values.");
                          });
                      });
                  });
              });
          });
      };
  };
  var spendFromPassword = function (txhash, pwStr) {
      return execContract(spendFromPassword$prime(pwStr)(txhash));
  };
  var burnTokens$prime = function (tkStr) {
      return function (amt) {
          return Control_Bind.bind(Ctl_Internal_Contract_Monad.bindContract)(liftErr(Ctl_Internal_Contract_Monad.monadThrowErrorContract)("Invalid MintAmount String")(Data_BigInt.fromString(amt)))(function (toMint) {
              return Control_Bind.bind(Ctl_Internal_Contract_Monad.bindContract)(mkCurrencySymbol(simplePolicy(tkStr)))(function (v) {
                  return Control_Bind.bind(Ctl_Internal_Contract_Monad.bindContract)(liftErr(Ctl_Internal_Contract_Monad.monadThrowErrorContract)("Invalid TokenName String")(stringToTokenName(tkStr)))(function (tn) {
                      var lookups = Ctl_Internal_Types_ScriptLookups.mintingPolicy(v.value0);
                      var constraints = Ctl_Internal_Types_TxConstraints.mustMintValueWithRedeemer(Ctl_Internal_Types_Redeemer.Redeemer(Ctl_Internal_ToData.toData(toDataMintRedeemer)(BurnTokens.value)))(Ctl_Internal_Plutus_Types_Value.singleton(v.value1)(tn)(toMint));
                      return Control_Bind.bind(Ctl_Internal_Contract_Monad.bindContract)(Contract_Transaction.submitTxFromConstraints()(Ctl_Internal_IsData.isData(Ctl_Internal_FromData.fromDataVoid)(Ctl_Internal_ToData.toDataVoid))(Ctl_Internal_IsData.isData(Ctl_Internal_FromData.fromDataVoid)(Ctl_Internal_ToData.toDataVoid))(lookups)(constraints))(function (txId) {
                          return Control_Bind.discard(Control_Bind.discardUnit)(Ctl_Internal_Contract_Monad.bindContract)(Ctl_Internal_Contract_AwaitTxConfirmed.awaitTxConfirmed(txId))(function () {
                              return Contract_Log["logInfo'"](Ctl_Internal_Contract_Monad.monadLoggerContract)("Tx submitted successfully!");
                          });
                      });
                  });
              });
          });
      };
  };
  var burnTokens = function (tkStr) {
      return function (amt) {
          return execContract(burnTokens$prime(tkStr)(amt));
      };
  };
  exports["square"] = square;
  exports["payToPassword"] = payToPassword;
  exports["spendFromPassword"] = spendFromPassword;
  exports["mintTokens"] = mintTokens;
  exports["burnTokens"] = burnTokens;
  exports["insertPWTXHash"] = insertPWTXHash;
  exports["lookupTXHashByPW"] = lookupTXHashByPW;
  exports["deletePWTXHash"] = deletePWTXHash;
  exports["newtypePWTXHash_"] = newtypePWTXHash_;
})(PS);
module.exports = PS["MlabsPlutusTemplate.Api"];
